


regexp


{:?\([-a-z_\.']*\)\(@[a-z_]+\)?|\(.*?\)|}


%exp-{ %exp'{ { $$x } } }


#+BEGIN_SRC caml
  %lexer{
  let a = ghosgho in
  3
      
  }@{
     let b  = 3
   }
  
  match x, y with 
  | %exp{ 3 + 3 }@loc, %exp{ 1 + 4 }@loc
  |
  
  %yy{
    %xx{
       (* gshog *)
    }@{
       (* ghosg *)
     }
  }@{
     monad law....
   } 
  
  
  type t = {
    foo: int; [@default 42]
    bar: float
  } [@@sexp]
  
  
  [%lexer
    match foo with
    (Range ('a','z') | Range(1000,1500)), 65 -> Foo
    | Star (Range('a','z')) -> Bar
  ]
  
  let html =
    %html[
    <h1>Hello $str:world$!</h1>
  ]      
#+END_SRC
%x{ ghso

}@{
ghsogh
}
