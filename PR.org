#+OPTIONS: ^:{}



* COMMENT 0001
  filter
  #+BEGIN_SRC ocaml
    Gram.debug_origin_token_stream Syntax.expr [< `INT (3,"3") >]; ;
    Gram.debug_origin_token_stream Syntax.expr [< `INT (3,"3") >]; ;
    - : Ast.expr = Ast.ExInt (, "3")
        
    Gram.debug_filtered_token_stream Syntax.expr [< `INT (3,"3") >]; ;
    Gram.debug_filtered_token_stream Syntax.expr [< `INT (3,"3") >]; ;
    Exception: Stream.Failure.
        
    let f xs = Gram.parse_origin_tokens Syntax.expr
                     (Stream.map (fun t -> (t,Gram.ghost_token_info) ) xs
                     );
    let f xs = Gram.parse_origin_tokens Syntax.expr  (Gram.filter xs ) ; ;
    val f : (FanSig.token * FanLoc.t) Stream.t -> Ast.expr = <fun>
    f [< (`INT (3,"3"),FanLoc.ghost) >]; ;
    f [< (`INT (3,"3"),FanLoc.ghost) >]; ;
    Exception: Stream.Failure.

    Gram.filter [< (`INT (3,"3"),FanLoc.ghost) >] |> (fun s -> (Stream.junk s;  Stream.peek s)); ;
    Exception: Stream.Failure.

  #+END_SRC

  infix_kwds_filter -> add empty stream patt
  

* 0002
  #directory always on top, how about at the bottom

* 0003
  [Exit] exception is a special exception

* 0004 EOI
