[
  structure_item (ctypN.ml[1,0+0]..[1,0+10])
    Pstr_open Fresh "Astfn" (ctypN.ml[1,0+5]..[1,0+10])
  structure_item (ctypN.ml[2,11+0]..[2,11+14])
    Pstr_open Fresh "Astn_util" (ctypN.ml[2,11+5]..[2,11+14])
  structure_item (ctypN.ml[3,26+0]..[3,26+9])
    Pstr_open Fresh "Util" (ctypN.ml[3,26+5]..[3,26+9])
  structure_item (ctypN.ml[4,36+0]..[4,36+8])
    Pstr_open Fresh "Fid" (ctypN.ml[4,36+5]..[4,36+8])
  structure_item (ctypN.ml[5,45+0]..[11,120+11])
    Pstr_type
    [
      type_declaration "vrn" (ctypN.ml[5,45+5]..[5,45+8]) (ctypN.ml[5,45+0]..[11,120+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (ctypN.ml[6,58+2]..[6,58+7])
                "Sum" (ctypN.ml[6,58+4]..[6,58+7])
                []
                None
              (ctypN.ml[7,66+2]..[7,66+11])
                "TyVrnEq" (ctypN.ml[7,66+4]..[7,66+11])
                []
                None
              (ctypN.ml[8,78+2]..[8,78+12])
                "TyVrnSup" (ctypN.ml[8,78+4]..[8,78+12])
                []
                None
              (ctypN.ml[9,91+2]..[9,91+12])
                "TyVrnInf" (ctypN.ml[9,91+4]..[9,91+12])
                []
                None
              (ctypN.ml[10,104+2]..[10,104+15])
                "TyVrnInfSup" (ctypN.ml[10,104+4]..[10,104+15])
                []
                None
              (ctypN.ml[11,120+2]..[11,120+11])
                "TyAbstr" (ctypN.ml[11,120+4]..[11,120+11])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (ctypN.ml[12,133+0]..[15,189+17])
    Pstr_type
    [
      type_declaration "col" (ctypN.ml[12,133+5]..[12,133+8]) (ctypN.ml[12,133+0]..[15,189+17])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (ctypN.ml[13,147+2]..[13,147+20])
                Immutable
                "col_label" (ctypN.ml[13,147+2]..[13,147+11])                core_type (ctypN.ml[13,147+13]..[13,147+19])
                  Ptyp_constr "string" (ctypN.ml[13,147+13]..[13,147+19])
                  []
              (ctypN.ml[14,168+2]..[14,168+20])
                Immutable
                "col_mutable" (ctypN.ml[14,168+2]..[14,168+13])                core_type (ctypN.ml[14,168+15]..[14,168+19])
                  Ptyp_constr "bool" (ctypN.ml[14,168+15]..[14,168+19])
                  []
              (ctypN.ml[15,189+2]..[15,189+16])
                Immutable
                "col_ctyp" (ctypN.ml[15,189+2]..[15,189+10])                core_type (ctypN.ml[15,189+12]..[15,189+16])
                  Ptyp_constr "ctyp" (ctypN.ml[15,189+12]..[15,189+16])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (ctypN.ml[16,208+0]..[23,305+11])
    Pstr_type
    [
      type_declaration "ty_info" (ctypN.ml[16,208+5]..[16,208+12]) (ctypN.ml[16,208+0]..[23,305+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (ctypN.ml[18,228+2]..[18,228+16])
                Immutable
                "name_exp" (ctypN.ml[18,228+2]..[18,228+10])                core_type (ctypN.ml[18,228+12]..[18,228+15])
                  Ptyp_constr "exp" (ctypN.ml[18,228+12]..[18,228+15])
                  []
              (ctypN.ml[19,245+2]..[19,245+16])
                Immutable
                "info_exp" (ctypN.ml[19,245+2]..[19,245+10])                core_type (ctypN.ml[19,245+12]..[19,245+15])
                  Ptyp_constr "exp" (ctypN.ml[19,245+12]..[19,245+15])
                  []
              (ctypN.ml[20,262+2]..[20,262+10])
                Immutable
                "ep0" (ctypN.ml[20,262+2]..[20,262+5])                core_type (ctypN.ml[20,262+7]..[20,262+9])
                  Ptyp_constr "ep" (ctypN.ml[20,262+7]..[20,262+9])
                  []
              (ctypN.ml[21,273+2]..[21,273+12])
                Immutable
                "id_ep" (ctypN.ml[21,273+2]..[21,273+7])                core_type (ctypN.ml[21,273+9]..[21,273+11])
                  Ptyp_constr "ep" (ctypN.ml[21,273+9]..[21,273+11])
                  []
              (ctypN.ml[22,286+2]..[22,286+18])
                Immutable
                "id_eps" (ctypN.ml[22,286+2]..[22,286+8])                core_type (ctypN.ml[22,286+10]..[22,286+17])
                  Ptyp_constr "list" (ctypN.ml[22,286+13]..[22,286+17])
                  [
                    core_type (ctypN.ml[22,286+10]..[22,286+12])
                      Ptyp_constr "ep" (ctypN.ml[22,286+10]..[22,286+12])
                      []
                  ]
              (ctypN.ml[23,305+2]..[23,305+10])
                Immutable
                "ty" (ctypN.ml[23,305+2]..[23,305+4])                core_type (ctypN.ml[23,305+6]..[23,305+10])
                  Ptyp_constr "ctyp" (ctypN.ml[23,305+6]..[23,305+10])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (ctypN.ml[24,318+0]..[24,318+68])
    Pstr_type
    [
      type_declaration "vbranch" (ctypN.ml[24,318+5]..[24,318+12]) (ctypN.ml[24,318+0]..[24,318+68])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (ctypN.ml[24,318+15]..[24,318+68])
              Ptyp_variant closed=Closed
              [
                Rtag "variant" false
                  [
                    core_type (ctypN.ml[24,318+30]..[24,318+47])
                      Ptyp_tuple
                      [
                        core_type (ctypN.ml[24,318+30]..[24,318+36])
                          Ptyp_constr "string" (ctypN.ml[24,318+30]..[24,318+36])
                          []
                        core_type (ctypN.ml[24,318+38]..[24,318+47])
                          Ptyp_constr "list" (ctypN.ml[24,318+43]..[24,318+47])
                          [
                            core_type (ctypN.ml[24,318+38]..[24,318+42])
                              Ptyp_constr "ctyp" (ctypN.ml[24,318+38]..[24,318+42])
                              []
                          ]
                      ]
                  ]
                Rtag "abbrev" false
                  [
                    core_type (ctypN.ml[24,318+62]..[24,318+67])
                      Ptyp_constr "ident" (ctypN.ml[24,318+62]..[24,318+67])
                      []
                  ]
              ]
              None
    ]
  structure_item (ctypN.ml[25,388+0]..[25,388+47])
    Pstr_type
    [
      type_declaration "branch" (ctypN.ml[25,388+5]..[25,388+11]) (ctypN.ml[25,388+0]..[25,388+47])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (ctypN.ml[25,388+14]..[25,388+47])
              Ptyp_variant closed=Closed
              [
                Rtag "branch" false
                  [
                    core_type (ctypN.ml[25,388+28]..[25,388+45])
                      Ptyp_tuple
                      [
                        core_type (ctypN.ml[25,388+28]..[25,388+34])
                          Ptyp_constr "string" (ctypN.ml[25,388+28]..[25,388+34])
                          []
                        core_type (ctypN.ml[25,388+36]..[25,388+45])
                          Ptyp_constr "list" (ctypN.ml[25,388+41]..[25,388+45])
                          [
                            core_type (ctypN.ml[25,388+36]..[25,388+40])
                              Ptyp_constr "ctyp" (ctypN.ml[25,388+36]..[25,388+40])
                              []
                          ]
                      ]
                  ]
              ]
              None
    ]
  structure_item (ctypN.ml[26,437+0]..[33,527+20])
    Pstr_type
    [
      type_declaration "destination" (ctypN.ml[26,437+5]..[26,437+16]) (ctypN.ml[26,437+0]..[28,474+12])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (ctypN.ml[27,458+2]..[27,458+15])
                "Obj" (ctypN.ml[27,458+4]..[27,458+7])
                [
                  core_type (ctypN.ml[27,458+11]..[27,458+15])
                    Ptyp_constr "kind" (ctypN.ml[27,458+11]..[27,458+15])
                    []
                ]
                None
              (ctypN.ml[28,474+2]..[28,474+12])
                "Str_item" (ctypN.ml[28,474+4]..[28,474+12])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "kind" (ctypN.ml[29,488+4]..[29,488+8]) (ctypN.ml[29,488+0]..[33,527+20])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (ctypN.ml[30,501+2]..[30,501+8])
                "Fold" (ctypN.ml[30,501+4]..[30,501+8])
                []
                None
              (ctypN.ml[31,510+2]..[31,510+8])
                "Iter" (ctypN.ml[31,510+4]..[31,510+8])
                []
                None
              (ctypN.ml[32,519+2]..[32,519+7])
                "Map" (ctypN.ml[32,519+4]..[32,519+7])
                []
                None
              (ctypN.ml[33,527+2]..[33,527+20])
                "Concrete" (ctypN.ml[33,527+4]..[33,527+12])
                [
                  core_type (ctypN.ml[33,527+16]..[33,527+20])
                    Ptyp_constr "ctyp" (ctypN.ml[33,527+16]..[33,527+20])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (ctypN.ml[34,549+0]..[34,549+11])
    Pstr_open Fresh "Format" (ctypN.ml[34,549+5]..[34,549+11])
  structure_item (ctypN.ml[35,561+0]..[37,606+23])
    Pstr_type
    [
      type_declaration "warning_type" (ctypN.ml[35,561+5]..[35,561+17]) (ctypN.ml[35,561+0]..[37,606+23])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (ctypN.ml[36,583+2]..[36,583+22])
                "Abstract" (ctypN.ml[36,583+4]..[36,583+12])
                [
                  core_type (ctypN.ml[36,583+16]..[36,583+22])
                    Ptyp_constr "string" (ctypN.ml[36,583+16]..[36,583+22])
                    []
                ]
                None
              (ctypN.ml[37,606+2]..[37,606+23])
                "Qualified" (ctypN.ml[37,606+4]..[37,606+13])
                [
                  core_type (ctypN.ml[37,606+17]..[37,606+23])
                    Ptyp_constr "string" (ctypN.ml[37,606+17]..[37,606+23])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (ctypN.ml[38,631+0]..[44,844+71])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[38,631+4]..[38,631+25])
          Ppat_var "pp_print_warning_type" (ctypN.ml[38,631+4]..[38,631+25])
        expression (ctypN.ml[38,631+25]..[44,844+71]) ghost
          Pexp_constraint
          expression (ctypN.ml[39,701+2]..[44,844+71])
            Pexp_fun ""
            None
            pattern (ctypN.ml[39,701+6]..[39,701+9])
              Ppat_var "fmt" (ctypN.ml[39,701+6]..[39,701+9])
            expression (ctypN.ml[40,715+4]..[44,844+71])
              Pexp_function
              [
                <case>
                  pattern (ctypN.ml[41,728+6]..[41,728+18])
                    Ppat_construct "Abstract" (ctypN.ml[41,728+6]..[41,728+14])
                    Some
                      pattern (ctypN.ml[41,728+15]..[41,728+18])
                        Ppat_var "_a0" (ctypN.ml[41,728+15]..[41,728+18])
                  expression (ctypN.ml[42,750+8]..[42,750+70])
                    Pexp_apply
                    expression (ctypN.ml[42,750+8]..[42,750+22])
                      Pexp_ident "Format.fprintf" (ctypN.ml[42,750+8]..[42,750+22])
                    [
                      <label> ""
                        expression (ctypN.ml[42,750+23]..[42,750+26])
                          Pexp_ident "fmt" (ctypN.ml[42,750+23]..[42,750+26])
                      <label> ""
                        expression (ctypN.ml[42,750+27]..[42,750+50])
                          Pexp_constant Const_string("@[<1>(Abstract@ %a)@]",None)
                      <label> ""
                        expression (ctypN.ml[42,750+51]..[42,750+66])
                          Pexp_ident "pp_print_string" (ctypN.ml[42,750+51]..[42,750+66])
                      <label> ""
                        expression (ctypN.ml[42,750+67]..[42,750+70])
                          Pexp_ident "_a0" (ctypN.ml[42,750+67]..[42,750+70])
                    ]
                <case>
                  pattern (ctypN.ml[43,821+6]..[43,821+19])
                    Ppat_construct "Qualified" (ctypN.ml[43,821+6]..[43,821+15])
                    Some
                      pattern (ctypN.ml[43,821+16]..[43,821+19])
                        Ppat_var "_a0" (ctypN.ml[43,821+16]..[43,821+19])
                  expression (ctypN.ml[44,844+8]..[44,844+71])
                    Pexp_apply
                    expression (ctypN.ml[44,844+8]..[44,844+22])
                      Pexp_ident "Format.fprintf" (ctypN.ml[44,844+8]..[44,844+22])
                    [
                      <label> ""
                        expression (ctypN.ml[44,844+23]..[44,844+26])
                          Pexp_ident "fmt" (ctypN.ml[44,844+23]..[44,844+26])
                      <label> ""
                        expression (ctypN.ml[44,844+27]..[44,844+51])
                          Pexp_constant Const_string("@[<1>(Qualified@ %a)@]",None)
                      <label> ""
                        expression (ctypN.ml[44,844+52]..[44,844+67])
                          Pexp_ident "pp_print_string" (ctypN.ml[44,844+52]..[44,844+67])
                      <label> ""
                        expression (ctypN.ml[44,844+68]..[44,844+71])
                          Pexp_ident "_a0" (ctypN.ml[44,844+68]..[44,844+71])
                    ]
              ]
          core_type (ctypN.ml[38,631+27]..[38,631+67])
            Ptyp_arrow
            ""
            core_type (ctypN.ml[38,631+27]..[38,631+43])
              Ptyp_constr "Format.formatter" (ctypN.ml[38,631+27]..[38,631+43])
              []
            core_type (ctypN.ml[38,631+47]..[38,631+67])
              Ptyp_arrow
              ""
              core_type (ctypN.ml[38,631+47]..[38,631+59])
                Ptyp_constr "warning_type" (ctypN.ml[38,631+47]..[38,631+59])
                []
              core_type (ctypN.ml[38,631+63]..[38,631+67])
                Ptyp_constr "unit" (ctypN.ml[38,631+63]..[38,631+67])
                []
    ]
  structure_item (ctypN.ml[45,916+0]..[48,977+19])
    Pstr_type
    [
      type_declaration "record_col" (ctypN.ml[45,916+5]..[45,916+15]) (ctypN.ml[45,916+0]..[48,977+19])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (ctypN.ml[46,937+2]..[46,937+19])
                Immutable
                "re_label" (ctypN.ml[46,937+2]..[46,937+10])                core_type (ctypN.ml[46,937+12]..[46,937+18])
                  Ptyp_constr "string" (ctypN.ml[46,937+12]..[46,937+18])
                  []
              (ctypN.ml[47,957+2]..[47,957+19])
                Immutable
                "re_mutable" (ctypN.ml[47,957+2]..[47,957+12])                core_type (ctypN.ml[47,957+14]..[47,957+18])
                  Ptyp_constr "bool" (ctypN.ml[47,957+14]..[47,957+18])
                  []
              (ctypN.ml[48,977+2]..[48,977+18])
                Immutable
                "re_info" (ctypN.ml[48,977+2]..[48,977+9])                core_type (ctypN.ml[48,977+11]..[48,977+18])
                  Ptyp_constr "ty_info" (ctypN.ml[48,977+11]..[48,977+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (ctypN.ml[49,998+0]..[49,998+34])
    Pstr_type
    [
      type_declaration "record_info" (ctypN.ml[49,998+5]..[49,998+16]) (ctypN.ml[49,998+0]..[49,998+34])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (ctypN.ml[49,998+19]..[49,998+34])
              Ptyp_constr "list" (ctypN.ml[49,998+30]..[49,998+34])
              [
                core_type (ctypN.ml[49,998+19]..[49,998+29])
                  Ptyp_constr "record_col" (ctypN.ml[49,998+19]..[49,998+29])
                  []
              ]
    ]
  structure_item (ctypN.ml[50,1034+0]..[51,1060+64])
    Pstr_type
    [
      type_declaration "basic_id_transform" (ctypN.ml[50,1034+5]..[50,1034+23]) (ctypN.ml[50,1034+0]..[51,1060+64])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (ctypN.ml[51,1060+2]..[51,1060+64])
              Ptyp_variant closed=Closed
              [
                Rtag "Pre" false
                  [
                    core_type (ctypN.ml[51,1060+12]..[51,1060+18])
                      Ptyp_constr "string" (ctypN.ml[51,1060+12]..[51,1060+18])
                      []
                  ]
                Rtag "Post" false
                  [
                    core_type (ctypN.ml[51,1060+30]..[51,1060+36])
                      Ptyp_constr "string" (ctypN.ml[51,1060+30]..[51,1060+36])
                      []
                  ]
                Rtag "Fun" false
                  [
                    core_type (ctypN.ml[51,1060+47]..[51,1060+63])
                      Ptyp_arrow
                      ""
                      core_type (ctypN.ml[51,1060+47]..[51,1060+53])
                        Ptyp_constr "string" (ctypN.ml[51,1060+47]..[51,1060+53])
                        []
                      core_type (ctypN.ml[51,1060+57]..[51,1060+63])
                        Ptyp_constr "string" (ctypN.ml[51,1060+57]..[51,1060+63])
                        []
                  ]
              ]
              None
    ]
  structure_item (ctypN.ml[52,1126+0]..[52,1126+75])
    Pstr_type
    [
      type_declaration "rhs_basic_id_transform" (ctypN.ml[52,1126+5]..[52,1126+27]) (ctypN.ml[52,1126+0]..[52,1126+75])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (ctypN.ml[52,1126+30]..[52,1126+75])
              Ptyp_variant closed=Closed
              [
                Rinherit
                  core_type (ctypN.ml[52,1126+32]..[52,1126+50])
                    Ptyp_constr "basic_id_transform" (ctypN.ml[52,1126+32]..[52,1126+50])
                    []
                Rtag "Exp" false
                  [
                    core_type (ctypN.ml[52,1126+61]..[52,1126+74])
                      Ptyp_arrow
                      ""
                      core_type (ctypN.ml[52,1126+61]..[52,1126+67])
                        Ptyp_constr "string" (ctypN.ml[52,1126+61]..[52,1126+67])
                        []
                      core_type (ctypN.ml[52,1126+71]..[52,1126+74])
                        Ptyp_constr "exp" (ctypN.ml[52,1126+71]..[52,1126+74])
                        []
                  ]
              ]
              None
    ]
  structure_item (ctypN.ml[53,1203+0]..[55,1300+54])
    Pstr_type
    [
      type_declaration "full_id_transform" (ctypN.ml[53,1203+5]..[53,1203+22]) (ctypN.ml[53,1203+0]..[55,1300+54])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (ctypN.ml[54,1228+2]..[55,1300+54])
              Ptyp_variant closed=Closed
              [
                Rinherit
                  core_type (ctypN.ml[54,1228+4]..[54,1228+22])
                    Ptyp_constr "basic_id_transform" (ctypN.ml[54,1228+4]..[54,1228+22])
                    []
                Rtag "Idents" false
                  [
                    core_type (ctypN.ml[54,1228+36]..[54,1228+51])
                      Ptyp_arrow
                      ""
                      core_type (ctypN.ml[54,1228+36]..[54,1228+44])
                        Ptyp_constr "list" (ctypN.ml[54,1228+40]..[54,1228+44])
                        [
                          core_type (ctypN.ml[54,1228+36]..[54,1228+39])
                            Ptyp_constr "vid" (ctypN.ml[54,1228+36]..[54,1228+39])
                            []
                        ]
                      core_type (ctypN.ml[54,1228+48]..[54,1228+51])
                        Ptyp_constr "vid" (ctypN.ml[54,1228+48]..[54,1228+51])
                        []
                  ]
                Rtag "Id" false
                  [
                    core_type (ctypN.ml[54,1228+61]..[54,1228+71])
                      Ptyp_arrow
                      ""
                      core_type (ctypN.ml[54,1228+61]..[54,1228+64])
                        Ptyp_constr "vid" (ctypN.ml[54,1228+61]..[54,1228+64])
                        []
                      core_type (ctypN.ml[54,1228+68]..[54,1228+71])
                        Ptyp_constr "vid" (ctypN.ml[54,1228+68]..[54,1228+71])
                        []
                  ]
                Rtag "Last" false
                  [
                    core_type (ctypN.ml[55,1300+13]..[55,1300+26])
                      Ptyp_arrow
                      ""
                      core_type (ctypN.ml[55,1300+13]..[55,1300+19])
                        Ptyp_constr "string" (ctypN.ml[55,1300+13]..[55,1300+19])
                        []
                      core_type (ctypN.ml[55,1300+23]..[55,1300+26])
                        Ptyp_constr "vid" (ctypN.ml[55,1300+23]..[55,1300+26])
                        []
                  ]
                Rtag "Obj" false
                  [
                    core_type (ctypN.ml[55,1300+37]..[55,1300+53])
                      Ptyp_arrow
                      ""
                      core_type (ctypN.ml[55,1300+37]..[55,1300+43])
                        Ptyp_constr "string" (ctypN.ml[55,1300+37]..[55,1300+43])
                        []
                      core_type (ctypN.ml[55,1300+47]..[55,1300+53])
                        Ptyp_constr "string" (ctypN.ml[55,1300+47]..[55,1300+53])
                        []
                  ]
              ]
              None
    ]
  structure_item (ctypN.ml[56,1356+0]..[56,1356+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[56,1356+4]..[56,1356+17])
          Ppat_var "arrow_of_list" (ctypN.ml[56,1356+4]..[56,1356+17])
        expression (ctypN.ml[56,1356+18]..[56,1356+48]) ghost
          Pexp_fun ""
          None
          pattern (ctypN.ml[56,1356+18]..[56,1356+19])
            Ppat_var "f" (ctypN.ml[56,1356+18]..[56,1356+19])
          expression (ctypN.ml[56,1356+22]..[56,1356+48])
            Pexp_apply
            expression (ctypN.ml[56,1356+22]..[56,1356+40])
              Pexp_ident "Listf.reduce_right" (ctypN.ml[56,1356+22]..[56,1356+40])
            [
              <label> ""
                expression (ctypN.ml[56,1356+41]..[56,1356+46])
                  Pexp_ident "arrow" (ctypN.ml[56,1356+41]..[56,1356+46])
              <label> ""
                expression (ctypN.ml[56,1356+47]..[56,1356+48])
                  Pexp_ident "f" (ctypN.ml[56,1356+47]..[56,1356+48])
            ]
    ]
  structure_item (ctypN.ml[57,1405+0]..[57,1405+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[57,1405+4]..[57,1405+13])
          Ppat_var "app_arrow" (ctypN.ml[57,1405+4]..[57,1405+13])
        expression (ctypN.ml[57,1405+14]..[57,1405+53]) ghost
          Pexp_fun ""
          None
          pattern (ctypN.ml[57,1405+14]..[57,1405+17])
            Ppat_var "lst" (ctypN.ml[57,1405+14]..[57,1405+17])
          expression (ctypN.ml[57,1405+18]..[57,1405+53]) ghost
            Pexp_fun ""
            None
            pattern (ctypN.ml[57,1405+18]..[57,1405+21])
              Ppat_var "acc" (ctypN.ml[57,1405+18]..[57,1405+21])
            expression (ctypN.ml[57,1405+24]..[57,1405+53])
              Pexp_apply
              expression (ctypN.ml[57,1405+24]..[57,1405+39])
                Pexp_ident "List.fold_right" (ctypN.ml[57,1405+24]..[57,1405+39])
              [
                <label> ""
                  expression (ctypN.ml[57,1405+40]..[57,1405+45])
                    Pexp_ident "arrow" (ctypN.ml[57,1405+40]..[57,1405+45])
                <label> ""
                  expression (ctypN.ml[57,1405+46]..[57,1405+49])
                    Pexp_ident "lst" (ctypN.ml[57,1405+46]..[57,1405+49])
                <label> ""
                  expression (ctypN.ml[57,1405+50]..[57,1405+53])
                    Pexp_ident "acc" (ctypN.ml[57,1405+50]..[57,1405+53])
              ]
    ]
  structure_item (ctypN.ml[58,1459+0]..[62,1621+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[58,1459+4]..[58,1459+8])
          Ppat_var "<+" (ctypN.ml[58,1459+4]..[58,1459+8])
        expression (ctypN.ml[58,1459+9]..[62,1621+6]) ghost
          Pexp_fun ""
          None
          pattern (ctypN.ml[58,1459+9]..[58,1459+30])
            Ppat_constraint
            pattern (ctypN.ml[58,1459+10]..[58,1459+15])
              Ppat_var "names" (ctypN.ml[58,1459+10]..[58,1459+15])
            core_type (ctypN.ml[58,1459+18]..[58,1459+29])
              Ptyp_constr "list" (ctypN.ml[58,1459+25]..[58,1459+29])
              [
                core_type (ctypN.ml[58,1459+18]..[58,1459+24])
                  Ptyp_constr "string" (ctypN.ml[58,1459+18]..[58,1459+24])
                  []
              ]
          expression (ctypN.ml[58,1459+31]..[62,1621+6]) ghost
            Pexp_fun ""
            None
            pattern (ctypN.ml[58,1459+31]..[58,1459+42])
              Ppat_constraint
              pattern (ctypN.ml[58,1459+32]..[58,1459+34])
                Ppat_var "ty" (ctypN.ml[58,1459+32]..[58,1459+34])
              core_type (ctypN.ml[58,1459+37]..[58,1459+41])
                Ptyp_constr "ctyp" (ctypN.ml[58,1459+37]..[58,1459+41])
                []
            expression (ctypN.ml[59,1504+2]..[62,1621+6])
              Pexp_apply
              expression (ctypN.ml[59,1504+2]..[59,1504+17])
                Pexp_ident "List.fold_right" (ctypN.ml[59,1504+2]..[59,1504+17])
              [
                <label> ""
                  expression (ctypN.ml[60,1522+4]..[61,1545+69])
                    Pexp_fun ""
                    None
                    pattern (ctypN.ml[60,1522+9]..[60,1522+13])
                      Ppat_var "name" (ctypN.ml[60,1522+9]..[60,1522+13])
                    expression (ctypN.ml[60,1522+15]..[61,1545+68]) ghost
                      Pexp_fun ""
                      None
                      pattern (ctypN.ml[60,1522+15]..[60,1522+18])
                        Ppat_var "acc" (ctypN.ml[60,1522+15]..[60,1522+18])
                      expression (ctypN.ml[61,1545+7]..[61,1545+68]) ghost
                        Pexp_constraint
                        expression (ctypN.ml[61,1545+8]..[61,1545+53])
                          Pexp_variant "Arrow"
                          Some
                            expression (ctypN.ml[61,1545+15]..[61,1545+53])
                              Pexp_tuple
                              [
                                expression (ctypN.ml[61,1545+16]..[61,1545+47])
                                  Pexp_variant "Quote"
                                  Some
                                    expression (ctypN.ml[61,1545+24]..[61,1545+46])
                                      Pexp_tuple
                                      [
                                        expression (ctypN.ml[61,1545+25]..[61,1545+32])
                                          Pexp_variant "Normal"
                                          None
                                        expression (ctypN.ml[61,1545+34]..[61,1545+45])
                                          Pexp_variant "Lid"
                                          Some
                                            expression (ctypN.ml[61,1545+40]..[61,1545+44])
                                              Pexp_ident "name" (ctypN.ml[61,1545+40]..[61,1545+44])
                                      ]
                                expression (ctypN.ml[61,1545+49]..[61,1545+52])
                                  Pexp_ident "acc" (ctypN.ml[61,1545+49]..[61,1545+52])
                              ]
                        core_type (ctypN.ml[61,1545+56]..[61,1545+66])
                          Ptyp_constr "Astfn.ctyp" (ctypN.ml[61,1545+56]..[61,1545+66])
                          []
                <label> ""
                  expression (ctypN.ml[61,1545+70]..[61,1545+75])
                    Pexp_ident "names" (ctypN.ml[61,1545+70]..[61,1545+75])
                <label> ""
                  expression (ctypN.ml[62,1621+4]..[62,1621+6])
                    Pexp_ident "ty" (ctypN.ml[62,1621+4]..[62,1621+6])
              ]
    ]
  structure_item (ctypN.ml[63,1628+0]..[64,1674+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[63,1628+4]..[63,1628+8])
          Ppat_var "+>" (ctypN.ml[63,1628+4]..[63,1628+8])
        expression (ctypN.ml[63,1628+9]..[64,1674+35]) ghost
          Pexp_fun ""
          None
          pattern (ctypN.ml[63,1628+9]..[63,1628+29])
            Ppat_constraint
            pattern (ctypN.ml[63,1628+10]..[63,1628+16])
              Ppat_var "params" (ctypN.ml[63,1628+10]..[63,1628+16])
            core_type (ctypN.ml[63,1628+19]..[63,1628+28])
              Ptyp_constr "list" (ctypN.ml[63,1628+24]..[63,1628+28])
              [
                core_type (ctypN.ml[63,1628+19]..[63,1628+23])
                  Ptyp_constr "ctyp" (ctypN.ml[63,1628+19]..[63,1628+23])
                  []
              ]
          expression (ctypN.ml[63,1628+30]..[64,1674+35]) ghost
            Pexp_fun ""
            None
            pattern (ctypN.ml[63,1628+30]..[63,1628+43])
              Ppat_constraint
              pattern (ctypN.ml[63,1628+31]..[63,1628+35])
                Ppat_var "base" (ctypN.ml[63,1628+31]..[63,1628+35])
              core_type (ctypN.ml[63,1628+38]..[63,1628+42])
                Ptyp_constr "ctyp" (ctypN.ml[63,1628+38]..[63,1628+42])
                []
            expression (ctypN.ml[64,1674+2]..[64,1674+35])
              Pexp_apply
              expression (ctypN.ml[64,1674+2]..[64,1674+17])
                Pexp_ident "List.fold_right" (ctypN.ml[64,1674+2]..[64,1674+17])
              [
                <label> ""
                  expression (ctypN.ml[64,1674+18]..[64,1674+23])
                    Pexp_ident "arrow" (ctypN.ml[64,1674+18]..[64,1674+23])
                <label> ""
                  expression (ctypN.ml[64,1674+24]..[64,1674+30])
                    Pexp_ident "params" (ctypN.ml[64,1674+24]..[64,1674+30])
                <label> ""
                  expression (ctypN.ml[64,1674+31]..[64,1674+35])
                    Pexp_ident "base" (ctypN.ml[64,1674+31]..[64,1674+35])
              ]
    ]
  structure_item (ctypN.ml[65,1710+0]..[74,2040+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[65,1710+4]..[65,1710+24])
          Ppat_var "name_length_of_tydcl" (ctypN.ml[65,1710+4]..[65,1710+24])
        expression (ctypN.ml[65,1710+25]..[74,2040+17]) ghost
          Pexp_fun ""
          None
          pattern (ctypN.ml[65,1710+25]..[65,1710+39])
            Ppat_constraint
            pattern (ctypN.ml[65,1710+26]..[65,1710+27])
              Ppat_var "x" (ctypN.ml[65,1710+26]..[65,1710+27])
            core_type (ctypN.ml[65,1710+30]..[65,1710+38])
              Ptyp_constr "typedecl" (ctypN.ml[65,1710+30]..[65,1710+38])
              []
          expression (ctypN.ml[66,1752+2]..[74,2040+17]) ghost
            Pexp_constraint
            expression (ctypN.ml[66,1752+3]..[73,1962+74])
              Pexp_match
              expression (ctypN.ml[66,1752+9]..[66,1752+10])
                Pexp_ident "x" (ctypN.ml[66,1752+9]..[66,1752+10])
              [
                <case>
                  pattern (ctypN.ml[67,1768+5]..[67,1768+34])
                    Ppat_variant "TyDcl"
                    Some
                      pattern (ctypN.ml[67,1768+12]..[67,1768+34])
                        Ppat_tuple
                        [
                          pattern (ctypN.ml[67,1768+13]..[67,1768+22])
                            Ppat_variant "Lid"
                            Some
                              pattern (ctypN.ml[67,1768+18]..[67,1768+22])
                                Ppat_var "name" (ctypN.ml[67,1768+18]..[67,1768+22])
                          pattern (ctypN.ml[67,1768+23]..[67,1768+29])
                            Ppat_var "tyvars" (ctypN.ml[67,1768+23]..[67,1768+29])
                          pattern (ctypN.ml[67,1768+30]..[67,1768+31])
                            Ppat_any
                          pattern (ctypN.ml[67,1768+32]..[67,1768+33])
                            Ppat_any
                        ]
                  expression (ctypN.ml[68,1806+7]..[71,1873+74])
                    Pexp_tuple
                    [
                      expression (ctypN.ml[68,1806+8]..[68,1806+12])
                        Pexp_ident "name" (ctypN.ml[68,1806+8]..[68,1806+12])
                      expression (ctypN.ml[69,1820+9]..[71,1873+73])
                        Pexp_match
                        expression (ctypN.ml[69,1820+17]..[69,1820+23])
                          Pexp_ident "tyvars" (ctypN.ml[69,1820+17]..[69,1820+23])
                        [
                          <case>
                            pattern (ctypN.ml[70,1849+13]..[70,1849+18])
                              Ppat_variant "None"
                              None
                            expression (ctypN.ml[70,1849+22]..[70,1849+23])
                              Pexp_constant Const_int 0
                          <case>
                            pattern (ctypN.ml[71,1873+13]..[71,1873+21])
                              Ppat_variant "Some"
                              Some
                                pattern (ctypN.ml[71,1873+19]..[71,1873+21])
                                  Ppat_var "xs" (ctypN.ml[71,1873+19]..[71,1873+21])
                            expression (ctypN.ml[71,1873+25]..[71,1873+71])
                              Pexp_apply
                              expression (ctypN.ml[71,1873+37]..[71,1873+39])
                                Pexp_ident "@@" (ctypN.ml[71,1873+37]..[71,1873+39])
                              [
                                <label> ""
                                  expression (ctypN.ml[71,1873+25]..[71,1873+36])
                                    Pexp_ident "List.length" (ctypN.ml[71,1873+25]..[71,1873+36])
                                <label> ""
                                  expression (ctypN.ml[71,1873+40]..[71,1873+71])
                                    Pexp_apply
                                    expression (ctypN.ml[71,1873+41]..[71,1873+64])
                                      Pexp_ident "Ast_basic.N.list_of_com" (ctypN.ml[71,1873+41]..[71,1873+64])
                                    [
                                      <label> ""
                                        expression (ctypN.ml[71,1873+65]..[71,1873+67])
                                          Pexp_ident "xs" (ctypN.ml[71,1873+65]..[71,1873+67])
                                      <label> ""
                                        expression (ctypN.ml[71,1873+68]..[71,1873+70])
                                          Pexp_construct "[]" (ctypN.ml[71,1873+68]..[71,1873+70])
                                          None
                                    ]
                              ]
                        ]
                    ]
                <case>
                  pattern (ctypN.ml[72,1948+5]..[72,1948+10])
                    Ppat_var "tydcl" (ctypN.ml[72,1948+5]..[72,1948+10])
                  expression (ctypN.ml[73,1962+7]..[73,1962+74])
                    Pexp_apply
                    expression (ctypN.ml[73,1962+7]..[73,1962+16])
                      Pexp_ident "failwithf" (ctypN.ml[73,1962+7]..[73,1962+16])
                    [
                      <label> ""
                        expression (ctypN.ml[73,1962+17]..[73,1962+46])
                          Pexp_constant Const_string("name_length_of_tydcl  %s \n",None)
                      <label> ""
                        expression (ctypN.ml[73,1962+47]..[73,1962+74])
                          Pexp_apply
                          expression (ctypN.ml[73,1962+48]..[73,1962+67])
                            Pexp_ident "ObjsN.dump_typedecl" (ctypN.ml[73,1962+48]..[73,1962+67])
                          [
                            <label> ""
                              expression (ctypN.ml[73,1962+68]..[73,1962+73])
                                Pexp_ident "tydcl" (ctypN.ml[73,1962+68]..[73,1962+73])
                          ]
                    ]
              ]
            core_type (ctypN.ml[74,2040+3]..[74,2040+14])
              Ptyp_tuple
              [
                core_type (ctypN.ml[74,2040+3]..[74,2040+9])
                  Ptyp_constr "string" (ctypN.ml[74,2040+3]..[74,2040+9])
                  []
                core_type (ctypN.ml[74,2040+11]..[74,2040+14])
                  Ptyp_constr "int" (ctypN.ml[74,2040+11]..[74,2040+14])
                  []
              ]
    ]
  structure_item (ctypN.ml[75,2058+0]..[82,2279+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[75,2058+4]..[75,2058+20])
          Ppat_var "gen_quantifiers1" (ctypN.ml[75,2058+4]..[75,2058+20])
        expression (ctypN.ml[75,2058+21]..[82,2279+29]) ghost
          Pexp_fun "arity"
          None
          pattern (ctypN.ml[75,2058+22]..[75,2058+27])
            Ppat_var "arity" (ctypN.ml[75,2058+22]..[75,2058+27])
          expression (ctypN.ml[75,2058+29]..[82,2279+29]) ghost
            Pexp_fun ""
            None
            pattern (ctypN.ml[75,2058+29]..[75,2058+30])
              Ppat_var "n" (ctypN.ml[75,2058+29]..[75,2058+30])
            expression (ctypN.ml[76,2091+2]..[82,2279+29]) ghost
              Pexp_constraint
              expression (ctypN.ml[76,2091+3]..[82,2279+20])
                Pexp_apply
                expression (ctypN.ml[82,2279+5]..[82,2279+7])
                  Pexp_ident "|>" (ctypN.ml[82,2279+5]..[82,2279+7])
                [
                  <label> ""
                    expression (ctypN.ml[76,2091+3]..[81,2257+21])
                      Pexp_apply
                      expression (ctypN.ml[81,2257+6]..[81,2257+8])
                        Pexp_ident "|>" (ctypN.ml[81,2257+6]..[81,2257+8])
                      [
                        <label> ""
                          expression (ctypN.ml[76,2091+4]..[80,2182+74])
                            Pexp_apply
                            expression (ctypN.ml[76,2091+5]..[76,2091+15])
                              Pexp_ident "Listf.init" (ctypN.ml[76,2091+5]..[76,2091+15])
                            [
                              <label> ""
                                expression (ctypN.ml[76,2091+16]..[76,2091+21])
                                  Pexp_ident "arity" (ctypN.ml[76,2091+16]..[76,2091+21])
                              <label> ""
                                expression (ctypN.ml[77,2113+7]..[80,2182+73])
                                  Pexp_fun ""
                                  None
                                  pattern (ctypN.ml[77,2113+12]..[77,2113+13])
                                    Ppat_var "i" (ctypN.ml[77,2113+12]..[77,2113+13])
                                  expression (ctypN.ml[78,2131+10]..[80,2182+72])
                                    Pexp_apply
                                    expression (ctypN.ml[78,2131+25]..[78,2131+27])
                                      Pexp_ident "@@" (ctypN.ml[78,2131+25]..[78,2131+27])
                                    [
                                      <label> ""
                                        expression (ctypN.ml[78,2131+10]..[78,2131+24])
                                          Pexp_apply
                                          expression (ctypN.ml[78,2131+11]..[78,2131+21])
                                            Pexp_ident "Listf.init" (ctypN.ml[78,2131+11]..[78,2131+21])
                                          [
                                            <label> ""
                                              expression (ctypN.ml[78,2131+22]..[78,2131+23])
                                                Pexp_ident "n" (ctypN.ml[78,2131+22]..[78,2131+23])
                                          ]
                                      <label> ""
                                        expression (ctypN.ml[79,2159+12]..[80,2182+72])
                                          Pexp_fun ""
                                          None
                                          pattern (ctypN.ml[79,2159+17]..[79,2159+18])
                                            Ppat_var "j" (ctypN.ml[79,2159+17]..[79,2159+18])
                                          expression (ctypN.ml[80,2182+15]..[80,2182+71]) ghost
                                            Pexp_constraint
                                            expression (ctypN.ml[80,2182+16]..[80,2182+56])
                                              Pexp_variant "Quote"
                                              Some
                                                expression (ctypN.ml[80,2182+23]..[80,2182+56])
                                                  Pexp_tuple
                                                  [
                                                    expression (ctypN.ml[80,2182+24]..[80,2182+31])
                                                      Pexp_variant "Normal"
                                                      None
                                                    expression (ctypN.ml[80,2182+33]..[80,2182+55])
                                                      Pexp_variant "Lid"
                                                      Some
                                                        expression (ctypN.ml[80,2182+39]..[80,2182+54])
                                                          Pexp_apply
                                                          expression (ctypN.ml[80,2182+40]..[80,2182+44])
                                                            Pexp_ident "allx" (ctypN.ml[80,2182+40]..[80,2182+44])
                                                          [
                                                            <label> "off"
                                                              expression (ctypN.ml[80,2182+50]..[80,2182+51])
                                                                Pexp_ident "i" (ctypN.ml[80,2182+50]..[80,2182+51])
                                                            <label> ""
                                                              expression (ctypN.ml[80,2182+52]..[80,2182+53])
                                                                Pexp_ident "j" (ctypN.ml[80,2182+52]..[80,2182+53])
                                                          ]
                                                  ]
                                            core_type (ctypN.ml[80,2182+59]..[80,2182+69])
                                              Ptyp_constr "Astfn.ctyp" (ctypN.ml[80,2182+59]..[80,2182+69])
                                              []
                                    ]
                            ]
                        <label> ""
                          expression (ctypN.ml[81,2257+9]..[81,2257+20])
                            Pexp_ident "List.concat" (ctypN.ml[81,2257+9]..[81,2257+20])
                      ]
                  <label> ""
                    expression (ctypN.ml[82,2279+8]..[82,2279+20])
                      Pexp_ident "appl_of_list" (ctypN.ml[82,2279+8]..[82,2279+20])
                ]
              core_type (ctypN.ml[82,2279+23]..[82,2279+27])
                Ptyp_constr "ctyp" (ctypN.ml[82,2279+23]..[82,2279+27])
                []
    ]
  structure_item (ctypN.ml[83,2309+0]..[86,2401+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[83,2309+4]..[83,2309+13])
          Ppat_var "of_id_len" (ctypN.ml[83,2309+4]..[83,2309+13])
        expression (ctypN.ml[83,2309+14]..[86,2401+75]) ghost
          Pexp_fun "off"
          None
          pattern (ctypN.ml[83,2309+15]..[83,2309+18])
            Ppat_var "off" (ctypN.ml[83,2309+15]..[83,2309+18])
          expression (ctypN.ml[83,2309+20]..[86,2401+75]) ghost
            Pexp_fun ""
            None
            pattern (ctypN.ml[83,2309+20]..[83,2309+38])
              Ppat_tuple
              [
                pattern (ctypN.ml[83,2309+21]..[83,2309+33])
                  Ppat_constraint
                  pattern (ctypN.ml[83,2309+22]..[83,2309+24])
                    Ppat_var "id" (ctypN.ml[83,2309+22]..[83,2309+24])
                  core_type (ctypN.ml[83,2309+27]..[83,2309+32])
                    Ptyp_constr "ident" (ctypN.ml[83,2309+27]..[83,2309+32])
                    []
                pattern (ctypN.ml[83,2309+34]..[83,2309+37])
                  Ppat_var "len" (ctypN.ml[83,2309+34]..[83,2309+37])
              ]
            expression (ctypN.ml[84,2350+2]..[86,2401+75])
              Pexp_apply
              expression (ctypN.ml[84,2350+2]..[84,2350+14])
                Pexp_ident "appl_of_list" (ctypN.ml[84,2350+2]..[84,2350+14])
              [
                <label> ""
                  expression (ctypN.ml[84,2350+15]..[86,2401+75])
                    Pexp_construct "::" (ctypN.ml[84,2350+28]..[84,2350+30])
                    Some
                      expression (ctypN.ml[84,2350+16]..[86,2401+74]) ghost
                        Pexp_tuple
                        [
                          expression (ctypN.ml[84,2350+16]..[84,2350+27]) ghost
                            Pexp_coerce
                            expression (ctypN.ml[84,2350+17]..[84,2350+19])
                              Pexp_ident "id" (ctypN.ml[84,2350+17]..[84,2350+19])
                            None
                            core_type (ctypN.ml[84,2350+22]..[84,2350+26])
                              Ptyp_constr "ctyp" (ctypN.ml[84,2350+22]..[84,2350+26])
                              []
                          expression (ctypN.ml[85,2381+4]..[86,2401+74])
                            Pexp_apply
                            expression (ctypN.ml[85,2381+5]..[85,2381+15])
                              Pexp_ident "Listf.init" (ctypN.ml[85,2381+5]..[85,2381+15])
                            [
                              <label> ""
                                expression (ctypN.ml[85,2381+16]..[85,2381+19])
                                  Pexp_ident "len" (ctypN.ml[85,2381+16]..[85,2381+19])
                              <label> ""
                                expression (ctypN.ml[86,2401+7]..[86,2401+73])
                                  Pexp_fun ""
                                  None
                                  pattern (ctypN.ml[86,2401+12]..[86,2401+13])
                                    Ppat_var "i" (ctypN.ml[86,2401+12]..[86,2401+13])
                                  expression (ctypN.ml[86,2401+18]..[86,2401+72]) ghost
                                    Pexp_constraint
                                    expression (ctypN.ml[86,2401+19]..[86,2401+57])
                                      Pexp_variant "Quote"
                                      Some
                                        expression (ctypN.ml[86,2401+26]..[86,2401+57])
                                          Pexp_tuple
                                          [
                                            expression (ctypN.ml[86,2401+27]..[86,2401+34])
                                              Pexp_variant "Normal"
                                              None
                                            expression (ctypN.ml[86,2401+36]..[86,2401+56])
                                              Pexp_variant "Lid"
                                              Some
                                                expression (ctypN.ml[86,2401+42]..[86,2401+55])
                                                  Pexp_apply
                                                  expression (ctypN.ml[86,2401+43]..[86,2401+47])
                                                    Pexp_ident "allx" (ctypN.ml[86,2401+43]..[86,2401+47])
                                                  [
                                                    <label> "off"
                                                      expression (ctypN.ml[86,2401+49]..[86,2401+52])
                                                        Pexp_ident "off" (ctypN.ml[86,2401+49]..[86,2401+52])
                                                    <label> ""
                                                      expression (ctypN.ml[86,2401+53]..[86,2401+54])
                                                        Pexp_ident "i" (ctypN.ml[86,2401+53]..[86,2401+54])
                                                  ]
                                          ]
                                    core_type (ctypN.ml[86,2401+60]..[86,2401+70])
                                      Ptyp_constr "Astfn.ctyp" (ctypN.ml[86,2401+60]..[86,2401+70])
                                      []
                            ]
                        ]
              ]
    ]
  structure_item (ctypN.ml[87,2477+0]..[88,2512+47])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[87,2477+4]..[87,2477+15])
          Ppat_var "of_name_len" (ctypN.ml[87,2477+4]..[87,2477+15])
        expression (ctypN.ml[87,2477+16]..[88,2512+47]) ghost
          Pexp_fun "off"
          None
          pattern (ctypN.ml[87,2477+17]..[87,2477+20])
            Ppat_var "off" (ctypN.ml[87,2477+17]..[87,2477+20])
          expression (ctypN.ml[87,2477+22]..[88,2512+47]) ghost
            Pexp_fun ""
            None
            pattern (ctypN.ml[87,2477+22]..[87,2477+32])
              Ppat_tuple
              [
                pattern (ctypN.ml[87,2477+23]..[87,2477+27])
                  Ppat_var "name" (ctypN.ml[87,2477+23]..[87,2477+27])
                pattern (ctypN.ml[87,2477+28]..[87,2477+31])
                  Ppat_var "len" (ctypN.ml[87,2477+28]..[87,2477+31])
              ]
            expression (ctypN.ml[88,2512+2]..[88,2512+47])
              Pexp_let Nonrec
              [
                <def>
                  pattern (ctypN.ml[88,2512+6]..[88,2512+8])
                    Ppat_var "id" (ctypN.ml[88,2512+6]..[88,2512+8])
                  expression (ctypN.ml[88,2512+11]..[88,2512+19])
                    Pexp_apply
                    expression (ctypN.ml[88,2512+11]..[88,2512+14])
                      Pexp_ident "lid" (ctypN.ml[88,2512+11]..[88,2512+14])
                    [
                      <label> ""
                        expression (ctypN.ml[88,2512+15]..[88,2512+19])
                          Pexp_ident "name" (ctypN.ml[88,2512+15]..[88,2512+19])
                    ]
              ]
              expression (ctypN.ml[88,2512+23]..[88,2512+47])
                Pexp_apply
                expression (ctypN.ml[88,2512+23]..[88,2512+32])
                  Pexp_ident "of_id_len" (ctypN.ml[88,2512+23]..[88,2512+32])
                [
                  <label> "off"
                    expression (ctypN.ml[88,2512+34]..[88,2512+37])
                      Pexp_ident "off" (ctypN.ml[88,2512+34]..[88,2512+37])
                  <label> ""
                    expression (ctypN.ml[88,2512+38]..[88,2512+47])
                      Pexp_tuple
                      [
                        expression (ctypN.ml[88,2512+39]..[88,2512+41])
                          Pexp_ident "id" (ctypN.ml[88,2512+39]..[88,2512+41])
                        expression (ctypN.ml[88,2512+43]..[88,2512+46])
                          Pexp_ident "len" (ctypN.ml[88,2512+43]..[88,2512+46])
                      ]
                ]
    ]
  structure_item (ctypN.ml[89,2560+0]..[90,2607+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[89,2560+4]..[89,2560+19])
          Ppat_var "gen_ty_of_tydcl" (ctypN.ml[89,2560+4]..[89,2560+19])
        expression (ctypN.ml[89,2560+20]..[90,2607+55]) ghost
          Pexp_fun "off"
          None
          pattern (ctypN.ml[89,2560+21]..[89,2560+24])
            Ppat_var "off" (ctypN.ml[89,2560+21]..[89,2560+24])
          expression (ctypN.ml[89,2560+26]..[90,2607+55]) ghost
            Pexp_fun ""
            None
            pattern (ctypN.ml[89,2560+26]..[89,2560+44])
              Ppat_constraint
              pattern (ctypN.ml[89,2560+27]..[89,2560+32])
                Ppat_var "tydcl" (ctypN.ml[89,2560+27]..[89,2560+32])
              core_type (ctypN.ml[89,2560+35]..[89,2560+43])
                Ptyp_constr "typedecl" (ctypN.ml[89,2560+35]..[89,2560+43])
                []
            expression (ctypN.ml[90,2607+2]..[90,2607+55])
              Pexp_apply
              expression (ctypN.ml[90,2607+34]..[90,2607+36])
                Pexp_ident "|>" (ctypN.ml[90,2607+34]..[90,2607+36])
              [
                <label> ""
                  expression (ctypN.ml[90,2607+2]..[90,2607+33])
                    Pexp_apply
                    expression (ctypN.ml[90,2607+9]..[90,2607+11])
                      Pexp_ident "|>" (ctypN.ml[90,2607+9]..[90,2607+11])
                    [
                      <label> ""
                        expression (ctypN.ml[90,2607+3]..[90,2607+8])
                          Pexp_ident "tydcl" (ctypN.ml[90,2607+3]..[90,2607+8])
                      <label> ""
                        expression (ctypN.ml[90,2607+12]..[90,2607+32])
                          Pexp_ident "name_length_of_tydcl" (ctypN.ml[90,2607+12]..[90,2607+32])
                    ]
                <label> ""
                  expression (ctypN.ml[90,2607+37]..[90,2607+55])
                    Pexp_apply
                    expression (ctypN.ml[90,2607+38]..[90,2607+49])
                      Pexp_ident "of_name_len" (ctypN.ml[90,2607+38]..[90,2607+49])
                    [
                      <label> "off"
                        expression (ctypN.ml[90,2607+51]..[90,2607+54])
                          Pexp_ident "off" (ctypN.ml[90,2607+51]..[90,2607+54])
                    ]
              ]
    ]
  structure_item (ctypN.ml[91,2663+0]..[101,3097+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[91,2663+4]..[91,2663+18])
          Ppat_var "list_of_record" (ctypN.ml[91,2663+4]..[91,2663+18])
        expression (ctypN.ml[91,2663+19]..[101,3097+12]) ghost
          Pexp_fun ""
          None
          pattern (ctypN.ml[91,2663+19]..[91,2663+35])
            Ppat_constraint
            pattern (ctypN.ml[91,2663+20]..[91,2663+22])
              Ppat_var "ty" (ctypN.ml[91,2663+20]..[91,2663+22])
            core_type (ctypN.ml[91,2663+25]..[91,2663+34])
              Ptyp_constr "name_ctyp" (ctypN.ml[91,2663+25]..[91,2663+34])
              []
          expression (ctypN.ml[92,2701+2]..[101,3097+12]) ghost
            Pexp_constraint
            expression (ctypN.ml[92,2701+3]..[100,3019+74])
              Pexp_let Nonrec
              [
                <def>
                  pattern (ctypN.ml[92,2701+7]..[92,2701+28])
                    Ppat_constraint
                    pattern (ctypN.ml[92,2701+8]..[92,2701+11])
                      Ppat_var "tys" (ctypN.ml[92,2701+8]..[92,2701+11])
                    core_type (ctypN.ml[92,2701+13]..[92,2701+27])
                      Ptyp_constr "list" (ctypN.ml[92,2701+23]..[92,2701+27])
                      [
                        core_type (ctypN.ml[92,2701+13]..[92,2701+22])
                          Ptyp_constr "name_ctyp" (ctypN.ml[92,2701+13]..[92,2701+22])
                          []
                      ]
                  expression (ctypN.ml[92,2701+30]..[92,2701+59])
                    Pexp_apply
                    expression (ctypN.ml[92,2701+30]..[92,2701+53])
                      Pexp_ident "Ast_basic.N.list_of_sem" (ctypN.ml[92,2701+30]..[92,2701+53])
                    [
                      <label> ""
                        expression (ctypN.ml[92,2701+54]..[92,2701+56])
                          Pexp_ident "ty" (ctypN.ml[92,2701+54]..[92,2701+56])
                      <label> ""
                        expression (ctypN.ml[92,2701+57]..[92,2701+59])
                          Pexp_construct "[]" (ctypN.ml[92,2701+57]..[92,2701+59])
                          None
                    ]
              ]
              expression (ctypN.ml[93,2764+3]..[100,3019+74])
                Pexp_apply
                expression (ctypN.ml[93,2764+7]..[93,2764+9])
                  Pexp_ident "|>" (ctypN.ml[93,2764+7]..[93,2764+9])
                [
                  <label> ""
                    expression (ctypN.ml[93,2764+3]..[93,2764+6])
                      Pexp_ident "tys" (ctypN.ml[93,2764+3]..[93,2764+6])
                  <label> ""
                    expression (ctypN.ml[94,2774+5]..[100,3019+74])
                      Pexp_apply
                      expression (ctypN.ml[94,2774+6]..[94,2774+14])
                        Pexp_ident "List.map" (ctypN.ml[94,2774+6]..[94,2774+14])
                      [
                        <label> ""
                          expression (ctypN.ml[95,2789+8]..[100,3019+73])
                            Pexp_function
                            [
                              <case>
                                pattern (ctypN.ml[96,2807+11]..[96,2807+46])
                                  Ppat_variant "TyColMut"
                                  Some
                                    pattern (ctypN.ml[96,2807+21]..[96,2807+46])
                                      Ppat_tuple
                                      [
                                        pattern (ctypN.ml[96,2807+22]..[96,2807+36])
                                          Ppat_variant "Lid"
                                          Some
                                            pattern (ctypN.ml[96,2807+27]..[96,2807+36])
                                              Ppat_var "col_label" (ctypN.ml[96,2807+27]..[96,2807+36])
                                        pattern (ctypN.ml[96,2807+37]..[96,2807+45])
                                          Ppat_var "col_ctyp" (ctypN.ml[96,2807+37]..[96,2807+45])
                                      ]
                                expression (ctypN.ml[97,2857+13]..[97,2857+56])
                                  Pexp_record
                                  [
                                    "col_label" (ctypN.ml[97,2857+15]..[97,2857+24])
                                      expression (ctypN.ml[97,2857+15]..[97,2857+24])
                                        Pexp_ident "col_label" (ctypN.ml[97,2857+15]..[97,2857+24])
                                    "col_ctyp" (ctypN.ml[97,2857+26]..[97,2857+34])
                                      expression (ctypN.ml[97,2857+26]..[97,2857+34])
                                        Pexp_ident "col_ctyp" (ctypN.ml[97,2857+26]..[97,2857+34])
                                    "col_mutable" (ctypN.ml[97,2857+36]..[97,2857+47])
                                      expression (ctypN.ml[97,2857+50]..[97,2857+54])
                                        Pexp_construct "true" (ctypN.ml[97,2857+50]..[97,2857+54])
                                        None
                                  ]
                                  None
                              <case>
                                pattern (ctypN.ml[98,2914+11]..[98,2914+43])
                                  Ppat_variant "TyCol"
                                  Some
                                    pattern (ctypN.ml[98,2914+18]..[98,2914+43])
                                      Ppat_tuple
                                      [
                                        pattern (ctypN.ml[98,2914+19]..[98,2914+33])
                                          Ppat_variant "Lid"
                                          Some
                                            pattern (ctypN.ml[98,2914+24]..[98,2914+33])
                                              Ppat_var "col_label" (ctypN.ml[98,2914+24]..[98,2914+33])
                                        pattern (ctypN.ml[98,2914+34]..[98,2914+42])
                                          Ppat_var "col_ctyp" (ctypN.ml[98,2914+34]..[98,2914+42])
                                      ]
                                expression (ctypN.ml[99,2961+13]..[99,2961+57])
                                  Pexp_record
                                  [
                                    "col_label" (ctypN.ml[99,2961+15]..[99,2961+24])
                                      expression (ctypN.ml[99,2961+15]..[99,2961+24])
                                        Pexp_ident "col_label" (ctypN.ml[99,2961+15]..[99,2961+24])
                                    "col_ctyp" (ctypN.ml[99,2961+26]..[99,2961+34])
                                      expression (ctypN.ml[99,2961+26]..[99,2961+34])
                                        Pexp_ident "col_ctyp" (ctypN.ml[99,2961+26]..[99,2961+34])
                                    "col_mutable" (ctypN.ml[99,2961+36]..[99,2961+47])
                                      expression (ctypN.ml[99,2961+50]..[99,2961+55])
                                        Pexp_construct "false" (ctypN.ml[99,2961+50]..[99,2961+55])
                                        None
                                  ]
                                  None
                              <case>
                                pattern (ctypN.ml[100,3019+11]..[100,3019+13])
                                  Ppat_var "t0" (ctypN.ml[100,3019+11]..[100,3019+13])
                                expression (ctypN.ml[100,3019+17]..[100,3019+72])
                                  Pexp_apply
                                  expression (ctypN.ml[100,3019+17]..[100,3019+26])
                                    Pexp_ident "failwithf" (ctypN.ml[100,3019+17]..[100,3019+26])
                                  [
                                    <label> ""
                                      expression (ctypN.ml[100,3019+27]..[100,3019+46])
                                        Pexp_constant Const_string("list_of_record %s",None)
                                    <label> ""
                                      expression (ctypN.ml[100,3019+47]..[100,3019+72])
                                        Pexp_apply
                                        expression (ctypN.ml[100,3019+48]..[100,3019+68])
                                          Pexp_ident "ObjsN.dump_name_ctyp" (ctypN.ml[100,3019+48]..[100,3019+68])
                                        [
                                          <label> ""
                                            expression (ctypN.ml[100,3019+69]..[100,3019+71])
                                              Pexp_ident "t0" (ctypN.ml[100,3019+69]..[100,3019+71])
                                        ]
                                  ]
                            ]
                      ]
                ]
            core_type (ctypN.ml[101,3097+2]..[101,3097+10])
              Ptyp_constr "list" (ctypN.ml[101,3097+6]..[101,3097+10])
              [
                core_type (ctypN.ml[101,3097+2]..[101,3097+5])
                  Ptyp_constr "col" (ctypN.ml[101,3097+2]..[101,3097+5])
                  []
              ]
    ]
  structure_item (ctypN.ml[102,3110+0]..[102,3110+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[102,3110+4]..[102,3110+15])
          Ppat_var "gen_tuple_n" (ctypN.ml[102,3110+4]..[102,3110+15])
        expression (ctypN.ml[102,3110+16]..[102,3110+65]) ghost
          Pexp_fun ""
          None
          pattern (ctypN.ml[102,3110+16]..[102,3110+18])
            Ppat_var "ty" (ctypN.ml[102,3110+16]..[102,3110+18])
          expression (ctypN.ml[102,3110+19]..[102,3110+65]) ghost
            Pexp_fun ""
            None
            pattern (ctypN.ml[102,3110+19]..[102,3110+20])
              Ppat_var "n" (ctypN.ml[102,3110+19]..[102,3110+20])
            expression (ctypN.ml[102,3110+23]..[102,3110+65])
              Pexp_apply
              expression (ctypN.ml[102,3110+53]..[102,3110+55])
                Pexp_ident "|>" (ctypN.ml[102,3110+53]..[102,3110+55])
              [
                <label> ""
                  expression (ctypN.ml[102,3110+23]..[102,3110+52])
                    Pexp_apply
                    expression (ctypN.ml[102,3110+24]..[102,3110+34])
                      Pexp_ident "Listf.init" (ctypN.ml[102,3110+24]..[102,3110+34])
                    [
                      <label> ""
                        expression (ctypN.ml[102,3110+35]..[102,3110+36])
                          Pexp_ident "n" (ctypN.ml[102,3110+35]..[102,3110+36])
                      <label> ""
                        expression (ctypN.ml[102,3110+37]..[102,3110+51])
                          Pexp_fun ""
                          None
                          pattern (ctypN.ml[102,3110+42]..[102,3110+43])
                            Ppat_any
                          expression (ctypN.ml[102,3110+48]..[102,3110+50])
                            Pexp_ident "ty" (ctypN.ml[102,3110+48]..[102,3110+50])
                    ]
                <label> ""
                  expression (ctypN.ml[102,3110+56]..[102,3110+65])
                    Pexp_ident "tuple_sta" (ctypN.ml[102,3110+56]..[102,3110+65])
              ]
    ]
  structure_item (ctypN.ml[103,3176+0]..[103,3176+72])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[103,3176+4]..[103,3176+18])
          Ppat_var "repeat_arrow_n" (ctypN.ml[103,3176+4]..[103,3176+18])
        expression (ctypN.ml[103,3176+19]..[103,3176+72]) ghost
          Pexp_fun ""
          None
          pattern (ctypN.ml[103,3176+19]..[103,3176+21])
            Ppat_var "ty" (ctypN.ml[103,3176+19]..[103,3176+21])
          expression (ctypN.ml[103,3176+22]..[103,3176+72]) ghost
            Pexp_fun ""
            None
            pattern (ctypN.ml[103,3176+22]..[103,3176+23])
              Ppat_var "n" (ctypN.ml[103,3176+22]..[103,3176+23])
            expression (ctypN.ml[103,3176+26]..[103,3176+72])
              Pexp_apply
              expression (ctypN.ml[103,3176+56]..[103,3176+58])
                Pexp_ident "|>" (ctypN.ml[103,3176+56]..[103,3176+58])
              [
                <label> ""
                  expression (ctypN.ml[103,3176+26]..[103,3176+55])
                    Pexp_apply
                    expression (ctypN.ml[103,3176+27]..[103,3176+37])
                      Pexp_ident "Listf.init" (ctypN.ml[103,3176+27]..[103,3176+37])
                    [
                      <label> ""
                        expression (ctypN.ml[103,3176+38]..[103,3176+39])
                          Pexp_ident "n" (ctypN.ml[103,3176+38]..[103,3176+39])
                      <label> ""
                        expression (ctypN.ml[103,3176+40]..[103,3176+54])
                          Pexp_fun ""
                          None
                          pattern (ctypN.ml[103,3176+45]..[103,3176+46])
                            Ppat_any
                          expression (ctypN.ml[103,3176+51]..[103,3176+53])
                            Pexp_ident "ty" (ctypN.ml[103,3176+51]..[103,3176+53])
                    ]
                <label> ""
                  expression (ctypN.ml[103,3176+59]..[103,3176+72])
                    Pexp_ident "arrow_of_list" (ctypN.ml[103,3176+59]..[103,3176+72])
              ]
    ]
  structure_item (ctypN.ml[104,3249+0]..[104,3249+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[104,3249+4]..[104,3249+13])
          Ppat_var "result_id" (ctypN.ml[104,3249+4]..[104,3249+13])
        expression (ctypN.ml[104,3249+16]..[104,3249+21])
          Pexp_apply
          expression (ctypN.ml[104,3249+16]..[104,3249+19])
            Pexp_ident "ref" (ctypN.ml[104,3249+16]..[104,3249+19])
          [
            <label> ""
              expression (ctypN.ml[104,3249+20]..[104,3249+21])
                Pexp_constant Const_int 0
          ]
    ]
  structure_item (ctypN.ml[105,3271+0]..[147,4935+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[105,3271+4]..[105,3271+18])
          Ppat_var "mk_method_type" (ctypN.ml[105,3271+4]..[105,3271+18])
        expression (ctypN.ml[105,3271+19]..[147,4935+16]) ghost
          Pexp_fun "number"
          None
          pattern (ctypN.ml[105,3271+20]..[105,3271+26])
            Ppat_var "number" (ctypN.ml[105,3271+20]..[105,3271+26])
          expression (ctypN.ml[105,3271+28]..[147,4935+16]) ghost
            Pexp_fun "prefix"
            None
            pattern (ctypN.ml[105,3271+29]..[105,3271+35])
              Ppat_var "prefix" (ctypN.ml[105,3271+29]..[105,3271+35])
            expression (ctypN.ml[105,3271+37]..[147,4935+16]) ghost
              Pexp_fun ""
              None
              pattern (ctypN.ml[105,3271+37]..[105,3271+45])
                Ppat_tuple
                [
                  pattern (ctypN.ml[105,3271+38]..[105,3271+40])
                    Ppat_var "id" (ctypN.ml[105,3271+38]..[105,3271+40])
                  pattern (ctypN.ml[105,3271+41]..[105,3271+44])
                    Ppat_var "len" (ctypN.ml[105,3271+41]..[105,3271+44])
                ]
              expression (ctypN.ml[105,3271+46]..[147,4935+16]) ghost
                Pexp_fun ""
                None
                pattern (ctypN.ml[105,3271+46]..[105,3271+63])
                  Ppat_constraint
                  pattern (ctypN.ml[105,3271+47]..[105,3271+48])
                    Ppat_var "k" (ctypN.ml[105,3271+47]..[105,3271+48])
                  core_type (ctypN.ml[105,3271+51]..[105,3271+62])
                    Ptyp_constr "destination" (ctypN.ml[105,3271+51]..[105,3271+62])
                    []
                expression (ctypN.ml[106,3337+2]..[147,4935+16]) ghost
                  Pexp_constraint
                  expression (ctypN.ml[106,3337+3]..[146,4863+68])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (ctypN.ml[106,3337+7]..[106,3337+13])
                          Ppat_var "prefix" (ctypN.ml[106,3337+7]..[106,3337+13])
                        expression (ctypN.ml[107,3353+5]..[107,3353+73])
                          Pexp_apply
                          expression (ctypN.ml[107,3353+5]..[107,3353+13])
                            Pexp_ident "List.map" (ctypN.ml[107,3353+5]..[107,3353+13])
                          [
                            <label> ""
                              expression (ctypN.ml[107,3353+14]..[107,3353+66])
                                Pexp_fun ""
                                None
                                pattern (ctypN.ml[107,3353+19]..[107,3353+20])
                                  Ppat_var "s" (ctypN.ml[107,3353+19]..[107,3353+20])
                                expression (ctypN.ml[107,3353+25]..[107,3353+65])
                                  Pexp_apply
                                  expression (ctypN.ml[107,3353+25]..[107,3353+43])
                                    Pexp_ident "Fstring.drop_while" (ctypN.ml[107,3353+25]..[107,3353+43])
                                  [
                                    <label> ""
                                      expression (ctypN.ml[107,3353+44]..[107,3353+63])
                                        Pexp_fun ""
                                        None
                                        pattern (ctypN.ml[107,3353+49]..[107,3353+50])
                                          Ppat_var "c" (ctypN.ml[107,3353+49]..[107,3353+50])
                                        expression (ctypN.ml[107,3353+55]..[107,3353+62])
                                          Pexp_apply
                                          expression (ctypN.ml[107,3353+57]..[107,3353+58])
                                            Pexp_ident "=" (ctypN.ml[107,3353+57]..[107,3353+58])
                                          [
                                            <label> ""
                                              expression (ctypN.ml[107,3353+55]..[107,3353+56])
                                                Pexp_ident "c" (ctypN.ml[107,3353+55]..[107,3353+56])
                                            <label> ""
                                              expression (ctypN.ml[107,3353+59]..[107,3353+62])
                                                Pexp_constant Const_char 5f
                                          ]
                                    <label> ""
                                      expression (ctypN.ml[107,3353+64]..[107,3353+65])
                                        Pexp_ident "s" (ctypN.ml[107,3353+64]..[107,3353+65])
                                  ]
                            <label> ""
                              expression (ctypN.ml[107,3353+67]..[107,3353+73])
                                Pexp_ident "prefix" (ctypN.ml[107,3353+67]..[107,3353+73])
                          ]
                    ]
                    expression (ctypN.ml[108,3430+3]..[146,4863+68])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (ctypN.ml[108,3430+7]..[108,3430+14])
                            Ppat_var "app_src" (ctypN.ml[108,3430+7]..[108,3430+14])
                          expression (ctypN.ml[109,3447+5]..[109,3447+76])
                            Pexp_apply
                            expression (ctypN.ml[109,3447+15]..[109,3447+17])
                              Pexp_ident "@@" (ctypN.ml[109,3447+15]..[109,3447+17])
                            [
                              <label> ""
                                expression (ctypN.ml[109,3447+5]..[109,3447+14])
                                  Pexp_ident "app_arrow" (ctypN.ml[109,3447+5]..[109,3447+14])
                              <label> ""
                                expression (ctypN.ml[109,3447+18]..[109,3447+76])
                                  Pexp_apply
                                  expression (ctypN.ml[109,3447+19]..[109,3447+29])
                                    Pexp_ident "Listf.init" (ctypN.ml[109,3447+19]..[109,3447+29])
                                  [
                                    <label> ""
                                      expression (ctypN.ml[109,3447+30]..[109,3447+36])
                                        Pexp_ident "number" (ctypN.ml[109,3447+30]..[109,3447+36])
                                    <label> ""
                                      expression (ctypN.ml[109,3447+37]..[109,3447+75])
                                        Pexp_fun ""
                                        None
                                        pattern (ctypN.ml[109,3447+42]..[109,3447+43])
                                          Ppat_any
                                        expression (ctypN.ml[109,3447+48]..[109,3447+74])
                                          Pexp_apply
                                          expression (ctypN.ml[109,3447+48]..[109,3447+57])
                                            Pexp_ident "of_id_len" (ctypN.ml[109,3447+48]..[109,3447+57])
                                          [
                                            <label> "off"
                                              expression (ctypN.ml[109,3447+63]..[109,3447+64])
                                                Pexp_constant Const_int 0
                                            <label> ""
                                              expression (ctypN.ml[109,3447+65]..[109,3447+74])
                                                Pexp_tuple
                                                [
                                                  expression (ctypN.ml[109,3447+66]..[109,3447+68])
                                                    Pexp_ident "id" (ctypN.ml[109,3447+66]..[109,3447+68])
                                                  expression (ctypN.ml[109,3447+70]..[109,3447+73])
                                                    Pexp_ident "len" (ctypN.ml[109,3447+70]..[109,3447+73])
                                                ]
                                          ]
                                  ]
                            ]
                      ]
                      expression (ctypN.ml[110,3527+3]..[146,4863+68])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (ctypN.ml[110,3527+7]..[110,3527+18])
                              Ppat_var "result_type" (ctypN.ml[110,3527+7]..[110,3527+18])
                            expression (ctypN.ml[110,3527+18]..[111,3560+77]) ghost
                              Pexp_constraint
                              expression (ctypN.ml[111,3560+5]..[111,3560+77])
                                Pexp_variant "Quote"
                                Some
                                  expression (ctypN.ml[111,3560+12]..[111,3560+77])
                                    Pexp_tuple
                                    [
                                      expression (ctypN.ml[111,3560+13]..[111,3560+20])
                                        Pexp_variant "Normal"
                                        None
                                      expression (ctypN.ml[111,3560+22]..[111,3560+76])
                                        Pexp_variant "Lid"
                                        Some
                                          expression (ctypN.ml[111,3560+28]..[111,3560+75])
                                            Pexp_apply
                                            expression (ctypN.ml[111,3560+38]..[111,3560+39])
                                              Pexp_ident "^" (ctypN.ml[111,3560+38]..[111,3560+39])
                                            [
                                              <label> ""
                                                expression (ctypN.ml[111,3560+29]..[111,3560+37])
                                                  Pexp_constant Const_string("result",None)
                                              <label> ""
                                                expression (ctypN.ml[111,3560+40]..[111,3560+74])
                                                  Pexp_apply
                                                  expression (ctypN.ml[111,3560+41]..[111,3560+54])
                                                    Pexp_ident "string_of_int" (ctypN.ml[111,3560+41]..[111,3560+54])
                                                  [
                                                    <label> ""
                                                      expression (ctypN.ml[111,3560+55]..[111,3560+73])
                                                        Pexp_field
                                                        expression (ctypN.ml[111,3560+55]..[111,3560+64])
                                                          Pexp_ident "result_id" (ctypN.ml[111,3560+55]..[111,3560+64])
                                                        "contents" (ctypN.ml[111,3560+65]..[111,3560+73])
                                                  ]
                                            ]
                                    ]
                              core_type (ctypN.ml[110,3527+20]..[110,3527+30])
                                Ptyp_constr "Astfn.ctyp" (ctypN.ml[110,3527+20]..[110,3527+30])
                                []
                        ]
                        expression (ctypN.ml[112,3641+3]..[146,4863+68])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (ctypN.ml[112,3641+7]..[112,3641+8])
                                Ppat_any
                              expression (ctypN.ml[112,3641+11]..[112,3641+25])
                                Pexp_apply
                                expression (ctypN.ml[112,3641+11]..[112,3641+15])
                                  Pexp_ident "incr" (ctypN.ml[112,3641+11]..[112,3641+15])
                                [
                                  <label> ""
                                    expression (ctypN.ml[112,3641+16]..[112,3641+25])
                                      Pexp_ident "result_id" (ctypN.ml[112,3641+16]..[112,3641+25])
                                ]
                          ]
                          expression (ctypN.ml[113,3670+3]..[146,4863+68])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (ctypN.ml[113,3670+7]..[113,3670+16])
                                  Ppat_var "self_type" (ctypN.ml[113,3670+7]..[113,3670+16])
                                expression (ctypN.ml[113,3670+16]..[113,3670+67]) ghost
                                  Pexp_constraint
                                  expression (ctypN.ml[113,3670+31]..[113,3670+67])
                                    Pexp_variant "Quote"
                                    Some
                                      expression (ctypN.ml[113,3670+38]..[113,3670+67])
                                        Pexp_tuple
                                        [
                                          expression (ctypN.ml[113,3670+39]..[113,3670+46])
                                            Pexp_variant "Normal"
                                            None
                                          expression (ctypN.ml[113,3670+48]..[113,3670+66])
                                            Pexp_variant "Lid"
                                            Some
                                              expression (ctypN.ml[113,3670+54]..[113,3670+65])
                                                Pexp_constant Const_string("self_type",None)
                                        ]
                                  core_type (ctypN.ml[113,3670+18]..[113,3670+28])
                                    Ptyp_constr "Astfn.ctyp" (ctypN.ml[113,3670+18]..[113,3670+28])
                                    []
                            ]
                            expression (ctypN.ml[114,3741+3]..[146,4863+68])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (ctypN.ml[114,3741+7]..[114,3741+18])
                                    Ppat_tuple
                                    [
                                      pattern (ctypN.ml[114,3741+8]..[114,3741+13])
                                        Ppat_var "quant" (ctypN.ml[114,3741+8]..[114,3741+13])
                                      pattern (ctypN.ml[114,3741+14]..[114,3741+17])
                                        Ppat_var "dst" (ctypN.ml[114,3741+14]..[114,3741+17])
                                    ]
                                  expression (ctypN.ml[115,3762+5]..[120,3945+36])
                                    Pexp_match
                                    expression (ctypN.ml[115,3762+11]..[115,3762+12])
                                      Pexp_ident "k" (ctypN.ml[115,3762+11]..[115,3762+12])
                                    [
                                      <case>
                                        pattern (ctypN.ml[116,3780+7]..[116,3780+17])
                                          Ppat_construct "Obj" (ctypN.ml[116,3780+7]..[116,3780+10])
                                          Some
                                            pattern (ctypN.ml[116,3780+11]..[116,3780+17])
                                              Ppat_construct "Map" (ctypN.ml[116,3780+12]..[116,3780+15])
                                              None
                                        expression (ctypN.ml[116,3780+21]..[116,3780+54])
                                          Pexp_tuple
                                          [
                                            expression (ctypN.ml[116,3780+22]..[116,3780+23])
                                              Pexp_constant Const_int 2
                                            expression (ctypN.ml[116,3780+25]..[116,3780+53])
                                              Pexp_apply
                                              expression (ctypN.ml[116,3780+26]..[116,3780+35])
                                                Pexp_ident "of_id_len" (ctypN.ml[116,3780+26]..[116,3780+35])
                                              [
                                                <label> "off"
                                                  expression (ctypN.ml[116,3780+41]..[116,3780+42])
                                                    Pexp_constant Const_int 1
                                                <label> ""
                                                  expression (ctypN.ml[116,3780+43]..[116,3780+52])
                                                    Pexp_tuple
                                                    [
                                                      expression (ctypN.ml[116,3780+44]..[116,3780+46])
                                                        Pexp_ident "id" (ctypN.ml[116,3780+44]..[116,3780+46])
                                                      expression (ctypN.ml[116,3780+48]..[116,3780+51])
                                                        Pexp_ident "len" (ctypN.ml[116,3780+48]..[116,3780+51])
                                                    ]
                                              ]
                                          ]
                                      <case>
                                        pattern (ctypN.ml[117,3835+7]..[117,3835+18])
                                          Ppat_construct "Obj" (ctypN.ml[117,3835+7]..[117,3835+10])
                                          Some
                                            pattern (ctypN.ml[117,3835+11]..[117,3835+18])
                                              Ppat_construct "Iter" (ctypN.ml[117,3835+12]..[117,3835+16])
                                              None
                                        expression (ctypN.ml[117,3835+22]..[117,3835+38])
                                          Pexp_tuple
                                          [
                                            expression (ctypN.ml[117,3835+23]..[117,3835+24])
                                              Pexp_constant Const_int 1
                                            expression (ctypN.ml[117,3835+26]..[117,3835+37])
                                              Pexp_ident "result_type" (ctypN.ml[117,3835+26]..[117,3835+37])
                                          ]
                                      <case>
                                        pattern (ctypN.ml[118,3874+7]..[118,3874+18])
                                          Ppat_construct "Obj" (ctypN.ml[118,3874+7]..[118,3874+10])
                                          Some
                                            pattern (ctypN.ml[118,3874+11]..[118,3874+18])
                                              Ppat_construct "Fold" (ctypN.ml[118,3874+12]..[118,3874+16])
                                              None
                                        expression (ctypN.ml[118,3874+22]..[118,3874+36])
                                          Pexp_tuple
                                          [
                                            expression (ctypN.ml[118,3874+23]..[118,3874+24])
                                              Pexp_constant Const_int 1
                                            expression (ctypN.ml[118,3874+26]..[118,3874+35])
                                              Pexp_ident "self_type" (ctypN.ml[118,3874+26]..[118,3874+35])
                                          ]
                                      <case>
                                        pattern (ctypN.ml[119,3911+7]..[119,3911+23])
                                          Ppat_construct "Obj" (ctypN.ml[119,3911+7]..[119,3911+10])
                                          Some
                                            pattern (ctypN.ml[119,3911+11]..[119,3911+23])
                                              Ppat_construct "Concrete" (ctypN.ml[119,3911+12]..[119,3911+20])
                                              Some
                                                pattern (ctypN.ml[119,3911+21]..[119,3911+22])
                                                  Ppat_var "c" (ctypN.ml[119,3911+21]..[119,3911+22])
                                        expression (ctypN.ml[119,3911+27]..[119,3911+33])
                                          Pexp_tuple
                                          [
                                            expression (ctypN.ml[119,3911+28]..[119,3911+29])
                                              Pexp_constant Const_int 1
                                            expression (ctypN.ml[119,3911+31]..[119,3911+32])
                                              Pexp_ident "c" (ctypN.ml[119,3911+31]..[119,3911+32])
                                          ]
                                      <case>
                                        pattern (ctypN.ml[120,3945+7]..[120,3945+15])
                                          Ppat_construct "Str_item" (ctypN.ml[120,3945+7]..[120,3945+15])
                                          None
                                        expression (ctypN.ml[120,3945+20]..[120,3945+36])
                                          Pexp_tuple
                                          [
                                            expression (ctypN.ml[120,3945+21]..[120,3945+22])
                                              Pexp_constant Const_int 1
                                            expression (ctypN.ml[120,3945+24]..[120,3945+35])
                                              Pexp_ident "result_type" (ctypN.ml[120,3945+24]..[120,3945+35])
                                          ]
                                    ]
                              ]
                              expression (ctypN.ml[121,3985+3]..[146,4863+68])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (ctypN.ml[121,3985+7]..[121,3985+13])
                                      Ppat_var "params" (ctypN.ml[121,3985+7]..[121,3985+13])
                                    expression (ctypN.ml[122,4001+5]..[140,4646+57])
                                      Pexp_apply
                                      expression (ctypN.ml[122,4001+22]..[122,4001+24])
                                        Pexp_ident "@@" (ctypN.ml[122,4001+22]..[122,4001+24])
                                      [
                                        <label> ""
                                          expression (ctypN.ml[122,4001+5]..[122,4001+21])
                                            Pexp_apply
                                            expression (ctypN.ml[122,4001+6]..[122,4001+16])
                                              Pexp_ident "Listf.init" (ctypN.ml[122,4001+6]..[122,4001+16])
                                            [
                                              <label> ""
                                                expression (ctypN.ml[122,4001+17]..[122,4001+20])
                                                  Pexp_ident "len" (ctypN.ml[122,4001+17]..[122,4001+20])
                                            ]
                                        <label> ""
                                          expression (ctypN.ml[123,4026+7]..[140,4646+57])
                                            Pexp_fun ""
                                            None
                                            pattern (ctypN.ml[123,4026+12]..[123,4026+13])
                                              Ppat_var "i" (ctypN.ml[123,4026+12]..[123,4026+13])
                                            expression (ctypN.ml[124,4044+10]..[140,4646+56])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (ctypN.ml[124,4044+14]..[124,4044+21])
                                                    Ppat_var "app_src" (ctypN.ml[124,4044+14]..[124,4044+21])
                                                  expression (ctypN.ml[125,4068+12]..[128,4159+78])
                                                    Pexp_apply
                                                    expression (ctypN.ml[125,4068+22]..[125,4068+24])
                                                      Pexp_ident "@@" (ctypN.ml[125,4068+22]..[125,4068+24])
                                                    [
                                                      <label> ""
                                                        expression (ctypN.ml[125,4068+12]..[125,4068+21])
                                                          Pexp_ident "app_arrow" (ctypN.ml[125,4068+12]..[125,4068+21])
                                                      <label> ""
                                                        expression (ctypN.ml[126,4093+14]..[128,4159+78])
                                                          Pexp_apply
                                                          expression (ctypN.ml[126,4093+35]..[126,4093+37])
                                                            Pexp_ident "@@" (ctypN.ml[126,4093+35]..[126,4093+37])
                                                          [
                                                            <label> ""
                                                              expression (ctypN.ml[126,4093+15]..[126,4093+34])
                                                                Pexp_apply
                                                                expression (ctypN.ml[126,4093+16]..[126,4093+26])
                                                                  Pexp_ident "Listf.init" (ctypN.ml[126,4093+16]..[126,4093+26])
                                                                [
                                                                  <label> ""
                                                                    expression (ctypN.ml[126,4093+27]..[126,4093+33])
                                                                      Pexp_ident "number" (ctypN.ml[126,4093+27]..[126,4093+33])
                                                                ]
                                                            <label> ""
                                                              expression (ctypN.ml[127,4131+17]..[128,4159+77])
                                                                Pexp_fun ""
                                                                None
                                                                pattern (ctypN.ml[127,4131+22]..[127,4131+23])
                                                                  Ppat_any
                                                                expression (ctypN.ml[128,4159+20]..[128,4159+76]) ghost
                                                                  Pexp_constraint
                                                                  expression (ctypN.ml[128,4159+21]..[128,4159+61])
                                                                    Pexp_variant "Quote"
                                                                    Some
                                                                      expression (ctypN.ml[128,4159+28]..[128,4159+61])
Pexp_tuple
[
  expression (ctypN.ml[128,4159+29]..[128,4159+36])
    Pexp_variant "Normal"
    None
  expression (ctypN.ml[128,4159+38]..[128,4159+60])
    Pexp_variant "Lid"
    Some
      expression (ctypN.ml[128,4159+44]..[128,4159+59])
        Pexp_apply
        expression (ctypN.ml[128,4159+45]..[128,4159+49])
          Pexp_ident "allx" (ctypN.ml[128,4159+45]..[128,4159+49])
        [
          <label> "off"
            expression (ctypN.ml[128,4159+55]..[128,4159+56])
              Pexp_constant Const_int 0
          <label> ""
            expression (ctypN.ml[128,4159+57]..[128,4159+58])
              Pexp_ident "i" (ctypN.ml[128,4159+57]..[128,4159+58])
        ]
]
                                                                  core_type (ctypN.ml[128,4159+64]..[128,4159+74])
                                                                    Ptyp_constr "Astfn.ctyp" (ctypN.ml[128,4159+64]..[128,4159+74])
                                                                    []
                                                          ]
                                                    ]
                                              ]
                                              expression (ctypN.ml[129,4241+10]..[140,4646+56])
                                                Pexp_match
                                                expression (ctypN.ml[129,4241+16]..[129,4241+17])
                                                  Pexp_ident "k" (ctypN.ml[129,4241+16]..[129,4241+17])
                                                [
                                                  <case>
                                                    pattern (ctypN.ml[130,4264+12]..[130,4264+17])
                                                      Ppat_construct "Obj" (ctypN.ml[130,4264+12]..[130,4264+15])
                                                      Some
                                                        pattern (ctypN.ml[130,4264+16]..[130,4264+17])
                                                          Ppat_var "u" (ctypN.ml[130,4264+16]..[130,4264+17])
                                                    expression (ctypN.ml[131,4285+14]..[139,4585+60])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (ctypN.ml[131,4285+18]..[131,4285+21])
                                                            Ppat_var "dst" (ctypN.ml[131,4285+18]..[131,4285+21])
                                                          expression (ctypN.ml[132,4309+16]..[138,4545+36])
                                                            Pexp_match
                                                            expression (ctypN.ml[132,4309+22]..[132,4309+23])
                                                              Pexp_ident "u" (ctypN.ml[132,4309+22]..[132,4309+23])
                                                            [
                                                              <case>
                                                                pattern (ctypN.ml[133,4338+18]..[133,4338+21])
                                                                  Ppat_construct "Map" (ctypN.ml[133,4338+18]..[133,4338+21])
                                                                  None
                                                                expression (ctypN.ml[134,4364+20]..[135,4409+62])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (ctypN.ml[134,4364+24]..[134,4364+25])
Ppat_var "x" (ctypN.ml[134,4364+24]..[134,4364+25])
                                                                      expression (ctypN.ml[134,4364+28]..[134,4364+41])
Pexp_apply
expression (ctypN.ml[134,4364+28]..[134,4364+32])
  Pexp_ident "allx" (ctypN.ml[134,4364+28]..[134,4364+32])
[
  <label> "off"
    expression (ctypN.ml[134,4364+38]..[134,4364+39])
      Pexp_constant Const_int 1
  <label> ""
    expression (ctypN.ml[134,4364+40]..[134,4364+41])
      Pexp_ident "i" (ctypN.ml[134,4364+40]..[134,4364+41])
]
                                                                  ]
                                                                  expression (ctypN.ml[135,4409+20]..[135,4409+62]) ghost
                                                                    Pexp_constraint
                                                                    expression (ctypN.ml[135,4409+21]..[135,4409+47])
                                                                      Pexp_variant "Quote"
                                                                      Some
expression (ctypN.ml[135,4409+28]..[135,4409+47])
  Pexp_tuple
  [
    expression (ctypN.ml[135,4409+29]..[135,4409+36])
      Pexp_variant "Normal"
      None
    expression (ctypN.ml[135,4409+38]..[135,4409+46])
      Pexp_variant "Lid"
      Some
        expression (ctypN.ml[135,4409+44]..[135,4409+45])
          Pexp_ident "x" (ctypN.ml[135,4409+44]..[135,4409+45])
  ]
                                                                    core_type (ctypN.ml[135,4409+50]..[135,4409+60])
                                                                      Ptyp_constr "Astfn.ctyp" (ctypN.ml[135,4409+50]..[135,4409+60])
                                                                      []
                                                              <case>
                                                                pattern (ctypN.ml[136,4472+18]..[136,4472+22])
                                                                  Ppat_construct "Iter" (ctypN.ml[136,4472+18]..[136,4472+22])
                                                                  None
                                                                expression (ctypN.ml[136,4472+27]..[136,4472+38])
                                                                  Pexp_ident "result_type" (ctypN.ml[136,4472+27]..[136,4472+38])
                                                              <case>
                                                                pattern (ctypN.ml[137,4511+18]..[137,4511+28])
                                                                  Ppat_construct "Concrete" (ctypN.ml[137,4511+18]..[137,4511+26])
                                                                  Some
                                                                    pattern (ctypN.ml[137,4511+27]..[137,4511+28])
                                                                      Ppat_var "c" (ctypN.ml[137,4511+27]..[137,4511+28])
                                                                expression (ctypN.ml[137,4511+32]..[137,4511+33])
                                                                  Pexp_ident "c" (ctypN.ml[137,4511+32]..[137,4511+33])
                                                              <case>
                                                                pattern (ctypN.ml[138,4545+18]..[138,4545+22])
                                                                  Ppat_construct "Fold" (ctypN.ml[138,4545+18]..[138,4545+22])
                                                                  None
                                                                expression (ctypN.ml[138,4545+27]..[138,4545+36])
                                                                  Pexp_ident "self_type" (ctypN.ml[138,4545+27]..[138,4545+36])
                                                            ]
                                                      ]
                                                      expression (ctypN.ml[139,4585+14]..[139,4585+60])
                                                        Pexp_apply
                                                        expression (ctypN.ml[139,4585+32]..[139,4585+34])
                                                          Pexp_ident "@@" (ctypN.ml[139,4585+32]..[139,4585+34])
                                                        [
                                                          <label> ""
                                                            expression (ctypN.ml[139,4585+14]..[139,4585+31])
                                                              Pexp_apply
                                                              expression (ctypN.ml[139,4585+15]..[139,4585+20])
                                                                Pexp_ident "arrow" (ctypN.ml[139,4585+15]..[139,4585+20])
                                                              [
                                                                <label> ""
                                                                  expression (ctypN.ml[139,4585+21]..[139,4585+30])
                                                                    Pexp_ident "self_type" (ctypN.ml[139,4585+21]..[139,4585+30])
                                                              ]
                                                          <label> ""
                                                            expression (ctypN.ml[139,4585+35]..[139,4585+60])
                                                              Pexp_apply
                                                              expression (ctypN.ml[139,4585+43]..[139,4585+45])
                                                                Pexp_ident "<+" (ctypN.ml[139,4585+43]..[139,4585+45])
                                                              [
                                                                <label> ""
                                                                  expression (ctypN.ml[139,4585+36]..[139,4585+42])
                                                                    Pexp_ident "prefix" (ctypN.ml[139,4585+36]..[139,4585+42])
                                                                <label> ""
                                                                  expression (ctypN.ml[139,4585+46]..[139,4585+59])
                                                                    Pexp_apply
                                                                    expression (ctypN.ml[139,4585+47]..[139,4585+54])
                                                                      Pexp_ident "app_src" (ctypN.ml[139,4585+47]..[139,4585+54])
                                                                    [
                                                                      <label> ""
expression (ctypN.ml[139,4585+55]..[139,4585+58])
  Pexp_ident "dst" (ctypN.ml[139,4585+55]..[139,4585+58])
                                                                    ]
                                                              ]
                                                        ]
                                                  <case>
                                                    pattern (ctypN.ml[140,4646+12]..[140,4646+20])
                                                      Ppat_construct "Str_item" (ctypN.ml[140,4646+12]..[140,4646+20])
                                                      None
                                                    expression (ctypN.ml[140,4646+25]..[140,4646+56])
                                                      Pexp_apply
                                                      expression (ctypN.ml[140,4646+32]..[140,4646+34])
                                                        Pexp_ident "<+" (ctypN.ml[140,4646+32]..[140,4646+34])
                                                      [
                                                        <label> ""
                                                          expression (ctypN.ml[140,4646+25]..[140,4646+31])
                                                            Pexp_ident "prefix" (ctypN.ml[140,4646+25]..[140,4646+31])
                                                        <label> ""
                                                          expression (ctypN.ml[140,4646+35]..[140,4646+56])
                                                            Pexp_apply
                                                            expression (ctypN.ml[140,4646+36]..[140,4646+43])
                                                              Pexp_ident "app_src" (ctypN.ml[140,4646+36]..[140,4646+43])
                                                            [
                                                              <label> ""
                                                                expression (ctypN.ml[140,4646+44]..[140,4646+55])
                                                                  Pexp_ident "result_type" (ctypN.ml[140,4646+44]..[140,4646+55])
                                                            ]
                                                      ]
                                                ]
                                      ]
                                ]
                                expression (ctypN.ml[141,4707+3]..[146,4863+68])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (ctypN.ml[141,4707+7]..[141,4707+11])
                                        Ppat_var "base" (ctypN.ml[141,4707+7]..[141,4707+11])
                                      expression (ctypN.ml[141,4707+14]..[141,4707+37])
                                        Pexp_apply
                                        expression (ctypN.ml[141,4707+21]..[141,4707+23])
                                          Pexp_ident "<+" (ctypN.ml[141,4707+21]..[141,4707+23])
                                        [
                                          <label> ""
                                            expression (ctypN.ml[141,4707+14]..[141,4707+20])
                                              Pexp_ident "prefix" (ctypN.ml[141,4707+14]..[141,4707+20])
                                          <label> ""
                                            expression (ctypN.ml[141,4707+24]..[141,4707+37])
                                              Pexp_apply
                                              expression (ctypN.ml[141,4707+25]..[141,4707+32])
                                                Pexp_ident "app_src" (ctypN.ml[141,4707+25]..[141,4707+32])
                                              [
                                                <label> ""
                                                  expression (ctypN.ml[141,4707+33]..[141,4707+36])
                                                    Pexp_ident "dst" (ctypN.ml[141,4707+33]..[141,4707+36])
                                              ]
                                        ]
                                  ]
                                  expression (ctypN.ml[142,4748+3]..[146,4863+68])
                                    Pexp_ifthenelse
                                    expression (ctypN.ml[142,4748+6]..[142,4748+13])
                                      Pexp_apply
                                      expression (ctypN.ml[142,4748+10]..[142,4748+11])
                                        Pexp_ident "=" (ctypN.ml[142,4748+10]..[142,4748+11])
                                      [
                                        <label> ""
                                          expression (ctypN.ml[142,4748+6]..[142,4748+9])
                                            Pexp_ident "len" (ctypN.ml[142,4748+6]..[142,4748+9])
                                        <label> ""
                                          expression (ctypN.ml[142,4748+12]..[142,4748+13])
                                            Pexp_constant Const_int 0
                                      ]
                                    expression (ctypN.ml[143,4762+8]..[143,4762+31])
                                      Pexp_tuple
                                      [
                                        expression (ctypN.ml[143,4762+9]..[143,4762+25])
                                          Pexp_variant "TyPolEnd"
                                          Some
                                            expression (ctypN.ml[143,4762+20]..[143,4762+24])
                                              Pexp_ident "base" (ctypN.ml[143,4762+20]..[143,4762+24])
                                        expression (ctypN.ml[143,4762+27]..[143,4762+30])
                                          Pexp_ident "dst" (ctypN.ml[143,4762+27]..[143,4762+30])
                                      ]
                                    Some
                                      expression (ctypN.ml[145,4802+5]..[146,4863+68])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (ctypN.ml[145,4802+10]..[145,4802+21])
                                              Ppat_var "quantifiers" (ctypN.ml[145,4802+10]..[145,4802+21])
                                            expression (ctypN.ml[145,4802+24]..[145,4802+57])
                                              Pexp_apply
                                              expression (ctypN.ml[145,4802+24]..[145,4802+40])
                                                Pexp_ident "gen_quantifiers1" (ctypN.ml[145,4802+24]..[145,4802+40])
                                              [
                                                <label> "arity"
                                                  expression (ctypN.ml[145,4802+48]..[145,4802+53])
                                                    Pexp_ident "quant" (ctypN.ml[145,4802+48]..[145,4802+53])
                                                <label> ""
                                                  expression (ctypN.ml[145,4802+54]..[145,4802+57])
                                                    Pexp_ident "len" (ctypN.ml[145,4802+54]..[145,4802+57])
                                              ]
                                        ]
                                        expression (ctypN.ml[146,4863+6]..[146,4863+67])
                                          Pexp_tuple
                                          [
                                            expression (ctypN.ml[146,4863+7]..[146,4863+61]) ghost
                                              Pexp_constraint
                                              expression (ctypN.ml[146,4863+8]..[146,4863+46])
                                                Pexp_variant "TyPol"
                                                Some
                                                  expression (ctypN.ml[146,4863+15]..[146,4863+46])
                                                    Pexp_tuple
                                                    [
                                                      expression (ctypN.ml[146,4863+16]..[146,4863+27])
                                                        Pexp_ident "quantifiers" (ctypN.ml[146,4863+16]..[146,4863+27])
                                                      expression (ctypN.ml[146,4863+29]..[146,4863+45])
                                                        Pexp_apply
                                                        expression (ctypN.ml[146,4863+37]..[146,4863+39])
                                                          Pexp_ident "+>" (ctypN.ml[146,4863+37]..[146,4863+39])
                                                        [
                                                          <label> ""
                                                            expression (ctypN.ml[146,4863+30]..[146,4863+36])
                                                              Pexp_ident "params" (ctypN.ml[146,4863+30]..[146,4863+36])
                                                          <label> ""
                                                            expression (ctypN.ml[146,4863+40]..[146,4863+44])
                                                              Pexp_ident "base" (ctypN.ml[146,4863+40]..[146,4863+44])
                                                        ]
                                                    ]
                                              core_type (ctypN.ml[146,4863+49]..[146,4863+59])
                                                Ptyp_constr "Astfn.ctyp" (ctypN.ml[146,4863+49]..[146,4863+59])
                                                []
                                            expression (ctypN.ml[146,4863+63]..[146,4863+66])
                                              Pexp_ident "dst" (ctypN.ml[146,4863+63]..[146,4863+66])
                                          ]
                  core_type (ctypN.ml[147,4935+3]..[147,4935+13])
                    Ptyp_tuple
                    [
                      core_type (ctypN.ml[147,4935+3]..[147,4935+7])
                        Ptyp_constr "ctyp" (ctypN.ml[147,4935+3]..[147,4935+7])
                        []
                      core_type (ctypN.ml[147,4935+9]..[147,4935+13])
                        Ptyp_constr "ctyp" (ctypN.ml[147,4935+9]..[147,4935+13])
                        []
                    ]
    ]
  structure_item (ctypN.ml[148,4952+0]..[149,5028+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[148,4952+4]..[148,4952+26])
          Ppat_var "mk_method_type_of_name" (ctypN.ml[148,4952+4]..[148,4952+26])
        expression (ctypN.ml[148,4952+27]..[149,5028+65]) ghost
          Pexp_fun "number"
          None
          pattern (ctypN.ml[148,4952+28]..[148,4952+34])
            Ppat_var "number" (ctypN.ml[148,4952+28]..[148,4952+34])
          expression (ctypN.ml[148,4952+36]..[149,5028+65]) ghost
            Pexp_fun "prefix"
            None
            pattern (ctypN.ml[148,4952+37]..[148,4952+43])
              Ppat_var "prefix" (ctypN.ml[148,4952+37]..[148,4952+43])
            expression (ctypN.ml[148,4952+45]..[149,5028+65]) ghost
              Pexp_fun ""
              None
              pattern (ctypN.ml[148,4952+45]..[148,4952+55])
                Ppat_tuple
                [
                  pattern (ctypN.ml[148,4952+46]..[148,4952+50])
                    Ppat_var "name" (ctypN.ml[148,4952+46]..[148,4952+50])
                  pattern (ctypN.ml[148,4952+51]..[148,4952+54])
                    Ppat_var "len" (ctypN.ml[148,4952+51]..[148,4952+54])
                ]
              expression (ctypN.ml[148,4952+56]..[149,5028+65]) ghost
                Pexp_fun ""
                None
                pattern (ctypN.ml[148,4952+56]..[148,4952+73])
                  Ppat_constraint
                  pattern (ctypN.ml[148,4952+57]..[148,4952+58])
                    Ppat_var "k" (ctypN.ml[148,4952+57]..[148,4952+58])
                  core_type (ctypN.ml[148,4952+61]..[148,4952+72])
                    Ptyp_constr "destination" (ctypN.ml[148,4952+61]..[148,4952+72])
                    []
                expression (ctypN.ml[149,5028+2]..[149,5028+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (ctypN.ml[149,5028+6]..[149,5028+8])
                        Ppat_var "id" (ctypN.ml[149,5028+6]..[149,5028+8])
                      expression (ctypN.ml[149,5028+11]..[149,5028+19])
                        Pexp_apply
                        expression (ctypN.ml[149,5028+11]..[149,5028+14])
                          Pexp_ident "lid" (ctypN.ml[149,5028+11]..[149,5028+14])
                        [
                          <label> ""
                            expression (ctypN.ml[149,5028+15]..[149,5028+19])
                              Pexp_ident "name" (ctypN.ml[149,5028+15]..[149,5028+19])
                        ]
                  ]
                  expression (ctypN.ml[149,5028+23]..[149,5028+65])
                    Pexp_apply
                    expression (ctypN.ml[149,5028+23]..[149,5028+37])
                      Pexp_ident "mk_method_type" (ctypN.ml[149,5028+23]..[149,5028+37])
                    [
                      <label> "number"
                        expression (ctypN.ml[149,5028+39]..[149,5028+45])
                          Pexp_ident "number" (ctypN.ml[149,5028+39]..[149,5028+45])
                      <label> "prefix"
                        expression (ctypN.ml[149,5028+47]..[149,5028+53])
                          Pexp_ident "prefix" (ctypN.ml[149,5028+47]..[149,5028+53])
                      <label> ""
                        expression (ctypN.ml[149,5028+54]..[149,5028+63])
                          Pexp_tuple
                          [
                            expression (ctypN.ml[149,5028+55]..[149,5028+57])
                              Pexp_ident "id" (ctypN.ml[149,5028+55]..[149,5028+57])
                            expression (ctypN.ml[149,5028+59]..[149,5028+62])
                              Pexp_ident "len" (ctypN.ml[149,5028+59]..[149,5028+62])
                          ]
                      <label> ""
                        expression (ctypN.ml[149,5028+64]..[149,5028+65])
                          Pexp_ident "k" (ctypN.ml[149,5028+64]..[149,5028+65])
                    ]
    ]
  structure_item (ctypN.ml[150,5094+0]..[158,5386+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[150,5094+4]..[150,5094+10])
          Ppat_var "mk_obj" (ctypN.ml[150,5094+4]..[150,5094+10])
        expression (ctypN.ml[150,5094+11]..[158,5386+14]) ghost
          Pexp_fun ""
          None
          pattern (ctypN.ml[150,5094+11]..[150,5094+21])
            Ppat_var "class_name" (ctypN.ml[150,5094+11]..[150,5094+21])
          expression (ctypN.ml[150,5094+22]..[158,5386+14]) ghost
            Pexp_fun ""
            None
            pattern (ctypN.ml[150,5094+22]..[150,5094+26])
              Ppat_var "base" (ctypN.ml[150,5094+22]..[150,5094+26])
            expression (ctypN.ml[150,5094+27]..[158,5386+14]) ghost
              Pexp_fun ""
              None
              pattern (ctypN.ml[150,5094+27]..[150,5094+31])
                Ppat_var "body" (ctypN.ml[150,5094+27]..[150,5094+31])
              expression (ctypN.ml[151,5128+2]..[158,5386+14]) ghost
                Pexp_constraint
                expression (ctypN.ml[151,5128+3]..[157,5313+69])
                  Pexp_variant "Class"
                  Some
                    expression (ctypN.ml[152,5138+5]..[157,5313+69])
                      Pexp_variant "ClDeclS"
                      Some
                        expression (ctypN.ml[153,5153+8]..[157,5313+68])
                          Pexp_tuple
                          [
                            expression (ctypN.ml[153,5153+9]..[153,5153+18])
                              Pexp_variant "Negative"
                              None
                            expression (ctypN.ml[153,5153+20]..[153,5153+37])
                              Pexp_variant "Lid"
                              Some
                                expression (ctypN.ml[153,5153+26]..[153,5153+36])
                                  Pexp_ident "class_name" (ctypN.ml[153,5153+26]..[153,5153+36])
                            expression (ctypN.ml[154,5192+10]..[157,5313+67])
                              Pexp_variant "ObjPat"
                              Some
                                expression (ctypN.ml[155,5211+13]..[157,5313+66])
                                  Pexp_tuple
                                  [
                                    expression (ctypN.ml[155,5211+14]..[156,5238+73])
                                      Pexp_variant "Constraint"
                                      Some
                                        expression (ctypN.ml[156,5238+17]..[156,5238+72])
                                          Pexp_tuple
                                          [
                                            expression (ctypN.ml[156,5238+18]..[156,5238+31])
                                              Pexp_variant "Lid"
                                              Some
                                                expression (ctypN.ml[156,5238+24]..[156,5238+30])
                                                  Pexp_constant Const_string("self",None)
                                            expression (ctypN.ml[156,5238+33]..[156,5238+71])
                                              Pexp_variant "Quote"
                                              Some
                                                expression (ctypN.ml[156,5238+41]..[156,5238+70])
                                                  Pexp_tuple
                                                  [
                                                    expression (ctypN.ml[156,5238+42]..[156,5238+49])
                                                      Pexp_variant "Normal"
                                                      None
                                                    expression (ctypN.ml[156,5238+51]..[156,5238+69])
                                                      Pexp_variant "Lid"
                                                      Some
                                                        expression (ctypN.ml[156,5238+57]..[156,5238+68])
                                                          Pexp_constant Const_string("self_type",None)
                                                  ]
                                          ]
                                    expression (ctypN.ml[157,5313+15]..[157,5313+65])
                                      Pexp_variant "Sem"
                                      Some
                                        expression (ctypN.ml[157,5313+21]..[157,5313+64])
                                          Pexp_tuple
                                          [
                                            expression (ctypN.ml[157,5313+22]..[157,5313+57])
                                              Pexp_variant "Inherit"
                                              Some
                                                expression (ctypN.ml[157,5313+32]..[157,5313+56])
                                                  Pexp_tuple
                                                  [
                                                    expression (ctypN.ml[157,5313+33]..[157,5313+42])
                                                      Pexp_variant "Negative"
                                                      None
                                                    expression (ctypN.ml[157,5313+44]..[157,5313+55])
                                                      Pexp_variant "Lid"
                                                      Some
                                                        expression (ctypN.ml[157,5313+50]..[157,5313+54])
                                                          Pexp_ident "base" (ctypN.ml[157,5313+50]..[157,5313+54])
                                                  ]
                                            expression (ctypN.ml[157,5313+59]..[157,5313+63])
                                              Pexp_ident "body" (ctypN.ml[157,5313+59]..[157,5313+63])
                                          ]
                                  ]
                          ]
                core_type (ctypN.ml[158,5386+2]..[158,5386+12])
                  Ptyp_constr "Astfn.stru" (ctypN.ml[158,5386+2]..[158,5386+12])
                  []
    ]
  structure_item (ctypN.ml[159,5401+0]..[177,6005+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[159,5401+4]..[159,5401+16])
          Ppat_var "is_recursive" (ctypN.ml[159,5401+4]..[159,5401+16])
        expression (ctypN.ml[159,5401+17]..[177,6005+36]) ghost
          Pexp_fun ""
          None
          pattern (ctypN.ml[159,5401+17]..[159,5401+23])
            Ppat_var "ty_dcl" (ctypN.ml[159,5401+17]..[159,5401+23])
          expression (ctypN.ml[160,5427+2]..[177,6005+36])
            Pexp_match
            expression (ctypN.ml[160,5427+8]..[160,5427+14])
              Pexp_ident "ty_dcl" (ctypN.ml[160,5427+8]..[160,5427+14])
            [
              <case>
                pattern (ctypN.ml[161,5447+4]..[161,5447+31])
                  Ppat_variant "TyDcl"
                  Some
                    pattern (ctypN.ml[161,5447+11]..[161,5447+31])
                      Ppat_tuple
                      [
                        pattern (ctypN.ml[161,5447+12]..[161,5447+21])
                          Ppat_variant "Lid"
                          Some
                            pattern (ctypN.ml[161,5447+17]..[161,5447+21])
                              Ppat_var "name" (ctypN.ml[161,5447+17]..[161,5447+21])
                        pattern (ctypN.ml[161,5447+22]..[161,5447+23])
                          Ppat_any
                        pattern (ctypN.ml[161,5447+24]..[161,5447+28])
                          Ppat_var "ctyp" (ctypN.ml[161,5447+24]..[161,5447+28])
                        pattern (ctypN.ml[161,5447+29]..[161,5447+30])
                          Ppat_any
                      ]
                expression (ctypN.ml[162,5482+6]..[173,5882+39])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (ctypN.ml[162,5482+10]..[162,5482+13])
                        Ppat_var "obj" (ctypN.ml[162,5482+10]..[162,5482+13])
                      expression (ctypN.ml[163,5498+8]..[172,5867+11])
                        Pexp_object
                        class_structure
                          pattern (ctypN.ml[163,5498+15]..[163,5498+34])
                            Ppat_constraint
                            pattern (ctypN.ml[163,5498+16]..[163,5498+20])
                              Ppat_var "self" (ctypN.ml[163,5498+16]..[163,5498+20])
                            core_type (ctypN.ml[163,5498+23]..[163,5498+33])
                              Ptyp_var self_type
                          [
                            class_field (ctypN.ml[164,5533+10]..[164,5533+38])
                              Pcf_inherit Fresh
                                class_expr (ctypN.ml[164,5533+19]..[164,5533+29])
                                  Pcl_constr "ObjsN.fold" (ctypN.ml[164,5533+19]..[164,5533+29])
                                  []
                                Some
                                  "super"
                            class_field (ctypN.ml[165,5572+10]..[165,5572+42])
                              Pcf_val Mutable
                                "is_recursive" (ctypN.ml[165,5572+22]..[165,5572+34])
                                Concrete Fresh
                                expression (ctypN.ml[165,5572+37]..[165,5572+42])
                                  Pexp_construct "false" (ctypN.ml[165,5572+37]..[165,5572+42])
                                  None
                            class_field (ctypN.ml[166,5615+10]..[170,5759+62])
                              Pcf_method Public
                                "ctyp" (ctypN.ml[166,5615+18]..[166,5615+22])
                                Concrete Override
                                expression (ctypN.ml[166,5615+16]..[170,5759+62]) ghost
                                  Pexp_poly
                                  expression (ctypN.ml[167,5640+12]..[170,5759+62])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (ctypN.ml[168,5661+14]..[168,5661+35])
                                          Ppat_constraint
                                          pattern (ctypN.ml[168,5661+15]..[168,5661+21])
                                            Ppat_variant "Lid"
                                            Some
                                              pattern (ctypN.ml[168,5661+20]..[168,5661+21])
                                                Ppat_var "i" (ctypN.ml[168,5661+20]..[168,5661+21])
                                          core_type (ctypN.ml[168,5661+24]..[168,5661+34])
                                            Ptyp_constr "Astfn.ctyp" (ctypN.ml[168,5661+24]..[168,5661+34])
                                            []
                                        <when>
                                          expression (ctypN.ml[168,5661+41]..[168,5661+49])
                                            Pexp_apply
                                            expression (ctypN.ml[168,5661+43]..[168,5661+44])
                                              Pexp_ident "=" (ctypN.ml[168,5661+43]..[168,5661+44])
                                            [
                                              <label> ""
                                                expression (ctypN.ml[168,5661+41]..[168,5661+42])
                                                  Pexp_ident "i" (ctypN.ml[168,5661+41]..[168,5661+42])
                                              <label> ""
                                                expression (ctypN.ml[168,5661+45]..[168,5661+49])
                                                  Pexp_ident "name" (ctypN.ml[168,5661+45]..[168,5661+49])
                                            ]
                                        expression (ctypN.ml[169,5714+16]..[169,5714+44])
                                          Pexp_sequence
                                          expression (ctypN.ml[169,5714+17]..[169,5714+37])
                                            Pexp_setinstvar "is_recursive" (ctypN.ml[169,5714+17]..[169,5714+29])
                                            expression (ctypN.ml[169,5714+33]..[169,5714+37])
                                              Pexp_construct "true" (ctypN.ml[169,5714+33]..[169,5714+37])
                                              None
                                          expression (ctypN.ml[169,5714+39]..[169,5714+43])
                                            Pexp_ident "self" (ctypN.ml[169,5714+39]..[169,5714+43])
                                      <case>
                                        pattern (ctypN.ml[170,5759+14]..[170,5759+15])
                                          Ppat_var "x" (ctypN.ml[170,5759+14]..[170,5759+15])
                                        expression (ctypN.ml[170,5759+19]..[170,5759+62])
                                          Pexp_ifthenelse
                                          expression (ctypN.ml[170,5759+22]..[170,5759+34])
                                            Pexp_ident "is_recursive" (ctypN.ml[170,5759+22]..[170,5759+34])
                                          expression (ctypN.ml[170,5759+40]..[170,5759+44])
                                            Pexp_ident "self" (ctypN.ml[170,5759+40]..[170,5759+44])
                                          Some
                                            expression (ctypN.ml[170,5759+50]..[170,5759+62])
                                              Pexp_apply
                                              expression (ctypN.ml[170,5759+50]..[170,5759+60])
                                                Pexp_send "ctyp"
                                                expression (ctypN.ml[170,5759+50]..[170,5759+55])
                                                  Pexp_ident "super" (ctypN.ml[170,5759+50]..[170,5759+55])
                                              [
                                                <label> ""
                                                  expression (ctypN.ml[170,5759+61]..[170,5759+62])
                                                    Pexp_ident "x" (ctypN.ml[170,5759+61]..[170,5759+62])
                                              ]
                                    ]
                                  None
                            class_field (ctypN.ml[171,5822+10]..[171,5822+44])
                              Pcf_method Public
                                "is_recursive" (ctypN.ml[171,5822+17]..[171,5822+29])
                                Concrete Fresh
                                expression (ctypN.ml[171,5822+17]..[171,5822+44]) ghost
                                  Pexp_poly
                                  expression (ctypN.ml[171,5822+32]..[171,5822+44])
                                    Pexp_ident "is_recursive" (ctypN.ml[171,5822+32]..[171,5822+44])
                                  None
                          ]
                  ]
                  expression (ctypN.ml[173,5882+6]..[173,5882+39])
                    Pexp_send "is_recursive"
                    expression (ctypN.ml[173,5882+6]..[173,5882+26])
                      Pexp_apply
                      expression (ctypN.ml[173,5882+7]..[173,5882+20])
                        Pexp_send "type_info"
                        expression (ctypN.ml[173,5882+7]..[173,5882+10])
                          Pexp_ident "obj" (ctypN.ml[173,5882+7]..[173,5882+10])
                      [
                        <label> ""
                          expression (ctypN.ml[173,5882+21]..[173,5882+25])
                            Pexp_ident "ctyp" (ctypN.ml[173,5882+21]..[173,5882+25])
                      ]
              <case>
                pattern (ctypN.ml[174,5922+4]..[174,5922+10])
                  Ppat_variant "And"
                  Some
                    pattern (ctypN.ml[174,5922+9]..[174,5922+10])
                      Ppat_any
                expression (ctypN.ml[174,5922+14]..[174,5922+18])
                  Pexp_construct "true" (ctypN.ml[174,5922+14]..[174,5922+18])
                  None
              <case>
                pattern (ctypN.ml[175,5941+4]..[175,5941+5])
                  Ppat_any
                expression (ctypN.ml[176,5950+6]..[177,6005+36])
                  Pexp_apply
                  expression (ctypN.ml[176,5950+6]..[176,5950+15])
                    Pexp_ident "failwithf" (ctypN.ml[176,5950+6]..[176,5950+15])
                  [
                    <label> ""
                      expression (ctypN.ml[176,5950+16]..[176,5950+54])
                        Pexp_constant Const_string("is_recursive not type declartion: %s",None)
                    <label> ""
                      expression (ctypN.ml[177,6005+8]..[177,6005+36])
                        Pexp_apply
                        expression (ctypN.ml[177,6005+9]..[177,6005+28])
                          Pexp_ident "ObjsN.dump_typedecl" (ctypN.ml[177,6005+9]..[177,6005+28])
                        [
                          <label> ""
                            expression (ctypN.ml[177,6005+29]..[177,6005+35])
                              Pexp_ident "ty_dcl" (ctypN.ml[177,6005+29]..[177,6005+35])
                        ]
                  ]
            ]
    ]
  structure_item (ctypN.ml[178,6042+0]..[187,6357+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[178,6042+4]..[178,6042+22])
          Ppat_var "qualified_app_list" (ctypN.ml[178,6042+4]..[178,6042+22])
        expression (ctypN.ml[178,6042+23]..[187,6357+44]) ghost
          Pexp_fun ""
          None
          pattern (ctypN.ml[178,6042+23]..[178,6042+33])
            Ppat_constraint
            pattern (ctypN.ml[178,6042+24]..[178,6042+25])
              Ppat_var "x" (ctypN.ml[178,6042+24]..[178,6042+25])
            core_type (ctypN.ml[178,6042+28]..[178,6042+32])
              Ptyp_constr "ctyp" (ctypN.ml[178,6042+28]..[178,6042+32])
              []
          expression (ctypN.ml[179,6078+2]..[187,6357+44]) ghost
            Pexp_constraint
            expression (ctypN.ml[179,6078+3]..[187,6357+14])
              Pexp_match
              expression (ctypN.ml[179,6078+9]..[179,6078+10])
                Pexp_ident "x" (ctypN.ml[179,6078+9]..[179,6078+10])
              [
                <case>
                  pattern (ctypN.ml[180,6094+5]..[180,6094+38])
                    Ppat_alias "x" (ctypN.ml[180,6094+37]..[180,6094+38])
                    pattern (ctypN.ml[180,6094+5]..[180,6094+33])
                      Ppat_constraint
                      pattern (ctypN.ml[180,6094+6]..[180,6094+19])
                        Ppat_variant "App"
                        Some
                          pattern (ctypN.ml[180,6094+11]..[180,6094+19])
                            Ppat_tuple
                            [
                              pattern (ctypN.ml[180,6094+12]..[180,6094+16])
                                Ppat_var "_loc" (ctypN.ml[180,6094+12]..[180,6094+16])
                              pattern (ctypN.ml[180,6094+17]..[180,6094+18])
                                Ppat_any
                            ]
                      core_type (ctypN.ml[180,6094+22]..[180,6094+32])
                        Ptyp_constr "Astfn.ctyp" (ctypN.ml[180,6094+22]..[180,6094+32])
                        []
                  expression (ctypN.ml[181,6136+7]..[184,6275+20])
                    Pexp_match
                    expression (ctypN.ml[181,6136+14]..[181,6136+42])
                      Pexp_apply
                      expression (ctypN.ml[181,6136+14]..[181,6136+37])
                        Pexp_ident "Ast_basic.N.list_of_app" (ctypN.ml[181,6136+14]..[181,6136+37])
                      [
                        <label> ""
                          expression (ctypN.ml[181,6136+38]..[181,6136+39])
                            Pexp_ident "x" (ctypN.ml[181,6136+38]..[181,6136+39])
                        <label> ""
                          expression (ctypN.ml[181,6136+40]..[181,6136+42])
                            Pexp_construct "[]" (ctypN.ml[181,6136+40]..[181,6136+42])
                            None
                      ]
                    [
                      <case>
                        pattern (ctypN.ml[182,6184+10]..[182,6184+37])
                          Ppat_construct "::" (ctypN.ml[182,6184+34]..[182,6184+36])
                          Some
                            pattern (ctypN.ml[182,6184+10]..[182,6184+37]) ghost
                              Ppat_tuple
                              [
                                pattern (ctypN.ml[182,6184+10]..[182,6184+34])
                                  Ppat_constraint
                                  pattern (ctypN.ml[182,6184+11]..[182,6184+20])
                                    Ppat_variant "Lid"
                                    Some
                                      pattern (ctypN.ml[182,6184+16]..[182,6184+20])
                                        Ppat_var "_loc" (ctypN.ml[182,6184+16]..[182,6184+20])
                                  core_type (ctypN.ml[182,6184+23]..[182,6184+33])
                                    Ptyp_constr "Astfn.ctyp" (ctypN.ml[182,6184+23]..[182,6184+33])
                                    []
                                pattern (ctypN.ml[182,6184+36]..[182,6184+37])
                                  Ppat_any
                              ]
                        expression (ctypN.ml[182,6184+41]..[182,6184+45])
                          Pexp_construct "None" (ctypN.ml[182,6184+41]..[182,6184+45])
                          None
                      <case>
                        pattern (ctypN.ml[183,6230+10]..[183,6230+28])
                          Ppat_construct "::" (ctypN.ml[183,6230+24]..[183,6230+26])
                          Some
                            pattern (ctypN.ml[183,6230+10]..[183,6230+28]) ghost
                              Ppat_tuple
                              [
                                pattern (ctypN.ml[183,6230+10]..[183,6230+24])
                                  Ppat_alias "i" (ctypN.ml[183,6230+22]..[183,6230+23])
                                  pattern (ctypN.ml[183,6230+11]..[183,6230+18])
                                    Ppat_type
                                    "ident'" (ctypN.ml[183,6230+12]..[183,6230+18])
                                pattern (ctypN.ml[183,6230+26]..[183,6230+28])
                                  Ppat_var "ys" (ctypN.ml[183,6230+26]..[183,6230+28])
                              ]
                        expression (ctypN.ml[183,6230+32]..[183,6230+44])
                          Pexp_construct "Some" (ctypN.ml[183,6230+32]..[183,6230+36])
                          Some
                            expression (ctypN.ml[183,6230+37]..[183,6230+44])
                              Pexp_tuple
                              [
                                expression (ctypN.ml[183,6230+38]..[183,6230+39])
                                  Pexp_ident "i" (ctypN.ml[183,6230+38]..[183,6230+39])
                                expression (ctypN.ml[183,6230+41]..[183,6230+43])
                                  Pexp_ident "ys" (ctypN.ml[183,6230+41]..[183,6230+43])
                              ]
                      <case>
                        pattern (ctypN.ml[184,6275+10]..[184,6275+11])
                          Ppat_any
                        expression (ctypN.ml[184,6275+15]..[184,6275+19])
                          Pexp_construct "None" (ctypN.ml[184,6275+15]..[184,6275+19])
                          None
                    ]
                <case>
                  pattern (ctypN.ml[185,6296+5]..[185,6296+18])
                    Ppat_or
                    pattern (ctypN.ml[185,6296+5]..[185,6296+11])
                      Ppat_variant "Lid"
                      Some
                        pattern (ctypN.ml[185,6296+10]..[185,6296+11])
                          Ppat_any
                    pattern (ctypN.ml[185,6296+12]..[185,6296+18])
                      Ppat_variant "Uid"
                      Some
                        pattern (ctypN.ml[185,6296+17]..[185,6296+18])
                          Ppat_any
                  expression (ctypN.ml[185,6296+22]..[185,6296+26])
                    Pexp_construct "None" (ctypN.ml[185,6296+22]..[185,6296+26])
                    None
                <case>
                  pattern (ctypN.ml[186,6323+5]..[186,6323+17])
                    Ppat_alias "i" (ctypN.ml[186,6323+16]..[186,6323+17])
                    pattern (ctypN.ml[186,6323+5]..[186,6323+12])
                      Ppat_type
                      "ident'" (ctypN.ml[186,6323+6]..[186,6323+12])
                  expression (ctypN.ml[186,6323+21]..[186,6323+33])
                    Pexp_construct "Some" (ctypN.ml[186,6323+21]..[186,6323+25])
                    Some
                      expression (ctypN.ml[186,6323+26]..[186,6323+33])
                        Pexp_tuple
                        [
                          expression (ctypN.ml[186,6323+27]..[186,6323+28])
                            Pexp_ident "i" (ctypN.ml[186,6323+27]..[186,6323+28])
                          expression (ctypN.ml[186,6323+30]..[186,6323+32])
                            Pexp_construct "[]" (ctypN.ml[186,6323+30]..[186,6323+32])
                            None
                        ]
                <case>
                  pattern (ctypN.ml[187,6357+5]..[187,6357+6])
                    Ppat_any
                  expression (ctypN.ml[187,6357+10]..[187,6357+14])
                    Pexp_construct "None" (ctypN.ml[187,6357+10]..[187,6357+14])
                    None
              ]
            core_type (ctypN.ml[187,6357+17]..[187,6357+42])
              Ptyp_constr "option" (ctypN.ml[187,6357+36]..[187,6357+42])
              [
                core_type (ctypN.ml[187,6357+18]..[187,6357+34])
                  Ptyp_tuple
                  [
                    core_type (ctypN.ml[187,6357+18]..[187,6357+23])
                      Ptyp_constr "ident" (ctypN.ml[187,6357+18]..[187,6357+23])
                      []
                    core_type (ctypN.ml[187,6357+25]..[187,6357+34])
                      Ptyp_constr "list" (ctypN.ml[187,6357+30]..[187,6357+34])
                      [
                        core_type (ctypN.ml[187,6357+25]..[187,6357+29])
                          Ptyp_constr "ctyp" (ctypN.ml[187,6357+25]..[187,6357+29])
                          []
                      ]
                  ]
              ]
    ]
  structure_item (ctypN.ml[188,6402+0]..[189,6435+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[188,6402+4]..[188,6402+15])
          Ppat_var "is_abstract" (ctypN.ml[188,6402+4]..[188,6402+15])
        expression (ctypN.ml[188,6402+16]..[189,6435+48]) ghost
          Pexp_fun ""
          None
          pattern (ctypN.ml[188,6402+16]..[188,6402+30])
            Ppat_constraint
            pattern (ctypN.ml[188,6402+17]..[188,6402+18])
              Ppat_var "x" (ctypN.ml[188,6402+17]..[188,6402+18])
            core_type (ctypN.ml[188,6402+21]..[188,6402+29])
              Ptyp_constr "typedecl" (ctypN.ml[188,6402+21]..[188,6402+29])
              []
          expression (ctypN.ml[189,6435+2]..[189,6435+48])
            Pexp_match
            expression (ctypN.ml[189,6435+8]..[189,6435+9])
              Pexp_ident "x" (ctypN.ml[189,6435+8]..[189,6435+9])
            [
              <case>
                pattern (ctypN.ml[189,6435+17]..[189,6435+27])
                  Ppat_variant "TyAbstr"
                  Some
                    pattern (ctypN.ml[189,6435+26]..[189,6435+27])
                      Ppat_any
                expression (ctypN.ml[189,6435+31]..[189,6435+35])
                  Pexp_construct "true" (ctypN.ml[189,6435+31]..[189,6435+35])
                  None
              <case>
                pattern (ctypN.ml[189,6435+38]..[189,6435+39])
                  Ppat_any
                expression (ctypN.ml[189,6435+43]..[189,6435+48])
                  Pexp_construct "false" (ctypN.ml[189,6435+43]..[189,6435+48])
                  None
            ]
    ]
  structure_item (ctypN.ml[190,6484+0]..[196,6683+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[190,6484+4]..[190,6484+17])
          Ppat_var "abstract_list" (ctypN.ml[190,6484+4]..[190,6484+17])
        expression (ctypN.ml[190,6484+18]..[196,6683+13]) ghost
          Pexp_fun ""
          None
          pattern (ctypN.ml[190,6484+18]..[190,6484+32])
            Ppat_constraint
            pattern (ctypN.ml[190,6484+19]..[190,6484+20])
              Ppat_var "x" (ctypN.ml[190,6484+19]..[190,6484+20])
            core_type (ctypN.ml[190,6484+23]..[190,6484+31])
              Ptyp_constr "typedecl" (ctypN.ml[190,6484+23]..[190,6484+31])
              []
          expression (ctypN.ml[191,6519+2]..[196,6683+13])
            Pexp_match
            expression (ctypN.ml[191,6519+8]..[191,6519+9])
              Pexp_ident "x" (ctypN.ml[191,6519+8]..[191,6519+9])
            [
              <case>
                pattern (ctypN.ml[192,6534+4]..[192,6534+22])
                  Ppat_variant "TyAbstr"
                  Some
                    pattern (ctypN.ml[192,6534+13]..[192,6534+22])
                      Ppat_tuple
                      [
                        pattern (ctypN.ml[192,6534+14]..[192,6534+15])
                          Ppat_any
                        pattern (ctypN.ml[192,6534+16]..[192,6534+19])
                          Ppat_var "lst" (ctypN.ml[192,6534+16]..[192,6534+19])
                        pattern (ctypN.ml[192,6534+20]..[192,6534+21])
                          Ppat_any
                      ]
                expression (ctypN.ml[193,6560+6]..[195,6607+75])
                  Pexp_match
                  expression (ctypN.ml[193,6560+13]..[193,6560+16])
                    Pexp_ident "lst" (ctypN.ml[193,6560+13]..[193,6560+16])
                  [
                    <case>
                      pattern (ctypN.ml[194,6582+9]..[194,6582+14])
                        Ppat_variant "None"
                        None
                      expression (ctypN.ml[194,6582+18]..[194,6582+24])
                        Pexp_construct "Some" (ctypN.ml[194,6582+18]..[194,6582+22])
                        Some
                          expression (ctypN.ml[194,6582+23]..[194,6582+24])
                            Pexp_constant Const_int 0
                    <case>
                      pattern (ctypN.ml[195,6607+9]..[195,6607+17])
                        Ppat_variant "Some"
                        Some
                          pattern (ctypN.ml[195,6607+15]..[195,6607+17])
                            Ppat_var "xs" (ctypN.ml[195,6607+15]..[195,6607+17])
                      expression (ctypN.ml[195,6607+21]..[195,6607+74])
                        Pexp_construct "Some" (ctypN.ml[195,6607+21]..[195,6607+25])
                        Some
                          expression (ctypN.ml[195,6607+26]..[195,6607+74])
                            Pexp_apply
                            expression (ctypN.ml[195,6607+39]..[195,6607+41])
                              Pexp_ident "@@" (ctypN.ml[195,6607+39]..[195,6607+41])
                            [
                              <label> ""
                                expression (ctypN.ml[195,6607+27]..[195,6607+38])
                                  Pexp_ident "List.length" (ctypN.ml[195,6607+27]..[195,6607+38])
                              <label> ""
                                expression (ctypN.ml[195,6607+42]..[195,6607+73])
                                  Pexp_apply
                                  expression (ctypN.ml[195,6607+43]..[195,6607+66])
                                    Pexp_ident "Ast_basic.N.list_of_com" (ctypN.ml[195,6607+43]..[195,6607+66])
                                  [
                                    <label> ""
                                      expression (ctypN.ml[195,6607+67]..[195,6607+69])
                                        Pexp_ident "xs" (ctypN.ml[195,6607+67]..[195,6607+69])
                                    <label> ""
                                      expression (ctypN.ml[195,6607+70]..[195,6607+72])
                                        Pexp_construct "[]" (ctypN.ml[195,6607+70]..[195,6607+72])
                                        None
                                  ]
                            ]
                  ]
              <case>
                pattern (ctypN.ml[196,6683+4]..[196,6683+5])
                  Ppat_any
                expression (ctypN.ml[196,6683+9]..[196,6683+13])
                  Pexp_construct "None" (ctypN.ml[196,6683+9]..[196,6683+13])
                  None
            ]
    ]
  structure_item (ctypN.ml[197,6697+0]..[207,7133+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[197,6697+4]..[197,6697+21])
          Ppat_var "reduce_data_ctors" (ctypN.ml[197,6697+4]..[197,6697+21])
        expression (ctypN.ml[197,6697+22]..[207,7133+12]) ghost
          Pexp_fun ""
          None
          pattern (ctypN.ml[197,6697+22]..[197,6697+36])
            Ppat_constraint
            pattern (ctypN.ml[197,6697+23]..[197,6697+25])
              Ppat_var "ty" (ctypN.ml[197,6697+23]..[197,6697+25])
            core_type (ctypN.ml[197,6697+28]..[197,6697+35])
              Ptyp_constr "or_ctyp" (ctypN.ml[197,6697+28]..[197,6697+35])
              []
          expression (ctypN.ml[197,6697+37]..[207,7133+12]) ghost
            Pexp_fun ""
            None
            pattern (ctypN.ml[197,6697+37]..[197,6697+48])
              Ppat_constraint
              pattern (ctypN.ml[197,6697+38]..[197,6697+42])
                Ppat_var "init" (ctypN.ml[197,6697+38]..[197,6697+42])
              core_type (ctypN.ml[197,6697+45]..[197,6697+47])
                Ptyp_var a
            expression (ctypN.ml[197,6697+49]..[207,7133+12]) ghost
              Pexp_fun "compose"
              None
              pattern (ctypN.ml[197,6697+50]..[197,6697+57])
                Ppat_var "compose" (ctypN.ml[197,6697+50]..[197,6697+57])
              expression (ctypN.ml[198,6756+2]..[207,7133+12]) ghost
                Pexp_fun ""
                None
                pattern (ctypN.ml[198,6756+2]..[198,6756+33])
                  Ppat_constraint
                  pattern (ctypN.ml[198,6756+3]..[198,6756+4])
                    Ppat_var "f" (ctypN.ml[198,6756+3]..[198,6756+4])
                  core_type (ctypN.ml[198,6756+7]..[198,6756+32])
                    Ptyp_arrow
                    ""
                    core_type (ctypN.ml[198,6756+7]..[198,6756+13])
                      Ptyp_constr "string" (ctypN.ml[198,6756+7]..[198,6756+13])
                      []
                    core_type (ctypN.ml[198,6756+17]..[198,6756+32])
                      Ptyp_arrow
                      ""
                      core_type (ctypN.ml[198,6756+17]..[198,6756+26])
                        Ptyp_constr "list" (ctypN.ml[198,6756+22]..[198,6756+26])
                        [
                          core_type (ctypN.ml[198,6756+17]..[198,6756+21])
                            Ptyp_constr "ctyp" (ctypN.ml[198,6756+17]..[198,6756+21])
                            []
                        ]
                      core_type (ctypN.ml[198,6756+30]..[198,6756+32])
                        Ptyp_var e
                expression (ctypN.ml[199,6792+2]..[207,7133+12])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (ctypN.ml[199,6792+6]..[199,6792+14])
                        Ppat_var "branches" (ctypN.ml[199,6792+6]..[199,6792+14])
                      expression (ctypN.ml[199,6792+17]..[199,6792+46])
                        Pexp_apply
                        expression (ctypN.ml[199,6792+17]..[199,6792+40])
                          Pexp_ident "Ast_basic.N.list_of_bar" (ctypN.ml[199,6792+17]..[199,6792+40])
                        [
                          <label> ""
                            expression (ctypN.ml[199,6792+41]..[199,6792+43])
                              Pexp_ident "ty" (ctypN.ml[199,6792+41]..[199,6792+43])
                          <label> ""
                            expression (ctypN.ml[199,6792+44]..[199,6792+46])
                              Pexp_construct "[]" (ctypN.ml[199,6792+44]..[199,6792+46])
                              None
                        ]
                  ]
                  expression (ctypN.ml[200,6842+2]..[207,7133+12])
                    Pexp_apply
                    expression (ctypN.ml[200,6842+2]..[200,6842+16])
                      Pexp_ident "List.fold_left" (ctypN.ml[200,6842+2]..[200,6842+16])
                    [
                      <label> ""
                        expression (ctypN.ml[201,6859+4]..[206,7056+71])
                          Pexp_fun ""
                          None
                          pattern (ctypN.ml[201,6859+9]..[201,6859+12])
                            Ppat_var "acc" (ctypN.ml[201,6859+9]..[201,6859+12])
                          expression (ctypN.ml[201,6859+14]..[206,7056+70]) ghost
                            Pexp_fun ""
                            None
                            pattern (ctypN.ml[201,6859+14]..[201,6859+15])
                              Ppat_var "x" (ctypN.ml[201,6859+14]..[201,6859+15])
                            expression (ctypN.ml[202,6879+7]..[206,7056+70])
                              Pexp_match
                              expression (ctypN.ml[202,6879+13]..[202,6879+27]) ghost
                                Pexp_constraint
                                expression (ctypN.ml[202,6879+14]..[202,6879+15])
                                  Pexp_ident "x" (ctypN.ml[202,6879+14]..[202,6879+15])
                                core_type (ctypN.ml[202,6879+18]..[202,6879+25])
                                  Ptyp_constr "or_ctyp" (ctypN.ml[202,6879+18]..[202,6879+25])
                                  []
                              [
                                <case>
                                  pattern (ctypN.ml[203,6912+9]..[203,6912+28])
                                    Ppat_variant "Of"
                                    Some
                                      pattern (ctypN.ml[203,6912+13]..[203,6912+28])
                                        Ppat_tuple
                                        [
                                          pattern (ctypN.ml[203,6912+14]..[203,6912+23])
                                            Ppat_variant "Uid"
                                            Some
                                              pattern (ctypN.ml[203,6912+19]..[203,6912+23])
                                                Ppat_var "cons" (ctypN.ml[203,6912+19]..[203,6912+23])
                                          pattern (ctypN.ml[203,6912+24]..[203,6912+27])
                                            Ppat_var "tys" (ctypN.ml[203,6912+24]..[203,6912+27])
                                        ]
                                  expression (ctypN.ml[204,6944+11]..[204,6944+65])
                                    Pexp_apply
                                    expression (ctypN.ml[204,6944+11]..[204,6944+18])
                                      Pexp_ident "compose" (ctypN.ml[204,6944+11]..[204,6944+18])
                                    [
                                      <label> ""
                                        expression (ctypN.ml[204,6944+19]..[204,6944+61])
                                          Pexp_apply
                                          expression (ctypN.ml[204,6944+20]..[204,6944+21])
                                            Pexp_ident "f" (ctypN.ml[204,6944+20]..[204,6944+21])
                                          [
                                            <label> ""
                                              expression (ctypN.ml[204,6944+22]..[204,6944+26])
                                                Pexp_ident "cons" (ctypN.ml[204,6944+22]..[204,6944+26])
                                            <label> ""
                                              expression (ctypN.ml[204,6944+27]..[204,6944+60])
                                                Pexp_apply
                                                expression (ctypN.ml[204,6944+28]..[204,6944+52])
                                                  Pexp_ident "Ast_basic.N.list_of_star" (ctypN.ml[204,6944+28]..[204,6944+52])
                                                [
                                                  <label> ""
                                                    expression (ctypN.ml[204,6944+53]..[204,6944+56])
                                                      Pexp_ident "tys" (ctypN.ml[204,6944+53]..[204,6944+56])
                                                  <label> ""
                                                    expression (ctypN.ml[204,6944+57]..[204,6944+59])
                                                      Pexp_construct "[]" (ctypN.ml[204,6944+57]..[204,6944+59])
                                                      None
                                                ]
                                          ]
                                      <label> ""
                                        expression (ctypN.ml[204,6944+62]..[204,6944+65])
                                          Pexp_ident "acc" (ctypN.ml[204,6944+62]..[204,6944+65])
                                    ]
                                <case>
                                  pattern (ctypN.ml[205,7010+9]..[205,7010+18])
                                    Ppat_variant "Uid"
                                    Some
                                      pattern (ctypN.ml[205,7010+14]..[205,7010+18])
                                        Ppat_var "cons" (ctypN.ml[205,7010+14]..[205,7010+18])
                                  expression (ctypN.ml[205,7010+22]..[205,7010+45])
                                    Pexp_apply
                                    expression (ctypN.ml[205,7010+22]..[205,7010+29])
                                      Pexp_ident "compose" (ctypN.ml[205,7010+22]..[205,7010+29])
                                    [
                                      <label> ""
                                        expression (ctypN.ml[205,7010+30]..[205,7010+41])
                                          Pexp_apply
                                          expression (ctypN.ml[205,7010+31]..[205,7010+32])
                                            Pexp_ident "f" (ctypN.ml[205,7010+31]..[205,7010+32])
                                          [
                                            <label> ""
                                              expression (ctypN.ml[205,7010+33]..[205,7010+37])
                                                Pexp_ident "cons" (ctypN.ml[205,7010+33]..[205,7010+37])
                                            <label> ""
                                              expression (ctypN.ml[205,7010+38]..[205,7010+40])
                                                Pexp_construct "[]" (ctypN.ml[205,7010+38]..[205,7010+40])
                                                None
                                          ]
                                      <label> ""
                                        expression (ctypN.ml[205,7010+42]..[205,7010+45])
                                          Pexp_ident "acc" (ctypN.ml[205,7010+42]..[205,7010+45])
                                    ]
                                <case>
                                  pattern (ctypN.ml[206,7056+9]..[206,7056+10])
                                    Ppat_var "t" (ctypN.ml[206,7056+9]..[206,7056+10])
                                  expression (ctypN.ml[206,7056+14]..[206,7056+70])
                                    Pexp_apply
                                    expression (ctypN.ml[206,7056+14]..[206,7056+23])
                                      Pexp_ident "failwithf" (ctypN.ml[206,7056+14]..[206,7056+23])
                                    [
                                      <label> ""
                                        expression (ctypN.ml[206,7056+24]..[206,7056+47])
                                          Pexp_constant Const_string("reduce_data_ctors: %s",None)
                                      <label> ""
                                        expression (ctypN.ml[206,7056+48]..[206,7056+70])
                                          Pexp_apply
                                          expression (ctypN.ml[206,7056+49]..[206,7056+67])
                                            Pexp_ident "ObjsN.dump_or_ctyp" (ctypN.ml[206,7056+49]..[206,7056+67])
                                          [
                                            <label> ""
                                              expression (ctypN.ml[206,7056+68]..[206,7056+69])
                                                Pexp_ident "t" (ctypN.ml[206,7056+68]..[206,7056+69])
                                          ]
                                    ]
                              ]
                      <label> ""
                        expression (ctypN.ml[206,7056+72]..[206,7056+76])
                          Pexp_ident "init" (ctypN.ml[206,7056+72]..[206,7056+76])
                      <label> ""
                        expression (ctypN.ml[207,7133+4]..[207,7133+12])
                          Pexp_ident "branches" (ctypN.ml[207,7133+4]..[207,7133+12])
                    ]
    ]
  structure_item (ctypN.ml[208,7146+0]..[214,7358+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[208,7146+4]..[208,7146+12])
          Ppat_var "view_sum" (ctypN.ml[208,7146+4]..[208,7146+12])
        expression (ctypN.ml[208,7146+13]..[214,7358+28]) ghost
          Pexp_fun ""
          None
          pattern (ctypN.ml[208,7146+13]..[208,7146+26])
            Ppat_constraint
            pattern (ctypN.ml[208,7146+14]..[208,7146+15])
              Ppat_var "t" (ctypN.ml[208,7146+14]..[208,7146+15])
            core_type (ctypN.ml[208,7146+18]..[208,7146+25])
              Ptyp_constr "or_ctyp" (ctypN.ml[208,7146+18]..[208,7146+25])
              []
          expression (ctypN.ml[209,7175+2]..[214,7358+28])
            Pexp_let Nonrec
            [
              <def>
                pattern (ctypN.ml[209,7175+6]..[209,7175+8])
                  Ppat_var "bs" (ctypN.ml[209,7175+6]..[209,7175+8])
                expression (ctypN.ml[209,7175+11]..[209,7175+39])
                  Pexp_apply
                  expression (ctypN.ml[209,7175+11]..[209,7175+34])
                    Pexp_ident "Ast_basic.N.list_of_bar" (ctypN.ml[209,7175+11]..[209,7175+34])
                  [
                    <label> ""
                      expression (ctypN.ml[209,7175+35]..[209,7175+36])
                        Pexp_ident "t" (ctypN.ml[209,7175+35]..[209,7175+36])
                    <label> ""
                      expression (ctypN.ml[209,7175+37]..[209,7175+39])
                        Pexp_construct "[]" (ctypN.ml[209,7175+37]..[209,7175+39])
                        None
                  ]
            ]
            expression (ctypN.ml[210,7218+2]..[214,7358+28])
              Pexp_apply
              expression (ctypN.ml[210,7218+2]..[210,7218+10])
                Pexp_ident "List.map" (ctypN.ml[210,7218+2]..[210,7218+10])
              [
                <label> ""
                  expression (ctypN.ml[211,7229+4]..[214,7358+25])
                    Pexp_function
                    [
                      <case>
                        pattern (ctypN.ml[212,7243+7]..[212,7243+16])
                          Ppat_variant "Uid"
                          Some
                            pattern (ctypN.ml[212,7243+12]..[212,7243+16])
                              Ppat_var "cons" (ctypN.ml[212,7243+12]..[212,7243+16])
                        expression (ctypN.ml[212,7243+20]..[212,7243+38])
                          Pexp_variant "branch"
                          Some
                            expression (ctypN.ml[212,7243+28]..[212,7243+38])
                              Pexp_tuple
                              [
                                expression (ctypN.ml[212,7243+29]..[212,7243+33])
                                  Pexp_ident "cons" (ctypN.ml[212,7243+29]..[212,7243+33])
                                expression (ctypN.ml[212,7243+35]..[212,7243+37])
                                  Pexp_construct "[]" (ctypN.ml[212,7243+35]..[212,7243+37])
                                  None
                              ]
                      <case>
                        pattern (ctypN.ml[213,7282+7]..[213,7282+24])
                          Ppat_variant "Of"
                          Some
                            pattern (ctypN.ml[213,7282+11]..[213,7282+24])
                              Ppat_tuple
                              [
                                pattern (ctypN.ml[213,7282+12]..[213,7282+21])
                                  Ppat_variant "Uid"
                                  Some
                                    pattern (ctypN.ml[213,7282+17]..[213,7282+21])
                                      Ppat_var "cons" (ctypN.ml[213,7282+17]..[213,7282+21])
                                pattern (ctypN.ml[213,7282+22]..[213,7282+23])
                                  Ppat_var "t" (ctypN.ml[213,7282+22]..[213,7282+23])
                              ]
                        expression (ctypN.ml[213,7282+28]..[213,7282+75])
                          Pexp_variant "branch"
                          Some
                            expression (ctypN.ml[213,7282+36]..[213,7282+75])
                              Pexp_tuple
                              [
                                expression (ctypN.ml[213,7282+37]..[213,7282+41])
                                  Pexp_ident "cons" (ctypN.ml[213,7282+37]..[213,7282+41])
                                expression (ctypN.ml[213,7282+43]..[213,7282+74])
                                  Pexp_apply
                                  expression (ctypN.ml[213,7282+44]..[213,7282+68])
                                    Pexp_ident "Ast_basic.N.list_of_star" (ctypN.ml[213,7282+44]..[213,7282+68])
                                  [
                                    <label> ""
                                      expression (ctypN.ml[213,7282+69]..[213,7282+70])
                                        Pexp_ident "t" (ctypN.ml[213,7282+69]..[213,7282+70])
                                    <label> ""
                                      expression (ctypN.ml[213,7282+71]..[213,7282+73])
                                        Pexp_construct "[]" (ctypN.ml[213,7282+71]..[213,7282+73])
                                        None
                                  ]
                              ]
                      <case>
                        pattern (ctypN.ml[214,7358+7]..[214,7358+8])
                          Ppat_any
                        expression (ctypN.ml[214,7358+12]..[214,7358+24])
                          Pexp_assert
                          expression (ctypN.ml[214,7358+19]..[214,7358+24])
                            Pexp_construct "false" (ctypN.ml[214,7358+19]..[214,7358+24])
                            None
                    ]
                <label> ""
                  expression (ctypN.ml[214,7358+26]..[214,7358+28])
                    Pexp_ident "bs" (ctypN.ml[214,7358+26]..[214,7358+28])
              ]
    ]
  structure_item (ctypN.ml[215,7387+0]..[225,7805+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[215,7387+4]..[215,7387+16])
          Ppat_var "view_variant" (ctypN.ml[215,7387+4]..[215,7387+16])
        expression (ctypN.ml[215,7387+17]..[225,7805+16]) ghost
          Pexp_fun ""
          None
          pattern (ctypN.ml[215,7387+17]..[215,7387+32])
            Ppat_constraint
            pattern (ctypN.ml[215,7387+18]..[215,7387+19])
              Ppat_var "t" (ctypN.ml[215,7387+18]..[215,7387+19])
            core_type (ctypN.ml[215,7387+22]..[215,7387+31])
              Ptyp_constr "row_field" (ctypN.ml[215,7387+22]..[215,7387+31])
              []
          expression (ctypN.ml[216,7422+2]..[225,7805+16]) ghost
            Pexp_constraint
            expression (ctypN.ml[216,7422+3]..[224,7731+70])
              Pexp_let Nonrec
              [
                <def>
                  pattern (ctypN.ml[216,7422+7]..[216,7422+10])
                    Ppat_var "lst" (ctypN.ml[216,7422+7]..[216,7422+10])
                  expression (ctypN.ml[216,7422+13]..[216,7422+41])
                    Pexp_apply
                    expression (ctypN.ml[216,7422+13]..[216,7422+36])
                      Pexp_ident "Ast_basic.N.list_of_bar" (ctypN.ml[216,7422+13]..[216,7422+36])
                    [
                      <label> ""
                        expression (ctypN.ml[216,7422+37]..[216,7422+38])
                          Pexp_ident "t" (ctypN.ml[216,7422+37]..[216,7422+38])
                      <label> ""
                        expression (ctypN.ml[216,7422+39]..[216,7422+41])
                          Pexp_construct "[]" (ctypN.ml[216,7422+39]..[216,7422+41])
                          None
                    ]
              ]
              expression (ctypN.ml[217,7467+3]..[224,7731+70])
                Pexp_apply
                expression (ctypN.ml[217,7467+3]..[217,7467+11])
                  Pexp_ident "List.map" (ctypN.ml[217,7467+3]..[217,7467+11])
                [
                  <label> ""
                    expression (ctypN.ml[218,7479+5]..[224,7731+66])
                      Pexp_function
                      [
                        <case>
                          pattern (ctypN.ml[219,7494+8]..[219,7494+33])
                            Ppat_variant "TyVrnOf"
                            Some
                              pattern (ctypN.ml[219,7494+17]..[219,7494+33])
                                Ppat_tuple
                                [
                                  pattern (ctypN.ml[219,7494+18]..[219,7494+25])
                                    Ppat_variant "C"
                                    Some
                                      pattern (ctypN.ml[219,7494+21]..[219,7494+25])
                                        Ppat_var "cons" (ctypN.ml[219,7494+21]..[219,7494+25])
                                  pattern (ctypN.ml[219,7494+26]..[219,7494+32])
                                    Ppat_variant "Par"
                                    Some
                                      pattern (ctypN.ml[219,7494+31]..[219,7494+32])
                                        Ppat_var "t" (ctypN.ml[219,7494+31]..[219,7494+32])
                                ]
                          expression (ctypN.ml[220,7531+10]..[220,7531+58])
                            Pexp_variant "variant"
                            Some
                              expression (ctypN.ml[220,7531+19]..[220,7531+58])
                                Pexp_tuple
                                [
                                  expression (ctypN.ml[220,7531+20]..[220,7531+24])
                                    Pexp_ident "cons" (ctypN.ml[220,7531+20]..[220,7531+24])
                                  expression (ctypN.ml[220,7531+26]..[220,7531+57])
                                    Pexp_apply
                                    expression (ctypN.ml[220,7531+27]..[220,7531+51])
                                      Pexp_ident "Ast_basic.N.list_of_star" (ctypN.ml[220,7531+27]..[220,7531+51])
                                    [
                                      <label> ""
                                        expression (ctypN.ml[220,7531+52]..[220,7531+53])
                                          Pexp_ident "t" (ctypN.ml[220,7531+52]..[220,7531+53])
                                      <label> ""
                                        expression (ctypN.ml[220,7531+54]..[220,7531+56])
                                          Pexp_construct "[]" (ctypN.ml[220,7531+54]..[220,7531+56])
                                          None
                                    ]
                                ]
                        <case>
                          pattern (ctypN.ml[221,7590+8]..[221,7590+28])
                            Ppat_variant "TyVrnOf"
                            Some
                              pattern (ctypN.ml[221,7590+17]..[221,7590+28])
                                Ppat_tuple
                                [
                                  pattern (ctypN.ml[221,7590+18]..[221,7590+25])
                                    Ppat_variant "C"
                                    Some
                                      pattern (ctypN.ml[221,7590+21]..[221,7590+25])
                                        Ppat_var "cons" (ctypN.ml[221,7590+21]..[221,7590+25])
                                  pattern (ctypN.ml[221,7590+26]..[221,7590+27])
                                    Ppat_var "t" (ctypN.ml[221,7590+26]..[221,7590+27])
                                ]
                          expression (ctypN.ml[221,7590+32]..[221,7590+52])
                            Pexp_variant "variant"
                            Some
                              expression (ctypN.ml[221,7590+41]..[221,7590+52])
                                Pexp_tuple
                                [
                                  expression (ctypN.ml[221,7590+42]..[221,7590+46])
                                    Pexp_ident "cons" (ctypN.ml[221,7590+42]..[221,7590+46])
                                  expression (ctypN.ml[221,7590+48]..[221,7590+51])
                                    Pexp_construct "::" (ctypN.ml[221,7590+49]..[221,7590+51]) ghost
                                    Some
                                      expression (ctypN.ml[221,7590+49]..[221,7590+51]) ghost
                                        Pexp_tuple
                                        [
                                          expression (ctypN.ml[221,7590+49]..[221,7590+50])
                                            Pexp_ident "t" (ctypN.ml[221,7590+49]..[221,7590+50])
                                          expression (ctypN.ml[221,7590+50]..[221,7590+51]) ghost
                                            Pexp_construct "[]" (ctypN.ml[221,7590+50]..[221,7590+51]) ghost
                                            None
                                        ]
                                ]
                        <case>
                          pattern (ctypN.ml[222,7643+8]..[222,7643+22])
                            Ppat_variant "TyVrn"
                            Some
                              pattern (ctypN.ml[222,7643+15]..[222,7643+22])
                                Ppat_variant "C"
                                Some
                                  pattern (ctypN.ml[222,7643+18]..[222,7643+22])
                                    Ppat_var "cons" (ctypN.ml[222,7643+18]..[222,7643+22])
                          expression (ctypN.ml[222,7643+26]..[222,7643+45])
                            Pexp_variant "variant"
                            Some
                              expression (ctypN.ml[222,7643+35]..[222,7643+45])
                                Pexp_tuple
                                [
                                  expression (ctypN.ml[222,7643+36]..[222,7643+40])
                                    Pexp_ident "cons" (ctypN.ml[222,7643+36]..[222,7643+40])
                                  expression (ctypN.ml[222,7643+42]..[222,7643+44])
                                    Pexp_construct "[]" (ctypN.ml[222,7643+42]..[222,7643+44])
                                    None
                                ]
                        <case>
                          pattern (ctypN.ml[223,7689+8]..[223,7689+28])
                            Ppat_variant "Ctyp"
                            Some
                              pattern (ctypN.ml[223,7689+14]..[223,7689+28])
                                Ppat_alias "i" (ctypN.ml[223,7689+26]..[223,7689+27])
                                pattern (ctypN.ml[223,7689+15]..[223,7689+22])
                                  Ppat_type
                                  "ident'" (ctypN.ml[223,7689+16]..[223,7689+22])
                          expression (ctypN.ml[223,7689+32]..[223,7689+41])
                            Pexp_variant "abbrev"
                            Some
                              expression (ctypN.ml[223,7689+40]..[223,7689+41])
                                Pexp_ident "i" (ctypN.ml[223,7689+40]..[223,7689+41])
                        <case>
                          pattern (ctypN.ml[224,7731+8]..[224,7731+9])
                            Ppat_var "u" (ctypN.ml[224,7731+8]..[224,7731+9])
                          expression (ctypN.ml[224,7731+13]..[224,7731+65])
                            Pexp_apply
                            expression (ctypN.ml[224,7731+13]..[224,7731+22])
                              Pexp_ident "failwithf" (ctypN.ml[224,7731+13]..[224,7731+22])
                            [
                              <label> ""
                                expression (ctypN.ml[224,7731+23]..[224,7731+40])
                                  Pexp_constant Const_string("view_variant %s",None)
                              <label> ""
                                expression (ctypN.ml[224,7731+41]..[224,7731+65])
                                  Pexp_apply
                                  expression (ctypN.ml[224,7731+42]..[224,7731+62])
                                    Pexp_ident "ObjsN.dump_row_field" (ctypN.ml[224,7731+42]..[224,7731+62])
                                  [
                                    <label> ""
                                      expression (ctypN.ml[224,7731+63]..[224,7731+64])
                                        Pexp_ident "u" (ctypN.ml[224,7731+63]..[224,7731+64])
                                  ]
                            ]
                      ]
                  <label> ""
                    expression (ctypN.ml[224,7731+67]..[224,7731+70])
                      Pexp_ident "lst" (ctypN.ml[224,7731+67]..[224,7731+70])
                ]
            core_type (ctypN.ml[225,7805+2]..[225,7805+14])
              Ptyp_constr "list" (ctypN.ml[225,7805+10]..[225,7805+14])
              [
                core_type (ctypN.ml[225,7805+2]..[225,7805+9])
                  Ptyp_constr "vbranch" (ctypN.ml[225,7805+2]..[225,7805+9])
                  []
              ]
    ]
  structure_item (ctypN.ml[226,7822+0]..[226,7822+67])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[226,7822+4]..[226,7822+20])
          Ppat_var "conversion_table" (ctypN.ml[226,7822+4]..[226,7822+20])
        expression (ctypN.ml[226,7822+20]..[226,7822+67]) ghost
          Pexp_constraint
          expression (ctypN.ml[226,7822+50]..[226,7822+67])
            Pexp_apply
            expression (ctypN.ml[226,7822+50]..[226,7822+64])
              Pexp_ident "Hashtbl.create" (ctypN.ml[226,7822+50]..[226,7822+64])
            [
              <label> ""
                expression (ctypN.ml[226,7822+65]..[226,7822+67])
                  Pexp_constant Const_int 50
            ]
          core_type (ctypN.ml[226,7822+22]..[226,7822+47])
            Ptyp_constr "Hashtbl.t" (ctypN.ml[226,7822+38]..[226,7822+47])
            [
              core_type (ctypN.ml[226,7822+23]..[226,7822+29])
                Ptyp_constr "string" (ctypN.ml[226,7822+23]..[226,7822+29])
                []
              core_type (ctypN.ml[226,7822+30]..[226,7822+36])
                Ptyp_constr "string" (ctypN.ml[226,7822+30]..[226,7822+36])
                []
            ]
    ]
  structure_item (ctypN.ml[227,7890+0]..[249,8827+67])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[227,7890+4]..[227,7890+13])
          Ppat_var "transform" (ctypN.ml[227,7890+4]..[227,7890+13])
        expression (ctypN.ml[227,7890+13]..[249,8827+67]) ghost
          Pexp_constraint
          expression (ctypN.ml[228,7939+2]..[249,8827+67])
            Pexp_open Fresh ""IdN" (ctypN.ml[228,7939+11]..[228,7939+14])"
            expression (ctypN.ml[229,7957+4]..[249,8827+67])
              Pexp_function
              [
                <case>
                  pattern (ctypN.ml[230,7970+6]..[230,7970+14])
                    Ppat_variant "Pre"
                    Some
                      pattern (ctypN.ml[230,7970+11]..[230,7970+14])
                        Ppat_var "pre" (ctypN.ml[230,7970+11]..[230,7970+14])
                  expression (ctypN.ml[230,7970+18]..[230,7970+70])
                    Pexp_fun ""
                    None
                    pattern (ctypN.ml[230,7970+23]..[230,7970+24])
                      Ppat_var "x" (ctypN.ml[230,7970+23]..[230,7970+24])
                    expression (ctypN.ml[230,7970+29]..[230,7970+69]) ghost
                      Pexp_constraint
                      expression (ctypN.ml[230,7970+30]..[230,7970+61])
                        Pexp_apply
                        expression (ctypN.ml[230,7970+30]..[230,7970+39])
                          Pexp_ident "ident_map" (ctypN.ml[230,7970+30]..[230,7970+39])
                        [
                          <label> ""
                            expression (ctypN.ml[230,7970+40]..[230,7970+59])
                              Pexp_fun ""
                              None
                              pattern (ctypN.ml[230,7970+45]..[230,7970+46])
                                Ppat_var "x" (ctypN.ml[230,7970+45]..[230,7970+46])
                              expression (ctypN.ml[230,7970+51]..[230,7970+58])
                                Pexp_apply
                                expression (ctypN.ml[230,7970+55]..[230,7970+56])
                                  Pexp_ident "^" (ctypN.ml[230,7970+55]..[230,7970+56])
                                [
                                  <label> ""
                                    expression (ctypN.ml[230,7970+51]..[230,7970+54])
                                      Pexp_ident "pre" (ctypN.ml[230,7970+51]..[230,7970+54])
                                  <label> ""
                                    expression (ctypN.ml[230,7970+57]..[230,7970+58])
                                      Pexp_ident "x" (ctypN.ml[230,7970+57]..[230,7970+58])
                                ]
                          <label> ""
                            expression (ctypN.ml[230,7970+60]..[230,7970+61])
                              Pexp_ident "x" (ctypN.ml[230,7970+60]..[230,7970+61])
                        ]
                      core_type (ctypN.ml[230,7970+64]..[230,7970+67])
                        Ptyp_constr "exp" (ctypN.ml[230,7970+64]..[230,7970+67])
                        []
                <case>
                  pattern (ctypN.ml[231,8041+6]..[231,8041+16])
                    Ppat_variant "Post"
                    Some
                      pattern (ctypN.ml[231,8041+12]..[231,8041+16])
                        Ppat_var "post" (ctypN.ml[231,8041+12]..[231,8041+16])
                  expression (ctypN.ml[231,8041+20]..[231,8041+73])
                    Pexp_fun ""
                    None
                    pattern (ctypN.ml[231,8041+25]..[231,8041+26])
                      Ppat_var "x" (ctypN.ml[231,8041+25]..[231,8041+26])
                    expression (ctypN.ml[231,8041+31]..[231,8041+72]) ghost
                      Pexp_constraint
                      expression (ctypN.ml[231,8041+32]..[231,8041+64])
                        Pexp_apply
                        expression (ctypN.ml[231,8041+32]..[231,8041+41])
                          Pexp_ident "ident_map" (ctypN.ml[231,8041+32]..[231,8041+41])
                        [
                          <label> ""
                            expression (ctypN.ml[231,8041+42]..[231,8041+62])
                              Pexp_fun ""
                              None
                              pattern (ctypN.ml[231,8041+47]..[231,8041+48])
                                Ppat_var "x" (ctypN.ml[231,8041+47]..[231,8041+48])
                              expression (ctypN.ml[231,8041+53]..[231,8041+61])
                                Pexp_apply
                                expression (ctypN.ml[231,8041+55]..[231,8041+56])
                                  Pexp_ident "^" (ctypN.ml[231,8041+55]..[231,8041+56])
                                [
                                  <label> ""
                                    expression (ctypN.ml[231,8041+53]..[231,8041+54])
                                      Pexp_ident "x" (ctypN.ml[231,8041+53]..[231,8041+54])
                                  <label> ""
                                    expression (ctypN.ml[231,8041+57]..[231,8041+61])
                                      Pexp_ident "post" (ctypN.ml[231,8041+57]..[231,8041+61])
                                ]
                          <label> ""
                            expression (ctypN.ml[231,8041+63]..[231,8041+64])
                              Pexp_ident "x" (ctypN.ml[231,8041+63]..[231,8041+64])
                        ]
                      core_type (ctypN.ml[231,8041+67]..[231,8041+70])
                        Ptyp_constr "exp" (ctypN.ml[231,8041+67]..[231,8041+70])
                        []
                <case>
                  pattern (ctypN.ml[232,8115+6]..[232,8115+12])
                    Ppat_variant "Fun"
                    Some
                      pattern (ctypN.ml[232,8115+11]..[232,8115+12])
                        Ppat_var "f" (ctypN.ml[232,8115+11]..[232,8115+12])
                  expression (ctypN.ml[232,8115+16]..[232,8115+41])
                    Pexp_fun ""
                    None
                    pattern (ctypN.ml[232,8115+21]..[232,8115+22])
                      Ppat_var "x" (ctypN.ml[232,8115+21]..[232,8115+22])
                    expression (ctypN.ml[232,8115+27]..[232,8115+40])
                      Pexp_apply
                      expression (ctypN.ml[232,8115+27]..[232,8115+36])
                        Pexp_ident "ident_map" (ctypN.ml[232,8115+27]..[232,8115+36])
                      [
                        <label> ""
                          expression (ctypN.ml[232,8115+37]..[232,8115+38])
                            Pexp_ident "f" (ctypN.ml[232,8115+37]..[232,8115+38])
                        <label> ""
                          expression (ctypN.ml[232,8115+39]..[232,8115+40])
                            Pexp_ident "x" (ctypN.ml[232,8115+39]..[232,8115+40])
                      ]
                <case>
                  pattern (ctypN.ml[233,8157+6]..[233,8157+13])
                    Ppat_variant "Last"
                    Some
                      pattern (ctypN.ml[233,8157+12]..[233,8157+13])
                        Ppat_var "f" (ctypN.ml[233,8157+12]..[233,8157+13])
                  expression (ctypN.ml[233,8157+17]..[233,8157+66])
                    Pexp_fun ""
                    None
                    pattern (ctypN.ml[233,8157+22]..[233,8157+23])
                      Ppat_var "x" (ctypN.ml[233,8157+22]..[233,8157+23])
                    expression (ctypN.ml[233,8157+28]..[233,8157+65]) ghost
                      Pexp_coerce
                      expression (ctypN.ml[233,8157+29]..[233,8157+51])
                        Pexp_apply
                        expression (ctypN.ml[233,8157+29]..[233,8157+47])
                          Pexp_ident "ident_map_of_ident" (ctypN.ml[233,8157+29]..[233,8157+47])
                        [
                          <label> ""
                            expression (ctypN.ml[233,8157+48]..[233,8157+49])
                              Pexp_ident "f" (ctypN.ml[233,8157+48]..[233,8157+49])
                          <label> ""
                            expression (ctypN.ml[233,8157+50]..[233,8157+51])
                              Pexp_ident "x" (ctypN.ml[233,8157+50]..[233,8157+51])
                        ]
                      Some
                        core_type (ctypN.ml[233,8157+54]..[233,8157+57])
                          Ptyp_constr "vid" (ctypN.ml[233,8157+54]..[233,8157+57])
                          []
                      core_type (ctypN.ml[233,8157+61]..[233,8157+64])
                        Ptyp_constr "exp" (ctypN.ml[233,8157+61]..[233,8157+64])
                        []
                <case>
                  pattern (ctypN.ml[234,8224+6]..[234,8224+11])
                    Ppat_variant "Id"
                    Some
                      pattern (ctypN.ml[234,8224+10]..[234,8224+11])
                        Ppat_var "f" (ctypN.ml[234,8224+10]..[234,8224+11])
                  expression (ctypN.ml[234,8224+15]..[234,8224+45])
                    Pexp_fun ""
                    None
                    pattern (ctypN.ml[234,8224+20]..[234,8224+21])
                      Ppat_var "x" (ctypN.ml[234,8224+20]..[234,8224+21])
                    expression (ctypN.ml[234,8224+26]..[234,8224+44]) ghost
                      Pexp_coerce
                      expression (ctypN.ml[234,8224+27]..[234,8224+30])
                        Pexp_apply
                        expression (ctypN.ml[234,8224+27]..[234,8224+28])
                          Pexp_ident "f" (ctypN.ml[234,8224+27]..[234,8224+28])
                        [
                          <label> ""
                            expression (ctypN.ml[234,8224+29]..[234,8224+30])
                              Pexp_ident "x" (ctypN.ml[234,8224+29]..[234,8224+30])
                        ]
                      Some
                        core_type (ctypN.ml[234,8224+33]..[234,8224+36])
                          Ptyp_constr "vid" (ctypN.ml[234,8224+33]..[234,8224+36])
                          []
                      core_type (ctypN.ml[234,8224+40]..[234,8224+43])
                        Ptyp_constr "exp" (ctypN.ml[234,8224+40]..[234,8224+43])
                        []
                <case>
                  pattern (ctypN.ml[235,8270+6]..[235,8270+15])
                    Ppat_variant "Idents"
                    Some
                      pattern (ctypN.ml[235,8270+14]..[235,8270+15])
                        Ppat_var "f" (ctypN.ml[235,8270+14]..[235,8270+15])
                  expression (ctypN.ml[236,8289+8]..[236,8289+67])
                    Pexp_fun ""
                    None
                    pattern (ctypN.ml[236,8289+13]..[236,8289+14])
                      Ppat_var "x" (ctypN.ml[236,8289+13]..[236,8289+14])
                    expression (ctypN.ml[236,8289+19]..[236,8289+66]) ghost
                      Pexp_coerce
                      expression (ctypN.ml[236,8289+20]..[236,8289+52])
                        Pexp_apply
                        expression (ctypN.ml[236,8289+20]..[236,8289+21])
                          Pexp_ident "f" (ctypN.ml[236,8289+20]..[236,8289+21])
                        [
                          <label> ""
                            expression (ctypN.ml[236,8289+22]..[236,8289+52])
                              Pexp_apply
                              expression (ctypN.ml[236,8289+23]..[236,8289+46])
                                Pexp_ident "Ast_basic.N.list_of_dot" (ctypN.ml[236,8289+23]..[236,8289+46])
                              [
                                <label> ""
                                  expression (ctypN.ml[236,8289+47]..[236,8289+48])
                                    Pexp_ident "x" (ctypN.ml[236,8289+47]..[236,8289+48])
                                <label> ""
                                  expression (ctypN.ml[236,8289+49]..[236,8289+51])
                                    Pexp_construct "[]" (ctypN.ml[236,8289+49]..[236,8289+51])
                                    None
                              ]
                        ]
                      Some
                        core_type (ctypN.ml[236,8289+55]..[236,8289+58])
                          Ptyp_constr "vid" (ctypN.ml[236,8289+55]..[236,8289+58])
                          []
                      core_type (ctypN.ml[236,8289+62]..[236,8289+65])
                        Ptyp_constr "exp" (ctypN.ml[236,8289+62]..[236,8289+65])
                        []
                <case>
                  pattern (ctypN.ml[237,8357+6]..[237,8357+12])
                    Ppat_variant "Obj"
                    Some
                      pattern (ctypN.ml[237,8357+11]..[237,8357+12])
                        Ppat_var "f" (ctypN.ml[237,8357+11]..[237,8357+12])
                  expression (ctypN.ml[238,8373+8]..[249,8827+67])
                    Pexp_function
                    [
                      <case>
                        pattern (ctypN.ml[239,8391+11]..[239,8391+17])
                          Ppat_variant "Lid"
                          Some
                            pattern (ctypN.ml[239,8391+16]..[239,8391+17])
                              Ppat_var "x" (ctypN.ml[239,8391+16]..[239,8391+17])
                        expression (ctypN.ml[239,8391+21]..[239,8391+71]) ghost
                          Pexp_constraint
                          expression (ctypN.ml[239,8391+22]..[239,8391+57])
                            Pexp_variant "Send"
                            Some
                              expression (ctypN.ml[239,8391+28]..[239,8391+57])
                                Pexp_tuple
                                [
                                  expression (ctypN.ml[239,8391+29]..[239,8391+42])
                                    Pexp_variant "Lid"
                                    Some
                                      expression (ctypN.ml[239,8391+35]..[239,8391+41])
                                        Pexp_constant Const_string("self",None)
                                  expression (ctypN.ml[239,8391+44]..[239,8391+56])
                                    Pexp_variant "Lid"
                                    Some
                                      expression (ctypN.ml[239,8391+50]..[239,8391+55])
                                        Pexp_apply
                                        expression (ctypN.ml[239,8391+51]..[239,8391+52])
                                          Pexp_ident "f" (ctypN.ml[239,8391+51]..[239,8391+52])
                                        [
                                          <label> ""
                                            expression (ctypN.ml[239,8391+53]..[239,8391+54])
                                              Pexp_ident "x" (ctypN.ml[239,8391+53]..[239,8391+54])
                                        ]
                                ]
                          core_type (ctypN.ml[239,8391+60]..[239,8391+69])
                            Ptyp_constr "Astfn.exp" (ctypN.ml[239,8391+60]..[239,8391+69])
                            []
                      <case>
                        pattern (ctypN.ml[240,8463+11]..[240,8463+12])
                          Ppat_var "t" (ctypN.ml[240,8463+11]..[240,8463+12])
                        expression (ctypN.ml[241,8479+13]..[249,8827+66])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (ctypN.ml[241,8479+17]..[241,8479+21])
                                Ppat_var "dest" (ctypN.ml[241,8479+17]..[241,8479+21])
                              expression (ctypN.ml[241,8479+24]..[241,8479+39])
                                Pexp_apply
                                expression (ctypN.ml[241,8479+24]..[241,8479+37])
                                  Pexp_ident "map_to_string" (ctypN.ml[241,8479+24]..[241,8479+37])
                                [
                                  <label> ""
                                    expression (ctypN.ml[241,8479+38]..[241,8479+39])
                                      Pexp_ident "t" (ctypN.ml[241,8479+38]..[241,8479+39])
                                ]
                          ]
                          expression (ctypN.ml[242,8522+13]..[249,8827+66])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (ctypN.ml[242,8522+17]..[242,8522+20])
                                  Ppat_var "src" (ctypN.ml[242,8522+17]..[242,8522+20])
                                expression (ctypN.ml[242,8522+23]..[242,8522+39])
                                  Pexp_apply
                                  expression (ctypN.ml[242,8522+23]..[242,8522+37])
                                    Pexp_ident "ObjsN.dump_vid" (ctypN.ml[242,8522+23]..[242,8522+37])
                                  [
                                    <label> ""
                                      expression (ctypN.ml[242,8522+38]..[242,8522+39])
                                        Pexp_ident "t" (ctypN.ml[242,8522+38]..[242,8522+39])
                                  ]
                            ]
                            expression (ctypN.ml[243,8565+13]..[249,8827+66])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (ctypN.ml[243,8565+17]..[243,8565+19])
                                    Ppat_construct "()" (ctypN.ml[243,8565+17]..[243,8565+19])
                                    None
                                  expression (ctypN.ml[244,8587+15]..[248,8798+25])
                                    Pexp_ifthenelse
                                    expression (ctypN.ml[244,8587+18]..[244,8587+59])
                                      Pexp_apply
                                      expression (ctypN.ml[244,8587+22]..[244,8587+24])
                                        Pexp_ident "@@" (ctypN.ml[244,8587+22]..[244,8587+24])
                                      [
                                        <label> ""
                                          expression (ctypN.ml[244,8587+18]..[244,8587+21])
                                            Pexp_ident "not" (ctypN.ml[244,8587+18]..[244,8587+21])
                                        <label> ""
                                          expression (ctypN.ml[244,8587+25]..[244,8587+59])
                                            Pexp_apply
                                            expression (ctypN.ml[244,8587+26]..[244,8587+37])
                                              Pexp_ident "Hashtbl.mem" (ctypN.ml[244,8587+26]..[244,8587+37])
                                            [
                                              <label> ""
                                                expression (ctypN.ml[244,8587+38]..[244,8587+54])
                                                  Pexp_ident "conversion_table" (ctypN.ml[244,8587+38]..[244,8587+54])
                                              <label> ""
                                                expression (ctypN.ml[244,8587+55]..[244,8587+58])
                                                  Pexp_ident "src" (ctypN.ml[244,8587+55]..[244,8587+58])
                                            ]
                                      ]
                                    expression (ctypN.ml[246,8667+17]..[248,8798+25])
                                      Pexp_sequence
                                      expression (ctypN.ml[246,8667+18]..[246,8667+55])
                                        Pexp_apply
                                        expression (ctypN.ml[246,8667+18]..[246,8667+29])
                                          Pexp_ident "Hashtbl.add" (ctypN.ml[246,8667+18]..[246,8667+29])
                                        [
                                          <label> ""
                                            expression (ctypN.ml[246,8667+30]..[246,8667+46])
                                              Pexp_ident "conversion_table" (ctypN.ml[246,8667+30]..[246,8667+46])
                                          <label> ""
                                            expression (ctypN.ml[246,8667+47]..[246,8667+50])
                                              Pexp_ident "src" (ctypN.ml[246,8667+47]..[246,8667+50])
                                          <label> ""
                                            expression (ctypN.ml[246,8667+51]..[246,8667+55])
                                              Pexp_ident "dest" (ctypN.ml[246,8667+51]..[246,8667+55])
                                        ]
                                      expression (ctypN.ml[247,8724+18]..[248,8798+24])
                                        Pexp_apply
                                        expression (ctypN.ml[247,8724+18]..[247,8724+32])
                                          Pexp_ident "Format.eprintf" (ctypN.ml[247,8724+18]..[247,8724+32])
                                        [
                                          <label> ""
                                            expression (ctypN.ml[247,8724+33]..[247,8724+69])
                                              Pexp_constant Const_string("Warning:  %s ==>  %s ==> unknown\n",None)
                                          <label> ""
                                            expression (ctypN.ml[247,8724+70]..[247,8724+73])
                                              Pexp_ident "src" (ctypN.ml[247,8724+70]..[247,8724+73])
                                          <label> ""
                                            expression (ctypN.ml[248,8798+20]..[248,8798+24])
                                              Pexp_ident "dest" (ctypN.ml[248,8798+20]..[248,8798+24])
                                        ]
                                    None
                              ]
                              expression (ctypN.ml[249,8827+13]..[249,8827+66]) ghost
                                Pexp_constraint
                                expression (ctypN.ml[249,8827+14]..[249,8827+52])
                                  Pexp_variant "Send"
                                  Some
                                    expression (ctypN.ml[249,8827+20]..[249,8827+52])
                                      Pexp_tuple
                                      [
                                        expression (ctypN.ml[249,8827+21]..[249,8827+34])
                                          Pexp_variant "Lid"
                                          Some
                                            expression (ctypN.ml[249,8827+27]..[249,8827+33])
                                              Pexp_constant Const_string("self",None)
                                        expression (ctypN.ml[249,8827+36]..[249,8827+51])
                                          Pexp_variant "Lid"
                                          Some
                                            expression (ctypN.ml[249,8827+42]..[249,8827+50])
                                              Pexp_apply
                                              expression (ctypN.ml[249,8827+43]..[249,8827+44])
                                                Pexp_ident "f" (ctypN.ml[249,8827+43]..[249,8827+44])
                                              [
                                                <label> ""
                                                  expression (ctypN.ml[249,8827+45]..[249,8827+49])
                                                    Pexp_ident "dest" (ctypN.ml[249,8827+45]..[249,8827+49])
                                              ]
                                      ]
                                core_type (ctypN.ml[249,8827+55]..[249,8827+64])
                                  Ptyp_constr "Astfn.exp" (ctypN.ml[249,8827+55]..[249,8827+64])
                                  []
                    ]
              ]
          core_type (ctypN.ml[227,7890+15]..[227,7890+46])
            Ptyp_arrow
            ""
            core_type (ctypN.ml[227,7890+15]..[227,7890+32])
              Ptyp_constr "full_id_transform" (ctypN.ml[227,7890+15]..[227,7890+32])
              []
            core_type (ctypN.ml[227,7890+36]..[227,7890+46])
              Ptyp_arrow
              ""
              core_type (ctypN.ml[227,7890+36]..[227,7890+39])
                Ptyp_constr "vid" (ctypN.ml[227,7890+36]..[227,7890+39])
                []
              core_type (ctypN.ml[227,7890+43]..[227,7890+46])
                Ptyp_constr "exp" (ctypN.ml[227,7890+43]..[227,7890+46])
                []
    ]
  structure_item (ctypN.ml[250,8895+0]..[254,9003+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[250,8895+4]..[250,8895+19])
          Ppat_var "basic_transform" (ctypN.ml[250,8895+4]..[250,8895+19])
        expression (ctypN.ml[251,8917+2]..[254,9003+15])
          Pexp_function
          [
            <case>
              pattern (ctypN.ml[252,8928+4]..[252,8928+12])
                Ppat_variant "Pre"
                Some
                  pattern (ctypN.ml[252,8928+9]..[252,8928+12])
                    Ppat_var "pre" (ctypN.ml[252,8928+9]..[252,8928+12])
              expression (ctypN.ml[252,8928+16]..[252,8928+35])
                Pexp_fun ""
                None
                pattern (ctypN.ml[252,8928+21]..[252,8928+22])
                  Ppat_var "x" (ctypN.ml[252,8928+21]..[252,8928+22])
                expression (ctypN.ml[252,8928+27]..[252,8928+34])
                  Pexp_apply
                  expression (ctypN.ml[252,8928+31]..[252,8928+32])
                    Pexp_ident "^" (ctypN.ml[252,8928+31]..[252,8928+32])
                  [
                    <label> ""
                      expression (ctypN.ml[252,8928+27]..[252,8928+30])
                        Pexp_ident "pre" (ctypN.ml[252,8928+27]..[252,8928+30])
                    <label> ""
                      expression (ctypN.ml[252,8928+33]..[252,8928+34])
                        Pexp_ident "x" (ctypN.ml[252,8928+33]..[252,8928+34])
                  ]
            <case>
              pattern (ctypN.ml[253,8964+4]..[253,8964+14])
                Ppat_variant "Post"
                Some
                  pattern (ctypN.ml[253,8964+10]..[253,8964+14])
                    Ppat_var "post" (ctypN.ml[253,8964+10]..[253,8964+14])
              expression (ctypN.ml[253,8964+18]..[253,8964+38])
                Pexp_fun ""
                None
                pattern (ctypN.ml[253,8964+23]..[253,8964+24])
                  Ppat_var "x" (ctypN.ml[253,8964+23]..[253,8964+24])
                expression (ctypN.ml[253,8964+29]..[253,8964+37])
                  Pexp_apply
                  expression (ctypN.ml[253,8964+31]..[253,8964+32])
                    Pexp_ident "^" (ctypN.ml[253,8964+31]..[253,8964+32])
                  [
                    <label> ""
                      expression (ctypN.ml[253,8964+29]..[253,8964+30])
                        Pexp_ident "x" (ctypN.ml[253,8964+29]..[253,8964+30])
                    <label> ""
                      expression (ctypN.ml[253,8964+33]..[253,8964+37])
                        Pexp_ident "post" (ctypN.ml[253,8964+33]..[253,8964+37])
                  ]
            <case>
              pattern (ctypN.ml[254,9003+4]..[254,9003+10])
                Ppat_variant "Fun"
                Some
                  pattern (ctypN.ml[254,9003+9]..[254,9003+10])
                    Ppat_var "f" (ctypN.ml[254,9003+9]..[254,9003+10])
              expression (ctypN.ml[254,9003+14]..[254,9003+15])
                Pexp_ident "f" (ctypN.ml[254,9003+14]..[254,9003+15])
          ]
    ]
  structure_item (ctypN.ml[255,9019+0]..[259,9157+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[255,9019+4]..[255,9019+19])
          Ppat_var "right_transform" (ctypN.ml[255,9019+4]..[255,9019+19])
        expression (ctypN.ml[256,9041+2]..[259,9157+15])
          Pexp_function
          [
            <case>
              pattern (ctypN.ml[257,9052+4]..[257,9052+28])
                Ppat_alias "x" (ctypN.ml[257,9052+27]..[257,9052+28])
                pattern (ctypN.ml[257,9052+4]..[257,9052+23])
                  Ppat_type
                  "basic_id_transform" (ctypN.ml[257,9052+5]..[257,9052+23])
              expression (ctypN.ml[258,9084+6]..[258,9084+72])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (ctypN.ml[258,9084+10]..[258,9084+11])
                      Ppat_var "f" (ctypN.ml[258,9084+10]..[258,9084+11])
                    expression (ctypN.ml[258,9084+14]..[258,9084+31])
                      Pexp_apply
                      expression (ctypN.ml[258,9084+14]..[258,9084+29])
                        Pexp_ident "basic_transform" (ctypN.ml[258,9084+14]..[258,9084+29])
                      [
                        <label> ""
                          expression (ctypN.ml[258,9084+30]..[258,9084+31])
                            Pexp_ident "x" (ctypN.ml[258,9084+30]..[258,9084+31])
                      ]
                ]
                expression (ctypN.ml[258,9084+35]..[258,9084+72])
                  Pexp_fun ""
                  None
                  pattern (ctypN.ml[258,9084+40]..[258,9084+41])
                    Ppat_var "x" (ctypN.ml[258,9084+40]..[258,9084+41])
                  expression (ctypN.ml[258,9084+46]..[258,9084+71]) ghost
                    Pexp_constraint
                    expression (ctypN.ml[258,9084+47]..[258,9084+57])
                      Pexp_variant "Lid"
                      Some
                        expression (ctypN.ml[258,9084+52]..[258,9084+57])
                          Pexp_apply
                          expression (ctypN.ml[258,9084+53]..[258,9084+54])
                            Pexp_ident "f" (ctypN.ml[258,9084+53]..[258,9084+54])
                          [
                            <label> ""
                              expression (ctypN.ml[258,9084+55]..[258,9084+56])
                                Pexp_ident "x" (ctypN.ml[258,9084+55]..[258,9084+56])
                          ]
                    core_type (ctypN.ml[258,9084+60]..[258,9084+69])
                      Ptyp_constr "Astfn.exp" (ctypN.ml[258,9084+60]..[258,9084+69])
                      []
            <case>
              pattern (ctypN.ml[259,9157+4]..[259,9157+10])
                Ppat_variant "Exp"
                Some
                  pattern (ctypN.ml[259,9157+9]..[259,9157+10])
                    Ppat_var "f" (ctypN.ml[259,9157+9]..[259,9157+10])
              expression (ctypN.ml[259,9157+14]..[259,9157+15])
                Pexp_ident "f" (ctypN.ml[259,9157+14]..[259,9157+15])
          ]
    ]
  structure_item (ctypN.ml[260,9173+0]..[271,9640+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctypN.ml[260,9173+4]..[260,9173+20])
          Ppat_var "gen_tuple_abbrev" (ctypN.ml[260,9173+4]..[260,9173+20])
        expression (ctypN.ml[260,9173+21]..[271,9640+59]) ghost
          Pexp_fun "arity"
          None
          pattern (ctypN.ml[260,9173+22]..[260,9173+27])
            Ppat_var "arity" (ctypN.ml[260,9173+22]..[260,9173+27])
          expression (ctypN.ml[260,9173+29]..[271,9640+59]) ghost
            Pexp_fun "annot"
            None
            pattern (ctypN.ml[260,9173+30]..[260,9173+35])
              Ppat_var "annot" (ctypN.ml[260,9173+30]..[260,9173+35])
            expression (ctypN.ml[260,9173+37]..[271,9640+59]) ghost
              Pexp_fun "destination"
              None
              pattern (ctypN.ml[260,9173+38]..[260,9173+49])
                Ppat_var "destination" (ctypN.ml[260,9173+38]..[260,9173+49])
              expression (ctypN.ml[260,9173+51]..[271,9640+59]) ghost
                Pexp_fun ""
                None
                pattern (ctypN.ml[260,9173+51]..[260,9173+55])
                  Ppat_var "name" (ctypN.ml[260,9173+51]..[260,9173+55])
                expression (ctypN.ml[260,9173+56]..[271,9640+59]) ghost
                  Pexp_fun ""
                  None
                  pattern (ctypN.ml[260,9173+56]..[260,9173+57])
                    Ppat_var "e" (ctypN.ml[260,9173+56]..[260,9173+57])
                  expression (ctypN.ml[261,9233+2]..[271,9640+59])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (ctypN.ml[261,9233+6]..[261,9233+10])
                          Ppat_var "args" (ctypN.ml[261,9233+6]..[261,9233+10])
                        expression (ctypN.ml[261,9233+10]..[264,9299+72]) ghost
                          Pexp_constraint
                          expression (ctypN.ml[262,9256+4]..[264,9299+72])
                            Pexp_apply
                            expression (ctypN.ml[262,9256+23]..[262,9256+25])
                              Pexp_ident "@@" (ctypN.ml[262,9256+23]..[262,9256+25])
                            [
                              <label> ""
                                expression (ctypN.ml[262,9256+4]..[262,9256+22])
                                  Pexp_apply
                                  expression (ctypN.ml[262,9256+5]..[262,9256+15])
                                    Pexp_ident "Listf.init" (ctypN.ml[262,9256+5]..[262,9256+15])
                                  [
                                    <label> ""
                                      expression (ctypN.ml[262,9256+16]..[262,9256+21])
                                        Pexp_ident "arity" (ctypN.ml[262,9256+16]..[262,9256+21])
                                  ]
                              <label> ""
                                expression (ctypN.ml[263,9282+6]..[264,9299+72])
                                  Pexp_fun ""
                                  None
                                  pattern (ctypN.ml[263,9282+11]..[263,9282+12])
                                    Ppat_var "i" (ctypN.ml[263,9282+11]..[263,9282+12])
                                  expression (ctypN.ml[264,9299+9]..[264,9299+71]) ghost
                                    Pexp_constraint
                                    expression (ctypN.ml[264,9299+10]..[264,9299+57])
                                      Pexp_variant "Alias"
                                      Some
                                        expression (ctypN.ml[264,9299+17]..[264,9299+57])
                                          Pexp_tuple
                                          [
                                            expression (ctypN.ml[264,9299+18]..[264,9299+35])
                                              Pexp_variant "ClassPath"
                                              Some
                                                expression (ctypN.ml[264,9299+30]..[264,9299+34])
                                                  Pexp_ident "name" (ctypN.ml[264,9299+30]..[264,9299+34])
                                            expression (ctypN.ml[264,9299+37]..[264,9299+56])
                                              Pexp_variant "Lid"
                                              Some
                                                expression (ctypN.ml[264,9299+43]..[264,9299+55])
                                                  Pexp_apply
                                                  expression (ctypN.ml[264,9299+44]..[264,9299+45])
                                                    Pexp_ident "x" (ctypN.ml[264,9299+44]..[264,9299+45])
                                                  [
                                                    <label> "off"
                                                      expression (ctypN.ml[264,9299+51]..[264,9299+52])
                                                        Pexp_ident "i" (ctypN.ml[264,9299+51]..[264,9299+52])
                                                    <label> ""
                                                      expression (ctypN.ml[264,9299+53]..[264,9299+54])
                                                        Pexp_constant Const_int 0
                                                  ]
                                          ]
                                    core_type (ctypN.ml[264,9299+60]..[264,9299+69])
                                      Ptyp_constr "Astfn.pat" (ctypN.ml[264,9299+60]..[264,9299+69])
                                      []
                            ]
                          core_type (ctypN.ml[261,9233+12]..[261,9233+20])
                            Ptyp_constr "list" (ctypN.ml[261,9233+16]..[261,9233+20])
                            [
                              core_type (ctypN.ml[261,9233+12]..[261,9233+15])
                                Ptyp_constr "pat" (ctypN.ml[261,9233+12]..[261,9233+15])
                                []
                            ]
                    ]
                    expression (ctypN.ml[265,9375+2]..[271,9640+59])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (ctypN.ml[265,9375+6]..[265,9375+10])
                            Ppat_var "exps" (ctypN.ml[265,9375+6]..[265,9375+10])
                          expression (ctypN.ml[265,9375+13]..[265,9375+74])
                            Pexp_apply
                            expression (ctypN.ml[265,9375+32]..[265,9375+34])
                              Pexp_ident "@@" (ctypN.ml[265,9375+32]..[265,9375+34])
                            [
                              <label> ""
                                expression (ctypN.ml[265,9375+13]..[265,9375+31])
                                  Pexp_apply
                                  expression (ctypN.ml[265,9375+14]..[265,9375+24])
                                    Pexp_ident "Listf.init" (ctypN.ml[265,9375+14]..[265,9375+24])
                                  [
                                    <label> ""
                                      expression (ctypN.ml[265,9375+25]..[265,9375+30])
                                        Pexp_ident "arity" (ctypN.ml[265,9375+25]..[265,9375+30])
                                  ]
                              <label> ""
                                expression (ctypN.ml[265,9375+35]..[265,9375+74])
                                  Pexp_fun ""
                                  None
                                  pattern (ctypN.ml[265,9375+40]..[265,9375+41])
                                    Ppat_var "i" (ctypN.ml[265,9375+40]..[265,9375+41])
                                  expression (ctypN.ml[265,9375+46]..[265,9375+73]) ghost
                                    Pexp_constraint
                                    expression (ctypN.ml[265,9375+47]..[265,9375+59])
                                      Pexp_apply
                                      expression (ctypN.ml[265,9375+47]..[265,9375+50])
                                        Pexp_ident "xid" (ctypN.ml[265,9375+47]..[265,9375+50])
                                      [
                                        <label> "off"
                                          expression (ctypN.ml[265,9375+56]..[265,9375+57])
                                            Pexp_ident "i" (ctypN.ml[265,9375+56]..[265,9375+57])
                                        <label> ""
                                          expression (ctypN.ml[265,9375+58]..[265,9375+59])
                                            Pexp_constant Const_int 0
                                      ]
                                    core_type (ctypN.ml[265,9375+62]..[265,9375+71])
                                      Ptyp_constr "Astfn.exp" (ctypN.ml[265,9375+62]..[265,9375+71])
                                      []
                            ]
                      ]
                      expression (ctypN.ml[266,9453+2]..[271,9640+59])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (ctypN.ml[266,9453+6]..[266,9453+7])
                              Ppat_var "e" (ctypN.ml[266,9453+6]..[266,9453+7])
                            expression (ctypN.ml[266,9453+10]..[266,9453+34])
                              Pexp_apply
                              expression (ctypN.ml[266,9453+10]..[266,9453+22])
                                Pexp_ident "appl_of_list" (ctypN.ml[266,9453+10]..[266,9453+22])
                              [
                                <label> ""
                                  expression (ctypN.ml[266,9453+23]..[266,9453+34])
                                    Pexp_construct "::" (ctypN.ml[266,9453+26]..[266,9453+28])
                                    Some
                                      expression (ctypN.ml[266,9453+24]..[266,9453+33]) ghost
                                        Pexp_tuple
                                        [
                                          expression (ctypN.ml[266,9453+24]..[266,9453+25])
                                            Pexp_ident "e" (ctypN.ml[266,9453+24]..[266,9453+25])
                                          expression (ctypN.ml[266,9453+29]..[266,9453+33])
                                            Pexp_ident "exps" (ctypN.ml[266,9453+29]..[266,9453+33])
                                        ]
                              ]
                        ]
                        expression (ctypN.ml[267,9491+2]..[271,9640+59])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (ctypN.ml[267,9491+6]..[267,9491+9])
                                Ppat_var "pat" (ctypN.ml[267,9491+6]..[267,9491+9])
                              expression (ctypN.ml[267,9491+12]..[267,9491+29])
                                Pexp_apply
                                expression (ctypN.ml[267,9491+17]..[267,9491+19])
                                  Pexp_ident "|>" (ctypN.ml[267,9491+17]..[267,9491+19])
                                [
                                  <label> ""
                                    expression (ctypN.ml[267,9491+12]..[267,9491+16])
                                      Pexp_ident "args" (ctypN.ml[267,9491+12]..[267,9491+16])
                                  <label> ""
                                    expression (ctypN.ml[267,9491+20]..[267,9491+29])
                                      Pexp_ident "tuple_com" (ctypN.ml[267,9491+20]..[267,9491+29])
                                ]
                          ]
                          expression (ctypN.ml[268,9524+2]..[271,9640+59])
                            Pexp_match
                            expression (ctypN.ml[268,9524+8]..[268,9524+19])
                              Pexp_ident "destination" (ctypN.ml[268,9524+8]..[268,9524+19])
                            [
                              <case>
                                pattern (ctypN.ml[269,9549+4]..[269,9549+14])
                                  Ppat_construct "Obj" (ctypN.ml[269,9549+4]..[269,9549+7])
                                  Some
                                    pattern (ctypN.ml[269,9549+8]..[269,9549+14])
                                      Ppat_construct "Map" (ctypN.ml[269,9549+9]..[269,9549+12])
                                      None
                                expression (ctypN.ml[270,9567+6]..[270,9567+72]) ghost
                                  Pexp_constraint
                                  expression (ctypN.ml[270,9567+7]..[270,9567+57])
                                    Pexp_variant "Case"
                                    Some
                                      expression (ctypN.ml[270,9567+13]..[270,9567+57])
                                        Pexp_tuple
                                        [
                                          expression (ctypN.ml[270,9567+14]..[270,9567+17])
                                            Pexp_ident "pat" (ctypN.ml[270,9567+14]..[270,9567+17])
                                          expression (ctypN.ml[270,9567+19]..[270,9567+56])
                                            Pexp_variant "Coercion"
                                            Some
                                              expression (ctypN.ml[270,9567+30]..[270,9567+55])
                                                Pexp_tuple
                                                [
                                                  expression (ctypN.ml[270,9567+31]..[270,9567+32])
                                                    Pexp_ident "e" (ctypN.ml[270,9567+31]..[270,9567+32])
                                                  expression (ctypN.ml[270,9567+34]..[270,9567+47]) ghost
                                                    Pexp_coerce
                                                    expression (ctypN.ml[270,9567+35]..[270,9567+39])
                                                      Pexp_ident "name" (ctypN.ml[270,9567+35]..[270,9567+39])
                                                    None
                                                    core_type (ctypN.ml[270,9567+42]..[270,9567+46])
                                                      Ptyp_constr "ctyp" (ctypN.ml[270,9567+42]..[270,9567+46])
                                                      []
                                                  expression (ctypN.ml[270,9567+49]..[270,9567+54])
                                                    Pexp_ident "annot" (ctypN.ml[270,9567+49]..[270,9567+54])
                                                ]
                                        ]
                                  core_type (ctypN.ml[270,9567+60]..[270,9567+70])
                                    Ptyp_constr "Astfn.case" (ctypN.ml[270,9567+60]..[270,9567+70])
                                    []
                              <case>
                                pattern (ctypN.ml[271,9640+4]..[271,9640+5])
                                  Ppat_any
                                expression (ctypN.ml[271,9640+9]..[271,9640+59]) ghost
                                  Pexp_constraint
                                  expression (ctypN.ml[271,9640+10]..[271,9640+44])
                                    Pexp_variant "Case"
                                    Some
                                      expression (ctypN.ml[271,9640+16]..[271,9640+44])
                                        Pexp_tuple
                                        [
                                          expression (ctypN.ml[271,9640+17]..[271,9640+20])
                                            Pexp_ident "pat" (ctypN.ml[271,9640+17]..[271,9640+20])
                                          expression (ctypN.ml[271,9640+22]..[271,9640+43])
                                            Pexp_variant "Subtype"
                                            Some
                                              expression (ctypN.ml[271,9640+32]..[271,9640+42])
                                                Pexp_tuple
                                                [
                                                  expression (ctypN.ml[271,9640+33]..[271,9640+34])
                                                    Pexp_ident "e" (ctypN.ml[271,9640+33]..[271,9640+34])
                                                  expression (ctypN.ml[271,9640+36]..[271,9640+41])
                                                    Pexp_ident "annot" (ctypN.ml[271,9640+36]..[271,9640+41])
                                                ]
                                        ]
                                  core_type (ctypN.ml[271,9640+47]..[271,9640+57])
                                    Ptyp_constr "Astfn.case" (ctypN.ml[271,9640+47]..[271,9640+57])
                                    []
                            ]
    ]
]
