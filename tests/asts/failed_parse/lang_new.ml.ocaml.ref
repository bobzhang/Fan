[
  structure_item (lang_new.ml[1,0+0]..[1,0+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (lang_new.ml[1,0+4]..[1,0+15])
          Ppat_var "sem_of_list" (lang_new.ml[1,0+4]..[1,0+15])
        expression (lang_new.ml[1,0+18]..[1,0+37])
          Pexp_ident "Ast_gen.sem_of_list" (lang_new.ml[1,0+18]..[1,0+37])
    ]
  structure_item (lang_new.ml[2,38+0]..[2,38+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lang_new.ml[2,38+4]..[2,38+10])
          Ppat_var "qualid" (lang_new.ml[2,38+4]..[2,38+10])
        expression (lang_new.ml[2,38+13]..[2,38+30])
          Pexp_apply
          expression (lang_new.ml[2,38+13]..[2,38+21])
            Pexp_ident "Gramf.mk" (lang_new.ml[2,38+13]..[2,38+21])
          [
            <label> ""
              expression (lang_new.ml[2,38+22]..[2,38+30])
                Pexp_constant Const_string("qualid",None)
          ]
    ]
  structure_item (lang_new.ml[3,69+0]..[3,69+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (lang_new.ml[3,69+4]..[3,69+16])
          Ppat_var "nonterminals" (lang_new.ml[3,69+4]..[3,69+16])
        expression (lang_new.ml[3,69+19]..[3,69+42])
          Pexp_apply
          expression (lang_new.ml[3,69+19]..[3,69+27])
            Pexp_ident "Gramf.mk" (lang_new.ml[3,69+19]..[3,69+27])
          [
            <label> ""
              expression (lang_new.ml[3,69+28]..[3,69+42])
                Pexp_constant Const_string("nonterminals",None)
          ]
    ]
  structure_item (lang_new.ml[4,112+0]..[4,112+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (lang_new.ml[4,112+4]..[4,112+16])
          Ppat_var "newterminals" (lang_new.ml[4,112+4]..[4,112+16])
        expression (lang_new.ml[4,112+19]..[4,112+42])
          Pexp_apply
          expression (lang_new.ml[4,112+19]..[4,112+27])
            Pexp_ident "Gramf.mk" (lang_new.ml[4,112+19]..[4,112+27])
          [
            <label> ""
              expression (lang_new.ml[4,112+28]..[4,112+42])
                Pexp_constant Const_string("newterminals",None)
          ]
    ]
  structure_item (lang_new.ml[5,155+0]..[5,155+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (lang_new.ml[5,155+4]..[5,155+12])
          Ppat_var "t_qualid" (lang_new.ml[5,155+4]..[5,155+12])
        expression (lang_new.ml[5,155+15]..[5,155+34])
          Pexp_apply
          expression (lang_new.ml[5,155+15]..[5,155+23])
            Pexp_ident "Gramf.mk" (lang_new.ml[5,155+15]..[5,155+23])
          [
            <label> ""
              expression (lang_new.ml[5,155+24]..[5,155+34])
                Pexp_constant Const_string("t_qualid",None)
          ]
    ]
  structure_item (lang_new.ml[6,190+0]..[6,190+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (lang_new.ml[6,190+4]..[6,190+11])
          Ppat_var "qualuid" (lang_new.ml[6,190+4]..[6,190+11])
        expression (lang_new.ml[6,190+14]..[6,190+32])
          Pexp_apply
          expression (lang_new.ml[6,190+14]..[6,190+22])
            Pexp_ident "Gramf.mk" (lang_new.ml[6,190+14]..[6,190+22])
          [
            <label> ""
              expression (lang_new.ml[6,190+23]..[6,190+32])
                Pexp_constant Const_string("qualuid",None)
          ]
    ]
  structure_item (lang_new.ml[7,223+0]..[776,43139+41])
    Pstr_eval
    expression (lang_new.ml[8,231+2]..[776,43139+41])
      Pexp_let Nonrec
      [
        <def>
          pattern (lang_new.ml[8,231+6]..[8,231+16])
            Ppat_var "type_entry" (lang_new.ml[8,231+6]..[8,231+16])
          expression (lang_new.ml[8,231+16]..[8,231+61]) ghost
            Pexp_constraint
            expression (lang_new.ml[8,231+40]..[8,231+61])
              Pexp_apply
              expression (lang_new.ml[8,231+40]..[8,231+48])
                Pexp_ident "Gramf.mk" (lang_new.ml[8,231+40]..[8,231+48])
              [
                <label> ""
                  expression (lang_new.ml[8,231+49]..[8,231+61])
                    Pexp_constant Const_string("type_entry",None)
              ]
            core_type (lang_new.ml[8,231+18]..[8,231+37])
              Ptyp_constr "Gramf.t" (lang_new.ml[8,231+30]..[8,231+37])
              [
                core_type (lang_new.ml[8,231+18]..[8,231+29])
                  Ptyp_var type_entry
              ]
        <def>
          pattern (lang_new.ml[9,293+6]..[9,293+8])
            Ppat_var "ty" (lang_new.ml[9,293+6]..[9,293+8])
          expression (lang_new.ml[9,293+8]..[9,293+37]) ghost
            Pexp_constraint
            expression (lang_new.ml[9,293+24]..[9,293+37])
              Pexp_apply
              expression (lang_new.ml[9,293+24]..[9,293+32])
                Pexp_ident "Gramf.mk" (lang_new.ml[9,293+24]..[9,293+32])
              [
                <label> ""
                  expression (lang_new.ml[9,293+33]..[9,293+37])
                    Pexp_constant Const_string("ty",None)
              ]
            core_type (lang_new.ml[9,293+10]..[9,293+21])
              Ptyp_constr "Gramf.t" (lang_new.ml[9,293+14]..[9,293+21])
              [
                core_type (lang_new.ml[9,293+10]..[9,293+13])
                  Ptyp_var ty
              ]
      ]
      expression (lang_new.ml[10,334+2]..[776,43139+41])
        Pexp_sequence
        expression (lang_new.ml[10,334+2]..[233,10864+41])
          Pexp_apply
          expression (lang_new.ml[10,334+2]..[10,334+21])
            Pexp_ident "Gramf.extend_single" (lang_new.ml[10,334+2]..[10,334+21])
          [
            <label> ""
              expression (lang_new.ml[11,356+4]..[233,10864+41]) ghost
                Pexp_constraint
                expression (lang_new.ml[11,356+5]..[233,10864+6])
                  Pexp_record
                  [
                    "entry" (lang_new.ml[12,363+7]..[12,363+12])
                      expression (lang_new.ml[12,363+15]..[12,363+49]) ghost
                        Pexp_constraint
                        expression (lang_new.ml[12,363+16]..[12,363+26])
                          Pexp_ident "type_entry" (lang_new.ml[12,363+16]..[12,363+26])
                        core_type (lang_new.ml[12,363+29]..[12,363+48])
                          Ptyp_constr "Gramf.t" (lang_new.ml[12,363+41]..[12,363+48])
                          [
                            core_type (lang_new.ml[12,363+29]..[12,363+40])
                              Ptyp_var type_entry
                          ]
                    "olevel" (lang_new.ml[13,414+7]..[13,414+13])
                      expression (lang_new.ml[14,430+9]..[232,10836+27]) ghost
                        Pexp_constraint
                        expression (lang_new.ml[14,430+10]..[232,10836+11])
                          Pexp_record
                          [
                            "label" (lang_new.ml[15,442+12]..[15,442+17])
                              expression (lang_new.ml[15,442+20]..[15,442+24])
                                Pexp_construct "None" (lang_new.ml[15,442+20]..[15,442+24])
                                None
                            "lassoc" (lang_new.ml[16,468+12]..[16,468+18])
                              expression (lang_new.ml[16,468+21]..[16,468+25])
                                Pexp_construct "true" (lang_new.ml[16,468+21]..[16,468+25])
                                None
                            "productions" (lang_new.ml[17,495+12]..[17,495+23])
                              expression (lang_new.ml[18,521+14]..[231,10819+16])
                                Pexp_construct "::" (lang_new.ml[18,521+15]..[231,10819+16]) ghost
                                Some
                                  expression (lang_new.ml[18,521+15]..[231,10819+16]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lang_new.ml[18,521+15]..[33,1182+16])
                                        Pexp_record
                                        [
                                          "symbols" (lang_new.ml[19,538+17]..[19,538+24])
                                            expression (lang_new.ml[20,565+19]..[22,669+43])
                                              Pexp_construct "::" (lang_new.ml[20,565+20]..[22,669+43]) ghost
                                              Some
                                                expression (lang_new.ml[20,565+20]..[22,669+43]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (lang_new.ml[20,565+20]..[22,669+42])
                                                      Pexp_construct "Token" (lang_new.ml[20,565+20]..[20,565+25])
                                                      Some
                                                        expression (lang_new.ml[21,591+22]..[22,669+42]) ghost
                                                          Pexp_constraint
                                                          expression (lang_new.ml[21,591+23]..[22,669+24])
                                                            Pexp_record
                                                            [
                                                              "descr" (lang_new.ml[21,591+25]..[21,591+30])
                                                                expression (lang_new.ml[21,591+33]..[21,591+77])
                                                                  Pexp_record
                                                                  [
                                                                    "tag" (lang_new.ml[21,591+35]..[21,591+38])
                                                                      expression (lang_new.ml[21,591+41]..[21,591+45])
Pexp_variant "Lid"
None
                                                                    "word" (lang_new.ml[21,591+47]..[21,591+51])
                                                                      expression (lang_new.ml[21,591+54]..[21,591+57])
Pexp_construct "Any" (lang_new.ml[21,591+54]..[21,591+57])
None
                                                                    "tag_name" (lang_new.ml[21,591+59]..[21,591+67])
                                                                      expression (lang_new.ml[21,591+70]..[21,591+75])
Pexp_constant Const_string("Lid",None)
                                                                  ]
                                                                  None
                                                            ]
                                                            None
                                                          core_type (lang_new.ml[22,669+27]..[22,669+41])
                                                            Ptyp_constr "Tokenf.pattern" (lang_new.ml[22,669+27]..[22,669+41])
                                                            []
                                                    expression (lang_new.ml[22,669+42]..[22,669+43]) ghost
                                                      Pexp_construct "[]" (lang_new.ml[22,669+42]..[22,669+43]) ghost
                                                      None
                                                  ]
                                          "annot" (lang_new.ml[23,714+17]..[23,714+22])
                                            expression (lang_new.ml[23,714+25]..[23,714+50])
                                              Pexp_constant Const_string("(_loc, x, None, None)\n",None)
                                          "fn" (lang_new.ml[24,766+17]..[24,766+19])
                                            expression (lang_new.ml[25,788+19]..[32,1122+59])
                                              Pexp_apply
                                              expression (lang_new.ml[25,788+20]..[25,788+35])
                                                Pexp_ident "Gramf.mk_action" (lang_new.ml[25,788+20]..[25,788+35])
                                              [
                                                <label> ""
                                                  expression (lang_new.ml[26,824+22]..[32,1122+58]) ghost
                                                    Pexp_constraint
                                                    expression (lang_new.ml[26,824+23]..[31,1048+70])
                                                      Pexp_function
                                                      [
                                                        <case>
                                                          pattern (lang_new.ml[27,856+25]..[27,856+47])
                                                            Ppat_constraint
                                                            pattern (lang_new.ml[27,856+26]..[27,856+33])
                                                              Ppat_var "__fan_0" (lang_new.ml[27,856+26]..[27,856+33])
                                                            core_type (lang_new.ml[27,856+36]..[27,856+46])
                                                              Ptyp_constr "Tokenf.txt" (lang_new.ml[27,856+36]..[27,856+46])
                                                              []
                                                          expression (lang_new.ml[28,907+27]..[31,1048+70])
                                                            Pexp_function
                                                            [
                                                              <case>
                                                                pattern (lang_new.ml[29,944+30]..[29,944+45])
                                                                  Ppat_constraint
                                                                  pattern (lang_new.ml[29,944+31]..[29,944+35])
                                                                    Ppat_var "_loc" (lang_new.ml[29,944+31]..[29,944+35])
                                                                  core_type (lang_new.ml[29,944+38]..[29,944+44])
                                                                    Ptyp_constr "Locf.t" (lang_new.ml[29,944+38]..[29,944+44])
                                                                    []
                                                                expression (lang_new.ml[30,993+32]..[31,1048+69])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (lang_new.ml[30,993+36]..[30,993+37])
Ppat_var "x" (lang_new.ml[30,993+36]..[30,993+37])
                                                                      expression (lang_new.ml[30,993+40]..[30,993+51])
Pexp_field
expression (lang_new.ml[30,993+40]..[30,993+47])
  Pexp_ident "__fan_0" (lang_new.ml[30,993+40]..[30,993+47])
"txt" (lang_new.ml[30,993+48]..[30,993+51])
                                                                  ]
                                                                  expression (lang_new.ml[31,1048+32]..[31,1048+69]) ghost
                                                                    Pexp_constraint
                                                                    expression (lang_new.ml[31,1048+33]..[31,1048+54])
                                                                      Pexp_tuple
                                                                      [
expression (lang_new.ml[31,1048+34]..[31,1048+38])
  Pexp_ident "_loc" (lang_new.ml[31,1048+34]..[31,1048+38])
expression (lang_new.ml[31,1048+40]..[31,1048+41])
  Pexp_ident "x" (lang_new.ml[31,1048+40]..[31,1048+41])
expression (lang_new.ml[31,1048+43]..[31,1048+47])
  Pexp_construct "None" (lang_new.ml[31,1048+43]..[31,1048+47])
  None
expression (lang_new.ml[31,1048+49]..[31,1048+53])
  Pexp_construct "None" (lang_new.ml[31,1048+49]..[31,1048+53])
  None
                                                                      ]
                                                                    core_type (lang_new.ml[31,1048+57]..[31,1048+68])
                                                                      Ptyp_var type_entry
                                                            ]
                                                      ]
                                                    core_type (lang_new.ml[32,1122+22]..[32,1122+57])
                                                      Ptyp_arrow
                                                      ""
                                                      core_type (lang_new.ml[32,1122+22]..[32,1122+32])
                                                        Ptyp_constr "Tokenf.txt" (lang_new.ml[32,1122+22]..[32,1122+32])
                                                        []
                                                      core_type (lang_new.ml[32,1122+36]..[32,1122+57])
                                                        Ptyp_arrow
                                                        ""
                                                        core_type (lang_new.ml[32,1122+36]..[32,1122+42])
                                                          Ptyp_constr "Locf.t" (lang_new.ml[32,1122+36]..[32,1122+42])
                                                          []
                                                        core_type (lang_new.ml[32,1122+46]..[32,1122+57])
                                                          Ptyp_var type_entry
                                              ]
                                        ]
                                        None
                                      expression (lang_new.ml[34,1200+14]..[231,10819+16]) ghost
                                        Pexp_construct "::" (lang_new.ml[34,1200+14]..[231,10819+16]) ghost
                                        Some
                                          expression (lang_new.ml[34,1200+14]..[231,10819+16]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lang_new.ml[34,1200+14]..[78,3460+15])
                                                Pexp_record
                                                [
                                                  "symbols" (lang_new.ml[35,1216+16]..[35,1216+23])
                                                    expression (lang_new.ml[36,1242+18]..[51,1877+41])
                                                      Pexp_construct "::" (lang_new.ml[36,1242+19]..[51,1877+41]) ghost
                                                      Some
                                                        expression (lang_new.ml[36,1242+19]..[51,1877+41]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (lang_new.ml[36,1242+19]..[40,1398+41])
                                                              Pexp_construct "Token" (lang_new.ml[36,1242+19]..[36,1242+24])
                                                              Some
                                                                expression (lang_new.ml[37,1267+21]..[40,1398+41]) ghost
                                                                  Pexp_constraint
                                                                  expression (lang_new.ml[37,1267+22]..[40,1398+23])
                                                                    Pexp_record
                                                                    [
                                                                      "descr" (lang_new.ml[38,1291+24]..[38,1291+29])
expression (lang_new.ml[39,1323+26]..[39,1323+74])
  Pexp_record
  [
    "tag" (lang_new.ml[39,1323+28]..[39,1323+31])
      expression (lang_new.ml[39,1323+34]..[39,1323+38])
        Pexp_variant "Key"
        None
    "word" (lang_new.ml[39,1323+40]..[39,1323+44])
      expression (lang_new.ml[39,1323+47]..[39,1323+54])
        Pexp_construct "A" (lang_new.ml[39,1323+48]..[39,1323+49])
        Some
          expression (lang_new.ml[39,1323+50]..[39,1323+53])
            Pexp_constant Const_string("(",None)
    "tag_name" (lang_new.ml[39,1323+56]..[39,1323+64])
      expression (lang_new.ml[39,1323+67]..[39,1323+72])
        Pexp_constant Const_string("Key",None)
  ]
  None
                                                                    ]
                                                                    None
                                                                  core_type (lang_new.ml[40,1398+26]..[40,1398+40])
                                                                    Ptyp_constr "Tokenf.pattern" (lang_new.ml[40,1398+26]..[40,1398+40])
                                                                    []
                                                            expression (lang_new.ml[41,1441+18]..[51,1877+41]) ghost
                                                              Pexp_construct "::" (lang_new.ml[41,1441+18]..[51,1877+41]) ghost
                                                              Some
                                                                expression (lang_new.ml[41,1441+18]..[51,1877+41]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lang_new.ml[41,1441+18]..[43,1546+35])
                                                                      Pexp_construct "Token" (lang_new.ml[41,1441+18]..[41,1441+23])
                                                                      Some
expression (lang_new.ml[42,1465+20]..[43,1546+35]) ghost
  Pexp_constraint
  expression (lang_new.ml[42,1465+21]..[42,1465+77])
    Pexp_record
    [
      "descr" (lang_new.ml[42,1465+23]..[42,1465+28])
        expression (lang_new.ml[42,1465+31]..[42,1465+75])
          Pexp_record
          [
            "tag" (lang_new.ml[42,1465+33]..[42,1465+36])
              expression (lang_new.ml[42,1465+39]..[42,1465+43])
                Pexp_variant "Lid"
                None
            "word" (lang_new.ml[42,1465+45]..[42,1465+49])
              expression (lang_new.ml[42,1465+52]..[42,1465+55])
                Pexp_construct "Any" (lang_new.ml[42,1465+52]..[42,1465+55])
                None
            "tag_name" (lang_new.ml[42,1465+57]..[42,1465+65])
              expression (lang_new.ml[42,1465+68]..[42,1465+73])
                Pexp_constant Const_string("Lid",None)
          ]
          None
    ]
    None
  core_type (lang_new.ml[43,1546+20]..[43,1546+34])
    Ptyp_constr "Tokenf.pattern" (lang_new.ml[43,1546+20]..[43,1546+34])
    []
                                                                    expression (lang_new.ml[44,1583+18]..[51,1877+41]) ghost
                                                                      Pexp_construct "::" (lang_new.ml[44,1583+18]..[51,1877+41]) ghost
                                                                      Some
expression (lang_new.ml[44,1583+18]..[51,1877+41]) ghost
  Pexp_tuple
  [
    expression (lang_new.ml[44,1583+18]..[46,1688+35])
      Pexp_construct "Token" (lang_new.ml[44,1583+18]..[44,1583+23])
      Some
        expression (lang_new.ml[45,1607+20]..[46,1688+35]) ghost
          Pexp_constraint
          expression (lang_new.ml[45,1607+21]..[45,1607+77])
            Pexp_record
            [
              "descr" (lang_new.ml[45,1607+23]..[45,1607+28])
                expression (lang_new.ml[45,1607+31]..[45,1607+75])
                  Pexp_record
                  [
                    "tag" (lang_new.ml[45,1607+33]..[45,1607+36])
                      expression (lang_new.ml[45,1607+39]..[45,1607+43])
                        Pexp_variant "Str"
                        None
                    "word" (lang_new.ml[45,1607+45]..[45,1607+49])
                      expression (lang_new.ml[45,1607+52]..[45,1607+55])
                        Pexp_construct "Any" (lang_new.ml[45,1607+52]..[45,1607+55])
                        None
                    "tag_name" (lang_new.ml[45,1607+57]..[45,1607+65])
                      expression (lang_new.ml[45,1607+68]..[45,1607+73])
                        Pexp_constant Const_string("Str",None)
                  ]
                  None
            ]
            None
          core_type (lang_new.ml[46,1688+20]..[46,1688+34])
            Ptyp_constr "Tokenf.pattern" (lang_new.ml[46,1688+20]..[46,1688+34])
            []
    expression (lang_new.ml[47,1725+18]..[51,1877+41]) ghost
      Pexp_construct "::" (lang_new.ml[47,1725+18]..[51,1877+41]) ghost
      Some
        expression (lang_new.ml[47,1725+18]..[51,1877+41]) ghost
          Pexp_tuple
          [
            expression (lang_new.ml[47,1725+18]..[51,1877+40])
              Pexp_construct "Token" (lang_new.ml[47,1725+18]..[47,1725+23])
              Some
                expression (lang_new.ml[48,1749+20]..[51,1877+40]) ghost
                  Pexp_constraint
                  expression (lang_new.ml[48,1749+21]..[51,1877+22])
                    Pexp_record
                    [
                      "descr" (lang_new.ml[49,1772+23]..[49,1772+28])
                        expression (lang_new.ml[50,1803+25]..[50,1803+73])
                          Pexp_record
                          [
                            "tag" (lang_new.ml[50,1803+27]..[50,1803+30])
                              expression (lang_new.ml[50,1803+33]..[50,1803+37])
                                Pexp_variant "Key"
                                None
                            "word" (lang_new.ml[50,1803+39]..[50,1803+43])
                              expression (lang_new.ml[50,1803+46]..[50,1803+53])
                                Pexp_construct "A" (lang_new.ml[50,1803+47]..[50,1803+48])
                                Some
                                  expression (lang_new.ml[50,1803+49]..[50,1803+52])
                                    Pexp_constant Const_string(")",None)
                            "tag_name" (lang_new.ml[50,1803+55]..[50,1803+63])
                              expression (lang_new.ml[50,1803+66]..[50,1803+71])
                                Pexp_constant Const_string("Key",None)
                          ]
                          None
                    ]
                    None
                  core_type (lang_new.ml[51,1877+25]..[51,1877+39])
                    Ptyp_constr "Tokenf.pattern" (lang_new.ml[51,1877+25]..[51,1877+39])
                    []
            expression (lang_new.ml[51,1877+40]..[51,1877+41]) ghost
              Pexp_construct "[]" (lang_new.ml[51,1877+40]..[51,1877+41]) ghost
              None
          ]
  ]
                                                                  ]
                                                          ]
                                                  "annot" (lang_new.ml[52,1920+16]..[52,1920+21])
                                                    expression (lang_new.ml[52,1920+24]..[52,1920+53])
                                                      Pexp_constant Const_string("(_loc, x, (Some y), None)\n",None)
                                                  "fn" (lang_new.ml[53,1975+16]..[53,1975+18])
                                                    expression (lang_new.ml[54,1996+18]..[77,3378+81])
                                                      Pexp_apply
                                                      expression (lang_new.ml[54,1996+19]..[54,1996+34])
                                                        Pexp_ident "Gramf.mk_action" (lang_new.ml[54,1996+19]..[54,1996+34])
                                                      [
                                                        <label> ""
                                                          expression (lang_new.ml[55,2031+21]..[77,3378+80]) ghost
                                                            Pexp_constraint
                                                            expression (lang_new.ml[55,2031+22]..[68,2701+64])
                                                              Pexp_function
                                                              [
                                                                <case>
                                                                  pattern (lang_new.ml[56,2062+24]..[56,2062+25])
                                                                    Ppat_any
                                                                  expression (lang_new.ml[57,2091+26]..[68,2701+64])
                                                                    Pexp_function
                                                                    [
                                                                      <case>
pattern (lang_new.ml[58,2127+29]..[58,2127+51])
  Ppat_constraint
  pattern (lang_new.ml[58,2127+30]..[58,2127+37])
    Ppat_var "__fan_2" (lang_new.ml[58,2127+30]..[58,2127+37])
  core_type (lang_new.ml[58,2127+40]..[58,2127+50])
    Ptyp_constr "Tokenf.txt" (lang_new.ml[58,2127+40]..[58,2127+50])
    []
expression (lang_new.ml[59,2182+31]..[68,2701+63])
  Pexp_function
  [
    <case>
      pattern (lang_new.ml[60,2223+34]..[60,2223+56])
        Ppat_constraint
        pattern (lang_new.ml[60,2223+35]..[60,2223+42])
          Ppat_var "__fan_1" (lang_new.ml[60,2223+35]..[60,2223+42])
        core_type (lang_new.ml[60,2223+45]..[60,2223+55])
          Ptyp_constr "Tokenf.txt" (lang_new.ml[60,2223+45]..[60,2223+55])
          []
      expression (lang_new.ml[61,2283+36]..[68,2701+62])
        Pexp_function
        [
          <case>
            pattern (lang_new.ml[62,2329+39]..[62,2329+40])
              Ppat_any
            expression (lang_new.ml[63,2373+41]..[68,2701+61])
              Pexp_function
              [
                <case>
                  pattern (lang_new.ml[64,2424+44]..[64,2424+59])
                    Ppat_constraint
                    pattern (lang_new.ml[64,2424+45]..[64,2424+49])
                      Ppat_var "_loc" (lang_new.ml[64,2424+45]..[64,2424+49])
                    core_type (lang_new.ml[64,2424+52]..[64,2424+58])
                      Ptyp_constr "Locf.t" (lang_new.ml[64,2424+52]..[64,2424+58])
                      []
                  expression (lang_new.ml[65,2487+46]..[68,2701+60])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lang_new.ml[65,2487+50]..[65,2487+51])
                          Ppat_var "x" (lang_new.ml[65,2487+50]..[65,2487+51])
                        expression (lang_new.ml[65,2487+54]..[65,2487+65])
                          Pexp_field
                          expression (lang_new.ml[65,2487+54]..[65,2487+61])
                            Pexp_ident "__fan_1" (lang_new.ml[65,2487+54]..[65,2487+61])
                          "txt" (lang_new.ml[65,2487+62]..[65,2487+65])
                    ]
                    expression (lang_new.ml[66,2556+46]..[68,2701+60])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lang_new.ml[66,2556+50]..[66,2556+51])
                            Ppat_var "y" (lang_new.ml[66,2556+50]..[66,2556+51])
                          expression (lang_new.ml[66,2556+54]..[66,2556+65])
                            Pexp_field
                            expression (lang_new.ml[66,2556+54]..[66,2556+61])
                              Pexp_ident "__fan_2" (lang_new.ml[66,2556+54]..[66,2556+61])
                            "txt" (lang_new.ml[66,2556+62]..[66,2556+65])
                      ]
                      expression (lang_new.ml[67,2625+46]..[68,2701+60]) ghost
                        Pexp_constraint
                        expression (lang_new.ml[67,2625+47]..[67,2625+72])
                          Pexp_tuple
                          [
                            expression (lang_new.ml[67,2625+48]..[67,2625+52])
                              Pexp_ident "_loc" (lang_new.ml[67,2625+48]..[67,2625+52])
                            expression (lang_new.ml[67,2625+54]..[67,2625+55])
                              Pexp_ident "x" (lang_new.ml[67,2625+54]..[67,2625+55])
                            expression (lang_new.ml[67,2625+57]..[67,2625+65])
                              Pexp_construct "Some" (lang_new.ml[67,2625+58]..[67,2625+62])
                              Some
                                expression (lang_new.ml[67,2625+63]..[67,2625+64])
                                  Pexp_ident "y" (lang_new.ml[67,2625+63]..[67,2625+64])
                            expression (lang_new.ml[67,2625+67]..[67,2625+71])
                              Pexp_construct "None" (lang_new.ml[67,2625+67]..[67,2625+71])
                              None
                          ]
                        core_type (lang_new.ml[68,2701+48]..[68,2701+59])
                          Ptyp_var type_entry
              ]
        ]
  ]
                                                                    ]
                                                              ]
                                                            core_type (lang_new.ml[68,2701+67]..[77,3378+79])
                                                              Ptyp_arrow
                                                              ""
                                                              core_type (lang_new.ml[68,2701+67]..[68,2701+77])
                                                                Ptyp_constr "Tokenf.txt" (lang_new.ml[68,2701+67]..[68,2701+77])
                                                                []
                                                              core_type (lang_new.ml[70,2850+68]..[77,3378+79])
                                                                Ptyp_arrow
                                                                ""
                                                                core_type (lang_new.ml[70,2850+68]..[70,2850+78])
                                                                  Ptyp_constr "Tokenf.txt" (lang_new.ml[70,2850+68]..[70,2850+78])
                                                                  []
                                                                core_type (lang_new.ml[72,3000+68]..[77,3378+79])
                                                                  Ptyp_arrow
                                                                  ""
                                                                  core_type (lang_new.ml[72,3000+68]..[72,3000+78])
                                                                    Ptyp_constr "Tokenf.txt" (lang_new.ml[72,3000+68]..[72,3000+78])
                                                                    []
                                                                  core_type (lang_new.ml[74,3150+68]..[77,3378+79])
                                                                    Ptyp_arrow
                                                                    ""
                                                                    core_type (lang_new.ml[74,3150+68]..[74,3150+78])
                                                                      Ptyp_constr "Tokenf.txt" (lang_new.ml[74,3150+68]..[74,3150+78])
                                                                      []
                                                                    core_type (lang_new.ml[76,3300+68]..[77,3378+79])
                                                                      Ptyp_arrow
                                                                      ""
                                                                      core_type (lang_new.ml[76,3300+68]..[76,3300+74])
Ptyp_constr "Locf.t" (lang_new.ml[76,3300+68]..[76,3300+74])
[]
                                                                      core_type (lang_new.ml[77,3378+68]..[77,3378+79])
Ptyp_var type_entry
                                                      ]
                                                ]
                                                None
                                              expression (lang_new.ml[79,3477+14]..[231,10819+16]) ghost
                                                Pexp_construct "::" (lang_new.ml[79,3477+14]..[231,10819+16]) ghost
                                                Some
                                                  expression (lang_new.ml[79,3477+14]..[231,10819+16]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lang_new.ml[79,3477+14]..[121,5475+15])
                                                        Pexp_record
                                                        [
                                                          "symbols" (lang_new.ml[80,3493+16]..[80,3493+23])
                                                            expression (lang_new.ml[81,3519+18]..[97,4231+41])
                                                              Pexp_construct "::" (lang_new.ml[81,3519+19]..[97,4231+41]) ghost
                                                              Some
                                                                expression (lang_new.ml[81,3519+19]..[97,4231+41]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lang_new.ml[81,3519+19]..[85,3675+41])
                                                                      Pexp_construct "Token" (lang_new.ml[81,3519+19]..[81,3519+24])
                                                                      Some
expression (lang_new.ml[82,3544+21]..[85,3675+41]) ghost
  Pexp_constraint
  expression (lang_new.ml[82,3544+22]..[85,3675+23])
    Pexp_record
    [
      "descr" (lang_new.ml[83,3568+24]..[83,3568+29])
        expression (lang_new.ml[84,3600+26]..[84,3600+74])
          Pexp_record
          [
            "tag" (lang_new.ml[84,3600+28]..[84,3600+31])
              expression (lang_new.ml[84,3600+34]..[84,3600+38])
                Pexp_variant "Key"
                None
            "word" (lang_new.ml[84,3600+40]..[84,3600+44])
              expression (lang_new.ml[84,3600+47]..[84,3600+54])
                Pexp_construct "A" (lang_new.ml[84,3600+48]..[84,3600+49])
                Some
                  expression (lang_new.ml[84,3600+50]..[84,3600+53])
                    Pexp_constant Const_string("(",None)
            "tag_name" (lang_new.ml[84,3600+56]..[84,3600+64])
              expression (lang_new.ml[84,3600+67]..[84,3600+72])
                Pexp_constant Const_string("Key",None)
          ]
          None
    ]
    None
  core_type (lang_new.ml[85,3675+26]..[85,3675+40])
    Ptyp_constr "Tokenf.pattern" (lang_new.ml[85,3675+26]..[85,3675+40])
    []
                                                                    expression (lang_new.ml[86,3718+18]..[97,4231+41]) ghost
                                                                      Pexp_construct "::" (lang_new.ml[86,3718+18]..[97,4231+41]) ghost
                                                                      Some
expression (lang_new.ml[86,3718+18]..[97,4231+41]) ghost
  Pexp_tuple
  [
    expression (lang_new.ml[86,3718+18]..[88,3823+35])
      Pexp_construct "Token" (lang_new.ml[86,3718+18]..[86,3718+23])
      Some
        expression (lang_new.ml[87,3742+20]..[88,3823+35]) ghost
          Pexp_constraint
          expression (lang_new.ml[87,3742+21]..[87,3742+77])
            Pexp_record
            [
              "descr" (lang_new.ml[87,3742+23]..[87,3742+28])
                expression (lang_new.ml[87,3742+31]..[87,3742+75])
                  Pexp_record
                  [
                    "tag" (lang_new.ml[87,3742+33]..[87,3742+36])
                      expression (lang_new.ml[87,3742+39]..[87,3742+43])
                        Pexp_variant "Lid"
                        None
                    "word" (lang_new.ml[87,3742+45]..[87,3742+49])
                      expression (lang_new.ml[87,3742+52]..[87,3742+55])
                        Pexp_construct "Any" (lang_new.ml[87,3742+52]..[87,3742+55])
                        None
                    "tag_name" (lang_new.ml[87,3742+57]..[87,3742+65])
                      expression (lang_new.ml[87,3742+68]..[87,3742+73])
                        Pexp_constant Const_string("Lid",None)
                  ]
                  None
            ]
            None
          core_type (lang_new.ml[88,3823+20]..[88,3823+34])
            Ptyp_constr "Tokenf.pattern" (lang_new.ml[88,3823+20]..[88,3823+34])
            []
    expression (lang_new.ml[89,3860+18]..[97,4231+41]) ghost
      Pexp_construct "::" (lang_new.ml[89,3860+18]..[97,4231+41]) ghost
      Some
        expression (lang_new.ml[89,3860+18]..[97,4231+41]) ghost
          Pexp_tuple
          [
            expression (lang_new.ml[89,3860+18]..[91,3965+35])
              Pexp_construct "Token" (lang_new.ml[89,3860+18]..[89,3860+23])
              Some
                expression (lang_new.ml[90,3884+20]..[91,3965+35]) ghost
                  Pexp_constraint
                  expression (lang_new.ml[90,3884+21]..[90,3884+77])
                    Pexp_record
                    [
                      "descr" (lang_new.ml[90,3884+23]..[90,3884+28])
                        expression (lang_new.ml[90,3884+31]..[90,3884+75])
                          Pexp_record
                          [
                            "tag" (lang_new.ml[90,3884+33]..[90,3884+36])
                              expression (lang_new.ml[90,3884+39]..[90,3884+43])
                                Pexp_variant "Str"
                                None
                            "word" (lang_new.ml[90,3884+45]..[90,3884+49])
                              expression (lang_new.ml[90,3884+52]..[90,3884+55])
                                Pexp_construct "Any" (lang_new.ml[90,3884+52]..[90,3884+55])
                                None
                            "tag_name" (lang_new.ml[90,3884+57]..[90,3884+65])
                              expression (lang_new.ml[90,3884+68]..[90,3884+73])
                                Pexp_constant Const_string("Str",None)
                          ]
                          None
                    ]
                    None
                  core_type (lang_new.ml[91,3965+20]..[91,3965+34])
                    Ptyp_constr "Tokenf.pattern" (lang_new.ml[91,3965+20]..[91,3965+34])
                    []
            expression (lang_new.ml[92,4002+18]..[97,4231+41]) ghost
              Pexp_construct "::" (lang_new.ml[92,4002+18]..[97,4231+41]) ghost
              Some
                expression (lang_new.ml[92,4002+18]..[97,4231+41]) ghost
                  Pexp_tuple
                  [
                    expression (lang_new.ml[92,4002+18]..[92,4002+75])
                      Pexp_construct "Nterm" (lang_new.ml[92,4002+18]..[92,4002+23])
                      Some
                        expression (lang_new.ml[92,4002+24]..[92,4002+75])
                          Pexp_apply
                          expression (lang_new.ml[92,4002+25]..[92,4002+34])
                            Pexp_ident "Gramf.obj" (lang_new.ml[92,4002+25]..[92,4002+34])
                          [
                            <label> ""
                              expression (lang_new.ml[92,4002+35]..[92,4002+74]) ghost
                                Pexp_constraint
                                expression (lang_new.ml[92,4002+36]..[92,4002+48])
                                  Pexp_ident "Syntaxf.ctyp" (lang_new.ml[92,4002+36]..[92,4002+48])
                                core_type (lang_new.ml[92,4002+51]..[92,4002+73])
                                  Ptyp_constr "Gramf.t" (lang_new.ml[92,4002+66]..[92,4002+73])
                                  [
                                    core_type (lang_new.ml[92,4002+51]..[92,4002+65])
                                      Ptyp_var Syntaxf__ctyp
                                  ]
                          ]
                    expression (lang_new.ml[93,4079+18]..[97,4231+41]) ghost
                      Pexp_construct "::" (lang_new.ml[93,4079+18]..[97,4231+41]) ghost
                      Some
                        expression (lang_new.ml[93,4079+18]..[97,4231+41]) ghost
                          Pexp_tuple
                          [
                            expression (lang_new.ml[93,4079+18]..[97,4231+40])
                              Pexp_construct "Token" (lang_new.ml[93,4079+18]..[93,4079+23])
                              Some
                                expression (lang_new.ml[94,4103+20]..[97,4231+40]) ghost
                                  Pexp_constraint
                                  expression (lang_new.ml[94,4103+21]..[97,4231+22])
                                    Pexp_record
                                    [
                                      "descr" (lang_new.ml[95,4126+23]..[95,4126+28])
                                        expression (lang_new.ml[96,4157+25]..[96,4157+73])
                                          Pexp_record
                                          [
                                            "tag" (lang_new.ml[96,4157+27]..[96,4157+30])
                                              expression (lang_new.ml[96,4157+33]..[96,4157+37])
                                                Pexp_variant "Key"
                                                None
                                            "word" (lang_new.ml[96,4157+39]..[96,4157+43])
                                              expression (lang_new.ml[96,4157+46]..[96,4157+53])
                                                Pexp_construct "A" (lang_new.ml[96,4157+47]..[96,4157+48])
                                                Some
                                                  expression (lang_new.ml[96,4157+49]..[96,4157+52])
                                                    Pexp_constant Const_string(")",None)
                                            "tag_name" (lang_new.ml[96,4157+55]..[96,4157+63])
                                              expression (lang_new.ml[96,4157+66]..[96,4157+71])
                                                Pexp_constant Const_string("Key",None)
                                          ]
                                          None
                                    ]
                                    None
                                  core_type (lang_new.ml[97,4231+25]..[97,4231+39])
                                    Ptyp_constr "Tokenf.pattern" (lang_new.ml[97,4231+25]..[97,4231+39])
                                    []
                            expression (lang_new.ml[97,4231+40]..[97,4231+41]) ghost
                              Pexp_construct "[]" (lang_new.ml[97,4231+40]..[97,4231+41]) ghost
                              None
                          ]
                  ]
          ]
  ]
                                                                  ]
                                                          "annot" (lang_new.ml[98,4274+16]..[98,4274+21])
                                                            expression (lang_new.ml[98,4274+24]..[98,4274+57])
                                                              Pexp_constant Const_string("(_loc, x, (Some y), (Some t))\n",None)
                                                          "fn" (lang_new.ml[99,4333+16]..[99,4333+18])
                                                            expression (lang_new.ml[100,4354+18]..[120,5396+78])
                                                              Pexp_apply
                                                              expression (lang_new.ml[100,4354+19]..[100,4354+34])
                                                                Pexp_ident "Gramf.mk_action" (lang_new.ml[100,4354+19]..[100,4354+34])
                                                              [
                                                                <label> ""
                                                                  expression (lang_new.ml[101,4389+21]..[120,5396+77]) ghost
                                                                    Pexp_constraint
                                                                    expression (lang_new.ml[101,4389+22]..[116,5194+83])
                                                                      Pexp_function
                                                                      [
<case>
  pattern (lang_new.ml[102,4420+24]..[102,4420+25])
    Ppat_any
  expression (lang_new.ml[103,4449+26]..[116,5194+83])
    Pexp_function
    [
      <case>
        pattern (lang_new.ml[104,4485+29]..[104,4485+49])
          Ppat_constraint
          pattern (lang_new.ml[104,4485+30]..[104,4485+31])
            Ppat_var "t" (lang_new.ml[104,4485+30]..[104,4485+31])
          core_type (lang_new.ml[104,4485+34]..[104,4485+48])
            Ptyp_var Syntaxf__ctyp
        expression (lang_new.ml[105,4538+31]..[116,5194+82])
          Pexp_function
          [
            <case>
              pattern (lang_new.ml[106,4579+34]..[106,4579+56])
                Ppat_constraint
                pattern (lang_new.ml[106,4579+35]..[106,4579+42])
                  Ppat_var "__fan_2" (lang_new.ml[106,4579+35]..[106,4579+42])
                core_type (lang_new.ml[106,4579+45]..[106,4579+55])
                  Ptyp_constr "Tokenf.txt" (lang_new.ml[106,4579+45]..[106,4579+55])
                  []
              expression (lang_new.ml[107,4639+36]..[116,5194+81])
                Pexp_function
                [
                  <case>
                    pattern (lang_new.ml[108,4685+39]..[108,4685+61])
                      Ppat_constraint
                      pattern (lang_new.ml[108,4685+40]..[108,4685+47])
                        Ppat_var "__fan_1" (lang_new.ml[108,4685+40]..[108,4685+47])
                      core_type (lang_new.ml[108,4685+50]..[108,4685+60])
                        Ptyp_constr "Tokenf.txt" (lang_new.ml[108,4685+50]..[108,4685+60])
                        []
                    expression (lang_new.ml[109,4750+41]..[116,5194+80])
                      Pexp_function
                      [
                        <case>
                          pattern (lang_new.ml[110,4801+44]..[110,4801+45])
                            Ppat_any
                          expression (lang_new.ml[111,4850+46]..[116,5194+79])
                            Pexp_function
                            [
                              <case>
                                pattern (lang_new.ml[112,4906+49]..[112,4906+64])
                                  Ppat_constraint
                                  pattern (lang_new.ml[112,4906+50]..[112,4906+54])
                                    Ppat_var "_loc" (lang_new.ml[112,4906+50]..[112,4906+54])
                                  core_type (lang_new.ml[112,4906+57]..[112,4906+63])
                                    Ptyp_constr "Locf.t" (lang_new.ml[112,4906+57]..[112,4906+63])
                                    []
                                expression (lang_new.ml[113,4974+51]..[116,5194+78])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lang_new.ml[113,4974+55]..[113,4974+56])
                                        Ppat_var "x" (lang_new.ml[113,4974+55]..[113,4974+56])
                                      expression (lang_new.ml[113,4974+59]..[113,4974+70])
                                        Pexp_field
                                        expression (lang_new.ml[113,4974+59]..[113,4974+66])
                                          Pexp_ident "__fan_1" (lang_new.ml[113,4974+59]..[113,4974+66])
                                        "txt" (lang_new.ml[113,4974+67]..[113,4974+70])
                                  ]
                                  expression (lang_new.ml[114,5048+51]..[116,5194+78])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lang_new.ml[114,5048+55]..[114,5048+56])
                                          Ppat_var "y" (lang_new.ml[114,5048+55]..[114,5048+56])
                                        expression (lang_new.ml[114,5048+59]..[114,5048+70])
                                          Pexp_field
                                          expression (lang_new.ml[114,5048+59]..[114,5048+66])
                                            Pexp_ident "__fan_2" (lang_new.ml[114,5048+59]..[114,5048+66])
                                          "txt" (lang_new.ml[114,5048+67]..[114,5048+70])
                                    ]
                                    expression (lang_new.ml[115,5122+51]..[116,5194+78]) ghost
                                      Pexp_constraint
                                      expression (lang_new.ml[115,5122+52]..[116,5194+63])
                                        Pexp_tuple
                                        [
                                          expression (lang_new.ml[115,5122+53]..[115,5122+57])
                                            Pexp_ident "_loc" (lang_new.ml[115,5122+53]..[115,5122+57])
                                          expression (lang_new.ml[115,5122+59]..[115,5122+60])
                                            Pexp_ident "x" (lang_new.ml[115,5122+59]..[115,5122+60])
                                          expression (lang_new.ml[115,5122+62]..[115,5122+70])
                                            Pexp_construct "Some" (lang_new.ml[115,5122+63]..[115,5122+67])
                                            Some
                                              expression (lang_new.ml[115,5122+68]..[115,5122+69])
                                                Pexp_ident "y" (lang_new.ml[115,5122+68]..[115,5122+69])
                                          expression (lang_new.ml[116,5194+54]..[116,5194+62])
                                            Pexp_construct "Some" (lang_new.ml[116,5194+55]..[116,5194+59])
                                            Some
                                              expression (lang_new.ml[116,5194+60]..[116,5194+61])
                                                Pexp_ident "t" (lang_new.ml[116,5194+60]..[116,5194+61])
                                        ]
                                      core_type (lang_new.ml[116,5194+66]..[116,5194+77])
                                        Ptyp_var type_entry
                            ]
                      ]
                ]
          ]
    ]
                                                                      ]
                                                                    core_type (lang_new.ml[117,5281+21]..[120,5396+76])
                                                                      Ptyp_arrow
                                                                      ""
                                                                      core_type (lang_new.ml[117,5281+21]..[117,5281+31])
Ptyp_constr "Tokenf.txt" (lang_new.ml[117,5281+21]..[117,5281+31])
[]
                                                                      core_type (lang_new.ml[118,5316+23]..[120,5396+76])
Ptyp_arrow
""
core_type (lang_new.ml[118,5316+23]..[118,5316+37])
  Ptyp_var Syntaxf__ctyp
core_type (lang_new.ml[119,5357+25]..[120,5396+76])
  Ptyp_arrow
  ""
  core_type (lang_new.ml[119,5357+25]..[119,5357+35])
    Ptyp_constr "Tokenf.txt" (lang_new.ml[119,5357+25]..[119,5357+35])
    []
  core_type (lang_new.ml[120,5396+27]..[120,5396+76])
    Ptyp_arrow
    ""
    core_type (lang_new.ml[120,5396+27]..[120,5396+37])
      Ptyp_constr "Tokenf.txt" (lang_new.ml[120,5396+27]..[120,5396+37])
      []
    core_type (lang_new.ml[120,5396+41]..[120,5396+76])
      Ptyp_arrow
      ""
      core_type (lang_new.ml[120,5396+41]..[120,5396+51])
        Ptyp_constr "Tokenf.txt" (lang_new.ml[120,5396+41]..[120,5396+51])
        []
      core_type (lang_new.ml[120,5396+55]..[120,5396+76])
        Ptyp_arrow
        ""
        core_type (lang_new.ml[120,5396+55]..[120,5396+61])
          Ptyp_constr "Locf.t" (lang_new.ml[120,5396+55]..[120,5396+61])
          []
        core_type (lang_new.ml[120,5396+65]..[120,5396+76])
          Ptyp_var type_entry
                                                              ]
                                                        ]
                                                        None
                                                      expression (lang_new.ml[122,5492+14]..[231,10819+16]) ghost
                                                        Pexp_construct "::" (lang_new.ml[122,5492+14]..[231,10819+16]) ghost
                                                        Some
                                                          expression (lang_new.ml[122,5492+14]..[231,10819+16]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lang_new.ml[122,5492+14]..[171,7853+15])
                                                                Pexp_record
                                                                [
                                                                  "symbols" (lang_new.ml[123,5508+16]..[123,5508+23])
                                                                    expression (lang_new.ml[124,5534+18]..[142,6298+41])
                                                                      Pexp_construct "::" (lang_new.ml[124,5534+19]..[142,6298+41]) ghost
                                                                      Some
expression (lang_new.ml[124,5534+19]..[142,6298+41]) ghost
  Pexp_tuple
  [
    expression (lang_new.ml[124,5534+19]..[128,5690+41])
      Pexp_construct "Token" (lang_new.ml[124,5534+19]..[124,5534+24])
      Some
        expression (lang_new.ml[125,5559+21]..[128,5690+41]) ghost
          Pexp_constraint
          expression (lang_new.ml[125,5559+22]..[128,5690+23])
            Pexp_record
            [
              "descr" (lang_new.ml[126,5583+24]..[126,5583+29])
                expression (lang_new.ml[127,5615+26]..[127,5615+74])
                  Pexp_record
                  [
                    "tag" (lang_new.ml[127,5615+28]..[127,5615+31])
                      expression (lang_new.ml[127,5615+34]..[127,5615+38])
                        Pexp_variant "Key"
                        None
                    "word" (lang_new.ml[127,5615+40]..[127,5615+44])
                      expression (lang_new.ml[127,5615+47]..[127,5615+54])
                        Pexp_construct "A" (lang_new.ml[127,5615+48]..[127,5615+49])
                        Some
                          expression (lang_new.ml[127,5615+50]..[127,5615+53])
                            Pexp_constant Const_string("(",None)
                    "tag_name" (lang_new.ml[127,5615+56]..[127,5615+64])
                      expression (lang_new.ml[127,5615+67]..[127,5615+72])
                        Pexp_constant Const_string("Key",None)
                  ]
                  None
            ]
            None
          core_type (lang_new.ml[128,5690+26]..[128,5690+40])
            Ptyp_constr "Tokenf.pattern" (lang_new.ml[128,5690+26]..[128,5690+40])
            []
    expression (lang_new.ml[129,5733+18]..[142,6298+41]) ghost
      Pexp_construct "::" (lang_new.ml[129,5733+18]..[142,6298+41]) ghost
      Some
        expression (lang_new.ml[129,5733+18]..[142,6298+41]) ghost
          Pexp_tuple
          [
            expression (lang_new.ml[129,5733+18]..[131,5838+35])
              Pexp_construct "Token" (lang_new.ml[129,5733+18]..[129,5733+23])
              Some
                expression (lang_new.ml[130,5757+20]..[131,5838+35]) ghost
                  Pexp_constraint
                  expression (lang_new.ml[130,5757+21]..[130,5757+77])
                    Pexp_record
                    [
                      "descr" (lang_new.ml[130,5757+23]..[130,5757+28])
                        expression (lang_new.ml[130,5757+31]..[130,5757+75])
                          Pexp_record
                          [
                            "tag" (lang_new.ml[130,5757+33]..[130,5757+36])
                              expression (lang_new.ml[130,5757+39]..[130,5757+43])
                                Pexp_variant "Lid"
                                None
                            "word" (lang_new.ml[130,5757+45]..[130,5757+49])
                              expression (lang_new.ml[130,5757+52]..[130,5757+55])
                                Pexp_construct "Any" (lang_new.ml[130,5757+52]..[130,5757+55])
                                None
                            "tag_name" (lang_new.ml[130,5757+57]..[130,5757+65])
                              expression (lang_new.ml[130,5757+68]..[130,5757+73])
                                Pexp_constant Const_string("Lid",None)
                          ]
                          None
                    ]
                    None
                  core_type (lang_new.ml[131,5838+20]..[131,5838+34])
                    Ptyp_constr "Tokenf.pattern" (lang_new.ml[131,5838+20]..[131,5838+34])
                    []
            expression (lang_new.ml[132,5875+18]..[142,6298+41]) ghost
              Pexp_construct "::" (lang_new.ml[132,5875+18]..[142,6298+41]) ghost
              Some
                expression (lang_new.ml[132,5875+18]..[142,6298+41]) ghost
                  Pexp_tuple
                  [
                    expression (lang_new.ml[132,5875+18]..[136,6027+40])
                      Pexp_construct "Token" (lang_new.ml[132,5875+18]..[132,5875+23])
                      Some
                        expression (lang_new.ml[133,5899+20]..[136,6027+40]) ghost
                          Pexp_constraint
                          expression (lang_new.ml[133,5899+21]..[136,6027+22])
                            Pexp_record
                            [
                              "descr" (lang_new.ml[134,5922+23]..[134,5922+28])
                                expression (lang_new.ml[135,5953+25]..[135,5953+73])
                                  Pexp_record
                                  [
                                    "tag" (lang_new.ml[135,5953+27]..[135,5953+30])
                                      expression (lang_new.ml[135,5953+33]..[135,5953+37])
                                        Pexp_variant "Key"
                                        None
                                    "word" (lang_new.ml[135,5953+39]..[135,5953+43])
                                      expression (lang_new.ml[135,5953+46]..[135,5953+53])
                                        Pexp_construct "A" (lang_new.ml[135,5953+47]..[135,5953+48])
                                        Some
                                          expression (lang_new.ml[135,5953+49]..[135,5953+52])
                                            Pexp_constant Const_string(":",None)
                                    "tag_name" (lang_new.ml[135,5953+55]..[135,5953+63])
                                      expression (lang_new.ml[135,5953+66]..[135,5953+71])
                                        Pexp_constant Const_string("Key",None)
                                  ]
                                  None
                            ]
                            None
                          core_type (lang_new.ml[136,6027+25]..[136,6027+39])
                            Ptyp_constr "Tokenf.pattern" (lang_new.ml[136,6027+25]..[136,6027+39])
                            []
                    expression (lang_new.ml[137,6069+18]..[142,6298+41]) ghost
                      Pexp_construct "::" (lang_new.ml[137,6069+18]..[142,6298+41]) ghost
                      Some
                        expression (lang_new.ml[137,6069+18]..[142,6298+41]) ghost
                          Pexp_tuple
                          [
                            expression (lang_new.ml[137,6069+18]..[137,6069+75])
                              Pexp_construct "Nterm" (lang_new.ml[137,6069+18]..[137,6069+23])
                              Some
                                expression (lang_new.ml[137,6069+24]..[137,6069+75])
                                  Pexp_apply
                                  expression (lang_new.ml[137,6069+25]..[137,6069+34])
                                    Pexp_ident "Gramf.obj" (lang_new.ml[137,6069+25]..[137,6069+34])
                                  [
                                    <label> ""
                                      expression (lang_new.ml[137,6069+35]..[137,6069+74]) ghost
                                        Pexp_constraint
                                        expression (lang_new.ml[137,6069+36]..[137,6069+48])
                                          Pexp_ident "Syntaxf.ctyp" (lang_new.ml[137,6069+36]..[137,6069+48])
                                        core_type (lang_new.ml[137,6069+51]..[137,6069+73])
                                          Ptyp_constr "Gramf.t" (lang_new.ml[137,6069+66]..[137,6069+73])
                                          [
                                            core_type (lang_new.ml[137,6069+51]..[137,6069+65])
                                              Ptyp_var Syntaxf__ctyp
                                          ]
                                  ]
                            expression (lang_new.ml[138,6146+18]..[142,6298+41]) ghost
                              Pexp_construct "::" (lang_new.ml[138,6146+18]..[142,6298+41]) ghost
                              Some
                                expression (lang_new.ml[138,6146+18]..[142,6298+41]) ghost
                                  Pexp_tuple
                                  [
                                    expression (lang_new.ml[138,6146+18]..[142,6298+40])
                                      Pexp_construct "Token" (lang_new.ml[138,6146+18]..[138,6146+23])
                                      Some
                                        expression (lang_new.ml[139,6170+20]..[142,6298+40]) ghost
                                          Pexp_constraint
                                          expression (lang_new.ml[139,6170+21]..[142,6298+22])
                                            Pexp_record
                                            [
                                              "descr" (lang_new.ml[140,6193+23]..[140,6193+28])
                                                expression (lang_new.ml[141,6224+25]..[141,6224+73])
                                                  Pexp_record
                                                  [
                                                    "tag" (lang_new.ml[141,6224+27]..[141,6224+30])
                                                      expression (lang_new.ml[141,6224+33]..[141,6224+37])
                                                        Pexp_variant "Key"
                                                        None
                                                    "word" (lang_new.ml[141,6224+39]..[141,6224+43])
                                                      expression (lang_new.ml[141,6224+46]..[141,6224+53])
                                                        Pexp_construct "A" (lang_new.ml[141,6224+47]..[141,6224+48])
                                                        Some
                                                          expression (lang_new.ml[141,6224+49]..[141,6224+52])
                                                            Pexp_constant Const_string(")",None)
                                                    "tag_name" (lang_new.ml[141,6224+55]..[141,6224+63])
                                                      expression (lang_new.ml[141,6224+66]..[141,6224+71])
                                                        Pexp_constant Const_string("Key",None)
                                                  ]
                                                  None
                                            ]
                                            None
                                          core_type (lang_new.ml[142,6298+25]..[142,6298+39])
                                            Ptyp_constr "Tokenf.pattern" (lang_new.ml[142,6298+25]..[142,6298+39])
                                            []
                                    expression (lang_new.ml[142,6298+40]..[142,6298+41]) ghost
                                      Pexp_construct "[]" (lang_new.ml[142,6298+40]..[142,6298+41]) ghost
                                      None
                                  ]
                          ]
                  ]
          ]
  ]
                                                                  "annot" (lang_new.ml[143,6341+16]..[143,6341+21])
                                                                    expression (lang_new.ml[144,6365+18]..[144,6365+96])
                                                                      Pexp_constant Const_string("(_loc, x, (Option.map (function | (x : Tokenf.txt) -> x.txt) y), (Some t))\n",None)
                                                                  "fn" (lang_new.ml[145,6463+16]..[145,6463+18])
                                                                    expression (lang_new.ml[146,6484+18]..[170,7774+78])
                                                                      Pexp_apply
                                                                      expression (lang_new.ml[146,6484+19]..[146,6484+34])
Pexp_ident "Gramf.mk_action" (lang_new.ml[146,6484+19]..[146,6484+34])
                                                                      [
<label> ""
  expression (lang_new.ml[147,6519+21]..[170,7774+77]) ghost
    Pexp_constraint
    expression (lang_new.ml[147,6519+22]..[166,7572+83])
      Pexp_function
      [
        <case>
          pattern (lang_new.ml[148,6550+24]..[148,6550+25])
            Ppat_any
          expression (lang_new.ml[149,6579+26]..[166,7572+83])
            Pexp_function
            [
              <case>
                pattern (lang_new.ml[150,6615+29]..[150,6615+49])
                  Ppat_constraint
                  pattern (lang_new.ml[150,6615+30]..[150,6615+31])
                    Ppat_var "t" (lang_new.ml[150,6615+30]..[150,6615+31])
                  core_type (lang_new.ml[150,6615+34]..[150,6615+48])
                    Ptyp_var Syntaxf__ctyp
                expression (lang_new.ml[151,6668+31]..[166,7572+82])
                  Pexp_function
                  [
                    <case>
                      pattern (lang_new.ml[152,6709+34]..[152,6709+35])
                        Ppat_any
                      expression (lang_new.ml[153,6748+36]..[166,7572+81])
                        Pexp_function
                        [
                          <case>
                            pattern (lang_new.ml[154,6794+39]..[154,6794+61])
                              Ppat_constraint
                              pattern (lang_new.ml[154,6794+40]..[154,6794+47])
                                Ppat_var "__fan_1" (lang_new.ml[154,6794+40]..[154,6794+47])
                              core_type (lang_new.ml[154,6794+50]..[154,6794+60])
                                Ptyp_constr "Tokenf.txt" (lang_new.ml[154,6794+50]..[154,6794+60])
                                []
                            expression (lang_new.ml[155,6859+41]..[166,7572+80])
                              Pexp_function
                              [
                                <case>
                                  pattern (lang_new.ml[156,6910+44]..[156,6910+45])
                                    Ppat_any
                                  expression (lang_new.ml[157,6959+46]..[166,7572+79])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (lang_new.ml[158,7015+49]..[158,7015+64])
                                          Ppat_constraint
                                          pattern (lang_new.ml[158,7015+50]..[158,7015+54])
                                            Ppat_var "_loc" (lang_new.ml[158,7015+50]..[158,7015+54])
                                          core_type (lang_new.ml[158,7015+57]..[158,7015+63])
                                            Ptyp_constr "Locf.t" (lang_new.ml[158,7015+57]..[158,7015+63])
                                            []
                                        expression (lang_new.ml[159,7083+51]..[166,7572+78])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lang_new.ml[159,7083+55]..[159,7083+56])
                                                Ppat_var "x" (lang_new.ml[159,7083+55]..[159,7083+56])
                                              expression (lang_new.ml[159,7083+59]..[159,7083+70])
                                                Pexp_field
                                                expression (lang_new.ml[159,7083+59]..[159,7083+66])
                                                  Pexp_ident "__fan_1" (lang_new.ml[159,7083+59]..[159,7083+66])
                                                "txt" (lang_new.ml[159,7083+67]..[159,7083+70])
                                          ]
                                          expression (lang_new.ml[160,7157+51]..[166,7572+78])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lang_new.ml[160,7157+55]..[160,7157+56])
                                                  Ppat_var "y" (lang_new.ml[160,7157+55]..[160,7157+56])
                                                expression (lang_new.ml[160,7157+59]..[160,7157+63])
                                                  Pexp_construct "None" (lang_new.ml[160,7157+59]..[160,7157+63])
                                                  None
                                            ]
                                            expression (lang_new.ml[161,7224+51]..[166,7572+78]) ghost
                                              Pexp_constraint
                                              expression (lang_new.ml[161,7224+52]..[166,7572+63])
                                                Pexp_tuple
                                                [
                                                  expression (lang_new.ml[161,7224+53]..[161,7224+57])
                                                    Pexp_ident "_loc" (lang_new.ml[161,7224+53]..[161,7224+57])
                                                  expression (lang_new.ml[161,7224+59]..[161,7224+60])
                                                    Pexp_ident "x" (lang_new.ml[161,7224+59]..[161,7224+60])
                                                  expression (lang_new.ml[162,7286+54]..[165,7496+74])
                                                    Pexp_apply
                                                    expression (lang_new.ml[162,7286+55]..[162,7286+65])
                                                      Pexp_ident "Option.map" (lang_new.ml[162,7286+55]..[162,7286+65])
                                                    [
                                                      <label> ""
                                                        expression (lang_new.ml[163,7352+57]..[165,7496+71])
                                                          Pexp_function
                                                          [
                                                            <case>
                                                              pattern (lang_new.ml[164,7419+60]..[164,7419+76])
                                                                Ppat_constraint
                                                                pattern (lang_new.ml[164,7419+61]..[164,7419+62])
                                                                  Ppat_var "x" (lang_new.ml[164,7419+61]..[164,7419+62])
                                                                core_type (lang_new.ml[164,7419+65]..[164,7419+75])
                                                                  Ptyp_constr "Tokenf.txt" (lang_new.ml[164,7419+65]..[164,7419+75])
                                                                  []
                                                              expression (lang_new.ml[165,7496+65]..[165,7496+70])
                                                                Pexp_field
                                                                expression (lang_new.ml[165,7496+65]..[165,7496+66])
                                                                  Pexp_ident "x" (lang_new.ml[165,7496+65]..[165,7496+66])
                                                                "txt" (lang_new.ml[165,7496+67]..[165,7496+70])
                                                          ]
                                                      <label> ""
                                                        expression (lang_new.ml[165,7496+72]..[165,7496+73])
                                                          Pexp_ident "y" (lang_new.ml[165,7496+72]..[165,7496+73])
                                                    ]
                                                  expression (lang_new.ml[166,7572+54]..[166,7572+62])
                                                    Pexp_construct "Some" (lang_new.ml[166,7572+55]..[166,7572+59])
                                                    Some
                                                      expression (lang_new.ml[166,7572+60]..[166,7572+61])
                                                        Pexp_ident "t" (lang_new.ml[166,7572+60]..[166,7572+61])
                                                ]
                                              core_type (lang_new.ml[166,7572+66]..[166,7572+77])
                                                Ptyp_var type_entry
                                    ]
                              ]
                        ]
                  ]
            ]
      ]
    core_type (lang_new.ml[167,7659+21]..[170,7774+76])
      Ptyp_arrow
      ""
      core_type (lang_new.ml[167,7659+21]..[167,7659+31])
        Ptyp_constr "Tokenf.txt" (lang_new.ml[167,7659+21]..[167,7659+31])
        []
      core_type (lang_new.ml[168,7694+23]..[170,7774+76])
        Ptyp_arrow
        ""
        core_type (lang_new.ml[168,7694+23]..[168,7694+37])
          Ptyp_var Syntaxf__ctyp
        core_type (lang_new.ml[169,7735+25]..[170,7774+76])
          Ptyp_arrow
          ""
          core_type (lang_new.ml[169,7735+25]..[169,7735+35])
            Ptyp_constr "Tokenf.txt" (lang_new.ml[169,7735+25]..[169,7735+35])
            []
          core_type (lang_new.ml[170,7774+27]..[170,7774+76])
            Ptyp_arrow
            ""
            core_type (lang_new.ml[170,7774+27]..[170,7774+37])
              Ptyp_constr "Tokenf.txt" (lang_new.ml[170,7774+27]..[170,7774+37])
              []
            core_type (lang_new.ml[170,7774+41]..[170,7774+76])
              Ptyp_arrow
              ""
              core_type (lang_new.ml[170,7774+41]..[170,7774+51])
                Ptyp_constr "Tokenf.txt" (lang_new.ml[170,7774+41]..[170,7774+51])
                []
              core_type (lang_new.ml[170,7774+55]..[170,7774+76])
                Ptyp_arrow
                ""
                core_type (lang_new.ml[170,7774+55]..[170,7774+61])
                  Ptyp_constr "Locf.t" (lang_new.ml[170,7774+55]..[170,7774+61])
                  []
                core_type (lang_new.ml[170,7774+65]..[170,7774+76])
                  Ptyp_var type_entry
                                                                      ]
                                                                ]
                                                                None
                                                              expression (lang_new.ml[172,7870+14]..[231,10819+16]) ghost
                                                                Pexp_construct "::" (lang_new.ml[172,7870+14]..[231,10819+16]) ghost
                                                                Some
                                                                  expression (lang_new.ml[172,7870+14]..[231,10819+16]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lang_new.ml[172,7870+14]..[231,10819+15])
Pexp_record
[
  "symbols" (lang_new.ml[173,7886+16]..[173,7886+23])
    expression (lang_new.ml[174,7912+18]..[195,8818+41])
      Pexp_construct "::" (lang_new.ml[174,7912+19]..[195,8818+41]) ghost
      Some
        expression (lang_new.ml[174,7912+19]..[195,8818+41]) ghost
          Pexp_tuple
          [
            expression (lang_new.ml[174,7912+19]..[178,8068+41])
              Pexp_construct "Token" (lang_new.ml[174,7912+19]..[174,7912+24])
              Some
                expression (lang_new.ml[175,7937+21]..[178,8068+41]) ghost
                  Pexp_constraint
                  expression (lang_new.ml[175,7937+22]..[178,8068+23])
                    Pexp_record
                    [
                      "descr" (lang_new.ml[176,7961+24]..[176,7961+29])
                        expression (lang_new.ml[177,7993+26]..[177,7993+74])
                          Pexp_record
                          [
                            "tag" (lang_new.ml[177,7993+28]..[177,7993+31])
                              expression (lang_new.ml[177,7993+34]..[177,7993+38])
                                Pexp_variant "Key"
                                None
                            "word" (lang_new.ml[177,7993+40]..[177,7993+44])
                              expression (lang_new.ml[177,7993+47]..[177,7993+54])
                                Pexp_construct "A" (lang_new.ml[177,7993+48]..[177,7993+49])
                                Some
                                  expression (lang_new.ml[177,7993+50]..[177,7993+53])
                                    Pexp_constant Const_string("(",None)
                            "tag_name" (lang_new.ml[177,7993+56]..[177,7993+64])
                              expression (lang_new.ml[177,7993+67]..[177,7993+72])
                                Pexp_constant Const_string("Key",None)
                          ]
                          None
                    ]
                    None
                  core_type (lang_new.ml[178,8068+26]..[178,8068+40])
                    Ptyp_constr "Tokenf.pattern" (lang_new.ml[178,8068+26]..[178,8068+40])
                    []
            expression (lang_new.ml[179,8111+18]..[195,8818+41]) ghost
              Pexp_construct "::" (lang_new.ml[179,8111+18]..[195,8818+41]) ghost
              Some
                expression (lang_new.ml[179,8111+18]..[195,8818+41]) ghost
                  Pexp_tuple
                  [
                    expression (lang_new.ml[179,8111+18]..[181,8216+35])
                      Pexp_construct "Token" (lang_new.ml[179,8111+18]..[179,8111+23])
                      Some
                        expression (lang_new.ml[180,8135+20]..[181,8216+35]) ghost
                          Pexp_constraint
                          expression (lang_new.ml[180,8135+21]..[180,8135+77])
                            Pexp_record
                            [
                              "descr" (lang_new.ml[180,8135+23]..[180,8135+28])
                                expression (lang_new.ml[180,8135+31]..[180,8135+75])
                                  Pexp_record
                                  [
                                    "tag" (lang_new.ml[180,8135+33]..[180,8135+36])
                                      expression (lang_new.ml[180,8135+39]..[180,8135+43])
                                        Pexp_variant "Lid"
                                        None
                                    "word" (lang_new.ml[180,8135+45]..[180,8135+49])
                                      expression (lang_new.ml[180,8135+52]..[180,8135+55])
                                        Pexp_construct "Any" (lang_new.ml[180,8135+52]..[180,8135+55])
                                        None
                                    "tag_name" (lang_new.ml[180,8135+57]..[180,8135+65])
                                      expression (lang_new.ml[180,8135+68]..[180,8135+73])
                                        Pexp_constant Const_string("Lid",None)
                                  ]
                                  None
                            ]
                            None
                          core_type (lang_new.ml[181,8216+20]..[181,8216+34])
                            Ptyp_constr "Tokenf.pattern" (lang_new.ml[181,8216+20]..[181,8216+34])
                            []
                    expression (lang_new.ml[182,8253+18]..[195,8818+41]) ghost
                      Pexp_construct "::" (lang_new.ml[182,8253+18]..[195,8818+41]) ghost
                      Some
                        expression (lang_new.ml[182,8253+18]..[195,8818+41]) ghost
                          Pexp_tuple
                          [
                            expression (lang_new.ml[182,8253+18]..[186,8405+40])
                              Pexp_construct "Token" (lang_new.ml[182,8253+18]..[182,8253+23])
                              Some
                                expression (lang_new.ml[183,8277+20]..[186,8405+40]) ghost
                                  Pexp_constraint
                                  expression (lang_new.ml[183,8277+21]..[186,8405+22])
                                    Pexp_record
                                    [
                                      "descr" (lang_new.ml[184,8300+23]..[184,8300+28])
                                        expression (lang_new.ml[185,8331+25]..[185,8331+73])
                                          Pexp_record
                                          [
                                            "tag" (lang_new.ml[185,8331+27]..[185,8331+30])
                                              expression (lang_new.ml[185,8331+33]..[185,8331+37])
                                                Pexp_variant "Key"
                                                None
                                            "word" (lang_new.ml[185,8331+39]..[185,8331+43])
                                              expression (lang_new.ml[185,8331+46]..[185,8331+53])
                                                Pexp_construct "A" (lang_new.ml[185,8331+47]..[185,8331+48])
                                                Some
                                                  expression (lang_new.ml[185,8331+49]..[185,8331+52])
                                                    Pexp_constant Const_string(":",None)
                                            "tag_name" (lang_new.ml[185,8331+55]..[185,8331+63])
                                              expression (lang_new.ml[185,8331+66]..[185,8331+71])
                                                Pexp_constant Const_string("Key",None)
                                          ]
                                          None
                                    ]
                                    None
                                  core_type (lang_new.ml[186,8405+25]..[186,8405+39])
                                    Ptyp_constr "Tokenf.pattern" (lang_new.ml[186,8405+25]..[186,8405+39])
                                    []
                            expression (lang_new.ml[187,8447+18]..[195,8818+41]) ghost
                              Pexp_construct "::" (lang_new.ml[187,8447+18]..[195,8818+41]) ghost
                              Some
                                expression (lang_new.ml[187,8447+18]..[195,8818+41]) ghost
                                  Pexp_tuple
                                  [
                                    expression (lang_new.ml[187,8447+18]..[187,8447+75])
                                      Pexp_construct "Nterm" (lang_new.ml[187,8447+18]..[187,8447+23])
                                      Some
                                        expression (lang_new.ml[187,8447+24]..[187,8447+75])
                                          Pexp_apply
                                          expression (lang_new.ml[187,8447+25]..[187,8447+34])
                                            Pexp_ident "Gramf.obj" (lang_new.ml[187,8447+25]..[187,8447+34])
                                          [
                                            <label> ""
                                              expression (lang_new.ml[187,8447+35]..[187,8447+74]) ghost
                                                Pexp_constraint
                                                expression (lang_new.ml[187,8447+36]..[187,8447+48])
                                                  Pexp_ident "Syntaxf.ctyp" (lang_new.ml[187,8447+36]..[187,8447+48])
                                                core_type (lang_new.ml[187,8447+51]..[187,8447+73])
                                                  Ptyp_constr "Gramf.t" (lang_new.ml[187,8447+66]..[187,8447+73])
                                                  [
                                                    core_type (lang_new.ml[187,8447+51]..[187,8447+65])
                                                      Ptyp_var Syntaxf__ctyp
                                                  ]
                                          ]
                                    expression (lang_new.ml[188,8524+18]..[195,8818+41]) ghost
                                      Pexp_construct "::" (lang_new.ml[188,8524+18]..[195,8818+41]) ghost
                                      Some
                                        expression (lang_new.ml[188,8524+18]..[195,8818+41]) ghost
                                          Pexp_tuple
                                          [
                                            expression (lang_new.ml[188,8524+18]..[190,8629+35])
                                              Pexp_construct "Token" (lang_new.ml[188,8524+18]..[188,8524+23])
                                              Some
                                                expression (lang_new.ml[189,8548+20]..[190,8629+35]) ghost
                                                  Pexp_constraint
                                                  expression (lang_new.ml[189,8548+21]..[189,8548+77])
                                                    Pexp_record
                                                    [
                                                      "descr" (lang_new.ml[189,8548+23]..[189,8548+28])
                                                        expression (lang_new.ml[189,8548+31]..[189,8548+75])
                                                          Pexp_record
                                                          [
                                                            "tag" (lang_new.ml[189,8548+33]..[189,8548+36])
                                                              expression (lang_new.ml[189,8548+39]..[189,8548+43])
                                                                Pexp_variant "Str"
                                                                None
                                                            "word" (lang_new.ml[189,8548+45]..[189,8548+49])
                                                              expression (lang_new.ml[189,8548+52]..[189,8548+55])
                                                                Pexp_construct "Any" (lang_new.ml[189,8548+52]..[189,8548+55])
                                                                None
                                                            "tag_name" (lang_new.ml[189,8548+57]..[189,8548+65])
                                                              expression (lang_new.ml[189,8548+68]..[189,8548+73])
                                                                Pexp_constant Const_string("Str",None)
                                                          ]
                                                          None
                                                    ]
                                                    None
                                                  core_type (lang_new.ml[190,8629+20]..[190,8629+34])
                                                    Ptyp_constr "Tokenf.pattern" (lang_new.ml[190,8629+20]..[190,8629+34])
                                                    []
                                            expression (lang_new.ml[191,8666+18]..[195,8818+41]) ghost
                                              Pexp_construct "::" (lang_new.ml[191,8666+18]..[195,8818+41]) ghost
                                              Some
                                                expression (lang_new.ml[191,8666+18]..[195,8818+41]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (lang_new.ml[191,8666+18]..[195,8818+40])
                                                      Pexp_construct "Token" (lang_new.ml[191,8666+18]..[191,8666+23])
                                                      Some
                                                        expression (lang_new.ml[192,8690+20]..[195,8818+40]) ghost
                                                          Pexp_constraint
                                                          expression (lang_new.ml[192,8690+21]..[195,8818+22])
                                                            Pexp_record
                                                            [
                                                              "descr" (lang_new.ml[193,8713+23]..[193,8713+28])
                                                                expression (lang_new.ml[194,8744+25]..[194,8744+73])
                                                                  Pexp_record
                                                                  [
                                                                    "tag" (lang_new.ml[194,8744+27]..[194,8744+30])
                                                                      expression (lang_new.ml[194,8744+33]..[194,8744+37])
Pexp_variant "Key"
None
                                                                    "word" (lang_new.ml[194,8744+39]..[194,8744+43])
                                                                      expression (lang_new.ml[194,8744+46]..[194,8744+53])
Pexp_construct "A" (lang_new.ml[194,8744+47]..[194,8744+48])
Some
  expression (lang_new.ml[194,8744+49]..[194,8744+52])
    Pexp_constant Const_string(")",None)
                                                                    "tag_name" (lang_new.ml[194,8744+55]..[194,8744+63])
                                                                      expression (lang_new.ml[194,8744+66]..[194,8744+71])
Pexp_constant Const_string("Key",None)
                                                                  ]
                                                                  None
                                                            ]
                                                            None
                                                          core_type (lang_new.ml[195,8818+25]..[195,8818+39])
                                                            Ptyp_constr "Tokenf.pattern" (lang_new.ml[195,8818+25]..[195,8818+39])
                                                            []
                                                    expression (lang_new.ml[195,8818+40]..[195,8818+41]) ghost
                                                      Pexp_construct "[]" (lang_new.ml[195,8818+40]..[195,8818+41]) ghost
                                                      None
                                                  ]
                                          ]
                                  ]
                          ]
                  ]
          ]
  "annot" (lang_new.ml[196,8861+16]..[196,8861+21])
    expression (lang_new.ml[197,8885+18]..[197,8885+96])
      Pexp_constant Const_string("(_loc, x, (Option.map (function | (x : Tokenf.txt) -> x.txt) y), (Some t))\n",None)
  "fn" (lang_new.ml[198,8983+16]..[198,8983+18])
    expression (lang_new.ml[199,9004+18]..[230,10750+68])
      Pexp_apply
      expression (lang_new.ml[199,9004+19]..[199,9004+34])
        Pexp_ident "Gramf.mk_action" (lang_new.ml[199,9004+19]..[199,9004+34])
      [
        <label> ""
          expression (lang_new.ml[200,9039+21]..[230,10750+67]) ghost
            Pexp_constraint
            expression (lang_new.ml[200,9039+22]..[224,10471+76])
              Pexp_function
              [
                <case>
                  pattern (lang_new.ml[201,9070+24]..[201,9070+25])
                    Ppat_any
                  expression (lang_new.ml[202,9099+26]..[224,10471+76])
                    Pexp_function
                    [
                      <case>
                        pattern (lang_new.ml[203,9135+29]..[203,9135+45])
                          Ppat_constraint
                          pattern (lang_new.ml[203,9135+30]..[203,9135+31])
                            Ppat_var "y" (lang_new.ml[203,9135+30]..[203,9135+31])
                          core_type (lang_new.ml[203,9135+34]..[203,9135+44])
                            Ptyp_constr "Tokenf.txt" (lang_new.ml[203,9135+34]..[203,9135+44])
                            []
                        expression (lang_new.ml[204,9184+31]..[224,10471+75])
                          Pexp_function
                          [
                            <case>
                              pattern (lang_new.ml[205,9225+34]..[205,9225+54])
                                Ppat_constraint
                                pattern (lang_new.ml[205,9225+35]..[205,9225+36])
                                  Ppat_var "t" (lang_new.ml[205,9225+35]..[205,9225+36])
                                core_type (lang_new.ml[205,9225+39]..[205,9225+53])
                                  Ptyp_var Syntaxf__ctyp
                              expression (lang_new.ml[206,9283+36]..[224,10471+74])
                                Pexp_function
                                [
                                  <case>
                                    pattern (lang_new.ml[207,9329+39]..[207,9329+40])
                                      Ppat_any
                                    expression (lang_new.ml[208,9373+41]..[224,10471+73])
                                      Pexp_function
                                      [
                                        <case>
                                          pattern (lang_new.ml[209,9424+44]..[209,9424+66])
                                            Ppat_constraint
                                            pattern (lang_new.ml[209,9424+45]..[209,9424+52])
                                              Ppat_var "__fan_1" (lang_new.ml[209,9424+45]..[209,9424+52])
                                            core_type (lang_new.ml[209,9424+55]..[209,9424+65])
                                              Ptyp_constr "Tokenf.txt" (lang_new.ml[209,9424+55]..[209,9424+65])
                                              []
                                          expression (lang_new.ml[210,9494+46]..[224,10471+72])
                                            Pexp_function
                                            [
                                              <case>
                                                pattern (lang_new.ml[211,9550+49]..[211,9550+50])
                                                  Ppat_any
                                                expression (lang_new.ml[212,9604+51]..[224,10471+71])
                                                  Pexp_function
                                                  [
                                                    <case>
                                                      pattern (lang_new.ml[213,9665+54]..[213,9665+69])
                                                        Ppat_constraint
                                                        pattern (lang_new.ml[213,9665+55]..[213,9665+59])
                                                          Ppat_var "_loc" (lang_new.ml[213,9665+55]..[213,9665+59])
                                                        core_type (lang_new.ml[213,9665+62]..[213,9665+68])
                                                          Ptyp_constr "Locf.t" (lang_new.ml[213,9665+62]..[213,9665+68])
                                                          []
                                                      expression (lang_new.ml[214,9738+56]..[224,10471+70])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (lang_new.ml[214,9738+60]..[214,9738+61])
                                                              Ppat_var "x" (lang_new.ml[214,9738+60]..[214,9738+61])
                                                            expression (lang_new.ml[214,9738+64]..[214,9738+75])
                                                              Pexp_field
                                                              expression (lang_new.ml[214,9738+64]..[214,9738+71])
                                                                Pexp_ident "__fan_1" (lang_new.ml[214,9738+64]..[214,9738+71])
                                                              "txt" (lang_new.ml[214,9738+72]..[214,9738+75])
                                                        ]
                                                        expression (lang_new.ml[215,9817+56]..[224,10471+70])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (lang_new.ml[215,9817+60]..[215,9817+61])
                                                                Ppat_var "y" (lang_new.ml[215,9817+60]..[215,9817+61])
                                                              expression (lang_new.ml[215,9817+64]..[215,9817+70])
                                                                Pexp_construct "Some" (lang_new.ml[215,9817+64]..[215,9817+68])
                                                                Some
                                                                  expression (lang_new.ml[215,9817+69]..[215,9817+70])
                                                                    Pexp_ident "y" (lang_new.ml[215,9817+69]..[215,9817+70])
                                                          ]
                                                          expression (lang_new.ml[216,9891+56]..[224,10471+70]) ghost
                                                            Pexp_constraint
                                                            expression (lang_new.ml[216,9891+57]..[223,10399+68])
                                                              Pexp_tuple
                                                              [
                                                                expression (lang_new.ml[216,9891+58]..[216,9891+62])
                                                                  Pexp_ident "_loc" (lang_new.ml[216,9891+58]..[216,9891+62])
                                                                expression (lang_new.ml[216,9891+64]..[216,9891+65])
                                                                  Pexp_ident "x" (lang_new.ml[216,9891+64]..[216,9891+65])
                                                                expression (lang_new.ml[217,9958+59]..[222,10321+76])
                                                                  Pexp_apply
                                                                  expression (lang_new.ml[217,9958+60]..[217,9958+70])
                                                                    Pexp_ident "Option.map" (lang_new.ml[217,9958+60]..[217,9958+70])
                                                                  [
                                                                    <label> ""
                                                                      expression (lang_new.ml[218,10029+62]..[222,10321+73])
Pexp_function
[
  <case>
    pattern (lang_new.ml[219,10101+65]..[220,10171+78])
      Ppat_constraint
      pattern (lang_new.ml[219,10101+66]..[219,10101+67])
        Ppat_var "x" (lang_new.ml[219,10101+66]..[219,10101+67])
      core_type (lang_new.ml[220,10171+67]..[220,10171+77])
        Ptyp_constr "Tokenf.txt" (lang_new.ml[220,10171+67]..[220,10171+77])
        []
    expression (lang_new.ml[222,10321+67]..[222,10321+72])
      Pexp_field
      expression (lang_new.ml[222,10321+67]..[222,10321+68])
        Pexp_ident "x" (lang_new.ml[222,10321+67]..[222,10321+68])
      "txt" (lang_new.ml[222,10321+69]..[222,10321+72])
]
                                                                    <label> ""
                                                                      expression (lang_new.ml[222,10321+74]..[222,10321+75])
Pexp_ident "y" (lang_new.ml[222,10321+74]..[222,10321+75])
                                                                  ]
                                                                expression (lang_new.ml[223,10399+59]..[223,10399+67])
                                                                  Pexp_construct "Some" (lang_new.ml[223,10399+60]..[223,10399+64])
                                                                  Some
                                                                    expression (lang_new.ml[223,10399+65]..[223,10399+66])
                                                                      Pexp_ident "t" (lang_new.ml[223,10399+65]..[223,10399+66])
                                                              ]
                                                            core_type (lang_new.ml[224,10471+58]..[224,10471+69])
                                                              Ptyp_var type_entry
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                    ]
              ]
            core_type (lang_new.ml[225,10551+21]..[230,10750+66])
              Ptyp_arrow
              ""
              core_type (lang_new.ml[225,10551+21]..[225,10551+31])
                Ptyp_constr "Tokenf.txt" (lang_new.ml[225,10551+21]..[225,10551+31])
                []
              core_type (lang_new.ml[226,10586+23]..[230,10750+66])
                Ptyp_arrow
                ""
                core_type (lang_new.ml[226,10586+23]..[226,10586+33])
                  Ptyp_constr "Tokenf.txt" (lang_new.ml[226,10586+23]..[226,10586+33])
                  []
                core_type (lang_new.ml[227,10623+25]..[230,10750+66])
                  Ptyp_arrow
                  ""
                  core_type (lang_new.ml[227,10623+25]..[227,10623+39])
                    Ptyp_var Syntaxf__ctyp
                  core_type (lang_new.ml[228,10666+27]..[230,10750+66])
                    Ptyp_arrow
                    ""
                    core_type (lang_new.ml[228,10666+27]..[228,10666+37])
                      Ptyp_constr "Tokenf.txt" (lang_new.ml[228,10666+27]..[228,10666+37])
                      []
                    core_type (lang_new.ml[229,10707+29]..[230,10750+66])
                      Ptyp_arrow
                      ""
                      core_type (lang_new.ml[229,10707+29]..[229,10707+39])
                        Ptyp_constr "Tokenf.txt" (lang_new.ml[229,10707+29]..[229,10707+39])
                        []
                      core_type (lang_new.ml[230,10750+31]..[230,10750+66])
                        Ptyp_arrow
                        ""
                        core_type (lang_new.ml[230,10750+31]..[230,10750+41])
                          Ptyp_constr "Tokenf.txt" (lang_new.ml[230,10750+31]..[230,10750+41])
                          []
                        core_type (lang_new.ml[230,10750+45]..[230,10750+66])
                          Ptyp_arrow
                          ""
                          core_type (lang_new.ml[230,10750+45]..[230,10750+51])
                            Ptyp_constr "Locf.t" (lang_new.ml[230,10750+45]..[230,10750+51])
                            []
                          core_type (lang_new.ml[230,10750+55]..[230,10750+66])
                            Ptyp_var type_entry
      ]
]
None
                                                                      expression (lang_new.ml[231,10819+15]..[231,10819+16]) ghost
Pexp_construct "[]" (lang_new.ml[231,10819+15]..[231,10819+16]) ghost
None
                                                                    ]
                                                            ]
                                                    ]
                                            ]
                                    ]
                          ]
                          None
                        core_type (lang_new.ml[232,10836+14]..[232,10836+26])
                          Ptyp_constr "Gramf.olevel" (lang_new.ml[232,10836+14]..[232,10836+26])
                          []
                  ]
                  None
                core_type (lang_new.ml[233,10864+9]..[233,10864+40])
                  Ptyp_constr "Gramf.single_extend_statement" (lang_new.ml[233,10864+11]..[233,10864+40])
                  [
                    core_type (lang_new.ml[233,10864+9]..[233,10864+10])
                      Ptyp_any
                  ]
          ]
        expression (lang_new.ml[234,10907+2]..[776,43139+41])
          Pexp_sequence
          expression (lang_new.ml[234,10907+2]..[303,13640+41])
            Pexp_apply
            expression (lang_new.ml[234,10907+2]..[234,10907+21])
              Pexp_ident "Gramf.extend_single" (lang_new.ml[234,10907+2]..[234,10907+21])
            [
              <label> ""
                expression (lang_new.ml[235,10929+4]..[303,13640+41]) ghost
                  Pexp_constraint
                  expression (lang_new.ml[235,10929+5]..[303,13640+6])
                    Pexp_record
                    [
                      "entry" (lang_new.ml[236,10936+7]..[236,10936+12])
                        expression (lang_new.ml[236,10936+15]..[236,10936+33]) ghost
                          Pexp_constraint
                          expression (lang_new.ml[236,10936+16]..[236,10936+18])
                            Pexp_ident "ty" (lang_new.ml[236,10936+16]..[236,10936+18])
                          core_type (lang_new.ml[236,10936+21]..[236,10936+32])
                            Ptyp_constr "Gramf.t" (lang_new.ml[236,10936+25]..[236,10936+32])
                            [
                              core_type (lang_new.ml[236,10936+21]..[236,10936+24])
                                Ptyp_var ty
                            ]
                      "olevel" (lang_new.ml[237,10971+7]..[237,10971+13])
                        expression (lang_new.ml[238,10987+9]..[302,13612+27]) ghost
                          Pexp_constraint
                          expression (lang_new.ml[238,10987+10]..[302,13612+11])
                            Pexp_record
                            [
                              "label" (lang_new.ml[239,10999+12]..[239,10999+17])
                                expression (lang_new.ml[239,10999+20]..[239,10999+24])
                                  Pexp_construct "None" (lang_new.ml[239,10999+20]..[239,10999+24])
                                  None
                              "lassoc" (lang_new.ml[240,11025+12]..[240,11025+18])
                                expression (lang_new.ml[240,11025+21]..[240,11025+25])
                                  Pexp_construct "true" (lang_new.ml[240,11025+21]..[240,11025+25])
                                  None
                              "productions" (lang_new.ml[241,11052+12]..[241,11052+23])
                                expression (lang_new.ml[242,11078+14]..[301,13595+16])
                                  Pexp_construct "::" (lang_new.ml[242,11078+15]..[301,13595+16]) ghost
                                  Some
                                    expression (lang_new.ml[242,11078+15]..[301,13595+16]) ghost
                                      Pexp_tuple
                                      [
                                        expression (lang_new.ml[242,11078+15]..[281,12783+16])
                                          Pexp_record
                                          [
                                            "symbols" (lang_new.ml[243,11095+17]..[243,11095+24])
                                              expression (lang_new.ml[244,11122+19]..[260,11815+42])
                                                Pexp_construct "::" (lang_new.ml[244,11122+20]..[260,11815+42]) ghost
                                                Some
                                                  expression (lang_new.ml[244,11122+20]..[260,11815+42]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lang_new.ml[244,11122+20]..[248,11282+42])
                                                        Pexp_construct "Token" (lang_new.ml[244,11122+20]..[244,11122+25])
                                                        Some
                                                          expression (lang_new.ml[245,11148+22]..[248,11282+42]) ghost
                                                            Pexp_constraint
                                                            expression (lang_new.ml[245,11148+23]..[248,11282+24])
                                                              Pexp_record
                                                              [
                                                                "descr" (lang_new.ml[246,11173+25]..[246,11173+30])
                                                                  expression (lang_new.ml[247,11206+27]..[247,11206+75])
                                                                    Pexp_record
                                                                    [
                                                                      "tag" (lang_new.ml[247,11206+29]..[247,11206+32])
expression (lang_new.ml[247,11206+35]..[247,11206+39])
  Pexp_variant "Key"
  None
                                                                      "word" (lang_new.ml[247,11206+41]..[247,11206+45])
expression (lang_new.ml[247,11206+48]..[247,11206+55])
  Pexp_construct "A" (lang_new.ml[247,11206+49]..[247,11206+50])
  Some
    expression (lang_new.ml[247,11206+51]..[247,11206+54])
      Pexp_constant Const_string("(",None)
                                                                      "tag_name" (lang_new.ml[247,11206+57]..[247,11206+65])
expression (lang_new.ml[247,11206+68]..[247,11206+73])
  Pexp_constant Const_string("Key",None)
                                                                    ]
                                                                    None
                                                              ]
                                                              None
                                                            core_type (lang_new.ml[248,11282+27]..[248,11282+41])
                                                              Ptyp_constr "Tokenf.pattern" (lang_new.ml[248,11282+27]..[248,11282+41])
                                                              []
                                                      expression (lang_new.ml[249,11326+19]..[260,11815+42]) ghost
                                                        Pexp_construct "::" (lang_new.ml[249,11326+19]..[260,11815+42]) ghost
                                                        Some
                                                          expression (lang_new.ml[249,11326+19]..[260,11815+42]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lang_new.ml[249,11326+19]..[249,11326+63])
                                                                Pexp_construct "Nterm" (lang_new.ml[249,11326+19]..[249,11326+24])
                                                                Some
                                                                  expression (lang_new.ml[249,11326+25]..[249,11326+63])
                                                                    Pexp_apply
                                                                    expression (lang_new.ml[249,11326+26]..[249,11326+35])
                                                                      Pexp_ident "Gramf.obj" (lang_new.ml[249,11326+26]..[249,11326+35])
                                                                    [
                                                                      <label> ""
expression (lang_new.ml[249,11326+36]..[249,11326+62]) ghost
  Pexp_constraint
  expression (lang_new.ml[249,11326+37]..[249,11326+43])
    Pexp_ident "qualid" (lang_new.ml[249,11326+37]..[249,11326+43])
  core_type (lang_new.ml[249,11326+46]..[249,11326+61])
    Ptyp_constr "Gramf.t" (lang_new.ml[249,11326+54]..[249,11326+61])
    [
      core_type (lang_new.ml[249,11326+46]..[249,11326+53])
        Ptyp_var qualid
    ]
                                                                    ]
                                                              expression (lang_new.ml[250,11391+19]..[260,11815+42]) ghost
                                                                Pexp_construct "::" (lang_new.ml[250,11391+19]..[260,11815+42]) ghost
                                                                Some
                                                                  expression (lang_new.ml[250,11391+19]..[260,11815+42]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lang_new.ml[250,11391+19]..[254,11547+41])
Pexp_construct "Token" (lang_new.ml[250,11391+19]..[250,11391+24])
Some
  expression (lang_new.ml[251,11416+21]..[254,11547+41]) ghost
    Pexp_constraint
    expression (lang_new.ml[251,11416+22]..[254,11547+23])
      Pexp_record
      [
        "descr" (lang_new.ml[252,11440+24]..[252,11440+29])
          expression (lang_new.ml[253,11472+26]..[253,11472+74])
            Pexp_record
            [
              "tag" (lang_new.ml[253,11472+28]..[253,11472+31])
                expression (lang_new.ml[253,11472+34]..[253,11472+38])
                  Pexp_variant "Key"
                  None
              "word" (lang_new.ml[253,11472+40]..[253,11472+44])
                expression (lang_new.ml[253,11472+47]..[253,11472+54])
                  Pexp_construct "A" (lang_new.ml[253,11472+48]..[253,11472+49])
                  Some
                    expression (lang_new.ml[253,11472+50]..[253,11472+53])
                      Pexp_constant Const_string(":",None)
              "tag_name" (lang_new.ml[253,11472+56]..[253,11472+64])
                expression (lang_new.ml[253,11472+67]..[253,11472+72])
                  Pexp_constant Const_string("Key",None)
            ]
            None
      ]
      None
    core_type (lang_new.ml[254,11547+26]..[254,11547+40])
      Ptyp_constr "Tokenf.pattern" (lang_new.ml[254,11547+26]..[254,11547+40])
      []
                                                                      expression (lang_new.ml[255,11590+19]..[260,11815+42]) ghost
Pexp_construct "::" (lang_new.ml[255,11590+19]..[260,11815+42]) ghost
Some
  expression (lang_new.ml[255,11590+19]..[260,11815+42]) ghost
    Pexp_tuple
    [
      expression (lang_new.ml[255,11590+19]..[255,11590+67])
        Pexp_construct "Nterm" (lang_new.ml[255,11590+19]..[255,11590+24])
        Some
          expression (lang_new.ml[255,11590+25]..[255,11590+67])
            Pexp_apply
            expression (lang_new.ml[255,11590+26]..[255,11590+35])
              Pexp_ident "Gramf.obj" (lang_new.ml[255,11590+26]..[255,11590+35])
            [
              <label> ""
                expression (lang_new.ml[255,11590+36]..[255,11590+66]) ghost
                  Pexp_constraint
                  expression (lang_new.ml[255,11590+37]..[255,11590+45])
                    Pexp_ident "t_qualid" (lang_new.ml[255,11590+37]..[255,11590+45])
                  core_type (lang_new.ml[255,11590+48]..[255,11590+65])
                    Ptyp_constr "Gramf.t" (lang_new.ml[255,11590+58]..[255,11590+65])
                    [
                      core_type (lang_new.ml[255,11590+48]..[255,11590+57])
                        Ptyp_var t_qualid
                    ]
            ]
      expression (lang_new.ml[256,11659+19]..[260,11815+42]) ghost
        Pexp_construct "::" (lang_new.ml[256,11659+19]..[260,11815+42]) ghost
        Some
          expression (lang_new.ml[256,11659+19]..[260,11815+42]) ghost
            Pexp_tuple
            [
              expression (lang_new.ml[256,11659+19]..[260,11815+41])
                Pexp_construct "Token" (lang_new.ml[256,11659+19]..[256,11659+24])
                Some
                  expression (lang_new.ml[257,11684+21]..[260,11815+41]) ghost
                    Pexp_constraint
                    expression (lang_new.ml[257,11684+22]..[260,11815+23])
                      Pexp_record
                      [
                        "descr" (lang_new.ml[258,11708+24]..[258,11708+29])
                          expression (lang_new.ml[259,11740+26]..[259,11740+74])
                            Pexp_record
                            [
                              "tag" (lang_new.ml[259,11740+28]..[259,11740+31])
                                expression (lang_new.ml[259,11740+34]..[259,11740+38])
                                  Pexp_variant "Key"
                                  None
                              "word" (lang_new.ml[259,11740+40]..[259,11740+44])
                                expression (lang_new.ml[259,11740+47]..[259,11740+54])
                                  Pexp_construct "A" (lang_new.ml[259,11740+48]..[259,11740+49])
                                  Some
                                    expression (lang_new.ml[259,11740+50]..[259,11740+53])
                                      Pexp_constant Const_string(")",None)
                              "tag_name" (lang_new.ml[259,11740+56]..[259,11740+64])
                                expression (lang_new.ml[259,11740+67]..[259,11740+72])
                                  Pexp_constant Const_string("Key",None)
                            ]
                            None
                      ]
                      None
                    core_type (lang_new.ml[260,11815+26]..[260,11815+40])
                      Ptyp_constr "Tokenf.pattern" (lang_new.ml[260,11815+26]..[260,11815+40])
                      []
              expression (lang_new.ml[260,11815+41]..[260,11815+42]) ghost
                Pexp_construct "[]" (lang_new.ml[260,11815+41]..[260,11815+42]) ghost
                None
            ]
    ]
                                                                    ]
                                                            ]
                                                    ]
                                            "annot" (lang_new.ml[261,11859+17]..[261,11859+22])
                                              expression (lang_new.ml[261,11859+25]..[261,11859+40])
                                                Pexp_constant Const_string("`Dyn (x, t)\n",None)
                                            "fn" (lang_new.ml[262,11901+17]..[262,11901+19])
                                              expression (lang_new.ml[263,11923+19]..[280,12714+68])
                                                Pexp_apply
                                                expression (lang_new.ml[263,11923+20]..[263,11923+35])
                                                  Pexp_ident "Gramf.mk_action" (lang_new.ml[263,11923+20]..[263,11923+35])
                                                [
                                                  <label> ""
                                                    expression (lang_new.ml[264,11959+22]..[280,12714+67]) ghost
                                                      Pexp_constraint
                                                      expression (lang_new.ml[264,11959+23]..[276,12521+76])
                                                        Pexp_function
                                                        [
                                                          <case>
                                                            pattern (lang_new.ml[265,11991+25]..[265,11991+26])
                                                              Ppat_any
                                                            expression (lang_new.ml[266,12021+27]..[276,12521+76])
                                                              Pexp_function
                                                              [
                                                                <case>
                                                                  pattern (lang_new.ml[267,12058+30]..[267,12058+45])
                                                                    Ppat_constraint
                                                                    pattern (lang_new.ml[267,12058+31]..[267,12058+32])
                                                                      Ppat_var "t" (lang_new.ml[267,12058+31]..[267,12058+32])
                                                                    core_type (lang_new.ml[267,12058+35]..[267,12058+44])
                                                                      Ptyp_var t_qualid
                                                                  expression (lang_new.ml[268,12107+32]..[276,12521+75])
                                                                    Pexp_function
                                                                    [
                                                                      <case>
pattern (lang_new.ml[269,12149+35]..[269,12149+36])
  Ppat_any
expression (lang_new.ml[270,12189+37]..[276,12521+74])
  Pexp_function
  [
    <case>
      pattern (lang_new.ml[271,12236+40]..[271,12236+53])
        Ppat_constraint
        pattern (lang_new.ml[271,12236+41]..[271,12236+42])
          Ppat_var "x" (lang_new.ml[271,12236+41]..[271,12236+42])
        core_type (lang_new.ml[271,12236+45]..[271,12236+52])
          Ptyp_var qualid
      expression (lang_new.ml[272,12293+42]..[276,12521+73])
        Pexp_function
        [
          <case>
            pattern (lang_new.ml[273,12345+45]..[273,12345+46])
              Ppat_any
            expression (lang_new.ml[274,12395+47]..[276,12521+72])
              Pexp_function
              [
                <case>
                  pattern (lang_new.ml[275,12452+50]..[275,12452+65])
                    Ppat_constraint
                    pattern (lang_new.ml[275,12452+51]..[275,12452+55])
                      Ppat_var "_loc" (lang_new.ml[275,12452+51]..[275,12452+55])
                    core_type (lang_new.ml[275,12452+58]..[275,12452+64])
                      Ptyp_constr "Locf.t" (lang_new.ml[275,12452+58]..[275,12452+64])
                      []
                  expression (lang_new.ml[276,12521+52]..[276,12521+71]) ghost
                    Pexp_constraint
                    expression (lang_new.ml[276,12521+53]..[276,12521+64])
                      Pexp_variant "Dyn"
                      Some
                        expression (lang_new.ml[276,12521+58]..[276,12521+64])
                          Pexp_tuple
                          [
                            expression (lang_new.ml[276,12521+59]..[276,12521+60])
                              Pexp_ident "x" (lang_new.ml[276,12521+59]..[276,12521+60])
                            expression (lang_new.ml[276,12521+62]..[276,12521+63])
                              Pexp_ident "t" (lang_new.ml[276,12521+62]..[276,12521+63])
                          ]
                    core_type (lang_new.ml[276,12521+67]..[276,12521+70])
                      Ptyp_var ty
              ]
        ]
  ]
                                                                    ]
                                                              ]
                                                        ]
                                                      core_type (lang_new.ml[277,12601+22]..[280,12714+66])
                                                        Ptyp_arrow
                                                        ""
                                                        core_type (lang_new.ml[277,12601+22]..[277,12601+32])
                                                          Ptyp_constr "Tokenf.txt" (lang_new.ml[277,12601+22]..[277,12601+32])
                                                          []
                                                        core_type (lang_new.ml[278,12637+24]..[280,12714+66])
                                                          Ptyp_arrow
                                                          ""
                                                          core_type (lang_new.ml[278,12637+24]..[278,12637+33])
                                                            Ptyp_var t_qualid
                                                          core_type (lang_new.ml[279,12674+26]..[280,12714+66])
                                                            Ptyp_arrow
                                                            ""
                                                            core_type (lang_new.ml[279,12674+26]..[279,12674+36])
                                                              Ptyp_constr "Tokenf.txt" (lang_new.ml[279,12674+26]..[279,12674+36])
                                                              []
                                                            core_type (lang_new.ml[280,12714+28]..[280,12714+66])
                                                              Ptyp_arrow
                                                              ""
                                                              core_type (lang_new.ml[280,12714+28]..[280,12714+35])
                                                                Ptyp_var qualid
                                                              core_type (lang_new.ml[280,12714+39]..[280,12714+66])
                                                                Ptyp_arrow
                                                                ""
                                                                core_type (lang_new.ml[280,12714+39]..[280,12714+49])
                                                                  Ptyp_constr "Tokenf.txt" (lang_new.ml[280,12714+39]..[280,12714+49])
                                                                  []
                                                                core_type (lang_new.ml[280,12714+53]..[280,12714+66])
                                                                  Ptyp_arrow
                                                                  ""
                                                                  core_type (lang_new.ml[280,12714+53]..[280,12714+59])
                                                                    Ptyp_constr "Locf.t" (lang_new.ml[280,12714+53]..[280,12714+59])
                                                                    []
                                                                  core_type (lang_new.ml[280,12714+63]..[280,12714+66])
                                                                    Ptyp_var ty
                                                ]
                                          ]
                                          None
                                        expression (lang_new.ml[282,12801+14]..[301,13595+16]) ghost
                                          Pexp_construct "::" (lang_new.ml[282,12801+14]..[301,13595+16]) ghost
                                          Some
                                            expression (lang_new.ml[282,12801+14]..[301,13595+16]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lang_new.ml[282,12801+14]..[291,13189+15])
                                                  Pexp_record
                                                  [
                                                    "symbols" (lang_new.ml[283,12817+16]..[283,12817+23])
                                                      expression (lang_new.ml[283,12817+26]..[283,12817+74])
                                                        Pexp_construct "::" (lang_new.ml[283,12817+27]..[283,12817+74]) ghost
                                                        Some
                                                          expression (lang_new.ml[283,12817+27]..[283,12817+74]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lang_new.ml[283,12817+27]..[283,12817+73])
                                                                Pexp_construct "Nterm" (lang_new.ml[283,12817+27]..[283,12817+32])
                                                                Some
                                                                  expression (lang_new.ml[283,12817+33]..[283,12817+73])
                                                                    Pexp_apply
                                                                    expression (lang_new.ml[283,12817+34]..[283,12817+43])
                                                                      Pexp_ident "Gramf.obj" (lang_new.ml[283,12817+34]..[283,12817+43])
                                                                    [
                                                                      <label> ""
expression (lang_new.ml[283,12817+44]..[283,12817+72]) ghost
  Pexp_constraint
  expression (lang_new.ml[283,12817+45]..[283,12817+52])
    Pexp_ident "qualuid" (lang_new.ml[283,12817+45]..[283,12817+52])
  core_type (lang_new.ml[283,12817+55]..[283,12817+71])
    Ptyp_constr "Gramf.t" (lang_new.ml[283,12817+64]..[283,12817+71])
    [
      core_type (lang_new.ml[283,12817+55]..[283,12817+63])
        Ptyp_var qualuid
    ]
                                                                    ]
                                                              expression (lang_new.ml[283,12817+73]..[283,12817+74]) ghost
                                                                Pexp_construct "[]" (lang_new.ml[283,12817+73]..[283,12817+74]) ghost
                                                                None
                                                            ]
                                                    "annot" (lang_new.ml[284,12893+16]..[284,12893+21])
                                                      expression (lang_new.ml[284,12893+24]..[284,12893+37])
                                                        Pexp_constant Const_string("`Static t\n",None)
                                                    "fn" (lang_new.ml[285,12932+16]..[285,12932+18])
                                                      expression (lang_new.ml[286,12953+18]..[290,13140+48])
                                                        Pexp_apply
                                                        expression (lang_new.ml[286,12953+19]..[286,12953+34])
                                                          Pexp_ident "Gramf.mk_action" (lang_new.ml[286,12953+19]..[286,12953+34])
                                                        [
                                                          <label> ""
                                                            expression (lang_new.ml[287,12988+21]..[290,13140+47]) ghost
                                                              Pexp_constraint
                                                              expression (lang_new.ml[287,12988+22]..[289,13061+75])
                                                                Pexp_function
                                                                [
                                                                  <case>
                                                                    pattern (lang_new.ml[288,13019+24]..[288,13019+38])
                                                                      Ppat_constraint
                                                                      pattern (lang_new.ml[288,13019+25]..[288,13019+26])
Ppat_var "t" (lang_new.ml[288,13019+25]..[288,13019+26])
                                                                      core_type (lang_new.ml[288,13019+29]..[288,13019+37])
Ptyp_var qualuid
                                                                    expression (lang_new.ml[289,13061+26]..[289,13061+75])
                                                                      Pexp_function
                                                                      [
<case>
  pattern (lang_new.ml[289,13061+38]..[289,13061+53])
    Ppat_constraint
    pattern (lang_new.ml[289,13061+39]..[289,13061+43])
      Ppat_var "_loc" (lang_new.ml[289,13061+39]..[289,13061+43])
    core_type (lang_new.ml[289,13061+46]..[289,13061+52])
      Ptyp_constr "Locf.t" (lang_new.ml[289,13061+46]..[289,13061+52])
      []
  expression (lang_new.ml[289,13061+57]..[289,13061+74]) ghost
    Pexp_constraint
    expression (lang_new.ml[289,13061+58]..[289,13061+67])
      Pexp_variant "Static"
      Some
        expression (lang_new.ml[289,13061+66]..[289,13061+67])
          Pexp_ident "t" (lang_new.ml[289,13061+66]..[289,13061+67])
    core_type (lang_new.ml[289,13061+70]..[289,13061+73])
      Ptyp_var ty
                                                                      ]
                                                                ]
                                                              core_type (lang_new.ml[290,13140+21]..[290,13140+46])
                                                                Ptyp_arrow
                                                                ""
                                                                core_type (lang_new.ml[290,13140+21]..[290,13140+29])
                                                                  Ptyp_var qualuid
                                                                core_type (lang_new.ml[290,13140+33]..[290,13140+46])
                                                                  Ptyp_arrow
                                                                  ""
                                                                  core_type (lang_new.ml[290,13140+33]..[290,13140+39])
                                                                    Ptyp_constr "Locf.t" (lang_new.ml[290,13140+33]..[290,13140+39])
                                                                    []
                                                                  core_type (lang_new.ml[290,13140+43]..[290,13140+46])
                                                                    Ptyp_var ty
                                                        ]
                                                  ]
                                                  None
                                                expression (lang_new.ml[292,13206+14]..[301,13595+16]) ghost
                                                  Pexp_construct "::" (lang_new.ml[292,13206+14]..[301,13595+16]) ghost
                                                  Some
                                                    expression (lang_new.ml[292,13206+14]..[301,13595+16]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lang_new.ml[292,13206+14]..[301,13595+15])
                                                          Pexp_record
                                                          [
                                                            "symbols" (lang_new.ml[293,13222+16]..[293,13222+23])
                                                              expression (lang_new.ml[293,13222+26]..[293,13222+28])
                                                                Pexp_construct "[]" (lang_new.ml[293,13222+26]..[293,13222+28])
                                                                None
                                                            "annot" (lang_new.ml[294,13252+16]..[294,13252+21])
                                                              expression (lang_new.ml[294,13252+24]..[294,13252+60])
                                                                Pexp_constant Const_string("`Static (`Uid (_loc, \"Gramf\"))\n",None)
                                                            "fn" (lang_new.ml[295,13314+16]..[295,13314+18])
                                                              expression (lang_new.ml[296,13335+18]..[300,13521+73])
                                                                Pexp_apply
                                                                expression (lang_new.ml[296,13335+19]..[296,13335+34])
                                                                  Pexp_ident "Gramf.mk_action" (lang_new.ml[296,13335+19]..[296,13335+34])
                                                                [
                                                                  <label> ""
                                                                    expression (lang_new.ml[297,13370+21]..[300,13521+72]) ghost
                                                                      Pexp_constraint
                                                                      expression (lang_new.ml[297,13370+22]..[299,13444+64])
Pexp_function
[
  <case>
    pattern (lang_new.ml[298,13401+24]..[298,13401+39])
      Ppat_constraint
      pattern (lang_new.ml[298,13401+25]..[298,13401+29])
        Ppat_var "_loc" (lang_new.ml[298,13401+25]..[298,13401+29])
      core_type (lang_new.ml[298,13401+32]..[298,13401+38])
        Ptyp_constr "Locf.t" (lang_new.ml[298,13401+32]..[298,13401+38])
        []
    expression (lang_new.ml[299,13444+26]..[299,13444+64]) ghost
      Pexp_constraint
      expression (lang_new.ml[299,13444+27]..[299,13444+57])
        Pexp_variant "Static"
        Some
          expression (lang_new.ml[299,13444+35]..[299,13444+57])
            Pexp_variant "Uid"
            Some
              expression (lang_new.ml[299,13444+41]..[299,13444+56])
                Pexp_tuple
                [
                  expression (lang_new.ml[299,13444+42]..[299,13444+46])
                    Pexp_ident "_loc" (lang_new.ml[299,13444+42]..[299,13444+46])
                  expression (lang_new.ml[299,13444+48]..[299,13444+55])
                    Pexp_constant Const_string("Gramf",None)
                ]
      core_type (lang_new.ml[299,13444+60]..[299,13444+63])
        Ptyp_var ty
]
                                                                      core_type (lang_new.ml[299,13444+67]..[300,13521+71])
Ptyp_arrow
""
core_type (lang_new.ml[299,13444+67]..[299,13444+73])
  Ptyp_constr "Locf.t" (lang_new.ml[299,13444+67]..[299,13444+73])
  []
core_type (lang_new.ml[300,13521+68]..[300,13521+71])
  Ptyp_var ty
                                                                ]
                                                          ]
                                                          None
                                                        expression (lang_new.ml[301,13595+15]..[301,13595+16]) ghost
                                                          Pexp_construct "[]" (lang_new.ml[301,13595+15]..[301,13595+16]) ghost
                                                          None
                                                      ]
                                              ]
                                      ]
                            ]
                            None
                          core_type (lang_new.ml[302,13612+14]..[302,13612+26])
                            Ptyp_constr "Gramf.olevel" (lang_new.ml[302,13612+14]..[302,13612+26])
                            []
                    ]
                    None
                  core_type (lang_new.ml[303,13640+9]..[303,13640+40])
                    Ptyp_constr "Gramf.single_extend_statement" (lang_new.ml[303,13640+11]..[303,13640+40])
                    [
                      core_type (lang_new.ml[303,13640+9]..[303,13640+10])
                        Ptyp_any
                    ]
            ]
          expression (lang_new.ml[304,13683+2]..[776,43139+41])
            Pexp_sequence
            expression (lang_new.ml[304,13683+2]..[360,16078+41])
              Pexp_apply
              expression (lang_new.ml[304,13683+2]..[304,13683+21])
                Pexp_ident "Gramf.extend_single" (lang_new.ml[304,13683+2]..[304,13683+21])
              [
                <label> ""
                  expression (lang_new.ml[305,13705+4]..[360,16078+41]) ghost
                    Pexp_constraint
                    expression (lang_new.ml[305,13705+5]..[360,16078+6])
                      Pexp_record
                      [
                        "entry" (lang_new.ml[306,13712+7]..[306,13712+12])
                          expression (lang_new.ml[306,13712+15]..[306,13712+43]) ghost
                            Pexp_constraint
                            expression (lang_new.ml[306,13712+16]..[306,13712+23])
                              Pexp_ident "qualuid" (lang_new.ml[306,13712+16]..[306,13712+23])
                            core_type (lang_new.ml[306,13712+26]..[306,13712+42])
                              Ptyp_constr "Gramf.t" (lang_new.ml[306,13712+35]..[306,13712+42])
                              [
                                core_type (lang_new.ml[306,13712+26]..[306,13712+34])
                                  Ptyp_var qualuid
                              ]
                        "olevel" (lang_new.ml[307,13757+7]..[307,13757+13])
                          expression (lang_new.ml[308,13773+9]..[359,16050+27]) ghost
                            Pexp_constraint
                            expression (lang_new.ml[308,13773+10]..[359,16050+11])
                              Pexp_record
                              [
                                "label" (lang_new.ml[309,13785+12]..[309,13785+17])
                                  expression (lang_new.ml[309,13785+20]..[309,13785+24])
                                    Pexp_construct "None" (lang_new.ml[309,13785+20]..[309,13785+24])
                                    None
                                "lassoc" (lang_new.ml[310,13811+12]..[310,13811+18])
                                  expression (lang_new.ml[310,13811+21]..[310,13811+25])
                                    Pexp_construct "true" (lang_new.ml[310,13811+21]..[310,13811+25])
                                    None
                                "productions" (lang_new.ml[311,13838+12]..[311,13838+23])
                                  expression (lang_new.ml[312,13864+14]..[358,16033+16])
                                    Pexp_construct "::" (lang_new.ml[312,13864+15]..[358,16033+16]) ghost
                                    Some
                                      expression (lang_new.ml[312,13864+15]..[358,16033+16]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lang_new.ml[312,13864+15]..[341,15281+16])
                                            Pexp_record
                                            [
                                              "symbols" (lang_new.ml[313,13881+17]..[313,13881+24])
                                                expression (lang_new.ml[314,13908+19]..[322,14255+24])
                                                  Pexp_construct "::" (lang_new.ml[314,13908+20]..[322,14255+24]) ghost
                                                  Some
                                                    expression (lang_new.ml[314,13908+20]..[322,14255+24]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lang_new.ml[314,13908+20]..[316,14012+42])
                                                          Pexp_construct "Token" (lang_new.ml[314,13908+20]..[314,13908+25])
                                                          Some
                                                            expression (lang_new.ml[315,13934+22]..[316,14012+42]) ghost
                                                              Pexp_constraint
                                                              expression (lang_new.ml[315,13934+23]..[316,14012+24])
                                                                Pexp_record
                                                                [
                                                                  "descr" (lang_new.ml[315,13934+25]..[315,13934+30])
                                                                    expression (lang_new.ml[315,13934+33]..[315,13934+77])
                                                                      Pexp_record
                                                                      [
"tag" (lang_new.ml[315,13934+35]..[315,13934+38])
  expression (lang_new.ml[315,13934+41]..[315,13934+45])
    Pexp_variant "Uid"
    None
"word" (lang_new.ml[315,13934+47]..[315,13934+51])
  expression (lang_new.ml[315,13934+54]..[315,13934+57])
    Pexp_construct "Any" (lang_new.ml[315,13934+54]..[315,13934+57])
    None
"tag_name" (lang_new.ml[315,13934+59]..[315,13934+67])
  expression (lang_new.ml[315,13934+70]..[315,13934+75])
    Pexp_constant Const_string("Uid",None)
                                                                      ]
                                                                      None
                                                                ]
                                                                None
                                                              core_type (lang_new.ml[316,14012+27]..[316,14012+41])
                                                                Ptyp_constr "Tokenf.pattern" (lang_new.ml[316,14012+27]..[316,14012+41])
                                                                []
                                                        expression (lang_new.ml[317,14056+19]..[322,14255+24]) ghost
                                                          Pexp_construct "::" (lang_new.ml[317,14056+19]..[322,14255+24]) ghost
                                                          Some
                                                            expression (lang_new.ml[317,14056+19]..[322,14255+24]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (lang_new.ml[317,14056+19]..[321,14212+41])
                                                                  Pexp_construct "Token" (lang_new.ml[317,14056+19]..[317,14056+24])
                                                                  Some
                                                                    expression (lang_new.ml[318,14081+21]..[321,14212+41]) ghost
                                                                      Pexp_constraint
                                                                      expression (lang_new.ml[318,14081+22]..[321,14212+23])
Pexp_record
[
  "descr" (lang_new.ml[319,14105+24]..[319,14105+29])
    expression (lang_new.ml[320,14137+26]..[320,14137+74])
      Pexp_record
      [
        "tag" (lang_new.ml[320,14137+28]..[320,14137+31])
          expression (lang_new.ml[320,14137+34]..[320,14137+38])
            Pexp_variant "Key"
            None
        "word" (lang_new.ml[320,14137+40]..[320,14137+44])
          expression (lang_new.ml[320,14137+47]..[320,14137+54])
            Pexp_construct "A" (lang_new.ml[320,14137+48]..[320,14137+49])
            Some
              expression (lang_new.ml[320,14137+50]..[320,14137+53])
                Pexp_constant Const_string(".",None)
        "tag_name" (lang_new.ml[320,14137+56]..[320,14137+64])
          expression (lang_new.ml[320,14137+67]..[320,14137+72])
            Pexp_constant Const_string("Key",None)
      ]
      None
]
None
                                                                      core_type (lang_new.ml[321,14212+26]..[321,14212+40])
Ptyp_constr "Tokenf.pattern" (lang_new.ml[321,14212+26]..[321,14212+40])
[]
                                                                expression (lang_new.ml[322,14255+19]..[322,14255+24]) ghost
                                                                  Pexp_construct "::" (lang_new.ml[322,14255+19]..[322,14255+24]) ghost
                                                                  Some
                                                                    expression (lang_new.ml[322,14255+19]..[322,14255+24]) ghost
                                                                      Pexp_tuple
                                                                      [
expression (lang_new.ml[322,14255+19]..[322,14255+23])
  Pexp_construct "Self" (lang_new.ml[322,14255+19]..[322,14255+23])
  None
expression (lang_new.ml[322,14255+23]..[322,14255+24]) ghost
  Pexp_construct "[]" (lang_new.ml[322,14255+23]..[322,14255+24]) ghost
  None
                                                                      ]
                                                              ]
                                                      ]
                                              "annot" (lang_new.ml[323,14281+17]..[323,14281+22])
                                                expression (lang_new.ml[323,14281+25]..[323,14281+62])
                                                  Pexp_constant Const_string("`Dot (_loc, (`Uid (_loc, x)), xs)\n",None)
                                              "fn" (lang_new.ml[324,14345+17]..[324,14345+19])
                                                expression (lang_new.ml[325,14367+19]..[340,15203+77])
                                                  Pexp_apply
                                                  expression (lang_new.ml[325,14367+20]..[325,14367+35])
                                                    Pexp_ident "Gramf.mk_action" (lang_new.ml[325,14367+20]..[325,14367+35])
                                                  [
                                                    <label> ""
                                                      expression (lang_new.ml[326,14403+22]..[340,15203+76]) ghost
                                                        Pexp_constraint
                                                        expression (lang_new.ml[326,14403+23]..[336,14905+56])
                                                          Pexp_function
                                                          [
                                                            <case>
                                                              pattern (lang_new.ml[327,14435+25]..[327,14435+40])
                                                                Ppat_constraint
                                                                pattern (lang_new.ml[327,14435+26]..[327,14435+28])
                                                                  Ppat_var "xs" (lang_new.ml[327,14435+26]..[327,14435+28])
                                                                core_type (lang_new.ml[327,14435+31]..[327,14435+39])
                                                                  Ptyp_var qualuid
                                                              expression (lang_new.ml[328,14479+27]..[336,14905+56])
                                                                Pexp_function
                                                                [
                                                                  <case>
                                                                    pattern (lang_new.ml[329,14516+30]..[329,14516+31])
                                                                      Ppat_any
                                                                    expression (lang_new.ml[330,14551+32]..[336,14905+55])
                                                                      Pexp_function
                                                                      [
<case>
  pattern (lang_new.ml[331,14593+35]..[331,14593+57])
    Ppat_constraint
    pattern (lang_new.ml[331,14593+36]..[331,14593+43])
      Ppat_var "__fan_0" (lang_new.ml[331,14593+36]..[331,14593+43])
    core_type (lang_new.ml[331,14593+46]..[331,14593+56])
      Ptyp_constr "Tokenf.txt" (lang_new.ml[331,14593+46]..[331,14593+56])
      []
  expression (lang_new.ml[332,14654+37]..[336,14905+54])
    Pexp_function
    [
      <case>
        pattern (lang_new.ml[333,14701+40]..[333,14701+55])
          Ppat_constraint
          pattern (lang_new.ml[333,14701+41]..[333,14701+45])
            Ppat_var "_loc" (lang_new.ml[333,14701+41]..[333,14701+45])
          core_type (lang_new.ml[333,14701+48]..[333,14701+54])
            Ptyp_constr "Locf.t" (lang_new.ml[333,14701+48]..[333,14701+54])
            []
        expression (lang_new.ml[334,14760+42]..[336,14905+53])
          Pexp_let Nonrec
          [
            <def>
              pattern (lang_new.ml[334,14760+46]..[334,14760+47])
                Ppat_var "x" (lang_new.ml[334,14760+46]..[334,14760+47])
              expression (lang_new.ml[334,14760+50]..[334,14760+61])
                Pexp_field
                expression (lang_new.ml[334,14760+50]..[334,14760+57])
                  Pexp_ident "__fan_0" (lang_new.ml[334,14760+50]..[334,14760+57])
                "txt" (lang_new.ml[334,14760+58]..[334,14760+61])
          ]
          expression (lang_new.ml[335,14825+42]..[336,14905+53]) ghost
            Pexp_constraint
            expression (lang_new.ml[335,14825+43]..[335,14825+76])
              Pexp_variant "Dot"
              Some
                expression (lang_new.ml[335,14825+48]..[335,14825+76])
                  Pexp_tuple
                  [
                    expression (lang_new.ml[335,14825+49]..[335,14825+53])
                      Pexp_ident "_loc" (lang_new.ml[335,14825+49]..[335,14825+53])
                    expression (lang_new.ml[335,14825+55]..[335,14825+71])
                      Pexp_variant "Uid"
                      Some
                        expression (lang_new.ml[335,14825+61]..[335,14825+70])
                          Pexp_tuple
                          [
                            expression (lang_new.ml[335,14825+62]..[335,14825+66])
                              Pexp_ident "_loc" (lang_new.ml[335,14825+62]..[335,14825+66])
                            expression (lang_new.ml[335,14825+68]..[335,14825+69])
                              Pexp_ident "x" (lang_new.ml[335,14825+68]..[335,14825+69])
                          ]
                    expression (lang_new.ml[335,14825+73]..[335,14825+75])
                      Pexp_ident "xs" (lang_new.ml[335,14825+73]..[335,14825+75])
                  ]
            core_type (lang_new.ml[336,14905+44]..[336,14905+52])
              Ptyp_var qualuid
    ]
                                                                      ]
                                                                ]
                                                          ]
                                                        core_type (lang_new.ml[336,14905+59]..[340,15203+75])
                                                          Ptyp_arrow
                                                          ""
                                                          core_type (lang_new.ml[336,14905+59]..[336,14905+67])
                                                            Ptyp_var qualuid
                                                          core_type (lang_new.ml[337,14976+61]..[340,15203+75])
                                                            Ptyp_arrow
                                                            ""
                                                            core_type (lang_new.ml[337,14976+61]..[337,14976+71])
                                                              Ptyp_constr "Tokenf.txt" (lang_new.ml[337,14976+61]..[337,14976+71])
                                                              []
                                                            core_type (lang_new.ml[338,15051+63]..[340,15203+75])
                                                              Ptyp_arrow
                                                              ""
                                                              core_type (lang_new.ml[338,15051+63]..[338,15051+73])
                                                                Ptyp_constr "Tokenf.txt" (lang_new.ml[338,15051+63]..[338,15051+73])
                                                                []
                                                              core_type (lang_new.ml[339,15128+65]..[340,15203+75])
                                                                Ptyp_arrow
                                                                ""
                                                                core_type (lang_new.ml[339,15128+65]..[339,15128+71])
                                                                  Ptyp_constr "Locf.t" (lang_new.ml[339,15128+65]..[339,15128+71])
                                                                  []
                                                                core_type (lang_new.ml[340,15203+67]..[340,15203+75])
                                                                  Ptyp_var qualuid
                                                  ]
                                            ]
                                            None
                                          expression (lang_new.ml[342,15299+14]..[358,16033+16]) ghost
                                            Pexp_construct "::" (lang_new.ml[342,15299+14]..[358,16033+16]) ghost
                                            Some
                                              expression (lang_new.ml[342,15299+14]..[358,16033+16]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (lang_new.ml[342,15299+14]..[358,16033+15])
                                                    Pexp_record
                                                    [
                                                      "symbols" (lang_new.ml[343,15315+16]..[343,15315+23])
                                                        expression (lang_new.ml[344,15341+18]..[346,15443+42])
                                                          Pexp_construct "::" (lang_new.ml[344,15341+19]..[346,15443+42]) ghost
                                                          Some
                                                            expression (lang_new.ml[344,15341+19]..[346,15443+42]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (lang_new.ml[344,15341+19]..[346,15443+41])
                                                                  Pexp_construct "Token" (lang_new.ml[344,15341+19]..[344,15341+24])
                                                                  Some
                                                                    expression (lang_new.ml[345,15366+21]..[346,15443+41]) ghost
                                                                      Pexp_constraint
                                                                      expression (lang_new.ml[345,15366+22]..[346,15443+23])
Pexp_record
[
  "descr" (lang_new.ml[345,15366+24]..[345,15366+29])
    expression (lang_new.ml[345,15366+32]..[345,15366+76])
      Pexp_record
      [
        "tag" (lang_new.ml[345,15366+34]..[345,15366+37])
          expression (lang_new.ml[345,15366+40]..[345,15366+44])
            Pexp_variant "Uid"
            None
        "word" (lang_new.ml[345,15366+46]..[345,15366+50])
          expression (lang_new.ml[345,15366+53]..[345,15366+56])
            Pexp_construct "Any" (lang_new.ml[345,15366+53]..[345,15366+56])
            None
        "tag_name" (lang_new.ml[345,15366+58]..[345,15366+66])
          expression (lang_new.ml[345,15366+69]..[345,15366+74])
            Pexp_constant Const_string("Uid",None)
      ]
      None
]
None
                                                                      core_type (lang_new.ml[346,15443+26]..[346,15443+40])
Ptyp_constr "Tokenf.pattern" (lang_new.ml[346,15443+26]..[346,15443+40])
[]
                                                                expression (lang_new.ml[346,15443+41]..[346,15443+42]) ghost
                                                                  Pexp_construct "[]" (lang_new.ml[346,15443+41]..[346,15443+42]) ghost
                                                                  None
                                                              ]
                                                      "annot" (lang_new.ml[347,15487+16]..[347,15487+21])
                                                        expression (lang_new.ml[347,15487+24]..[347,15487+42])
                                                          Pexp_constant Const_string("`Uid (_loc, x)\n",None)
                                                      "fn" (lang_new.ml[348,15531+16]..[348,15531+18])
                                                        expression (lang_new.ml[349,15552+18]..[357,15956+76])
                                                          Pexp_apply
                                                          expression (lang_new.ml[349,15552+19]..[349,15552+34])
                                                            Pexp_ident "Gramf.mk_action" (lang_new.ml[349,15552+19]..[349,15552+34])
                                                          [
                                                            <label> ""
                                                              expression (lang_new.ml[350,15587+21]..[357,15956+75]) ghost
                                                                Pexp_constraint
                                                                expression (lang_new.ml[350,15587+22]..[355,15806+59])
                                                                  Pexp_function
                                                                  [
                                                                    <case>
                                                                      pattern (lang_new.ml[351,15618+24]..[351,15618+46])
Ppat_constraint
pattern (lang_new.ml[351,15618+25]..[351,15618+32])
  Ppat_var "__fan_0" (lang_new.ml[351,15618+25]..[351,15618+32])
core_type (lang_new.ml[351,15618+35]..[351,15618+45])
  Ptyp_constr "Tokenf.txt" (lang_new.ml[351,15618+35]..[351,15618+45])
  []
                                                                      expression (lang_new.ml[352,15668+26]..[355,15806+59])
Pexp_function
[
  <case>
    pattern (lang_new.ml[353,15704+29]..[353,15704+44])
      Ppat_constraint
      pattern (lang_new.ml[353,15704+30]..[353,15704+34])
        Ppat_var "_loc" (lang_new.ml[353,15704+30]..[353,15704+34])
      core_type (lang_new.ml[353,15704+37]..[353,15704+43])
        Ptyp_constr "Locf.t" (lang_new.ml[353,15704+37]..[353,15704+43])
        []
    expression (lang_new.ml[354,15752+31]..[355,15806+58])
      Pexp_let Nonrec
      [
        <def>
          pattern (lang_new.ml[354,15752+35]..[354,15752+36])
            Ppat_var "x" (lang_new.ml[354,15752+35]..[354,15752+36])
          expression (lang_new.ml[354,15752+39]..[354,15752+50])
            Pexp_field
            expression (lang_new.ml[354,15752+39]..[354,15752+46])
              Pexp_ident "__fan_0" (lang_new.ml[354,15752+39]..[354,15752+46])
            "txt" (lang_new.ml[354,15752+47]..[354,15752+50])
      ]
      expression (lang_new.ml[355,15806+31]..[355,15806+58]) ghost
        Pexp_constraint
        expression (lang_new.ml[355,15806+32]..[355,15806+46])
          Pexp_variant "Uid"
          Some
            expression (lang_new.ml[355,15806+37]..[355,15806+46])
              Pexp_tuple
              [
                expression (lang_new.ml[355,15806+38]..[355,15806+42])
                  Pexp_ident "_loc" (lang_new.ml[355,15806+38]..[355,15806+42])
                expression (lang_new.ml[355,15806+44]..[355,15806+45])
                  Pexp_ident "x" (lang_new.ml[355,15806+44]..[355,15806+45])
              ]
        core_type (lang_new.ml[355,15806+49]..[355,15806+57])
          Ptyp_var qualuid
]
                                                                  ]
                                                                core_type (lang_new.ml[355,15806+62]..[357,15956+74])
                                                                  Ptyp_arrow
                                                                  ""
                                                                  core_type (lang_new.ml[355,15806+62]..[355,15806+72])
                                                                    Ptyp_constr "Tokenf.txt" (lang_new.ml[355,15806+62]..[355,15806+72])
                                                                    []
                                                                  core_type (lang_new.ml[356,15882+64]..[357,15956+74])
                                                                    Ptyp_arrow
                                                                    ""
                                                                    core_type (lang_new.ml[356,15882+64]..[356,15882+70])
                                                                      Ptyp_constr "Locf.t" (lang_new.ml[356,15882+64]..[356,15882+70])
                                                                      []
                                                                    core_type (lang_new.ml[357,15956+66]..[357,15956+74])
                                                                      Ptyp_var qualuid
                                                          ]
                                                    ]
                                                    None
                                                  expression (lang_new.ml[358,16033+15]..[358,16033+16]) ghost
                                                    Pexp_construct "[]" (lang_new.ml[358,16033+15]..[358,16033+16]) ghost
                                                    None
                                                ]
                                        ]
                              ]
                              None
                            core_type (lang_new.ml[359,16050+14]..[359,16050+26])
                              Ptyp_constr "Gramf.olevel" (lang_new.ml[359,16050+14]..[359,16050+26])
                              []
                      ]
                      None
                    core_type (lang_new.ml[360,16078+9]..[360,16078+40])
                      Ptyp_constr "Gramf.single_extend_statement" (lang_new.ml[360,16078+11]..[360,16078+40])
                      [
                        core_type (lang_new.ml[360,16078+9]..[360,16078+10])
                          Ptyp_any
                      ]
              ]
            expression (lang_new.ml[361,16121+2]..[776,43139+41])
              Pexp_sequence
              expression (lang_new.ml[361,16121+2]..[417,18502+41])
                Pexp_apply
                expression (lang_new.ml[361,16121+2]..[361,16121+21])
                  Pexp_ident "Gramf.extend_single" (lang_new.ml[361,16121+2]..[361,16121+21])
                [
                  <label> ""
                    expression (lang_new.ml[362,16143+4]..[417,18502+41]) ghost
                      Pexp_constraint
                      expression (lang_new.ml[362,16143+5]..[417,18502+6])
                        Pexp_record
                        [
                          "entry" (lang_new.ml[363,16150+7]..[363,16150+12])
                            expression (lang_new.ml[363,16150+15]..[363,16150+41]) ghost
                              Pexp_constraint
                              expression (lang_new.ml[363,16150+16]..[363,16150+22])
                                Pexp_ident "qualid" (lang_new.ml[363,16150+16]..[363,16150+22])
                              core_type (lang_new.ml[363,16150+25]..[363,16150+40])
                                Ptyp_constr "Gramf.t" (lang_new.ml[363,16150+33]..[363,16150+40])
                                [
                                  core_type (lang_new.ml[363,16150+25]..[363,16150+32])
                                    Ptyp_var qualid
                                ]
                          "olevel" (lang_new.ml[364,16193+7]..[364,16193+13])
                            expression (lang_new.ml[365,16209+9]..[416,18474+27]) ghost
                              Pexp_constraint
                              expression (lang_new.ml[365,16209+10]..[416,18474+11])
                                Pexp_record
                                [
                                  "label" (lang_new.ml[366,16221+12]..[366,16221+17])
                                    expression (lang_new.ml[366,16221+20]..[366,16221+24])
                                      Pexp_construct "None" (lang_new.ml[366,16221+20]..[366,16221+24])
                                      None
                                  "lassoc" (lang_new.ml[367,16247+12]..[367,16247+18])
                                    expression (lang_new.ml[367,16247+21]..[367,16247+25])
                                      Pexp_construct "true" (lang_new.ml[367,16247+21]..[367,16247+25])
                                      None
                                  "productions" (lang_new.ml[368,16274+12]..[368,16274+23])
                                    expression (lang_new.ml[369,16300+14]..[415,18457+16])
                                      Pexp_construct "::" (lang_new.ml[369,16300+15]..[415,18457+16]) ghost
                                      Some
                                        expression (lang_new.ml[369,16300+15]..[415,18457+16]) ghost
                                          Pexp_tuple
                                          [
                                            expression (lang_new.ml[369,16300+15]..[398,17709+16])
                                              Pexp_record
                                              [
                                                "symbols" (lang_new.ml[370,16317+17]..[370,16317+24])
                                                  expression (lang_new.ml[371,16344+19]..[379,16691+24])
                                                    Pexp_construct "::" (lang_new.ml[371,16344+20]..[379,16691+24]) ghost
                                                    Some
                                                      expression (lang_new.ml[371,16344+20]..[379,16691+24]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (lang_new.ml[371,16344+20]..[373,16448+42])
                                                            Pexp_construct "Token" (lang_new.ml[371,16344+20]..[371,16344+25])
                                                            Some
                                                              expression (lang_new.ml[372,16370+22]..[373,16448+42]) ghost
                                                                Pexp_constraint
                                                                expression (lang_new.ml[372,16370+23]..[373,16448+24])
                                                                  Pexp_record
                                                                  [
                                                                    "descr" (lang_new.ml[372,16370+25]..[372,16370+30])
                                                                      expression (lang_new.ml[372,16370+33]..[372,16370+77])
Pexp_record
[
  "tag" (lang_new.ml[372,16370+35]..[372,16370+38])
    expression (lang_new.ml[372,16370+41]..[372,16370+45])
      Pexp_variant "Uid"
      None
  "word" (lang_new.ml[372,16370+47]..[372,16370+51])
    expression (lang_new.ml[372,16370+54]..[372,16370+57])
      Pexp_construct "Any" (lang_new.ml[372,16370+54]..[372,16370+57])
      None
  "tag_name" (lang_new.ml[372,16370+59]..[372,16370+67])
    expression (lang_new.ml[372,16370+70]..[372,16370+75])
      Pexp_constant Const_string("Uid",None)
]
None
                                                                  ]
                                                                  None
                                                                core_type (lang_new.ml[373,16448+27]..[373,16448+41])
                                                                  Ptyp_constr "Tokenf.pattern" (lang_new.ml[373,16448+27]..[373,16448+41])
                                                                  []
                                                          expression (lang_new.ml[374,16492+19]..[379,16691+24]) ghost
                                                            Pexp_construct "::" (lang_new.ml[374,16492+19]..[379,16691+24]) ghost
                                                            Some
                                                              expression (lang_new.ml[374,16492+19]..[379,16691+24]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (lang_new.ml[374,16492+19]..[378,16648+41])
                                                                    Pexp_construct "Token" (lang_new.ml[374,16492+19]..[374,16492+24])
                                                                    Some
                                                                      expression (lang_new.ml[375,16517+21]..[378,16648+41]) ghost
Pexp_constraint
expression (lang_new.ml[375,16517+22]..[378,16648+23])
  Pexp_record
  [
    "descr" (lang_new.ml[376,16541+24]..[376,16541+29])
      expression (lang_new.ml[377,16573+26]..[377,16573+74])
        Pexp_record
        [
          "tag" (lang_new.ml[377,16573+28]..[377,16573+31])
            expression (lang_new.ml[377,16573+34]..[377,16573+38])
              Pexp_variant "Key"
              None
          "word" (lang_new.ml[377,16573+40]..[377,16573+44])
            expression (lang_new.ml[377,16573+47]..[377,16573+54])
              Pexp_construct "A" (lang_new.ml[377,16573+48]..[377,16573+49])
              Some
                expression (lang_new.ml[377,16573+50]..[377,16573+53])
                  Pexp_constant Const_string(".",None)
          "tag_name" (lang_new.ml[377,16573+56]..[377,16573+64])
            expression (lang_new.ml[377,16573+67]..[377,16573+72])
              Pexp_constant Const_string("Key",None)
        ]
        None
  ]
  None
core_type (lang_new.ml[378,16648+26]..[378,16648+40])
  Ptyp_constr "Tokenf.pattern" (lang_new.ml[378,16648+26]..[378,16648+40])
  []
                                                                  expression (lang_new.ml[379,16691+19]..[379,16691+24]) ghost
                                                                    Pexp_construct "::" (lang_new.ml[379,16691+19]..[379,16691+24]) ghost
                                                                    Some
                                                                      expression (lang_new.ml[379,16691+19]..[379,16691+24]) ghost
Pexp_tuple
[
  expression (lang_new.ml[379,16691+19]..[379,16691+23])
    Pexp_construct "Self" (lang_new.ml[379,16691+19]..[379,16691+23])
    None
  expression (lang_new.ml[379,16691+23]..[379,16691+24]) ghost
    Pexp_construct "[]" (lang_new.ml[379,16691+23]..[379,16691+24]) ghost
    None
]
                                                                ]
                                                        ]
                                                "annot" (lang_new.ml[380,16717+17]..[380,16717+22])
                                                  expression (lang_new.ml[380,16717+25]..[380,16717+62])
                                                    Pexp_constant Const_string("`Dot (_loc, (`Uid (_loc, x)), xs)\n",None)
                                                "fn" (lang_new.ml[381,16781+17]..[381,16781+19])
                                                  expression (lang_new.ml[382,16803+19]..[397,17633+75])
                                                    Pexp_apply
                                                    expression (lang_new.ml[382,16803+20]..[382,16803+35])
                                                      Pexp_ident "Gramf.mk_action" (lang_new.ml[382,16803+20]..[382,16803+35])
                                                    [
                                                      <label> ""
                                                        expression (lang_new.ml[383,16839+22]..[397,17633+74]) ghost
                                                          Pexp_constraint
                                                          expression (lang_new.ml[383,16839+23]..[393,17340+55])
                                                            Pexp_function
                                                            [
                                                              <case>
                                                                pattern (lang_new.ml[384,16871+25]..[384,16871+39])
                                                                  Ppat_constraint
                                                                  pattern (lang_new.ml[384,16871+26]..[384,16871+28])
                                                                    Ppat_var "xs" (lang_new.ml[384,16871+26]..[384,16871+28])
                                                                  core_type (lang_new.ml[384,16871+31]..[384,16871+38])
                                                                    Ptyp_var qualid
                                                                expression (lang_new.ml[385,16914+27]..[393,17340+55])
                                                                  Pexp_function
                                                                  [
                                                                    <case>
                                                                      pattern (lang_new.ml[386,16951+30]..[386,16951+31])
Ppat_any
                                                                      expression (lang_new.ml[387,16986+32]..[393,17340+54])
Pexp_function
[
  <case>
    pattern (lang_new.ml[388,17028+35]..[388,17028+57])
      Ppat_constraint
      pattern (lang_new.ml[388,17028+36]..[388,17028+43])
        Ppat_var "__fan_0" (lang_new.ml[388,17028+36]..[388,17028+43])
      core_type (lang_new.ml[388,17028+46]..[388,17028+56])
        Ptyp_constr "Tokenf.txt" (lang_new.ml[388,17028+46]..[388,17028+56])
        []
    expression (lang_new.ml[389,17089+37]..[393,17340+53])
      Pexp_function
      [
        <case>
          pattern (lang_new.ml[390,17136+40]..[390,17136+55])
            Ppat_constraint
            pattern (lang_new.ml[390,17136+41]..[390,17136+45])
              Ppat_var "_loc" (lang_new.ml[390,17136+41]..[390,17136+45])
            core_type (lang_new.ml[390,17136+48]..[390,17136+54])
              Ptyp_constr "Locf.t" (lang_new.ml[390,17136+48]..[390,17136+54])
              []
          expression (lang_new.ml[391,17195+42]..[393,17340+52])
            Pexp_let Nonrec
            [
              <def>
                pattern (lang_new.ml[391,17195+46]..[391,17195+47])
                  Ppat_var "x" (lang_new.ml[391,17195+46]..[391,17195+47])
                expression (lang_new.ml[391,17195+50]..[391,17195+61])
                  Pexp_field
                  expression (lang_new.ml[391,17195+50]..[391,17195+57])
                    Pexp_ident "__fan_0" (lang_new.ml[391,17195+50]..[391,17195+57])
                  "txt" (lang_new.ml[391,17195+58]..[391,17195+61])
            ]
            expression (lang_new.ml[392,17260+42]..[393,17340+52]) ghost
              Pexp_constraint
              expression (lang_new.ml[392,17260+43]..[392,17260+76])
                Pexp_variant "Dot"
                Some
                  expression (lang_new.ml[392,17260+48]..[392,17260+76])
                    Pexp_tuple
                    [
                      expression (lang_new.ml[392,17260+49]..[392,17260+53])
                        Pexp_ident "_loc" (lang_new.ml[392,17260+49]..[392,17260+53])
                      expression (lang_new.ml[392,17260+55]..[392,17260+71])
                        Pexp_variant "Uid"
                        Some
                          expression (lang_new.ml[392,17260+61]..[392,17260+70])
                            Pexp_tuple
                            [
                              expression (lang_new.ml[392,17260+62]..[392,17260+66])
                                Pexp_ident "_loc" (lang_new.ml[392,17260+62]..[392,17260+66])
                              expression (lang_new.ml[392,17260+68]..[392,17260+69])
                                Pexp_ident "x" (lang_new.ml[392,17260+68]..[392,17260+69])
                            ]
                      expression (lang_new.ml[392,17260+73]..[392,17260+75])
                        Pexp_ident "xs" (lang_new.ml[392,17260+73]..[392,17260+75])
                    ]
              core_type (lang_new.ml[393,17340+44]..[393,17340+51])
                Ptyp_var qualid
      ]
]
                                                                  ]
                                                            ]
                                                          core_type (lang_new.ml[393,17340+58]..[397,17633+73])
                                                            Ptyp_arrow
                                                            ""
                                                            core_type (lang_new.ml[393,17340+58]..[393,17340+65])
                                                              Ptyp_var qualid
                                                            core_type (lang_new.ml[394,17409+60]..[397,17633+73])
                                                              Ptyp_arrow
                                                              ""
                                                              core_type (lang_new.ml[394,17409+60]..[394,17409+70])
                                                                Ptyp_constr "Tokenf.txt" (lang_new.ml[394,17409+60]..[394,17409+70])
                                                                []
                                                              core_type (lang_new.ml[395,17483+62]..[397,17633+73])
                                                                Ptyp_arrow
                                                                ""
                                                                core_type (lang_new.ml[395,17483+62]..[395,17483+72])
                                                                  Ptyp_constr "Tokenf.txt" (lang_new.ml[395,17483+62]..[395,17483+72])
                                                                  []
                                                                core_type (lang_new.ml[396,17559+64]..[397,17633+73])
                                                                  Ptyp_arrow
                                                                  ""
                                                                  core_type (lang_new.ml[396,17559+64]..[396,17559+70])
                                                                    Ptyp_constr "Locf.t" (lang_new.ml[396,17559+64]..[396,17559+70])
                                                                    []
                                                                  core_type (lang_new.ml[397,17633+66]..[397,17633+73])
                                                                    Ptyp_var qualid
                                                    ]
                                              ]
                                              None
                                            expression (lang_new.ml[399,17727+14]..[415,18457+16]) ghost
                                              Pexp_construct "::" (lang_new.ml[399,17727+14]..[415,18457+16]) ghost
                                              Some
                                                expression (lang_new.ml[399,17727+14]..[415,18457+16]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (lang_new.ml[399,17727+14]..[415,18457+15])
                                                      Pexp_record
                                                      [
                                                        "symbols" (lang_new.ml[400,17743+16]..[400,17743+23])
                                                          expression (lang_new.ml[401,17769+18]..[403,17871+42])
                                                            Pexp_construct "::" (lang_new.ml[401,17769+19]..[403,17871+42]) ghost
                                                            Some
                                                              expression (lang_new.ml[401,17769+19]..[403,17871+42]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (lang_new.ml[401,17769+19]..[403,17871+41])
                                                                    Pexp_construct "Token" (lang_new.ml[401,17769+19]..[401,17769+24])
                                                                    Some
                                                                      expression (lang_new.ml[402,17794+21]..[403,17871+41]) ghost
Pexp_constraint
expression (lang_new.ml[402,17794+22]..[403,17871+23])
  Pexp_record
  [
    "descr" (lang_new.ml[402,17794+24]..[402,17794+29])
      expression (lang_new.ml[402,17794+32]..[402,17794+76])
        Pexp_record
        [
          "tag" (lang_new.ml[402,17794+34]..[402,17794+37])
            expression (lang_new.ml[402,17794+40]..[402,17794+44])
              Pexp_variant "Lid"
              None
          "word" (lang_new.ml[402,17794+46]..[402,17794+50])
            expression (lang_new.ml[402,17794+53]..[402,17794+56])
              Pexp_construct "Any" (lang_new.ml[402,17794+53]..[402,17794+56])
              None
          "tag_name" (lang_new.ml[402,17794+58]..[402,17794+66])
            expression (lang_new.ml[402,17794+69]..[402,17794+74])
              Pexp_constant Const_string("Lid",None)
        ]
        None
  ]
  None
core_type (lang_new.ml[403,17871+26]..[403,17871+40])
  Ptyp_constr "Tokenf.pattern" (lang_new.ml[403,17871+26]..[403,17871+40])
  []
                                                                  expression (lang_new.ml[403,17871+41]..[403,17871+42]) ghost
                                                                    Pexp_construct "[]" (lang_new.ml[403,17871+41]..[403,17871+42]) ghost
                                                                    None
                                                                ]
                                                        "annot" (lang_new.ml[404,17915+16]..[404,17915+21])
                                                          expression (lang_new.ml[404,17915+24]..[404,17915+42])
                                                            Pexp_constant Const_string("`Lid (_loc, i)\n",None)
                                                        "fn" (lang_new.ml[405,17959+16]..[405,17959+18])
                                                          expression (lang_new.ml[406,17980+18]..[414,18382+74])
                                                            Pexp_apply
                                                            expression (lang_new.ml[406,17980+19]..[406,17980+34])
                                                              Pexp_ident "Gramf.mk_action" (lang_new.ml[406,17980+19]..[406,17980+34])
                                                            [
                                                              <label> ""
                                                                expression (lang_new.ml[407,18015+21]..[414,18382+73]) ghost
                                                                  Pexp_constraint
                                                                  expression (lang_new.ml[407,18015+22]..[412,18234+58])
                                                                    Pexp_function
                                                                    [
                                                                      <case>
pattern (lang_new.ml[408,18046+24]..[408,18046+46])
  Ppat_constraint
  pattern (lang_new.ml[408,18046+25]..[408,18046+32])
    Ppat_var "__fan_0" (lang_new.ml[408,18046+25]..[408,18046+32])
  core_type (lang_new.ml[408,18046+35]..[408,18046+45])
    Ptyp_constr "Tokenf.txt" (lang_new.ml[408,18046+35]..[408,18046+45])
    []
expression (lang_new.ml[409,18096+26]..[412,18234+58])
  Pexp_function
  [
    <case>
      pattern (lang_new.ml[410,18132+29]..[410,18132+44])
        Ppat_constraint
        pattern (lang_new.ml[410,18132+30]..[410,18132+34])
          Ppat_var "_loc" (lang_new.ml[410,18132+30]..[410,18132+34])
        core_type (lang_new.ml[410,18132+37]..[410,18132+43])
          Ptyp_constr "Locf.t" (lang_new.ml[410,18132+37]..[410,18132+43])
          []
      expression (lang_new.ml[411,18180+31]..[412,18234+57])
        Pexp_let Nonrec
        [
          <def>
            pattern (lang_new.ml[411,18180+35]..[411,18180+36])
              Ppat_var "i" (lang_new.ml[411,18180+35]..[411,18180+36])
            expression (lang_new.ml[411,18180+39]..[411,18180+50])
              Pexp_field
              expression (lang_new.ml[411,18180+39]..[411,18180+46])
                Pexp_ident "__fan_0" (lang_new.ml[411,18180+39]..[411,18180+46])
              "txt" (lang_new.ml[411,18180+47]..[411,18180+50])
        ]
        expression (lang_new.ml[412,18234+31]..[412,18234+57]) ghost
          Pexp_constraint
          expression (lang_new.ml[412,18234+32]..[412,18234+46])
            Pexp_variant "Lid"
            Some
              expression (lang_new.ml[412,18234+37]..[412,18234+46])
                Pexp_tuple
                [
                  expression (lang_new.ml[412,18234+38]..[412,18234+42])
                    Pexp_ident "_loc" (lang_new.ml[412,18234+38]..[412,18234+42])
                  expression (lang_new.ml[412,18234+44]..[412,18234+45])
                    Pexp_ident "i" (lang_new.ml[412,18234+44]..[412,18234+45])
                ]
          core_type (lang_new.ml[412,18234+49]..[412,18234+56])
            Ptyp_var qualid
  ]
                                                                    ]
                                                                  core_type (lang_new.ml[412,18234+61]..[414,18382+72])
                                                                    Ptyp_arrow
                                                                    ""
                                                                    core_type (lang_new.ml[412,18234+61]..[412,18234+71])
                                                                      Ptyp_constr "Tokenf.txt" (lang_new.ml[412,18234+61]..[412,18234+71])
                                                                      []
                                                                    core_type (lang_new.ml[413,18309+63]..[414,18382+72])
                                                                      Ptyp_arrow
                                                                      ""
                                                                      core_type (lang_new.ml[413,18309+63]..[413,18309+69])
Ptyp_constr "Locf.t" (lang_new.ml[413,18309+63]..[413,18309+69])
[]
                                                                      core_type (lang_new.ml[414,18382+65]..[414,18382+72])
Ptyp_var qualid
                                                            ]
                                                      ]
                                                      None
                                                    expression (lang_new.ml[415,18457+15]..[415,18457+16]) ghost
                                                      Pexp_construct "[]" (lang_new.ml[415,18457+15]..[415,18457+16]) ghost
                                                      None
                                                  ]
                                          ]
                                ]
                                None
                              core_type (lang_new.ml[416,18474+14]..[416,18474+26])
                                Ptyp_constr "Gramf.olevel" (lang_new.ml[416,18474+14]..[416,18474+26])
                                []
                        ]
                        None
                      core_type (lang_new.ml[417,18502+9]..[417,18502+40])
                        Ptyp_constr "Gramf.single_extend_statement" (lang_new.ml[417,18502+11]..[417,18502+40])
                        [
                          core_type (lang_new.ml[417,18502+9]..[417,18502+10])
                            Ptyp_any
                        ]
                ]
              expression (lang_new.ml[418,18545+2]..[776,43139+41])
                Pexp_sequence
                expression (lang_new.ml[418,18545+2]..[488,21475+41])
                  Pexp_apply
                  expression (lang_new.ml[418,18545+2]..[418,18545+21])
                    Pexp_ident "Gramf.extend_single" (lang_new.ml[418,18545+2]..[418,18545+21])
                  [
                    <label> ""
                      expression (lang_new.ml[419,18567+4]..[488,21475+41]) ghost
                        Pexp_constraint
                        expression (lang_new.ml[419,18567+5]..[488,21475+6])
                          Pexp_record
                          [
                            "entry" (lang_new.ml[420,18574+7]..[420,18574+12])
                              expression (lang_new.ml[420,18574+15]..[420,18574+45]) ghost
                                Pexp_constraint
                                expression (lang_new.ml[420,18574+16]..[420,18574+24])
                                  Pexp_ident "t_qualid" (lang_new.ml[420,18574+16]..[420,18574+24])
                                core_type (lang_new.ml[420,18574+27]..[420,18574+44])
                                  Ptyp_constr "Gramf.t" (lang_new.ml[420,18574+37]..[420,18574+44])
                                  [
                                    core_type (lang_new.ml[420,18574+27]..[420,18574+36])
                                      Ptyp_var t_qualid
                                  ]
                            "olevel" (lang_new.ml[421,18621+7]..[421,18621+13])
                              expression (lang_new.ml[422,18637+9]..[487,21447+27]) ghost
                                Pexp_constraint
                                expression (lang_new.ml[422,18637+10]..[487,21447+11])
                                  Pexp_record
                                  [
                                    "label" (lang_new.ml[423,18649+12]..[423,18649+17])
                                      expression (lang_new.ml[423,18649+20]..[423,18649+24])
                                        Pexp_construct "None" (lang_new.ml[423,18649+20]..[423,18649+24])
                                        None
                                    "lassoc" (lang_new.ml[424,18675+12]..[424,18675+18])
                                      expression (lang_new.ml[424,18675+21]..[424,18675+25])
                                        Pexp_construct "true" (lang_new.ml[424,18675+21]..[424,18675+25])
                                        None
                                    "productions" (lang_new.ml[425,18702+12]..[425,18702+23])
                                      expression (lang_new.ml[426,18728+14]..[486,21430+16])
                                        Pexp_construct "::" (lang_new.ml[426,18728+15]..[486,21430+16]) ghost
                                        Some
                                          expression (lang_new.ml[426,18728+15]..[486,21430+16]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lang_new.ml[426,18728+15]..[455,20153+16])
                                                Pexp_record
                                                [
                                                  "symbols" (lang_new.ml[427,18745+17]..[427,18745+24])
                                                    expression (lang_new.ml[428,18772+19]..[436,19119+24])
                                                      Pexp_construct "::" (lang_new.ml[428,18772+20]..[436,19119+24]) ghost
                                                      Some
                                                        expression (lang_new.ml[428,18772+20]..[436,19119+24]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (lang_new.ml[428,18772+20]..[430,18876+42])
                                                              Pexp_construct "Token" (lang_new.ml[428,18772+20]..[428,18772+25])
                                                              Some
                                                                expression (lang_new.ml[429,18798+22]..[430,18876+42]) ghost
                                                                  Pexp_constraint
                                                                  expression (lang_new.ml[429,18798+23]..[430,18876+24])
                                                                    Pexp_record
                                                                    [
                                                                      "descr" (lang_new.ml[429,18798+25]..[429,18798+30])
expression (lang_new.ml[429,18798+33]..[429,18798+77])
  Pexp_record
  [
    "tag" (lang_new.ml[429,18798+35]..[429,18798+38])
      expression (lang_new.ml[429,18798+41]..[429,18798+45])
        Pexp_variant "Uid"
        None
    "word" (lang_new.ml[429,18798+47]..[429,18798+51])
      expression (lang_new.ml[429,18798+54]..[429,18798+57])
        Pexp_construct "Any" (lang_new.ml[429,18798+54]..[429,18798+57])
        None
    "tag_name" (lang_new.ml[429,18798+59]..[429,18798+67])
      expression (lang_new.ml[429,18798+70]..[429,18798+75])
        Pexp_constant Const_string("Uid",None)
  ]
  None
                                                                    ]
                                                                    None
                                                                  core_type (lang_new.ml[430,18876+27]..[430,18876+41])
                                                                    Ptyp_constr "Tokenf.pattern" (lang_new.ml[430,18876+27]..[430,18876+41])
                                                                    []
                                                            expression (lang_new.ml[431,18920+19]..[436,19119+24]) ghost
                                                              Pexp_construct "::" (lang_new.ml[431,18920+19]..[436,19119+24]) ghost
                                                              Some
                                                                expression (lang_new.ml[431,18920+19]..[436,19119+24]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lang_new.ml[431,18920+19]..[435,19076+41])
                                                                      Pexp_construct "Token" (lang_new.ml[431,18920+19]..[431,18920+24])
                                                                      Some
expression (lang_new.ml[432,18945+21]..[435,19076+41]) ghost
  Pexp_constraint
  expression (lang_new.ml[432,18945+22]..[435,19076+23])
    Pexp_record
    [
      "descr" (lang_new.ml[433,18969+24]..[433,18969+29])
        expression (lang_new.ml[434,19001+26]..[434,19001+74])
          Pexp_record
          [
            "tag" (lang_new.ml[434,19001+28]..[434,19001+31])
              expression (lang_new.ml[434,19001+34]..[434,19001+38])
                Pexp_variant "Key"
                None
            "word" (lang_new.ml[434,19001+40]..[434,19001+44])
              expression (lang_new.ml[434,19001+47]..[434,19001+54])
                Pexp_construct "A" (lang_new.ml[434,19001+48]..[434,19001+49])
                Some
                  expression (lang_new.ml[434,19001+50]..[434,19001+53])
                    Pexp_constant Const_string(".",None)
            "tag_name" (lang_new.ml[434,19001+56]..[434,19001+64])
              expression (lang_new.ml[434,19001+67]..[434,19001+72])
                Pexp_constant Const_string("Key",None)
          ]
          None
    ]
    None
  core_type (lang_new.ml[435,19076+26]..[435,19076+40])
    Ptyp_constr "Tokenf.pattern" (lang_new.ml[435,19076+26]..[435,19076+40])
    []
                                                                    expression (lang_new.ml[436,19119+19]..[436,19119+24]) ghost
                                                                      Pexp_construct "::" (lang_new.ml[436,19119+19]..[436,19119+24]) ghost
                                                                      Some
expression (lang_new.ml[436,19119+19]..[436,19119+24]) ghost
  Pexp_tuple
  [
    expression (lang_new.ml[436,19119+19]..[436,19119+23])
      Pexp_construct "Self" (lang_new.ml[436,19119+19]..[436,19119+23])
      None
    expression (lang_new.ml[436,19119+23]..[436,19119+24]) ghost
      Pexp_construct "[]" (lang_new.ml[436,19119+23]..[436,19119+24]) ghost
      None
  ]
                                                                  ]
                                                          ]
                                                  "annot" (lang_new.ml[437,19145+17]..[437,19145+22])
                                                    expression (lang_new.ml[437,19145+25]..[437,19145+62])
                                                      Pexp_constant Const_string("`Dot (_loc, (`Uid (_loc, x)), xs)\n",None)
                                                  "fn" (lang_new.ml[438,19209+17]..[438,19209+19])
                                                    expression (lang_new.ml[439,19231+19]..[454,20073+79])
                                                      Pexp_apply
                                                      expression (lang_new.ml[439,19231+20]..[439,19231+35])
                                                        Pexp_ident "Gramf.mk_action" (lang_new.ml[439,19231+20]..[439,19231+35])
                                                      [
                                                        <label> ""
                                                          expression (lang_new.ml[440,19267+22]..[454,20073+78]) ghost
                                                            Pexp_constraint
                                                            expression (lang_new.ml[440,19267+23]..[450,19770+57])
                                                              Pexp_function
                                                              [
                                                                <case>
                                                                  pattern (lang_new.ml[441,19299+25]..[441,19299+41])
                                                                    Ppat_constraint
                                                                    pattern (lang_new.ml[441,19299+26]..[441,19299+28])
                                                                      Ppat_var "xs" (lang_new.ml[441,19299+26]..[441,19299+28])
                                                                    core_type (lang_new.ml[441,19299+31]..[441,19299+40])
                                                                      Ptyp_var t_qualid
                                                                  expression (lang_new.ml[442,19344+27]..[450,19770+57])
                                                                    Pexp_function
                                                                    [
                                                                      <case>
pattern (lang_new.ml[443,19381+30]..[443,19381+31])
  Ppat_any
expression (lang_new.ml[444,19416+32]..[450,19770+56])
  Pexp_function
  [
    <case>
      pattern (lang_new.ml[445,19458+35]..[445,19458+57])
        Ppat_constraint
        pattern (lang_new.ml[445,19458+36]..[445,19458+43])
          Ppat_var "__fan_0" (lang_new.ml[445,19458+36]..[445,19458+43])
        core_type (lang_new.ml[445,19458+46]..[445,19458+56])
          Ptyp_constr "Tokenf.txt" (lang_new.ml[445,19458+46]..[445,19458+56])
          []
      expression (lang_new.ml[446,19519+37]..[450,19770+55])
        Pexp_function
        [
          <case>
            pattern (lang_new.ml[447,19566+40]..[447,19566+55])
              Ppat_constraint
              pattern (lang_new.ml[447,19566+41]..[447,19566+45])
                Ppat_var "_loc" (lang_new.ml[447,19566+41]..[447,19566+45])
              core_type (lang_new.ml[447,19566+48]..[447,19566+54])
                Ptyp_constr "Locf.t" (lang_new.ml[447,19566+48]..[447,19566+54])
                []
            expression (lang_new.ml[448,19625+42]..[450,19770+54])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lang_new.ml[448,19625+46]..[448,19625+47])
                    Ppat_var "x" (lang_new.ml[448,19625+46]..[448,19625+47])
                  expression (lang_new.ml[448,19625+50]..[448,19625+61])
                    Pexp_field
                    expression (lang_new.ml[448,19625+50]..[448,19625+57])
                      Pexp_ident "__fan_0" (lang_new.ml[448,19625+50]..[448,19625+57])
                    "txt" (lang_new.ml[448,19625+58]..[448,19625+61])
              ]
              expression (lang_new.ml[449,19690+42]..[450,19770+54]) ghost
                Pexp_constraint
                expression (lang_new.ml[449,19690+43]..[449,19690+76])
                  Pexp_variant "Dot"
                  Some
                    expression (lang_new.ml[449,19690+48]..[449,19690+76])
                      Pexp_tuple
                      [
                        expression (lang_new.ml[449,19690+49]..[449,19690+53])
                          Pexp_ident "_loc" (lang_new.ml[449,19690+49]..[449,19690+53])
                        expression (lang_new.ml[449,19690+55]..[449,19690+71])
                          Pexp_variant "Uid"
                          Some
                            expression (lang_new.ml[449,19690+61]..[449,19690+70])
                              Pexp_tuple
                              [
                                expression (lang_new.ml[449,19690+62]..[449,19690+66])
                                  Pexp_ident "_loc" (lang_new.ml[449,19690+62]..[449,19690+66])
                                expression (lang_new.ml[449,19690+68]..[449,19690+69])
                                  Pexp_ident "x" (lang_new.ml[449,19690+68]..[449,19690+69])
                              ]
                        expression (lang_new.ml[449,19690+73]..[449,19690+75])
                          Pexp_ident "xs" (lang_new.ml[449,19690+73]..[449,19690+75])
                      ]
                core_type (lang_new.ml[450,19770+44]..[450,19770+53])
                  Ptyp_var t_qualid
        ]
  ]
                                                                    ]
                                                              ]
                                                            core_type (lang_new.ml[450,19770+60]..[454,20073+77])
                                                              Ptyp_arrow
                                                              ""
                                                              core_type (lang_new.ml[450,19770+60]..[450,19770+69])
                                                                Ptyp_var t_qualid
                                                              core_type (lang_new.ml[451,19843+62]..[454,20073+77])
                                                                Ptyp_arrow
                                                                ""
                                                                core_type (lang_new.ml[451,19843+62]..[451,19843+72])
                                                                  Ptyp_constr "Tokenf.txt" (lang_new.ml[451,19843+62]..[451,19843+72])
                                                                  []
                                                                core_type (lang_new.ml[452,19919+64]..[454,20073+77])
                                                                  Ptyp_arrow
                                                                  ""
                                                                  core_type (lang_new.ml[452,19919+64]..[452,19919+74])
                                                                    Ptyp_constr "Tokenf.txt" (lang_new.ml[452,19919+64]..[452,19919+74])
                                                                    []
                                                                  core_type (lang_new.ml[453,19997+66]..[454,20073+77])
                                                                    Ptyp_arrow
                                                                    ""
                                                                    core_type (lang_new.ml[453,19997+66]..[453,19997+72])
                                                                      Ptyp_constr "Locf.t" (lang_new.ml[453,19997+66]..[453,19997+72])
                                                                      []
                                                                    core_type (lang_new.ml[454,20073+68]..[454,20073+77])
                                                                      Ptyp_var t_qualid
                                                      ]
                                                ]
                                                None
                                              expression (lang_new.ml[456,20171+14]..[486,21430+16]) ghost
                                                Pexp_construct "::" (lang_new.ml[456,20171+14]..[486,21430+16]) ghost
                                                Some
                                                  expression (lang_new.ml[456,20171+14]..[486,21430+16]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lang_new.ml[456,20171+14]..[486,21430+15])
                                                        Pexp_record
                                                        [
                                                          "symbols" (lang_new.ml[457,20187+16]..[457,20187+23])
                                                            expression (lang_new.ml[458,20213+18]..[470,20704+41])
                                                              Pexp_construct "::" (lang_new.ml[458,20213+19]..[470,20704+41]) ghost
                                                              Some
                                                                expression (lang_new.ml[458,20213+19]..[470,20704+41]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lang_new.ml[458,20213+19]..[460,20315+41])
                                                                      Pexp_construct "Token" (lang_new.ml[458,20213+19]..[458,20213+24])
                                                                      Some
expression (lang_new.ml[459,20238+21]..[460,20315+41]) ghost
  Pexp_constraint
  expression (lang_new.ml[459,20238+22]..[460,20315+23])
    Pexp_record
    [
      "descr" (lang_new.ml[459,20238+24]..[459,20238+29])
        expression (lang_new.ml[459,20238+32]..[459,20238+76])
          Pexp_record
          [
            "tag" (lang_new.ml[459,20238+34]..[459,20238+37])
              expression (lang_new.ml[459,20238+40]..[459,20238+44])
                Pexp_variant "Uid"
                None
            "word" (lang_new.ml[459,20238+46]..[459,20238+50])
              expression (lang_new.ml[459,20238+53]..[459,20238+56])
                Pexp_construct "Any" (lang_new.ml[459,20238+53]..[459,20238+56])
                None
            "tag_name" (lang_new.ml[459,20238+58]..[459,20238+66])
              expression (lang_new.ml[459,20238+69]..[459,20238+74])
                Pexp_constant Const_string("Uid",None)
          ]
          None
    ]
    None
  core_type (lang_new.ml[460,20315+26]..[460,20315+40])
    Ptyp_constr "Tokenf.pattern" (lang_new.ml[460,20315+26]..[460,20315+40])
    []
                                                                    expression (lang_new.ml[461,20358+18]..[470,20704+41]) ghost
                                                                      Pexp_construct "::" (lang_new.ml[461,20358+18]..[470,20704+41]) ghost
                                                                      Some
expression (lang_new.ml[461,20358+18]..[470,20704+41]) ghost
  Pexp_tuple
  [
    expression (lang_new.ml[461,20358+18]..[465,20510+40])
      Pexp_construct "Token" (lang_new.ml[461,20358+18]..[461,20358+23])
      Some
        expression (lang_new.ml[462,20382+20]..[465,20510+40]) ghost
          Pexp_constraint
          expression (lang_new.ml[462,20382+21]..[465,20510+22])
            Pexp_record
            [
              "descr" (lang_new.ml[463,20405+23]..[463,20405+28])
                expression (lang_new.ml[464,20436+25]..[464,20436+73])
                  Pexp_record
                  [
                    "tag" (lang_new.ml[464,20436+27]..[464,20436+30])
                      expression (lang_new.ml[464,20436+33]..[464,20436+37])
                        Pexp_variant "Key"
                        None
                    "word" (lang_new.ml[464,20436+39]..[464,20436+43])
                      expression (lang_new.ml[464,20436+46]..[464,20436+53])
                        Pexp_construct "A" (lang_new.ml[464,20436+47]..[464,20436+48])
                        Some
                          expression (lang_new.ml[464,20436+49]..[464,20436+52])
                            Pexp_constant Const_string(".",None)
                    "tag_name" (lang_new.ml[464,20436+55]..[464,20436+63])
                      expression (lang_new.ml[464,20436+66]..[464,20436+71])
                        Pexp_constant Const_string("Key",None)
                  ]
                  None
            ]
            None
          core_type (lang_new.ml[465,20510+25]..[465,20510+39])
            Ptyp_constr "Tokenf.pattern" (lang_new.ml[465,20510+25]..[465,20510+39])
            []
    expression (lang_new.ml[466,20552+18]..[470,20704+41]) ghost
      Pexp_construct "::" (lang_new.ml[466,20552+18]..[470,20704+41]) ghost
      Some
        expression (lang_new.ml[466,20552+18]..[470,20704+41]) ghost
          Pexp_tuple
          [
            expression (lang_new.ml[466,20552+18]..[470,20704+40])
              Pexp_construct "Token" (lang_new.ml[466,20552+18]..[466,20552+23])
              Some
                expression (lang_new.ml[467,20576+20]..[470,20704+40]) ghost
                  Pexp_constraint
                  expression (lang_new.ml[467,20576+21]..[470,20704+22])
                    Pexp_record
                    [
                      "descr" (lang_new.ml[468,20599+23]..[468,20599+28])
                        expression (lang_new.ml[469,20630+25]..[469,20630+73])
                          Pexp_record
                          [
                            "tag" (lang_new.ml[469,20630+27]..[469,20630+30])
                              expression (lang_new.ml[469,20630+33]..[469,20630+37])
                                Pexp_variant "Lid"
                                None
                            "word" (lang_new.ml[469,20630+39]..[469,20630+43])
                              expression (lang_new.ml[469,20630+46]..[469,20630+53])
                                Pexp_construct "A" (lang_new.ml[469,20630+47]..[469,20630+48])
                                Some
                                  expression (lang_new.ml[469,20630+49]..[469,20630+52])
                                    Pexp_constant Const_string("t",None)
                            "tag_name" (lang_new.ml[469,20630+55]..[469,20630+63])
                              expression (lang_new.ml[469,20630+66]..[469,20630+71])
                                Pexp_constant Const_string("Lid",None)
                          ]
                          None
                    ]
                    None
                  core_type (lang_new.ml[470,20704+25]..[470,20704+39])
                    Ptyp_constr "Tokenf.pattern" (lang_new.ml[470,20704+25]..[470,20704+39])
                    []
            expression (lang_new.ml[470,20704+40]..[470,20704+41]) ghost
              Pexp_construct "[]" (lang_new.ml[470,20704+40]..[470,20704+41]) ghost
              None
          ]
  ]
                                                                  ]
                                                          "annot" (lang_new.ml[471,20747+16]..[471,20747+21])
                                                            expression (lang_new.ml[471,20747+24]..[471,20747+42])
                                                              Pexp_constant Const_string("`Uid (_loc, x)\n",None)
                                                          "fn" (lang_new.ml[472,20791+16]..[472,20791+18])
                                                            expression (lang_new.ml[473,20812+18]..[485,21357+72])
                                                              Pexp_apply
                                                              expression (lang_new.ml[473,20812+19]..[473,20812+34])
                                                                Pexp_ident "Gramf.mk_action" (lang_new.ml[473,20812+19]..[473,20812+34])
                                                              [
                                                                <label> ""
                                                                  expression (lang_new.ml[474,20847+21]..[485,21357+71]) ghost
                                                                    Pexp_constraint
                                                                    expression (lang_new.ml[474,20847+22]..[483,21246+72])
                                                                      Pexp_function
                                                                      [
<case>
  pattern (lang_new.ml[475,20878+24]..[475,20878+25])
    Ppat_any
  expression (lang_new.ml[476,20907+26]..[483,21246+72])
    Pexp_function
    [
      <case>
        pattern (lang_new.ml[477,20943+29]..[477,20943+30])
          Ppat_any
        expression (lang_new.ml[478,20977+31]..[483,21246+71])
          Pexp_function
          [
            <case>
              pattern (lang_new.ml[479,21018+34]..[479,21018+56])
                Ppat_constraint
                pattern (lang_new.ml[479,21018+35]..[479,21018+42])
                  Ppat_var "__fan_0" (lang_new.ml[479,21018+35]..[479,21018+42])
                core_type (lang_new.ml[479,21018+45]..[479,21018+55])
                  Ptyp_constr "Tokenf.txt" (lang_new.ml[479,21018+45]..[479,21018+55])
                  []
              expression (lang_new.ml[480,21078+36]..[483,21246+70])
                Pexp_function
                [
                  <case>
                    pattern (lang_new.ml[481,21124+39]..[481,21124+54])
                      Ppat_constraint
                      pattern (lang_new.ml[481,21124+40]..[481,21124+44])
                        Ppat_var "_loc" (lang_new.ml[481,21124+40]..[481,21124+44])
                      core_type (lang_new.ml[481,21124+47]..[481,21124+53])
                        Ptyp_constr "Locf.t" (lang_new.ml[481,21124+47]..[481,21124+53])
                        []
                    expression (lang_new.ml[482,21182+41]..[483,21246+69])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lang_new.ml[482,21182+45]..[482,21182+46])
                            Ppat_var "x" (lang_new.ml[482,21182+45]..[482,21182+46])
                          expression (lang_new.ml[482,21182+49]..[482,21182+60])
                            Pexp_field
                            expression (lang_new.ml[482,21182+49]..[482,21182+56])
                              Pexp_ident "__fan_0" (lang_new.ml[482,21182+49]..[482,21182+56])
                            "txt" (lang_new.ml[482,21182+57]..[482,21182+60])
                      ]
                      expression (lang_new.ml[483,21246+41]..[483,21246+69]) ghost
                        Pexp_constraint
                        expression (lang_new.ml[483,21246+42]..[483,21246+56])
                          Pexp_variant "Uid"
                          Some
                            expression (lang_new.ml[483,21246+47]..[483,21246+56])
                              Pexp_tuple
                              [
                                expression (lang_new.ml[483,21246+48]..[483,21246+52])
                                  Pexp_ident "_loc" (lang_new.ml[483,21246+48]..[483,21246+52])
                                expression (lang_new.ml[483,21246+54]..[483,21246+55])
                                  Pexp_ident "x" (lang_new.ml[483,21246+54]..[483,21246+55])
                              ]
                        core_type (lang_new.ml[483,21246+59]..[483,21246+68])
                          Ptyp_var t_qualid
                ]
          ]
    ]
                                                                      ]
                                                                    core_type (lang_new.ml[484,21322+21]..[485,21357+70])
                                                                      Ptyp_arrow
                                                                      ""
                                                                      core_type (lang_new.ml[484,21322+21]..[484,21322+31])
Ptyp_constr "Tokenf.txt" (lang_new.ml[484,21322+21]..[484,21322+31])
[]
                                                                      core_type (lang_new.ml[485,21357+23]..[485,21357+70])
Ptyp_arrow
""
core_type (lang_new.ml[485,21357+23]..[485,21357+33])
  Ptyp_constr "Tokenf.txt" (lang_new.ml[485,21357+23]..[485,21357+33])
  []
core_type (lang_new.ml[485,21357+37]..[485,21357+70])
  Ptyp_arrow
  ""
  core_type (lang_new.ml[485,21357+37]..[485,21357+47])
    Ptyp_constr "Tokenf.txt" (lang_new.ml[485,21357+37]..[485,21357+47])
    []
  core_type (lang_new.ml[485,21357+51]..[485,21357+70])
    Ptyp_arrow
    ""
    core_type (lang_new.ml[485,21357+51]..[485,21357+57])
      Ptyp_constr "Locf.t" (lang_new.ml[485,21357+51]..[485,21357+57])
      []
    core_type (lang_new.ml[485,21357+61]..[485,21357+70])
      Ptyp_var t_qualid
                                                              ]
                                                        ]
                                                        None
                                                      expression (lang_new.ml[486,21430+15]..[486,21430+16]) ghost
                                                        Pexp_construct "[]" (lang_new.ml[486,21430+15]..[486,21430+16]) ghost
                                                        None
                                                    ]
                                            ]
                                  ]
                                  None
                                core_type (lang_new.ml[487,21447+14]..[487,21447+26])
                                  Ptyp_constr "Gramf.olevel" (lang_new.ml[487,21447+14]..[487,21447+26])
                                  []
                          ]
                          None
                        core_type (lang_new.ml[488,21475+9]..[488,21475+40])
                          Ptyp_constr "Gramf.single_extend_statement" (lang_new.ml[488,21475+11]..[488,21475+40])
                          [
                            core_type (lang_new.ml[488,21475+9]..[488,21475+10])
                              Ptyp_any
                          ]
                  ]
                expression (lang_new.ml[489,21518+2]..[776,43139+41])
                  Pexp_sequence
                  expression (lang_new.ml[489,21518+2]..[611,30917+41])
                    Pexp_apply
                    expression (lang_new.ml[489,21518+2]..[489,21518+21])
                      Pexp_ident "Gramf.extend_single" (lang_new.ml[489,21518+2]..[489,21518+21])
                    [
                      <label> ""
                        expression (lang_new.ml[490,21540+4]..[611,30917+41]) ghost
                          Pexp_constraint
                          expression (lang_new.ml[490,21540+5]..[611,30917+6])
                            Pexp_record
                            [
                              "entry" (lang_new.ml[491,21547+7]..[491,21547+12])
                                expression (lang_new.ml[491,21547+15]..[491,21547+53]) ghost
                                  Pexp_constraint
                                  expression (lang_new.ml[491,21547+16]..[491,21547+28])
                                    Pexp_ident "nonterminals" (lang_new.ml[491,21547+16]..[491,21547+28])
                                  core_type (lang_new.ml[491,21547+31]..[491,21547+52])
                                    Ptyp_constr "Gramf.t" (lang_new.ml[491,21547+45]..[491,21547+52])
                                    [
                                      core_type (lang_new.ml[491,21547+31]..[491,21547+44])
                                        Ptyp_var nonterminals
                                    ]
                              "olevel" (lang_new.ml[492,21602+7]..[492,21602+13])
                                expression (lang_new.ml[493,21618+9]..[610,30889+27]) ghost
                                  Pexp_constraint
                                  expression (lang_new.ml[493,21618+10]..[610,30889+11])
                                    Pexp_record
                                    [
                                      "label" (lang_new.ml[494,21630+12]..[494,21630+17])
                                        expression (lang_new.ml[494,21630+20]..[494,21630+24])
                                          Pexp_construct "None" (lang_new.ml[494,21630+20]..[494,21630+24])
                                          None
                                      "lassoc" (lang_new.ml[495,21656+12]..[495,21656+18])
                                        expression (lang_new.ml[495,21656+21]..[495,21656+25])
                                          Pexp_construct "true" (lang_new.ml[495,21656+21]..[495,21656+25])
                                          None
                                      "productions" (lang_new.ml[496,21683+12]..[496,21683+23])
                                        expression (lang_new.ml[497,21709+14]..[609,30871+17])
                                          Pexp_construct "::" (lang_new.ml[497,21709+15]..[609,30871+17]) ghost
                                          Some
                                            expression (lang_new.ml[497,21709+15]..[609,30871+17]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lang_new.ml[497,21709+15]..[609,30871+16])
                                                  Pexp_record
                                                  [
                                                    "symbols" (lang_new.ml[498,21726+17]..[498,21726+24])
                                                      expression (lang_new.ml[499,21753+19]..[501,21836+76])
                                                        Pexp_construct "::" (lang_new.ml[499,21753+20]..[501,21836+76]) ghost
                                                        Some
                                                          expression (lang_new.ml[499,21753+20]..[501,21836+76]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lang_new.ml[499,21753+20]..[499,21753+56])
                                                                Pexp_construct "Nterm" (lang_new.ml[499,21753+20]..[499,21753+25])
                                                                Some
                                                                  expression (lang_new.ml[499,21753+26]..[499,21753+56])
                                                                    Pexp_apply
                                                                    expression (lang_new.ml[499,21753+27]..[499,21753+36])
                                                                      Pexp_ident "Gramf.obj" (lang_new.ml[499,21753+27]..[499,21753+36])
                                                                    [
                                                                      <label> ""
expression (lang_new.ml[499,21753+37]..[499,21753+55]) ghost
  Pexp_constraint
  expression (lang_new.ml[499,21753+38]..[499,21753+40])
    Pexp_ident "ty" (lang_new.ml[499,21753+38]..[499,21753+40])
  core_type (lang_new.ml[499,21753+43]..[499,21753+54])
    Ptyp_constr "Gramf.t" (lang_new.ml[499,21753+47]..[499,21753+54])
    [
      core_type (lang_new.ml[499,21753+43]..[499,21753+46])
        Ptyp_var ty
    ]
                                                                    ]
                                                              expression (lang_new.ml[500,21811+19]..[501,21836+76]) ghost
                                                                Pexp_construct "::" (lang_new.ml[500,21811+19]..[501,21836+76]) ghost
                                                                Some
                                                                  expression (lang_new.ml[500,21811+19]..[501,21836+76]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lang_new.ml[500,21811+19]..[501,21836+75])
Pexp_construct "List1" (lang_new.ml[500,21811+19]..[500,21811+24])
Some
  expression (lang_new.ml[501,21836+21]..[501,21836+75])
    Pexp_construct "Nterm" (lang_new.ml[501,21836+22]..[501,21836+27])
    Some
      expression (lang_new.ml[501,21836+28]..[501,21836+74])
        Pexp_apply
        expression (lang_new.ml[501,21836+29]..[501,21836+38])
          Pexp_ident "Gramf.obj" (lang_new.ml[501,21836+29]..[501,21836+38])
        [
          <label> ""
            expression (lang_new.ml[501,21836+39]..[501,21836+73]) ghost
              Pexp_constraint
              expression (lang_new.ml[501,21836+40]..[501,21836+50])
                Pexp_ident "type_entry" (lang_new.ml[501,21836+40]..[501,21836+50])
              core_type (lang_new.ml[501,21836+53]..[501,21836+72])
                Ptyp_constr "Gramf.t" (lang_new.ml[501,21836+65]..[501,21836+72])
                [
                  core_type (lang_new.ml[501,21836+53]..[501,21836+64])
                    Ptyp_var type_entry
                ]
        ]
                                                                      expression (lang_new.ml[501,21836+75]..[501,21836+76]) ghost
Pexp_construct "[]" (lang_new.ml[501,21836+75]..[501,21836+76]) ghost
None
                                                                    ]
                                                            ]
                                                    "annot" (lang_new.ml[502,21914+17]..[502,21914+22])
                                                      expression (lang_new.ml[503,21939+19]..[503,21939+1860])
                                                        Pexp_constant Const_string("let mk =\n  match t with\n  | `Static t ->\n      (`Dot (_loc, (t :> Astf.vid), (`Lid (_loc, \"mk\"))) :> Astf.exp)\n  | `Dyn (x,t) ->\n      (`App\n         (_loc, (`Dot (_loc, (t :> Astf.vid), (`Lid (_loc, \"mk_dynamic\")))),\n           (x :> Astf.exp)) :> Astf.exp) in\nsem_of_list\n  (List.map\n     (function\n      | (_loc,x,descr,ty) ->\n          (match (descr, ty) with\n           | (Some d,None ) ->\n               (`Value\n                  (_loc, (`Negative _loc),\n                    (`Bind\n                       (_loc, (`Lid (_loc, x)),\n                         (`App (_loc, (mk :> Astf.exp), (`Str (_loc, d))))))) :> \n               Astf.stru)\n           | (Some d,Some typ) ->\n               (`Value\n                  (_loc, (`Negative _loc),\n                    (`Bind\n                       (_loc, (`Lid (_loc, x)),\n                         (`Constraint\n                            (_loc,\n                              (`App\n                                 (_loc, (mk :> Astf.exp), (`Str (_loc, d)))),\n                              (typ :> Astf.ctyp)))))) :> Astf.stru)\n           | (None ,None ) ->\n               (`Value\n                  (_loc, (`Negative _loc),\n                    (`Bind\n                       (_loc, (`Lid (_loc, x)),\n                         (`App (_loc, (mk :> Astf.exp), (`Str (_loc, x))))))) :> \n               Astf.stru)\n           | (None ,Some typ) ->\n               (`Value\n                  (_loc, (`Negative _loc),\n                    (`Bind\n                       (_loc, (`Lid (_loc, x)),\n                         (`Constraint\n                            (_loc,\n                              (`App\n                                 (_loc, (mk :> Astf.exp), (`Str (_loc, x)))),\n                              (typ :> Astf.ctyp)))))) :> Astf.stru))) ls)\n",None)
                                                    "fn" (lang_new.ml[504,23801+17]..[504,23801+19])
                                                      expression (lang_new.ml[505,23823+19]..[608,30793+77])
                                                        Pexp_apply
                                                        expression (lang_new.ml[505,23823+20]..[505,23823+35])
                                                          Pexp_ident "Gramf.mk_action" (lang_new.ml[505,23823+20]..[505,23823+35])
                                                        [
                                                          <label> ""
                                                            expression (lang_new.ml[506,23859+22]..[608,30793+76]) ghost
                                                              Pexp_constraint
                                                              expression (lang_new.ml[506,23859+23]..[605,30582+53])
                                                                Pexp_function
                                                                [
                                                                  <case>
                                                                    pattern (lang_new.ml[507,23891+25]..[507,23891+48])
                                                                      Ppat_constraint
                                                                      pattern (lang_new.ml[507,23891+26]..[507,23891+28])
Ppat_var "ls" (lang_new.ml[507,23891+26]..[507,23891+28])
                                                                      core_type (lang_new.ml[507,23891+31]..[507,23891+47])
Ptyp_constr "list" (lang_new.ml[507,23891+43]..[507,23891+47])
[
  core_type (lang_new.ml[507,23891+31]..[507,23891+42])
    Ptyp_var type_entry
]
                                                                    expression (lang_new.ml[508,23943+27]..[605,30582+53])
                                                                      Pexp_function
                                                                      [
<case>
  pattern (lang_new.ml[509,23980+30]..[509,23980+39])
    Ppat_constraint
    pattern (lang_new.ml[509,23980+31]..[509,23980+32])
      Ppat_var "t" (lang_new.ml[509,23980+31]..[509,23980+32])
    core_type (lang_new.ml[509,23980+35]..[509,23980+38])
      Ptyp_var ty
  expression (lang_new.ml[510,24023+32]..[605,30582+52])
    Pexp_function
    [
      <case>
        pattern (lang_new.ml[511,24065+35]..[511,24065+50])
          Ppat_constraint
          pattern (lang_new.ml[511,24065+36]..[511,24065+40])
            Ppat_var "_loc" (lang_new.ml[511,24065+36]..[511,24065+40])
          core_type (lang_new.ml[511,24065+43]..[511,24065+49])
            Ptyp_constr "Locf.t" (lang_new.ml[511,24065+43]..[511,24065+49])
            []
        expression (lang_new.ml[512,24119+37]..[605,30582+51]) ghost
          Pexp_constraint
          expression (lang_new.ml[512,24119+38]..[604,30509+69])
            Pexp_let Nonrec
            [
              <def>
                pattern (lang_new.ml[512,24119+42]..[512,24119+44])
                  Ppat_var "mk" (lang_new.ml[512,24119+42]..[512,24119+44])
                expression (lang_new.ml[513,24166+40]..[527,25026+53])
                  Pexp_match
                  expression (lang_new.ml[513,24166+46]..[513,24166+47])
                    Pexp_ident "t" (lang_new.ml[513,24166+46]..[513,24166+47])
                  [
                    <case>
                      pattern (lang_new.ml[514,24219+42]..[514,24219+51])
                        Ppat_variant "Static"
                        Some
                          pattern (lang_new.ml[514,24219+50]..[514,24219+51])
                            Ppat_var "t" (lang_new.ml[514,24219+50]..[514,24219+51])
                      expression (lang_new.ml[515,24274+44]..[518,24469+53]) ghost
                        Pexp_coerce
                        expression (lang_new.ml[515,24274+45]..[517,24395+69])
                          Pexp_variant "Dot"
                          Some
                            expression (lang_new.ml[516,24324+47]..[517,24395+69])
                              Pexp_tuple
                              [
                                expression (lang_new.ml[516,24324+48]..[516,24324+52])
                                  Pexp_ident "_loc" (lang_new.ml[516,24324+48]..[516,24324+52])
                                expression (lang_new.ml[516,24324+54]..[516,24324+69]) ghost
                                  Pexp_coerce
                                  expression (lang_new.ml[516,24324+55]..[516,24324+56])
                                    Pexp_ident "t" (lang_new.ml[516,24324+55]..[516,24324+56])
                                  None
                                  core_type (lang_new.ml[516,24324+60]..[516,24324+68])
                                    Ptyp_constr "Astf.vid" (lang_new.ml[516,24324+60]..[516,24324+68])
                                    []
                                expression (lang_new.ml[517,24395+49]..[517,24395+68])
                                  Pexp_variant "Lid"
                                  Some
                                    expression (lang_new.ml[517,24395+55]..[517,24395+67])
                                      Pexp_tuple
                                      [
                                        expression (lang_new.ml[517,24395+56]..[517,24395+60])
                                          Pexp_ident "_loc" (lang_new.ml[517,24395+56]..[517,24395+60])
                                        expression (lang_new.ml[517,24395+62]..[517,24395+66])
                                          Pexp_constant Const_string("mk",None)
                                      ]
                              ]
                        None
                        core_type (lang_new.ml[518,24469+44]..[518,24469+52])
                          Ptyp_constr "Astf.exp" (lang_new.ml[518,24469+44]..[518,24469+52])
                          []
                    <case>
                      pattern (lang_new.ml[519,24523+42]..[519,24523+52])
                        Ppat_variant "Dyn"
                        Some
                          pattern (lang_new.ml[519,24523+47]..[519,24523+52])
                            Ppat_tuple
                            [
                              pattern (lang_new.ml[519,24523+48]..[519,24523+49])
                                Ppat_var "x" (lang_new.ml[519,24523+48]..[519,24523+49])
                              pattern (lang_new.ml[519,24523+50]..[519,24523+51])
                                Ppat_var "t" (lang_new.ml[519,24523+50]..[519,24523+51])
                            ]
                      expression (lang_new.ml[520,24579+44]..[527,25026+53]) ghost
                        Pexp_coerce
                        expression (lang_new.ml[520,24579+45]..[526,24956+65])
                          Pexp_variant "App"
                          Some
                            expression (lang_new.ml[521,24629+47]..[526,24956+65])
                              Pexp_tuple
                              [
                                expression (lang_new.ml[521,24629+48]..[521,24629+52])
                                  Pexp_ident "_loc" (lang_new.ml[521,24629+48]..[521,24629+52])
                                expression (lang_new.ml[522,24683+49]..[525,24874+80])
                                  Pexp_variant "Dot"
                                  Some
                                    expression (lang_new.ml[523,24738+52]..[525,24874+79])
                                      Pexp_tuple
                                      [
                                        expression (lang_new.ml[523,24738+53]..[523,24738+57])
                                          Pexp_ident "_loc" (lang_new.ml[523,24738+53]..[523,24738+57])
                                        expression (lang_new.ml[523,24738+59]..[523,24738+74]) ghost
                                          Pexp_coerce
                                          expression (lang_new.ml[523,24738+60]..[523,24738+61])
                                            Pexp_ident "t" (lang_new.ml[523,24738+60]..[523,24738+61])
                                          None
                                          core_type (lang_new.ml[523,24738+65]..[523,24738+73])
                                            Ptyp_constr "Astf.vid" (lang_new.ml[523,24738+65]..[523,24738+73])
                                            []
                                        expression (lang_new.ml[524,24814+54]..[525,24874+78])
                                          Pexp_variant "Lid"
                                          Some
                                            expression (lang_new.ml[525,24874+57]..[525,24874+77])
                                              Pexp_tuple
                                              [
                                                expression (lang_new.ml[525,24874+58]..[525,24874+62])
                                                  Pexp_ident "_loc" (lang_new.ml[525,24874+58]..[525,24874+62])
                                                expression (lang_new.ml[525,24874+64]..[525,24874+76])
                                                  Pexp_constant Const_string("mk_dynamic",None)
                                              ]
                                      ]
                                expression (lang_new.ml[526,24956+49]..[526,24956+64]) ghost
                                  Pexp_coerce
                                  expression (lang_new.ml[526,24956+50]..[526,24956+51])
                                    Pexp_ident "x" (lang_new.ml[526,24956+50]..[526,24956+51])
                                  None
                                  core_type (lang_new.ml[526,24956+55]..[526,24956+63])
                                    Ptyp_constr "Astf.exp" (lang_new.ml[526,24956+55]..[526,24956+63])
                                    []
                              ]
                        None
                        core_type (lang_new.ml[527,25026+44]..[527,25026+52])
                          Ptyp_constr "Astf.exp" (lang_new.ml[527,25026+44]..[527,25026+52])
                          []
                  ]
            ]
            expression (lang_new.ml[528,25083+38]..[604,30509+69])
              Pexp_apply
              expression (lang_new.ml[528,25083+38]..[528,25083+49])
                Pexp_ident "sem_of_list" (lang_new.ml[528,25083+38]..[528,25083+49])
              [
                <label> ""
                  expression (lang_new.ml[529,25133+40]..[604,30509+69])
                    Pexp_apply
                    expression (lang_new.ml[529,25133+41]..[529,25133+49])
                      Pexp_ident "List.map" (lang_new.ml[529,25133+41]..[529,25133+49])
                    [
                      <label> ""
                        expression (lang_new.ml[530,25183+43]..[604,30509+65])
                          Pexp_function
                          [
                            <case>
                              pattern (lang_new.ml[531,25236+46]..[531,25236+63])
                                Ppat_tuple
                                [
                                  pattern (lang_new.ml[531,25236+47]..[531,25236+51])
                                    Ppat_var "_loc" (lang_new.ml[531,25236+47]..[531,25236+51])
                                  pattern (lang_new.ml[531,25236+52]..[531,25236+53])
                                    Ppat_var "x" (lang_new.ml[531,25236+52]..[531,25236+53])
                                  pattern (lang_new.ml[531,25236+54]..[531,25236+59])
                                    Ppat_var "descr" (lang_new.ml[531,25236+54]..[531,25236+59])
                                  pattern (lang_new.ml[531,25236+60]..[531,25236+62])
                                    Ppat_var "ty" (lang_new.ml[531,25236+60]..[531,25236+62])
                                ]
                              expression (lang_new.ml[532,25303+48]..[604,30509+64])
                                Pexp_match
                                expression (lang_new.ml[532,25303+55]..[532,25303+66])
                                  Pexp_tuple
                                  [
                                    expression (lang_new.ml[532,25303+56]..[532,25303+61])
                                      Pexp_ident "descr" (lang_new.ml[532,25303+56]..[532,25303+61])
                                    expression (lang_new.ml[532,25303+63]..[532,25303+65])
                                      Pexp_ident "ty" (lang_new.ml[532,25303+63]..[532,25303+65])
                                  ]
                                [
                                  <case>
                                    pattern (lang_new.ml[533,25375+51]..[533,25375+65])
                                      Ppat_tuple
                                      [
                                        pattern (lang_new.ml[533,25375+52]..[533,25375+58])
                                          Ppat_construct "Some" (lang_new.ml[533,25375+52]..[533,25375+56])
                                          Some
                                            pattern (lang_new.ml[533,25375+57]..[533,25375+58])
                                              Ppat_var "d" (lang_new.ml[533,25375+57]..[533,25375+58])
                                        pattern (lang_new.ml[533,25375+59]..[533,25375+63])
                                          Ppat_construct "None" (lang_new.ml[533,25375+59]..[533,25375+63])
                                          None
                                      ]
                                    expression (lang_new.ml[534,25444+53]..[548,26452+63]) ghost
                                      Pexp_coerce
                                      expression (lang_new.ml[534,25444+54]..[547,26364+83])
                                        Pexp_variant "Value"
                                        Some
                                          expression (lang_new.ml[535,25505+56]..[547,26364+83])
                                            Pexp_tuple
                                            [
                                              expression (lang_new.ml[535,25505+57]..[535,25505+61])
                                                Pexp_ident "_loc" (lang_new.ml[535,25505+57]..[535,25505+61])
                                              expression (lang_new.ml[536,25568+58]..[536,25568+74])
                                                Pexp_variant "Negative"
                                                Some
                                                  expression (lang_new.ml[536,25568+69]..[536,25568+73])
                                                    Pexp_ident "_loc" (lang_new.ml[536,25568+69]..[536,25568+73])
                                              expression (lang_new.ml[537,25644+58]..[547,26364+82])
                                                Pexp_variant "Bind"
                                                Some
                                                  expression (lang_new.ml[538,25709+61]..[547,26364+81])
                                                    Pexp_tuple
                                                    [
                                                      expression (lang_new.ml[538,25709+62]..[538,25709+66])
                                                        Pexp_ident "_loc" (lang_new.ml[538,25709+62]..[538,25709+66])
                                                      expression (lang_new.ml[539,25777+63]..[540,25846+76])
                                                        Pexp_variant "Lid"
                                                        Some
                                                          expression (lang_new.ml[540,25846+66]..[540,25846+75])
                                                            Pexp_tuple
                                                            [
                                                              expression (lang_new.ml[540,25846+67]..[540,25846+71])
                                                                Pexp_ident "_loc" (lang_new.ml[540,25846+67]..[540,25846+71])
                                                              expression (lang_new.ml[540,25846+73]..[540,25846+74])
                                                                Pexp_ident "x" (lang_new.ml[540,25846+73]..[540,25846+74])
                                                            ]
                                                      expression (lang_new.ml[541,25924+63]..[547,26364+80])
                                                        Pexp_variant "App"
                                                        Some
                                                          expression (lang_new.ml[542,25993+66]..[547,26364+79])
                                                            Pexp_tuple
                                                            [
                                                              expression (lang_new.ml[542,25993+67]..[542,25993+71])
                                                                Pexp_ident "_loc" (lang_new.ml[542,25993+67]..[542,25993+71])
                                                              expression (lang_new.ml[543,26066+68]..[544,26142+77]) ghost
                                                                Pexp_coerce
                                                                expression (lang_new.ml[543,26066+69]..[543,26066+71])
                                                                  Pexp_ident "mk" (lang_new.ml[543,26066+69]..[543,26066+71])
                                                                None
                                                                core_type (lang_new.ml[544,26142+68]..[544,26142+76])
                                                                  Ptyp_constr "Astf.exp" (lang_new.ml[544,26142+68]..[544,26142+76])
                                                                  []
                                                              expression (lang_new.ml[545,26221+68]..[547,26364+78])
                                                                Pexp_variant "Str"
                                                                Some
                                                                  expression (lang_new.ml[547,26364+68]..[547,26364+77])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lang_new.ml[547,26364+69]..[547,26364+73])
Pexp_ident "_loc" (lang_new.ml[547,26364+69]..[547,26364+73])
                                                                      expression (lang_new.ml[547,26364+75]..[547,26364+76])
Pexp_ident "d" (lang_new.ml[547,26364+75]..[547,26364+76])
                                                                    ]
                                                            ]
                                                    ]
                                            ]
                                      None
                                      core_type (lang_new.ml[548,26452+53]..[548,26452+62])
                                        Ptyp_constr "Astf.stru" (lang_new.ml[548,26452+53]..[548,26452+62])
                                        []
                                  <case>
                                    pattern (lang_new.ml[549,26516+51]..[549,26516+68])
                                      Ppat_tuple
                                      [
                                        pattern (lang_new.ml[549,26516+52]..[549,26516+58])
                                          Ppat_construct "Some" (lang_new.ml[549,26516+52]..[549,26516+56])
                                          Some
                                            pattern (lang_new.ml[549,26516+57]..[549,26516+58])
                                              Ppat_var "d" (lang_new.ml[549,26516+57]..[549,26516+58])
                                        pattern (lang_new.ml[549,26516+59]..[549,26516+67])
                                          Ppat_construct "Some" (lang_new.ml[549,26516+59]..[549,26516+63])
                                          Some
                                            pattern (lang_new.ml[549,26516+64]..[549,26516+67])
                                              Ppat_var "typ" (lang_new.ml[549,26516+64]..[549,26516+67])
                                      ]
                                    expression (lang_new.ml[550,26588+53]..[568,27911+63]) ghost
                                      Pexp_coerce
                                      expression (lang_new.ml[550,26588+54]..[567,27823+83])
                                        Pexp_variant "Value"
                                        Some
                                          expression (lang_new.ml[551,26649+56]..[567,27823+83])
                                            Pexp_tuple
                                            [
                                              expression (lang_new.ml[551,26649+57]..[551,26649+61])
                                                Pexp_ident "_loc" (lang_new.ml[551,26649+57]..[551,26649+61])
                                              expression (lang_new.ml[552,26712+58]..[552,26712+74])
                                                Pexp_variant "Negative"
                                                Some
                                                  expression (lang_new.ml[552,26712+69]..[552,26712+73])
                                                    Pexp_ident "_loc" (lang_new.ml[552,26712+69]..[552,26712+73])
                                              expression (lang_new.ml[553,26788+58]..[567,27823+82])
                                                Pexp_variant "Bind"
                                                Some
                                                  expression (lang_new.ml[554,26853+61]..[567,27823+81])
                                                    Pexp_tuple
                                                    [
                                                      expression (lang_new.ml[554,26853+62]..[554,26853+66])
                                                        Pexp_ident "_loc" (lang_new.ml[554,26853+62]..[554,26853+66])
                                                      expression (lang_new.ml[555,26921+63]..[556,26990+76])
                                                        Pexp_variant "Lid"
                                                        Some
                                                          expression (lang_new.ml[556,26990+66]..[556,26990+75])
                                                            Pexp_tuple
                                                            [
                                                              expression (lang_new.ml[556,26990+67]..[556,26990+71])
                                                                Pexp_ident "_loc" (lang_new.ml[556,26990+67]..[556,26990+71])
                                                              expression (lang_new.ml[556,26990+73]..[556,26990+74])
                                                                Pexp_ident "x" (lang_new.ml[556,26990+73]..[556,26990+74])
                                                            ]
                                                      expression (lang_new.ml[557,27068+63]..[567,27823+80])
                                                        Pexp_variant "Constraint"
                                                        Some
                                                          expression (lang_new.ml[558,27144+66]..[567,27823+79])
                                                            Pexp_tuple
                                                            [
                                                              expression (lang_new.ml[558,27144+67]..[558,27144+71])
                                                                Pexp_ident "_loc" (lang_new.ml[558,27144+67]..[558,27144+71])
                                                              expression (lang_new.ml[559,27217+68]..[565,27664+80])
                                                                Pexp_variant "App"
                                                                Some
                                                                  expression (lang_new.ml[561,27360+68]..[565,27664+79])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lang_new.ml[561,27360+69]..[561,27360+73])
Pexp_ident "_loc" (lang_new.ml[561,27360+69]..[561,27360+73])
                                                                      expression (lang_new.ml[562,27435+68]..[563,27511+77]) ghost
Pexp_coerce
expression (lang_new.ml[562,27435+69]..[562,27435+71])
  Pexp_ident "mk" (lang_new.ml[562,27435+69]..[562,27435+71])
None
core_type (lang_new.ml[563,27511+68]..[563,27511+76])
  Ptyp_constr "Astf.exp" (lang_new.ml[563,27511+68]..[563,27511+76])
  []
                                                                      expression (lang_new.ml[564,27590+68]..[565,27664+78])
Pexp_variant "Str"
Some
  expression (lang_new.ml[565,27664+68]..[565,27664+77])
    Pexp_tuple
    [
      expression (lang_new.ml[565,27664+69]..[565,27664+73])
        Pexp_ident "_loc" (lang_new.ml[565,27664+69]..[565,27664+73])
      expression (lang_new.ml[565,27664+75]..[565,27664+76])
        Pexp_ident "d" (lang_new.ml[565,27664+75]..[565,27664+76])
    ]
                                                                    ]
                                                              expression (lang_new.ml[566,27746+68]..[567,27823+78]) ghost
                                                                Pexp_coerce
                                                                expression (lang_new.ml[566,27746+69]..[566,27746+72])
                                                                  Pexp_ident "typ" (lang_new.ml[566,27746+69]..[566,27746+72])
                                                                None
                                                                core_type (lang_new.ml[567,27823+68]..[567,27823+77])
                                                                  Ptyp_constr "Astf.ctyp" (lang_new.ml[567,27823+68]..[567,27823+77])
                                                                  []
                                                            ]
                                                    ]
                                            ]
                                      None
                                      core_type (lang_new.ml[568,27911+53]..[568,27911+62])
                                        Ptyp_constr "Astf.stru" (lang_new.ml[568,27911+53]..[568,27911+62])
                                        []
                                  <case>
                                    pattern (lang_new.ml[569,27975+51]..[569,27975+64])
                                      Ppat_tuple
                                      [
                                        pattern (lang_new.ml[569,27975+52]..[569,27975+56])
                                          Ppat_construct "None" (lang_new.ml[569,27975+52]..[569,27975+56])
                                          None
                                        pattern (lang_new.ml[569,27975+58]..[569,27975+62])
                                          Ppat_construct "None" (lang_new.ml[569,27975+58]..[569,27975+62])
                                          None
                                      ]
                                    expression (lang_new.ml[570,28043+53]..[584,29051+63]) ghost
                                      Pexp_coerce
                                      expression (lang_new.ml[570,28043+54]..[583,28963+83])
                                        Pexp_variant "Value"
                                        Some
                                          expression (lang_new.ml[571,28104+56]..[583,28963+83])
                                            Pexp_tuple
                                            [
                                              expression (lang_new.ml[571,28104+57]..[571,28104+61])
                                                Pexp_ident "_loc" (lang_new.ml[571,28104+57]..[571,28104+61])
                                              expression (lang_new.ml[572,28167+58]..[572,28167+74])
                                                Pexp_variant "Negative"
                                                Some
                                                  expression (lang_new.ml[572,28167+69]..[572,28167+73])
                                                    Pexp_ident "_loc" (lang_new.ml[572,28167+69]..[572,28167+73])
                                              expression (lang_new.ml[573,28243+58]..[583,28963+82])
                                                Pexp_variant "Bind"
                                                Some
                                                  expression (lang_new.ml[574,28308+61]..[583,28963+81])
                                                    Pexp_tuple
                                                    [
                                                      expression (lang_new.ml[574,28308+62]..[574,28308+66])
                                                        Pexp_ident "_loc" (lang_new.ml[574,28308+62]..[574,28308+66])
                                                      expression (lang_new.ml[575,28376+63]..[576,28445+76])
                                                        Pexp_variant "Lid"
                                                        Some
                                                          expression (lang_new.ml[576,28445+66]..[576,28445+75])
                                                            Pexp_tuple
                                                            [
                                                              expression (lang_new.ml[576,28445+67]..[576,28445+71])
                                                                Pexp_ident "_loc" (lang_new.ml[576,28445+67]..[576,28445+71])
                                                              expression (lang_new.ml[576,28445+73]..[576,28445+74])
                                                                Pexp_ident "x" (lang_new.ml[576,28445+73]..[576,28445+74])
                                                            ]
                                                      expression (lang_new.ml[577,28523+63]..[583,28963+80])
                                                        Pexp_variant "App"
                                                        Some
                                                          expression (lang_new.ml[578,28592+66]..[583,28963+79])
                                                            Pexp_tuple
                                                            [
                                                              expression (lang_new.ml[578,28592+67]..[578,28592+71])
                                                                Pexp_ident "_loc" (lang_new.ml[578,28592+67]..[578,28592+71])
                                                              expression (lang_new.ml[579,28665+68]..[580,28741+77]) ghost
                                                                Pexp_coerce
                                                                expression (lang_new.ml[579,28665+69]..[579,28665+71])
                                                                  Pexp_ident "mk" (lang_new.ml[579,28665+69]..[579,28665+71])
                                                                None
                                                                core_type (lang_new.ml[580,28741+68]..[580,28741+76])
                                                                  Ptyp_constr "Astf.exp" (lang_new.ml[580,28741+68]..[580,28741+76])
                                                                  []
                                                              expression (lang_new.ml[581,28820+68]..[583,28963+78])
                                                                Pexp_variant "Str"
                                                                Some
                                                                  expression (lang_new.ml[583,28963+68]..[583,28963+77])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lang_new.ml[583,28963+69]..[583,28963+73])
Pexp_ident "_loc" (lang_new.ml[583,28963+69]..[583,28963+73])
                                                                      expression (lang_new.ml[583,28963+75]..[583,28963+76])
Pexp_ident "x" (lang_new.ml[583,28963+75]..[583,28963+76])
                                                                    ]
                                                            ]
                                                    ]
                                            ]
                                      None
                                      core_type (lang_new.ml[584,29051+53]..[584,29051+62])
                                        Ptyp_constr "Astf.stru" (lang_new.ml[584,29051+53]..[584,29051+62])
                                        []
                                  <case>
                                    pattern (lang_new.ml[585,29115+51]..[585,29115+67])
                                      Ppat_tuple
                                      [
                                        pattern (lang_new.ml[585,29115+52]..[585,29115+56])
                                          Ppat_construct "None" (lang_new.ml[585,29115+52]..[585,29115+56])
                                          None
                                        pattern (lang_new.ml[585,29115+58]..[585,29115+66])
                                          Ppat_construct "Some" (lang_new.ml[585,29115+58]..[585,29115+62])
                                          Some
                                            pattern (lang_new.ml[585,29115+63]..[585,29115+66])
                                              Ppat_var "typ" (lang_new.ml[585,29115+63]..[585,29115+66])
                                      ]
                                    expression (lang_new.ml[586,29186+53]..[604,30509+63]) ghost
                                      Pexp_coerce
                                      expression (lang_new.ml[586,29186+54]..[603,30421+83])
                                        Pexp_variant "Value"
                                        Some
                                          expression (lang_new.ml[587,29247+56]..[603,30421+83])
                                            Pexp_tuple
                                            [
                                              expression (lang_new.ml[587,29247+57]..[587,29247+61])
                                                Pexp_ident "_loc" (lang_new.ml[587,29247+57]..[587,29247+61])
                                              expression (lang_new.ml[588,29310+58]..[588,29310+74])
                                                Pexp_variant "Negative"
                                                Some
                                                  expression (lang_new.ml[588,29310+69]..[588,29310+73])
                                                    Pexp_ident "_loc" (lang_new.ml[588,29310+69]..[588,29310+73])
                                              expression (lang_new.ml[589,29386+58]..[603,30421+82])
                                                Pexp_variant "Bind"
                                                Some
                                                  expression (lang_new.ml[590,29451+61]..[603,30421+81])
                                                    Pexp_tuple
                                                    [
                                                      expression (lang_new.ml[590,29451+62]..[590,29451+66])
                                                        Pexp_ident "_loc" (lang_new.ml[590,29451+62]..[590,29451+66])
                                                      expression (lang_new.ml[591,29519+63]..[592,29588+76])
                                                        Pexp_variant "Lid"
                                                        Some
                                                          expression (lang_new.ml[592,29588+66]..[592,29588+75])
                                                            Pexp_tuple
                                                            [
                                                              expression (lang_new.ml[592,29588+67]..[592,29588+71])
                                                                Pexp_ident "_loc" (lang_new.ml[592,29588+67]..[592,29588+71])
                                                              expression (lang_new.ml[592,29588+73]..[592,29588+74])
                                                                Pexp_ident "x" (lang_new.ml[592,29588+73]..[592,29588+74])
                                                            ]
                                                      expression (lang_new.ml[593,29666+63]..[603,30421+80])
                                                        Pexp_variant "Constraint"
                                                        Some
                                                          expression (lang_new.ml[594,29742+66]..[603,30421+79])
                                                            Pexp_tuple
                                                            [
                                                              expression (lang_new.ml[594,29742+67]..[594,29742+71])
                                                                Pexp_ident "_loc" (lang_new.ml[594,29742+67]..[594,29742+71])
                                                              expression (lang_new.ml[595,29815+68]..[601,30262+80])
                                                                Pexp_variant "App"
                                                                Some
                                                                  expression (lang_new.ml[597,29958+68]..[601,30262+79])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lang_new.ml[597,29958+69]..[597,29958+73])
Pexp_ident "_loc" (lang_new.ml[597,29958+69]..[597,29958+73])
                                                                      expression (lang_new.ml[598,30033+68]..[599,30109+77]) ghost
Pexp_coerce
expression (lang_new.ml[598,30033+69]..[598,30033+71])
  Pexp_ident "mk" (lang_new.ml[598,30033+69]..[598,30033+71])
None
core_type (lang_new.ml[599,30109+68]..[599,30109+76])
  Ptyp_constr "Astf.exp" (lang_new.ml[599,30109+68]..[599,30109+76])
  []
                                                                      expression (lang_new.ml[600,30188+68]..[601,30262+78])
Pexp_variant "Str"
Some
  expression (lang_new.ml[601,30262+68]..[601,30262+77])
    Pexp_tuple
    [
      expression (lang_new.ml[601,30262+69]..[601,30262+73])
        Pexp_ident "_loc" (lang_new.ml[601,30262+69]..[601,30262+73])
      expression (lang_new.ml[601,30262+75]..[601,30262+76])
        Pexp_ident "x" (lang_new.ml[601,30262+75]..[601,30262+76])
    ]
                                                                    ]
                                                              expression (lang_new.ml[602,30344+68]..[603,30421+78]) ghost
                                                                Pexp_coerce
                                                                expression (lang_new.ml[602,30344+69]..[602,30344+72])
                                                                  Pexp_ident "typ" (lang_new.ml[602,30344+69]..[602,30344+72])
                                                                None
                                                                core_type (lang_new.ml[603,30421+68]..[603,30421+77])
                                                                  Ptyp_constr "Astf.ctyp" (lang_new.ml[603,30421+68]..[603,30421+77])
                                                                  []
                                                            ]
                                                    ]
                                            ]
                                      None
                                      core_type (lang_new.ml[604,30509+53]..[604,30509+62])
                                        Ptyp_constr "Astf.stru" (lang_new.ml[604,30509+53]..[604,30509+62])
                                        []
                                ]
                          ]
                      <label> ""
                        expression (lang_new.ml[604,30509+66]..[604,30509+68])
                          Pexp_ident "ls" (lang_new.ml[604,30509+66]..[604,30509+68])
                    ]
              ]
          core_type (lang_new.ml[605,30582+37]..[605,30582+50])
            Ptyp_var nonterminals
    ]
                                                                      ]
                                                                ]
                                                              core_type (lang_new.ml[605,30582+56]..[608,30793+75])
                                                                Ptyp_arrow
                                                                ""
                                                                core_type (lang_new.ml[605,30582+56]..[605,30582+72])
                                                                  Ptyp_constr "list" (lang_new.ml[605,30582+68]..[605,30582+72])
                                                                  [
                                                                    core_type (lang_new.ml[605,30582+56]..[605,30582+67])
                                                                      Ptyp_var type_entry
                                                                  ]
                                                                core_type (lang_new.ml[606,30658+58]..[608,30793+75])
                                                                  Ptyp_arrow
                                                                  ""
                                                                  core_type (lang_new.ml[606,30658+58]..[606,30658+61])
                                                                    Ptyp_var ty
                                                                  core_type (lang_new.ml[607,30723+60]..[608,30793+75])
                                                                    Ptyp_arrow
                                                                    ""
                                                                    core_type (lang_new.ml[607,30723+60]..[607,30723+66])
                                                                      Ptyp_constr "Locf.t" (lang_new.ml[607,30723+60]..[607,30723+66])
                                                                      []
                                                                    core_type (lang_new.ml[608,30793+62]..[608,30793+75])
                                                                      Ptyp_var nonterminals
                                                        ]
                                                  ]
                                                  None
                                                expression (lang_new.ml[609,30871+16]..[609,30871+17]) ghost
                                                  Pexp_construct "[]" (lang_new.ml[609,30871+16]..[609,30871+17]) ghost
                                                  None
                                              ]
                                    ]
                                    None
                                  core_type (lang_new.ml[610,30889+14]..[610,30889+26])
                                    Ptyp_constr "Gramf.olevel" (lang_new.ml[610,30889+14]..[610,30889+26])
                                    []
                            ]
                            None
                          core_type (lang_new.ml[611,30917+9]..[611,30917+40])
                            Ptyp_constr "Gramf.single_extend_statement" (lang_new.ml[611,30917+11]..[611,30917+40])
                            [
                              core_type (lang_new.ml[611,30917+9]..[611,30917+10])
                                Ptyp_any
                            ]
                    ]
                  expression (lang_new.ml[612,30960+2]..[776,43139+41])
                    Pexp_apply
                    expression (lang_new.ml[612,30960+2]..[612,30960+21])
                      Pexp_ident "Gramf.extend_single" (lang_new.ml[612,30960+2]..[612,30960+21])
                    [
                      <label> ""
                        expression (lang_new.ml[613,30982+4]..[776,43139+41]) ghost
                          Pexp_constraint
                          expression (lang_new.ml[613,30982+5]..[776,43139+6])
                            Pexp_record
                            [
                              "entry" (lang_new.ml[614,30989+7]..[614,30989+12])
                                expression (lang_new.ml[614,30989+15]..[614,30989+53]) ghost
                                  Pexp_constraint
                                  expression (lang_new.ml[614,30989+16]..[614,30989+28])
                                    Pexp_ident "newterminals" (lang_new.ml[614,30989+16]..[614,30989+28])
                                  core_type (lang_new.ml[614,30989+31]..[614,30989+52])
                                    Ptyp_constr "Gramf.t" (lang_new.ml[614,30989+45]..[614,30989+52])
                                    [
                                      core_type (lang_new.ml[614,30989+31]..[614,30989+44])
                                        Ptyp_var newterminals
                                    ]
                              "olevel" (lang_new.ml[615,31044+7]..[615,31044+13])
                                expression (lang_new.ml[616,31060+9]..[775,43111+27]) ghost
                                  Pexp_constraint
                                  expression (lang_new.ml[616,31060+10]..[775,43111+11])
                                    Pexp_record
                                    [
                                      "label" (lang_new.ml[617,31072+12]..[617,31072+17])
                                        expression (lang_new.ml[617,31072+20]..[617,31072+24])
                                          Pexp_construct "None" (lang_new.ml[617,31072+20]..[617,31072+24])
                                          None
                                      "lassoc" (lang_new.ml[618,31098+12]..[618,31098+18])
                                        expression (lang_new.ml[618,31098+21]..[618,31098+25])
                                          Pexp_construct "true" (lang_new.ml[618,31098+21]..[618,31098+25])
                                          None
                                      "productions" (lang_new.ml[619,31125+12]..[619,31125+23])
                                        expression (lang_new.ml[620,31151+14]..[774,43093+17])
                                          Pexp_construct "::" (lang_new.ml[620,31151+15]..[774,43093+17]) ghost
                                          Some
                                            expression (lang_new.ml[620,31151+15]..[774,43093+17]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lang_new.ml[620,31151+15]..[774,43093+16])
                                                  Pexp_record
                                                  [
                                                    "symbols" (lang_new.ml[621,31168+17]..[621,31168+24])
                                                      expression (lang_new.ml[622,31195+19]..[640,31956+76])
                                                        Pexp_construct "::" (lang_new.ml[622,31195+20]..[640,31956+76]) ghost
                                                        Some
                                                          expression (lang_new.ml[622,31195+20]..[640,31956+76]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lang_new.ml[622,31195+20]..[626,31355+42])
                                                                Pexp_construct "Token" (lang_new.ml[622,31195+20]..[622,31195+25])
                                                                Some
                                                                  expression (lang_new.ml[623,31221+22]..[626,31355+42]) ghost
                                                                    Pexp_constraint
                                                                    expression (lang_new.ml[623,31221+23]..[626,31355+24])
                                                                      Pexp_record
                                                                      [
"descr" (lang_new.ml[624,31246+25]..[624,31246+30])
  expression (lang_new.ml[625,31279+27]..[625,31279+75])
    Pexp_record
    [
      "tag" (lang_new.ml[625,31279+29]..[625,31279+32])
        expression (lang_new.ml[625,31279+35]..[625,31279+39])
          Pexp_variant "Key"
          None
      "word" (lang_new.ml[625,31279+41]..[625,31279+45])
        expression (lang_new.ml[625,31279+48]..[625,31279+55])
          Pexp_construct "A" (lang_new.ml[625,31279+49]..[625,31279+50])
          Some
            expression (lang_new.ml[625,31279+51]..[625,31279+54])
              Pexp_constant Const_string("(",None)
      "tag_name" (lang_new.ml[625,31279+57]..[625,31279+65])
        expression (lang_new.ml[625,31279+68]..[625,31279+73])
          Pexp_constant Const_string("Key",None)
    ]
    None
                                                                      ]
                                                                      None
                                                                    core_type (lang_new.ml[626,31355+27]..[626,31355+41])
                                                                      Ptyp_constr "Tokenf.pattern" (lang_new.ml[626,31355+27]..[626,31355+41])
                                                                      []
                                                              expression (lang_new.ml[627,31399+19]..[640,31956+76]) ghost
                                                                Pexp_construct "::" (lang_new.ml[627,31399+19]..[640,31956+76]) ghost
                                                                Some
                                                                  expression (lang_new.ml[627,31399+19]..[640,31956+76]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lang_new.ml[627,31399+19]..[627,31399+63])
Pexp_construct "Nterm" (lang_new.ml[627,31399+19]..[627,31399+24])
Some
  expression (lang_new.ml[627,31399+25]..[627,31399+63])
    Pexp_apply
    expression (lang_new.ml[627,31399+26]..[627,31399+35])
      Pexp_ident "Gramf.obj" (lang_new.ml[627,31399+26]..[627,31399+35])
    [
      <label> ""
        expression (lang_new.ml[627,31399+36]..[627,31399+62]) ghost
          Pexp_constraint
          expression (lang_new.ml[627,31399+37]..[627,31399+43])
            Pexp_ident "qualid" (lang_new.ml[627,31399+37]..[627,31399+43])
          core_type (lang_new.ml[627,31399+46]..[627,31399+61])
            Ptyp_constr "Gramf.t" (lang_new.ml[627,31399+54]..[627,31399+61])
            [
              core_type (lang_new.ml[627,31399+46]..[627,31399+53])
                Ptyp_var qualid
            ]
    ]
                                                                      expression (lang_new.ml[628,31464+19]..[640,31956+76]) ghost
Pexp_construct "::" (lang_new.ml[628,31464+19]..[640,31956+76]) ghost
Some
  expression (lang_new.ml[628,31464+19]..[640,31956+76]) ghost
    Pexp_tuple
    [
      expression (lang_new.ml[628,31464+19]..[632,31620+41])
        Pexp_construct "Token" (lang_new.ml[628,31464+19]..[628,31464+24])
        Some
          expression (lang_new.ml[629,31489+21]..[632,31620+41]) ghost
            Pexp_constraint
            expression (lang_new.ml[629,31489+22]..[632,31620+23])
              Pexp_record
              [
                "descr" (lang_new.ml[630,31513+24]..[630,31513+29])
                  expression (lang_new.ml[631,31545+26]..[631,31545+74])
                    Pexp_record
                    [
                      "tag" (lang_new.ml[631,31545+28]..[631,31545+31])
                        expression (lang_new.ml[631,31545+34]..[631,31545+38])
                          Pexp_variant "Key"
                          None
                      "word" (lang_new.ml[631,31545+40]..[631,31545+44])
                        expression (lang_new.ml[631,31545+47]..[631,31545+54])
                          Pexp_construct "A" (lang_new.ml[631,31545+48]..[631,31545+49])
                          Some
                            expression (lang_new.ml[631,31545+50]..[631,31545+53])
                              Pexp_constant Const_string(":",None)
                      "tag_name" (lang_new.ml[631,31545+56]..[631,31545+64])
                        expression (lang_new.ml[631,31545+67]..[631,31545+72])
                          Pexp_constant Const_string("Key",None)
                    ]
                    None
              ]
              None
            core_type (lang_new.ml[632,31620+26]..[632,31620+40])
              Ptyp_constr "Tokenf.pattern" (lang_new.ml[632,31620+26]..[632,31620+40])
              []
      expression (lang_new.ml[633,31663+19]..[640,31956+76]) ghost
        Pexp_construct "::" (lang_new.ml[633,31663+19]..[640,31956+76]) ghost
        Some
          expression (lang_new.ml[633,31663+19]..[640,31956+76]) ghost
            Pexp_tuple
            [
              expression (lang_new.ml[633,31663+19]..[633,31663+67])
                Pexp_construct "Nterm" (lang_new.ml[633,31663+19]..[633,31663+24])
                Some
                  expression (lang_new.ml[633,31663+25]..[633,31663+67])
                    Pexp_apply
                    expression (lang_new.ml[633,31663+26]..[633,31663+35])
                      Pexp_ident "Gramf.obj" (lang_new.ml[633,31663+26]..[633,31663+35])
                    [
                      <label> ""
                        expression (lang_new.ml[633,31663+36]..[633,31663+66]) ghost
                          Pexp_constraint
                          expression (lang_new.ml[633,31663+37]..[633,31663+45])
                            Pexp_ident "t_qualid" (lang_new.ml[633,31663+37]..[633,31663+45])
                          core_type (lang_new.ml[633,31663+48]..[633,31663+65])
                            Ptyp_constr "Gramf.t" (lang_new.ml[633,31663+58]..[633,31663+65])
                            [
                              core_type (lang_new.ml[633,31663+48]..[633,31663+57])
                                Ptyp_var t_qualid
                            ]
                    ]
              expression (lang_new.ml[634,31732+19]..[640,31956+76]) ghost
                Pexp_construct "::" (lang_new.ml[634,31732+19]..[640,31956+76]) ghost
                Some
                  expression (lang_new.ml[634,31732+19]..[640,31956+76]) ghost
                    Pexp_tuple
                    [
                      expression (lang_new.ml[634,31732+19]..[638,31888+41])
                        Pexp_construct "Token" (lang_new.ml[634,31732+19]..[634,31732+24])
                        Some
                          expression (lang_new.ml[635,31757+21]..[638,31888+41]) ghost
                            Pexp_constraint
                            expression (lang_new.ml[635,31757+22]..[638,31888+23])
                              Pexp_record
                              [
                                "descr" (lang_new.ml[636,31781+24]..[636,31781+29])
                                  expression (lang_new.ml[637,31813+26]..[637,31813+74])
                                    Pexp_record
                                    [
                                      "tag" (lang_new.ml[637,31813+28]..[637,31813+31])
                                        expression (lang_new.ml[637,31813+34]..[637,31813+38])
                                          Pexp_variant "Key"
                                          None
                                      "word" (lang_new.ml[637,31813+40]..[637,31813+44])
                                        expression (lang_new.ml[637,31813+47]..[637,31813+54])
                                          Pexp_construct "A" (lang_new.ml[637,31813+48]..[637,31813+49])
                                          Some
                                            expression (lang_new.ml[637,31813+50]..[637,31813+53])
                                              Pexp_constant Const_string(")",None)
                                      "tag_name" (lang_new.ml[637,31813+56]..[637,31813+64])
                                        expression (lang_new.ml[637,31813+67]..[637,31813+72])
                                          Pexp_constant Const_string("Key",None)
                                    ]
                                    None
                              ]
                              None
                            core_type (lang_new.ml[638,31888+26]..[638,31888+40])
                              Ptyp_constr "Tokenf.pattern" (lang_new.ml[638,31888+26]..[638,31888+40])
                              []
                      expression (lang_new.ml[639,31931+19]..[640,31956+76]) ghost
                        Pexp_construct "::" (lang_new.ml[639,31931+19]..[640,31956+76]) ghost
                        Some
                          expression (lang_new.ml[639,31931+19]..[640,31956+76]) ghost
                            Pexp_tuple
                            [
                              expression (lang_new.ml[639,31931+19]..[640,31956+75])
                                Pexp_construct "List1" (lang_new.ml[639,31931+19]..[639,31931+24])
                                Some
                                  expression (lang_new.ml[640,31956+21]..[640,31956+75])
                                    Pexp_construct "Nterm" (lang_new.ml[640,31956+22]..[640,31956+27])
                                    Some
                                      expression (lang_new.ml[640,31956+28]..[640,31956+74])
                                        Pexp_apply
                                        expression (lang_new.ml[640,31956+29]..[640,31956+38])
                                          Pexp_ident "Gramf.obj" (lang_new.ml[640,31956+29]..[640,31956+38])
                                        [
                                          <label> ""
                                            expression (lang_new.ml[640,31956+39]..[640,31956+73]) ghost
                                              Pexp_constraint
                                              expression (lang_new.ml[640,31956+40]..[640,31956+50])
                                                Pexp_ident "type_entry" (lang_new.ml[640,31956+40]..[640,31956+50])
                                              core_type (lang_new.ml[640,31956+53]..[640,31956+72])
                                                Ptyp_constr "Gramf.t" (lang_new.ml[640,31956+65]..[640,31956+72])
                                                [
                                                  core_type (lang_new.ml[640,31956+53]..[640,31956+64])
                                                    Ptyp_var type_entry
                                                ]
                                        ]
                              expression (lang_new.ml[640,31956+75]..[640,31956+76]) ghost
                                Pexp_construct "[]" (lang_new.ml[640,31956+75]..[640,31956+76]) ghost
                                None
                            ]
                    ]
            ]
    ]
                                                                    ]
                                                            ]
                                                    "annot" (lang_new.ml[641,32034+17]..[641,32034+22])
                                                      expression (lang_new.ml[642,32059+19]..[642,32059+1722])
                                                        Pexp_constant Const_string("let mk =\n  (`App\n     (_loc, (`Dot (_loc, (t :> Astf.vid), (`Lid (_loc, \"mk_dynamic\")))),\n       (x :> Astf.exp)) :> Astf.exp) in\nsem_of_list\n  (List.map\n     (function\n      | (_loc,x,descr,ty) ->\n          (match (descr, ty) with\n           | (Some d,None ) ->\n               (`Value\n                  (_loc, (`Negative _loc),\n                    (`Bind\n                       (_loc, (`Lid (_loc, x)),\n                         (`App (_loc, (mk :> Astf.exp), (`Str (_loc, d))))))) :> \n               Astf.stru)\n           | (Some d,Some typ) ->\n               (`Value\n                  (_loc, (`Negative _loc),\n                    (`Bind\n                       (_loc, (`Lid (_loc, x)),\n                         (`Constraint\n                            (_loc,\n                              (`App\n                                 (_loc, (mk :> Astf.exp), (`Str (_loc, d)))),\n                              (typ :> Astf.ctyp)))))) :> Astf.stru)\n           | (None ,None ) ->\n               (`Value\n                  (_loc, (`Negative _loc),\n                    (`Bind\n                       (_loc, (`Lid (_loc, x)),\n                         (`App (_loc, (mk :> Astf.exp), (`Str (_loc, x))))))) :> \n               Astf.stru)\n           | (None ,Some typ) ->\n               (`Value\n                  (_loc, (`Negative _loc),\n                    (`Bind\n                       (_loc, (`Lid (_loc, x)),\n                         (`Constraint\n                            (_loc,\n                              (`App\n                                 (_loc, (mk :> Astf.exp), (`Str (_loc, x)))),\n                              (typ :> Astf.ctyp)))))) :> Astf.stru))) ls)\n",None)
                                                    "fn" (lang_new.ml[643,33783+17]..[643,33783+19])
                                                      expression (lang_new.ml[644,33805+19]..[773,43021+71])
                                                        Pexp_apply
                                                        expression (lang_new.ml[644,33805+20]..[644,33805+35])
                                                          Pexp_ident "Gramf.mk_action" (lang_new.ml[644,33805+20]..[644,33805+35])
                                                        [
                                                          <label> ""
                                                            expression (lang_new.ml[645,33841+22]..[773,43021+70]) ghost
                                                              Pexp_constraint
                                                              expression (lang_new.ml[645,33841+23]..[767,42738+77])
                                                                Pexp_function
                                                                [
                                                                  <case>
                                                                    pattern (lang_new.ml[646,33873+25]..[646,33873+48])
                                                                      Ppat_constraint
                                                                      pattern (lang_new.ml[646,33873+26]..[646,33873+28])
Ppat_var "ls" (lang_new.ml[646,33873+26]..[646,33873+28])
                                                                      core_type (lang_new.ml[646,33873+31]..[646,33873+47])
Ptyp_constr "list" (lang_new.ml[646,33873+43]..[646,33873+47])
[
  core_type (lang_new.ml[646,33873+31]..[646,33873+42])
    Ptyp_var type_entry
]
                                                                    expression (lang_new.ml[647,33925+27]..[767,42738+77])
                                                                      Pexp_function
                                                                      [
<case>
  pattern (lang_new.ml[648,33962+30]..[648,33962+31])
    Ppat_any
  expression (lang_new.ml[649,33997+32]..[767,42738+76])
    Pexp_function
    [
      <case>
        pattern (lang_new.ml[650,34039+35]..[650,34039+50])
          Ppat_constraint
          pattern (lang_new.ml[650,34039+36]..[650,34039+37])
            Ppat_var "t" (lang_new.ml[650,34039+36]..[650,34039+37])
          core_type (lang_new.ml[650,34039+40]..[650,34039+49])
            Ptyp_var t_qualid
        expression (lang_new.ml[651,34093+37]..[767,42738+75])
          Pexp_function
          [
            <case>
              pattern (lang_new.ml[652,34140+40]..[652,34140+41])
                Ppat_any
              expression (lang_new.ml[653,34185+42]..[767,42738+74])
                Pexp_function
                [
                  <case>
                    pattern (lang_new.ml[654,34237+45]..[654,34237+58])
                      Ppat_constraint
                      pattern (lang_new.ml[654,34237+46]..[654,34237+47])
                        Ppat_var "x" (lang_new.ml[654,34237+46]..[654,34237+47])
                      core_type (lang_new.ml[654,34237+50]..[654,34237+57])
                        Ptyp_var qualid
                    expression (lang_new.ml[655,34299+47]..[767,42738+73])
                      Pexp_function
                      [
                        <case>
                          pattern (lang_new.ml[656,34356+50]..[656,34356+51])
                            Ppat_any
                          expression (lang_new.ml[657,34411+52]..[767,42738+72])
                            Pexp_function
                            [
                              <case>
                                pattern (lang_new.ml[658,34473+55]..[658,34473+70])
                                  Ppat_constraint
                                  pattern (lang_new.ml[658,34473+56]..[658,34473+60])
                                    Ppat_var "_loc" (lang_new.ml[658,34473+56]..[658,34473+60])
                                  core_type (lang_new.ml[658,34473+63]..[658,34473+69])
                                    Ptyp_constr "Locf.t" (lang_new.ml[658,34473+63]..[658,34473+69])
                                    []
                                expression (lang_new.ml[659,34547+57]..[767,42738+71]) ghost
                                  Pexp_constraint
                                  expression (lang_new.ml[659,34547+58]..[766,42668+66])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lang_new.ml[659,34547+62]..[659,34547+64])
                                          Ppat_var "mk" (lang_new.ml[659,34547+62]..[659,34547+64])
                                        expression (lang_new.ml[660,34614+60]..[671,35437+69]) ghost
                                          Pexp_coerce
                                          expression (lang_new.ml[660,34614+61]..[670,35357+75])
                                            Pexp_variant "App"
                                            Some
                                              expression (lang_new.ml[661,34680+63]..[670,35357+75])
                                                Pexp_tuple
                                                [
                                                  expression (lang_new.ml[661,34680+64]..[661,34680+68])
                                                    Pexp_ident "_loc" (lang_new.ml[661,34680+64]..[661,34680+68])
                                                  expression (lang_new.ml[662,34750+65]..[668,35199+84])
                                                    Pexp_variant "Dot"
                                                    Some
                                                      expression (lang_new.ml[663,34821+68]..[668,35199+83])
                                                        Pexp_tuple
                                                        [
                                                          expression (lang_new.ml[663,34821+69]..[663,34821+73])
                                                            Pexp_ident "_loc" (lang_new.ml[663,34821+69]..[663,34821+73])
                                                          expression (lang_new.ml[664,34896+68]..[665,34971+77]) ghost
                                                            Pexp_coerce
                                                            expression (lang_new.ml[664,34896+69]..[664,34896+70])
                                                              Pexp_ident "t" (lang_new.ml[664,34896+69]..[664,34896+70])
                                                            None
                                                            core_type (lang_new.ml[665,34971+68]..[665,34971+76])
                                                              Ptyp_constr "Astf.vid" (lang_new.ml[665,34971+68]..[665,34971+76])
                                                              []
                                                          expression (lang_new.ml[666,35050+68]..[668,35199+82])
                                                            Pexp_variant "Lid"
                                                            Some
                                                              expression (lang_new.ml[667,35124+68]..[668,35199+81])
                                                                Pexp_tuple
                                                                [
                                                                  expression (lang_new.ml[667,35124+69]..[667,35124+73])
                                                                    Pexp_ident "_loc" (lang_new.ml[667,35124+69]..[667,35124+73])
                                                                  expression (lang_new.ml[668,35199+68]..[668,35199+80])
                                                                    Pexp_constant Const_string("mk_dynamic",None)
                                                                ]
                                                        ]
                                                  expression (lang_new.ml[669,35285+65]..[670,35357+74]) ghost
                                                    Pexp_coerce
                                                    expression (lang_new.ml[669,35285+66]..[669,35285+67])
                                                      Pexp_ident "x" (lang_new.ml[669,35285+66]..[669,35285+67])
                                                    None
                                                    core_type (lang_new.ml[670,35357+65]..[670,35357+73])
                                                      Ptyp_constr "Astf.exp" (lang_new.ml[670,35357+65]..[670,35357+73])
                                                      []
                                                ]
                                          None
                                          core_type (lang_new.ml[671,35437+60]..[671,35437+68])
                                            Ptyp_constr "Astf.exp" (lang_new.ml[671,35437+60]..[671,35437+68])
                                            []
                                    ]
                                    expression (lang_new.ml[672,35510+58]..[766,42668+66])
                                      Pexp_apply
                                      expression (lang_new.ml[672,35510+58]..[672,35510+69])
                                        Pexp_ident "sem_of_list" (lang_new.ml[672,35510+58]..[672,35510+69])
                                      [
                                        <label> ""
                                          expression (lang_new.ml[673,35580+60]..[766,42668+66])
                                            Pexp_apply
                                            expression (lang_new.ml[673,35580+61]..[673,35580+69])
                                              Pexp_ident "List.map" (lang_new.ml[673,35580+61]..[673,35580+69])
                                            [
                                              <label> ""
                                                expression (lang_new.ml[674,35650+63]..[765,42587+80])
                                                  Pexp_function
                                                  [
                                                    <case>
                                                      pattern (lang_new.ml[675,35723+66]..[675,35723+83])
                                                        Ppat_tuple
                                                        [
                                                          pattern (lang_new.ml[675,35723+67]..[675,35723+71])
                                                            Ppat_var "_loc" (lang_new.ml[675,35723+67]..[675,35723+71])
                                                          pattern (lang_new.ml[675,35723+72]..[675,35723+73])
                                                            Ppat_var "x" (lang_new.ml[675,35723+72]..[675,35723+73])
                                                          pattern (lang_new.ml[675,35723+74]..[675,35723+79])
                                                            Ppat_var "descr" (lang_new.ml[675,35723+74]..[675,35723+79])
                                                          pattern (lang_new.ml[675,35723+80]..[675,35723+82])
                                                            Ppat_var "ty" (lang_new.ml[675,35723+80]..[675,35723+82])
                                                        ]
                                                      expression (lang_new.ml[677,35878+68]..[765,42587+79])
                                                        Pexp_match
                                                        expression (lang_new.ml[679,36023+68]..[680,36099+71])
                                                          Pexp_tuple
                                                          [
                                                            expression (lang_new.ml[679,36023+69]..[679,36023+74])
                                                              Pexp_ident "descr" (lang_new.ml[679,36023+69]..[679,36023+74])
                                                            expression (lang_new.ml[680,36099+68]..[680,36099+70])
                                                              Pexp_ident "ty" (lang_new.ml[680,36099+68]..[680,36099+70])
                                                          ]
                                                        [
                                                          <case>
                                                            pattern (lang_new.ml[683,36315+68]..[684,36389+76])
                                                              Ppat_tuple
                                                              [
                                                                pattern (lang_new.ml[683,36315+69]..[684,36389+69])
                                                                  Ppat_construct "Some" (lang_new.ml[683,36315+69]..[683,36315+73])
                                                                  Some
                                                                    pattern (lang_new.ml[684,36389+68]..[684,36389+69])
                                                                      Ppat_var "d" (lang_new.ml[684,36389+68]..[684,36389+69])
                                                                pattern (lang_new.ml[684,36389+70]..[684,36389+74])
                                                                  Ppat_construct "None" (lang_new.ml[684,36389+70]..[684,36389+74])
                                                                  None
                                                              ]
                                                            expression (lang_new.ml[686,36537+68]..[700,37612+78]) ghost
                                                              Pexp_coerce
                                                              expression (lang_new.ml[686,36537+69]..[699,37524+83])
                                                                Pexp_variant "Value"
                                                                Some
                                                                  expression (lang_new.ml[687,36613+68]..[699,37524+83])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lang_new.ml[687,36613+69]..[687,36613+73])
Pexp_ident "_loc" (lang_new.ml[687,36613+69]..[687,36613+73])
                                                                      expression (lang_new.ml[688,36688+68]..[689,36767+73])
Pexp_variant "Negative"
Some
  expression (lang_new.ml[689,36767+68]..[689,36767+72])
    Pexp_ident "_loc" (lang_new.ml[689,36767+68]..[689,36767+72])
                                                                      expression (lang_new.ml[690,36842+68]..[699,37524+82])
Pexp_variant "Bind"
Some
  expression (lang_new.ml[691,36917+68]..[699,37524+81])
    Pexp_tuple
    [
      expression (lang_new.ml[691,36917+69]..[691,36917+73])
        Pexp_ident "_loc" (lang_new.ml[691,36917+69]..[691,36917+73])
      expression (lang_new.ml[692,36992+68]..[693,37066+78])
        Pexp_variant "Lid"
        Some
          expression (lang_new.ml[693,37066+68]..[693,37066+77])
            Pexp_tuple
            [
              expression (lang_new.ml[693,37066+69]..[693,37066+73])
                Pexp_ident "_loc" (lang_new.ml[693,37066+69]..[693,37066+73])
              expression (lang_new.ml[693,37066+75]..[693,37066+76])
                Pexp_ident "x" (lang_new.ml[693,37066+75]..[693,37066+76])
            ]
      expression (lang_new.ml[694,37146+68]..[699,37524+80])
        Pexp_variant "App"
        Some
          expression (lang_new.ml[695,37220+68]..[699,37524+79])
            Pexp_tuple
            [
              expression (lang_new.ml[695,37220+69]..[695,37220+73])
                Pexp_ident "_loc" (lang_new.ml[695,37220+69]..[695,37220+73])
              expression (lang_new.ml[696,37295+68]..[697,37371+77]) ghost
                Pexp_coerce
                expression (lang_new.ml[696,37295+69]..[696,37295+71])
                  Pexp_ident "mk" (lang_new.ml[696,37295+69]..[696,37295+71])
                None
                core_type (lang_new.ml[697,37371+68]..[697,37371+76])
                  Ptyp_constr "Astf.exp" (lang_new.ml[697,37371+68]..[697,37371+76])
                  []
              expression (lang_new.ml[698,37450+68]..[699,37524+78])
                Pexp_variant "Str"
                Some
                  expression (lang_new.ml[699,37524+68]..[699,37524+77])
                    Pexp_tuple
                    [
                      expression (lang_new.ml[699,37524+69]..[699,37524+73])
                        Pexp_ident "_loc" (lang_new.ml[699,37524+69]..[699,37524+73])
                      expression (lang_new.ml[699,37524+75]..[699,37524+76])
                        Pexp_ident "d" (lang_new.ml[699,37524+75]..[699,37524+76])
                    ]
            ]
    ]
                                                                    ]
                                                              None
                                                              core_type (lang_new.ml[700,37612+68]..[700,37612+77])
                                                                Ptyp_constr "Astf.stru" (lang_new.ml[700,37612+68]..[700,37612+77])
                                                                []
                                                          <case>
                                                            pattern (lang_new.ml[702,37762+68]..[704,37911+72])
                                                              Ppat_tuple
                                                              [
                                                                pattern (lang_new.ml[702,37762+69]..[703,37836+69])
                                                                  Ppat_construct "Some" (lang_new.ml[702,37762+69]..[702,37762+73])
                                                                  Some
                                                                    pattern (lang_new.ml[703,37836+68]..[703,37836+69])
                                                                      Ppat_var "d" (lang_new.ml[703,37836+68]..[703,37836+69])
                                                                pattern (lang_new.ml[703,37836+70]..[704,37911+71])
                                                                  Ppat_construct "Some" (lang_new.ml[703,37836+70]..[703,37836+74])
                                                                  Some
                                                                    pattern (lang_new.ml[704,37911+68]..[704,37911+71])
                                                                      Ppat_var "typ" (lang_new.ml[704,37911+68]..[704,37911+71])
                                                              ]
                                                            expression (lang_new.ml[705,37987+68]..[723,39377+78]) ghost
                                                              Pexp_coerce
                                                              expression (lang_new.ml[705,37987+69]..[722,39289+83])
                                                                Pexp_variant "Value"
                                                                Some
                                                                  expression (lang_new.ml[706,38063+68]..[722,39289+83])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lang_new.ml[706,38063+69]..[706,38063+73])
Pexp_ident "_loc" (lang_new.ml[706,38063+69]..[706,38063+73])
                                                                      expression (lang_new.ml[707,38138+68]..[708,38217+73])
Pexp_variant "Negative"
Some
  expression (lang_new.ml[708,38217+68]..[708,38217+72])
    Pexp_ident "_loc" (lang_new.ml[708,38217+68]..[708,38217+72])
                                                                      expression (lang_new.ml[709,38292+68]..[722,39289+82])
Pexp_variant "Bind"
Some
  expression (lang_new.ml[710,38367+68]..[722,39289+81])
    Pexp_tuple
    [
      expression (lang_new.ml[710,38367+69]..[710,38367+73])
        Pexp_ident "_loc" (lang_new.ml[710,38367+69]..[710,38367+73])
      expression (lang_new.ml[711,38442+68]..[712,38516+78])
        Pexp_variant "Lid"
        Some
          expression (lang_new.ml[712,38516+68]..[712,38516+77])
            Pexp_tuple
            [
              expression (lang_new.ml[712,38516+69]..[712,38516+73])
                Pexp_ident "_loc" (lang_new.ml[712,38516+69]..[712,38516+73])
              expression (lang_new.ml[712,38516+75]..[712,38516+76])
                Pexp_ident "x" (lang_new.ml[712,38516+75]..[712,38516+76])
            ]
      expression (lang_new.ml[713,38596+68]..[722,39289+80])
        Pexp_variant "Constraint"
        Some
          expression (lang_new.ml[714,38677+68]..[722,39289+79])
            Pexp_tuple
            [
              expression (lang_new.ml[714,38677+69]..[714,38677+73])
                Pexp_ident "_loc" (lang_new.ml[714,38677+69]..[714,38677+73])
              expression (lang_new.ml[715,38752+68]..[720,39130+80])
                Pexp_variant "App"
                Some
                  expression (lang_new.ml[716,38826+68]..[720,39130+79])
                    Pexp_tuple
                    [
                      expression (lang_new.ml[716,38826+69]..[716,38826+73])
                        Pexp_ident "_loc" (lang_new.ml[716,38826+69]..[716,38826+73])
                      expression (lang_new.ml[717,38901+68]..[718,38977+77]) ghost
                        Pexp_coerce
                        expression (lang_new.ml[717,38901+69]..[717,38901+71])
                          Pexp_ident "mk" (lang_new.ml[717,38901+69]..[717,38901+71])
                        None
                        core_type (lang_new.ml[718,38977+68]..[718,38977+76])
                          Ptyp_constr "Astf.exp" (lang_new.ml[718,38977+68]..[718,38977+76])
                          []
                      expression (lang_new.ml[719,39056+68]..[720,39130+78])
                        Pexp_variant "Str"
                        Some
                          expression (lang_new.ml[720,39130+68]..[720,39130+77])
                            Pexp_tuple
                            [
                              expression (lang_new.ml[720,39130+69]..[720,39130+73])
                                Pexp_ident "_loc" (lang_new.ml[720,39130+69]..[720,39130+73])
                              expression (lang_new.ml[720,39130+75]..[720,39130+76])
                                Pexp_ident "d" (lang_new.ml[720,39130+75]..[720,39130+76])
                            ]
                    ]
              expression (lang_new.ml[721,39212+68]..[722,39289+78]) ghost
                Pexp_coerce
                expression (lang_new.ml[721,39212+69]..[721,39212+72])
                  Pexp_ident "typ" (lang_new.ml[721,39212+69]..[721,39212+72])
                None
                core_type (lang_new.ml[722,39289+68]..[722,39289+77])
                  Ptyp_constr "Astf.ctyp" (lang_new.ml[722,39289+68]..[722,39289+77])
                  []
            ]
    ]
                                                                    ]
                                                              None
                                                              core_type (lang_new.ml[723,39377+68]..[723,39377+77])
                                                                Ptyp_constr "Astf.stru" (lang_new.ml[723,39377+68]..[723,39377+77])
                                                                []
                                                          <case>
                                                            pattern (lang_new.ml[725,39527+68]..[726,39601+75])
                                                              Ppat_tuple
                                                              [
                                                                pattern (lang_new.ml[725,39527+69]..[725,39527+73])
                                                                  Ppat_construct "None" (lang_new.ml[725,39527+69]..[725,39527+73])
                                                                  None
                                                                pattern (lang_new.ml[726,39601+69]..[726,39601+73])
                                                                  Ppat_construct "None" (lang_new.ml[726,39601+69]..[726,39601+73])
                                                                  None
                                                              ]
                                                            expression (lang_new.ml[728,39748+68]..[742,40823+78]) ghost
                                                              Pexp_coerce
                                                              expression (lang_new.ml[728,39748+69]..[741,40735+83])
                                                                Pexp_variant "Value"
                                                                Some
                                                                  expression (lang_new.ml[729,39824+68]..[741,40735+83])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lang_new.ml[729,39824+69]..[729,39824+73])
Pexp_ident "_loc" (lang_new.ml[729,39824+69]..[729,39824+73])
                                                                      expression (lang_new.ml[730,39899+68]..[731,39978+73])
Pexp_variant "Negative"
Some
  expression (lang_new.ml[731,39978+68]..[731,39978+72])
    Pexp_ident "_loc" (lang_new.ml[731,39978+68]..[731,39978+72])
                                                                      expression (lang_new.ml[732,40053+68]..[741,40735+82])
Pexp_variant "Bind"
Some
  expression (lang_new.ml[733,40128+68]..[741,40735+81])
    Pexp_tuple
    [
      expression (lang_new.ml[733,40128+69]..[733,40128+73])
        Pexp_ident "_loc" (lang_new.ml[733,40128+69]..[733,40128+73])
      expression (lang_new.ml[734,40203+68]..[735,40277+78])
        Pexp_variant "Lid"
        Some
          expression (lang_new.ml[735,40277+68]..[735,40277+77])
            Pexp_tuple
            [
              expression (lang_new.ml[735,40277+69]..[735,40277+73])
                Pexp_ident "_loc" (lang_new.ml[735,40277+69]..[735,40277+73])
              expression (lang_new.ml[735,40277+75]..[735,40277+76])
                Pexp_ident "x" (lang_new.ml[735,40277+75]..[735,40277+76])
            ]
      expression (lang_new.ml[736,40357+68]..[741,40735+80])
        Pexp_variant "App"
        Some
          expression (lang_new.ml[737,40431+68]..[741,40735+79])
            Pexp_tuple
            [
              expression (lang_new.ml[737,40431+69]..[737,40431+73])
                Pexp_ident "_loc" (lang_new.ml[737,40431+69]..[737,40431+73])
              expression (lang_new.ml[738,40506+68]..[739,40582+77]) ghost
                Pexp_coerce
                expression (lang_new.ml[738,40506+69]..[738,40506+71])
                  Pexp_ident "mk" (lang_new.ml[738,40506+69]..[738,40506+71])
                None
                core_type (lang_new.ml[739,40582+68]..[739,40582+76])
                  Ptyp_constr "Astf.exp" (lang_new.ml[739,40582+68]..[739,40582+76])
                  []
              expression (lang_new.ml[740,40661+68]..[741,40735+78])
                Pexp_variant "Str"
                Some
                  expression (lang_new.ml[741,40735+68]..[741,40735+77])
                    Pexp_tuple
                    [
                      expression (lang_new.ml[741,40735+69]..[741,40735+73])
                        Pexp_ident "_loc" (lang_new.ml[741,40735+69]..[741,40735+73])
                      expression (lang_new.ml[741,40735+75]..[741,40735+76])
                        Pexp_ident "x" (lang_new.ml[741,40735+75]..[741,40735+76])
                    ]
            ]
    ]
                                                                    ]
                                                              None
                                                              core_type (lang_new.ml[742,40823+68]..[742,40823+77])
                                                                Ptyp_constr "Astf.stru" (lang_new.ml[742,40823+68]..[742,40823+77])
                                                                []
                                                          <case>
                                                            pattern (lang_new.ml[744,40973+68]..[746,41121+72])
                                                              Ppat_tuple
                                                              [
                                                                pattern (lang_new.ml[744,40973+69]..[744,40973+73])
                                                                  Ppat_construct "None" (lang_new.ml[744,40973+69]..[744,40973+73])
                                                                  None
                                                                pattern (lang_new.ml[745,41047+69]..[746,41121+71])
                                                                  Ppat_construct "Some" (lang_new.ml[745,41047+69]..[745,41047+73])
                                                                  Some
                                                                    pattern (lang_new.ml[746,41121+68]..[746,41121+71])
                                                                      Ppat_var "typ" (lang_new.ml[746,41121+68]..[746,41121+71])
                                                              ]
                                                            expression (lang_new.ml[747,41197+68]..[765,42587+78]) ghost
                                                              Pexp_coerce
                                                              expression (lang_new.ml[747,41197+69]..[764,42499+83])
                                                                Pexp_variant "Value"
                                                                Some
                                                                  expression (lang_new.ml[748,41273+68]..[764,42499+83])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lang_new.ml[748,41273+69]..[748,41273+73])
Pexp_ident "_loc" (lang_new.ml[748,41273+69]..[748,41273+73])
                                                                      expression (lang_new.ml[749,41348+68]..[750,41427+73])
Pexp_variant "Negative"
Some
  expression (lang_new.ml[750,41427+68]..[750,41427+72])
    Pexp_ident "_loc" (lang_new.ml[750,41427+68]..[750,41427+72])
                                                                      expression (lang_new.ml[751,41502+68]..[764,42499+82])
Pexp_variant "Bind"
Some
  expression (lang_new.ml[752,41577+68]..[764,42499+81])
    Pexp_tuple
    [
      expression (lang_new.ml[752,41577+69]..[752,41577+73])
        Pexp_ident "_loc" (lang_new.ml[752,41577+69]..[752,41577+73])
      expression (lang_new.ml[753,41652+68]..[754,41726+78])
        Pexp_variant "Lid"
        Some
          expression (lang_new.ml[754,41726+68]..[754,41726+77])
            Pexp_tuple
            [
              expression (lang_new.ml[754,41726+69]..[754,41726+73])
                Pexp_ident "_loc" (lang_new.ml[754,41726+69]..[754,41726+73])
              expression (lang_new.ml[754,41726+75]..[754,41726+76])
                Pexp_ident "x" (lang_new.ml[754,41726+75]..[754,41726+76])
            ]
      expression (lang_new.ml[755,41806+68]..[764,42499+80])
        Pexp_variant "Constraint"
        Some
          expression (lang_new.ml[756,41887+68]..[764,42499+79])
            Pexp_tuple
            [
              expression (lang_new.ml[756,41887+69]..[756,41887+73])
                Pexp_ident "_loc" (lang_new.ml[756,41887+69]..[756,41887+73])
              expression (lang_new.ml[757,41962+68]..[762,42340+80])
                Pexp_variant "App"
                Some
                  expression (lang_new.ml[758,42036+68]..[762,42340+79])
                    Pexp_tuple
                    [
                      expression (lang_new.ml[758,42036+69]..[758,42036+73])
                        Pexp_ident "_loc" (lang_new.ml[758,42036+69]..[758,42036+73])
                      expression (lang_new.ml[759,42111+68]..[760,42187+77]) ghost
                        Pexp_coerce
                        expression (lang_new.ml[759,42111+69]..[759,42111+71])
                          Pexp_ident "mk" (lang_new.ml[759,42111+69]..[759,42111+71])
                        None
                        core_type (lang_new.ml[760,42187+68]..[760,42187+76])
                          Ptyp_constr "Astf.exp" (lang_new.ml[760,42187+68]..[760,42187+76])
                          []
                      expression (lang_new.ml[761,42266+68]..[762,42340+78])
                        Pexp_variant "Str"
                        Some
                          expression (lang_new.ml[762,42340+68]..[762,42340+77])
                            Pexp_tuple
                            [
                              expression (lang_new.ml[762,42340+69]..[762,42340+73])
                                Pexp_ident "_loc" (lang_new.ml[762,42340+69]..[762,42340+73])
                              expression (lang_new.ml[762,42340+75]..[762,42340+76])
                                Pexp_ident "x" (lang_new.ml[762,42340+75]..[762,42340+76])
                            ]
                    ]
              expression (lang_new.ml[763,42422+68]..[764,42499+78]) ghost
                Pexp_coerce
                expression (lang_new.ml[763,42422+69]..[763,42422+72])
                  Pexp_ident "typ" (lang_new.ml[763,42422+69]..[763,42422+72])
                None
                core_type (lang_new.ml[764,42499+68]..[764,42499+77])
                  Ptyp_constr "Astf.ctyp" (lang_new.ml[764,42499+68]..[764,42499+77])
                  []
            ]
    ]
                                                                    ]
                                                              None
                                                              core_type (lang_new.ml[765,42587+68]..[765,42587+77])
                                                                Ptyp_constr "Astf.stru" (lang_new.ml[765,42587+68]..[765,42587+77])
                                                                []
                                                        ]
                                                  ]
                                              <label> ""
                                                expression (lang_new.ml[766,42668+63]..[766,42668+65])
                                                  Pexp_ident "ls" (lang_new.ml[766,42668+63]..[766,42668+65])
                                            ]
                                      ]
                                  core_type (lang_new.ml[767,42738+57]..[767,42738+70])
                                    Ptyp_var newterminals
                            ]
                      ]
                ]
          ]
    ]
                                                                      ]
                                                                ]
                                                              core_type (lang_new.ml[768,42819+22]..[773,43021+69])
                                                                Ptyp_arrow
                                                                ""
                                                                core_type (lang_new.ml[768,42819+22]..[768,42819+38])
                                                                  Ptyp_constr "list" (lang_new.ml[768,42819+34]..[768,42819+38])
                                                                  [
                                                                    core_type (lang_new.ml[768,42819+22]..[768,42819+33])
                                                                      Ptyp_var type_entry
                                                                  ]
                                                                core_type (lang_new.ml[769,42861+24]..[773,43021+69])
                                                                  Ptyp_arrow
                                                                  ""
                                                                  core_type (lang_new.ml[769,42861+24]..[769,42861+34])
                                                                    Ptyp_constr "Tokenf.txt" (lang_new.ml[769,42861+24]..[769,42861+34])
                                                                    []
                                                                  core_type (lang_new.ml[770,42899+26]..[773,43021+69])
                                                                    Ptyp_arrow
                                                                    ""
                                                                    core_type (lang_new.ml[770,42899+26]..[770,42899+35])
                                                                      Ptyp_var t_qualid
                                                                    core_type (lang_new.ml[771,42938+28]..[773,43021+69])
                                                                      Ptyp_arrow
                                                                      ""
                                                                      core_type (lang_new.ml[771,42938+28]..[771,42938+38])
Ptyp_constr "Tokenf.txt" (lang_new.ml[771,42938+28]..[771,42938+38])
[]
                                                                      core_type (lang_new.ml[772,42980+30]..[773,43021+69])
Ptyp_arrow
""
core_type (lang_new.ml[772,42980+30]..[772,42980+37])
  Ptyp_var qualid
core_type (lang_new.ml[773,43021+32]..[773,43021+69])
  Ptyp_arrow
  ""
  core_type (lang_new.ml[773,43021+32]..[773,43021+42])
    Ptyp_constr "Tokenf.txt" (lang_new.ml[773,43021+32]..[773,43021+42])
    []
  core_type (lang_new.ml[773,43021+46]..[773,43021+69])
    Ptyp_arrow
    ""
    core_type (lang_new.ml[773,43021+46]..[773,43021+52])
      Ptyp_constr "Locf.t" (lang_new.ml[773,43021+46]..[773,43021+52])
      []
    core_type (lang_new.ml[773,43021+56]..[773,43021+69])
      Ptyp_var newterminals
                                                        ]
                                                  ]
                                                  None
                                                expression (lang_new.ml[774,43093+16]..[774,43093+17]) ghost
                                                  Pexp_construct "[]" (lang_new.ml[774,43093+16]..[774,43093+17]) ghost
                                                  None
                                              ]
                                    ]
                                    None
                                  core_type (lang_new.ml[775,43111+14]..[775,43111+26])
                                    Ptyp_constr "Gramf.olevel" (lang_new.ml[775,43111+14]..[775,43111+26])
                                    []
                            ]
                            None
                          core_type (lang_new.ml[776,43139+9]..[776,43139+40])
                            Ptyp_constr "Gramf.single_extend_statement" (lang_new.ml[776,43139+11]..[776,43139+40])
                            [
                              core_type (lang_new.ml[776,43139+9]..[776,43139+10])
                                Ptyp_any
                            ]
                    ]
  structure_item (lang_new.ml[777,43181+0]..[781,43350+26])
    Pstr_eval
    expression (lang_new.ml[778,43189+2]..[781,43350+26])
      Pexp_sequence
      expression (lang_new.ml[778,43189+2]..[779,43257+26])
        Pexp_apply
        expression (lang_new.ml[778,43189+2]..[778,43189+23])
          Pexp_ident "Ast_quotation.of_stru" (lang_new.ml[778,43189+2]..[778,43189+23])
        [
          <label> "name"
            expression (lang_new.ml[778,43189+30]..[778,43189+67])
              Pexp_record
              [
                "domain" (lang_new.ml[778,43189+32]..[778,43189+38])
                  expression (lang_new.ml[778,43189+41]..[778,43189+48])
                    Pexp_ident "Ns.lang" (lang_new.ml[778,43189+41]..[778,43189+48])
                "name" (lang_new.ml[778,43189+50]..[778,43189+54])
                  expression (lang_new.ml[778,43189+57]..[778,43189+65])
                    Pexp_constant Const_string("create",None)
              ]
              None
          <label> "entry"
            expression (lang_new.ml[779,43257+11]..[779,43257+23])
              Pexp_ident "nonterminals" (lang_new.ml[779,43257+11]..[779,43257+23])
          <label> ""
            expression (lang_new.ml[779,43257+24]..[779,43257+26])
              Pexp_construct "()" (lang_new.ml[779,43257+24]..[779,43257+26])
              None
        ]
      expression (lang_new.ml[780,43285+2]..[781,43350+26])
        Pexp_apply
        expression (lang_new.ml[780,43285+2]..[780,43285+23])
          Pexp_ident "Ast_quotation.of_stru" (lang_new.ml[780,43285+2]..[780,43285+23])
        [
          <label> "name"
            expression (lang_new.ml[780,43285+30]..[780,43285+64])
              Pexp_record
              [
                "domain" (lang_new.ml[780,43285+32]..[780,43285+38])
                  expression (lang_new.ml[780,43285+41]..[780,43285+48])
                    Pexp_ident "Ns.lang" (lang_new.ml[780,43285+41]..[780,43285+48])
                "name" (lang_new.ml[780,43285+50]..[780,43285+54])
                  expression (lang_new.ml[780,43285+57]..[780,43285+62])
                    Pexp_constant Const_string("new",None)
              ]
              None
          <label> "entry"
            expression (lang_new.ml[781,43350+11]..[781,43350+23])
              Pexp_ident "newterminals" (lang_new.ml[781,43350+11]..[781,43350+23])
          <label> ""
            expression (lang_new.ml[781,43350+24]..[781,43350+26])
              Pexp_construct "()" (lang_new.ml[781,43350+24]..[781,43350+26])
              None
        ]
]
