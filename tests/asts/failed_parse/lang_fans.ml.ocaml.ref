[
  structure_item (lang_fans.ml[1,0+0]..[717,38453+76])
    Pstr_value Rec
    [
      <def>
        pattern (lang_fans.ml[1,0+8]..[1,0+13])
          Ppat_var "token" (lang_fans.ml[1,0+8]..[1,0+13])
        expression (lang_fans.ml[1,0+13]..[717,38453+76]) ghost
          Pexp_constraint
          expression (lang_fans.ml[2,43+2]..[717,38453+76])
            Pexp_function
            [
              <case>
                pattern (lang_fans.ml[3,54+4]..[3,54+28])
                  Ppat_constraint
                  pattern (lang_fans.ml[3,54+5]..[3,54+11])
                    Ppat_var "lexbuf" (lang_fans.ml[3,54+5]..[3,54+11])
                  core_type (lang_fans.ml[3,54+14]..[3,54+27])
                    Ptyp_constr "Lexing.lexbuf" (lang_fans.ml[3,54+14]..[3,54+27])
                    []
                expression (lang_fans.ml[4,86+6]..[717,38453+76])
                  Pexp_let Rec
                  [
                    <def>
                      pattern (lang_fans.ml[4,86+14]..[4,86+35])
                        Ppat_var "__ocaml_lex_next_char" (lang_fans.ml[4,86+14]..[4,86+35])
                      expression (lang_fans.ml[5,124+8]..[15,482+51])
                        Pexp_function
                        [
                          <case>
                            pattern (lang_fans.ml[6,141+10]..[6,141+12])
                              Ppat_construct "()" (lang_fans.ml[6,141+10]..[6,141+12])
                              None
                            expression (lang_fans.ml[7,157+12]..[15,482+51])
                              Pexp_ifthenelse
                              expression (lang_fans.ml[7,157+15]..[7,157+59])
                                Pexp_apply
                                expression (lang_fans.ml[7,157+35]..[7,157+37])
                                  Pexp_ident ">=" (lang_fans.ml[7,157+35]..[7,157+37])
                                [
                                  <label> ""
                                    expression (lang_fans.ml[7,157+15]..[7,157+34])
                                      Pexp_field
                                      expression (lang_fans.ml[7,157+15]..[7,157+21])
                                        Pexp_ident "lexbuf" (lang_fans.ml[7,157+15]..[7,157+21])
                                      "lex_curr_pos" (lang_fans.ml[7,157+22]..[7,157+34])
                                  <label> ""
                                    expression (lang_fans.ml[7,157+38]..[7,157+59])
                                      Pexp_field
                                      expression (lang_fans.ml[7,157+38]..[7,157+44])
                                        Pexp_ident "lexbuf" (lang_fans.ml[7,157+38]..[7,157+44])
                                      "lex_buffer_len" (lang_fans.ml[7,157+45]..[7,157+59])
                                ]
                              expression (lang_fans.ml[9,234+14]..[11,299+74])
                                Pexp_ifthenelse
                                expression (lang_fans.ml[9,234+18]..[9,234+40])
                                  Pexp_field
                                  expression (lang_fans.ml[9,234+18]..[9,234+24])
                                    Pexp_ident "lexbuf" (lang_fans.ml[9,234+18]..[9,234+24])
                                  "lex_eof_reached" (lang_fans.ml[9,234+25]..[9,234+40])
                                expression (lang_fans.ml[10,275+20]..[10,275+23])
                                  Pexp_constant Const_int 256
                                Some
                                  expression (lang_fans.ml[11,299+20]..[11,299+73])
                                    Pexp_sequence
                                    expression (lang_fans.ml[11,299+21]..[11,299+46])
                                      Pexp_apply
                                      expression (lang_fans.ml[11,299+21]..[11,299+39])
                                        Pexp_field
                                        expression (lang_fans.ml[11,299+21]..[11,299+27])
                                          Pexp_ident "lexbuf" (lang_fans.ml[11,299+21]..[11,299+27])
                                        "refill_buff" (lang_fans.ml[11,299+28]..[11,299+39])
                                      [
                                        <label> ""
                                          expression (lang_fans.ml[11,299+40]..[11,299+46])
                                            Pexp_ident "lexbuf" (lang_fans.ml[11,299+40]..[11,299+46])
                                      ]
                                    expression (lang_fans.ml[11,299+48]..[11,299+72])
                                      Pexp_apply
                                      expression (lang_fans.ml[11,299+48]..[11,299+69])
                                        Pexp_ident "__ocaml_lex_next_char" (lang_fans.ml[11,299+48]..[11,299+69])
                                      [
                                        <label> ""
                                          expression (lang_fans.ml[11,299+70]..[11,299+72])
                                            Pexp_construct "()" (lang_fans.ml[11,299+70]..[11,299+72])
                                            None
                                      ]
                              Some
                                expression (lang_fans.ml[13,391+14]..[15,482+51])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lang_fans.ml[13,391+19]..[13,391+20])
                                        Ppat_var "i" (lang_fans.ml[13,391+19]..[13,391+20])
                                      expression (lang_fans.ml[13,391+23]..[13,391+42])
                                        Pexp_field
                                        expression (lang_fans.ml[13,391+23]..[13,391+29])
                                          Pexp_ident "lexbuf" (lang_fans.ml[13,391+23]..[13,391+29])
                                        "lex_curr_pos" (lang_fans.ml[13,391+30]..[13,391+42])
                                  ]
                                  expression (lang_fans.ml[14,437+15]..[15,482+50])
                                    Pexp_sequence
                                    expression (lang_fans.ml[14,437+15]..[14,437+43])
                                      Pexp_setfield
                                      expression (lang_fans.ml[14,437+15]..[14,437+21])
                                        Pexp_ident "lexbuf" (lang_fans.ml[14,437+15]..[14,437+21])
                                      "lex_curr_pos" (lang_fans.ml[14,437+22]..[14,437+34])
                                      expression (lang_fans.ml[14,437+38]..[14,437+43])
                                        Pexp_apply
                                        expression (lang_fans.ml[14,437+40]..[14,437+41])
                                          Pexp_ident "+" (lang_fans.ml[14,437+40]..[14,437+41])
                                        [
                                          <label> ""
                                            expression (lang_fans.ml[14,437+38]..[14,437+39])
                                              Pexp_ident "i" (lang_fans.ml[14,437+38]..[14,437+39])
                                          <label> ""
                                            expression (lang_fans.ml[14,437+42]..[14,437+43])
                                              Pexp_constant Const_int 1
                                        ]
                                    expression (lang_fans.ml[15,482+15]..[15,482+50])
                                      Pexp_apply
                                      expression (lang_fans.ml[15,482+15]..[15,482+24])
                                        Pexp_ident "Char.code" (lang_fans.ml[15,482+15]..[15,482+24])
                                      [
                                        <label> ""
                                          expression (lang_fans.ml[15,482+25]..[15,482+50])
                                            Pexp_apply
                                            expression (lang_fans.ml[15,482+26]..[15,482+49]) ghost
                                              Pexp_ident "String.get" (lang_fans.ml[15,482+26]..[15,482+49]) ghost
                                            [
                                              <label> ""
                                                expression (lang_fans.ml[15,482+26]..[15,482+45])
                                                  Pexp_field
                                                  expression (lang_fans.ml[15,482+27]..[15,482+33])
                                                    Pexp_ident "lexbuf" (lang_fans.ml[15,482+27]..[15,482+33])
                                                  "lex_buffer" (lang_fans.ml[15,482+34]..[15,482+44])
                                              <label> ""
                                                expression (lang_fans.ml[15,482+47]..[15,482+48])
                                                  Pexp_ident "i" (lang_fans.ml[15,482+47]..[15,482+48])
                                            ]
                                      ]
                        ]
                    <def>
                      pattern (lang_fans.ml[16,534+10]..[16,534+28])
                        Ppat_var "__ocaml_lex_state0" (lang_fans.ml[16,534+10]..[16,534+28])
                      expression (lang_fans.ml[17,565+8]..[146,6603+42])
                        Pexp_function
                        [
                          <case>
                            pattern (lang_fans.ml[18,582+10]..[18,582+12])
                              Ppat_construct "()" (lang_fans.ml[18,582+10]..[18,582+12])
                              None
                            expression (lang_fans.ml[19,598+12]..[146,6603+42])
                              Pexp_match
                              expression (lang_fans.ml[19,598+19]..[19,598+43])
                                Pexp_apply
                                expression (lang_fans.ml[19,598+19]..[19,598+40])
                                  Pexp_ident "__ocaml_lex_next_char" (lang_fans.ml[19,598+19]..[19,598+40])
                                [
                                  <label> ""
                                    expression (lang_fans.ml[19,598+41]..[19,598+43])
                                      Pexp_construct "()" (lang_fans.ml[19,598+41]..[19,598+43])
                                      None
                                ]
                              [
                                <case>
                                  pattern (lang_fans.ml[20,647+15]..[20,647+17])
                                    Ppat_constant Const_int 40
                                  expression (lang_fans.ml[20,647+21]..[20,647+42])
                                    Pexp_apply
                                    expression (lang_fans.ml[20,647+21]..[20,647+39])
                                      Pexp_ident "__ocaml_lex_state6" (lang_fans.ml[20,647+21]..[20,647+39])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[20,647+40]..[20,647+42])
                                          Pexp_construct "()" (lang_fans.ml[20,647+40]..[20,647+42])
                                          None
                                    ]
                                <case>
                                  pattern (lang_fans.ml[21,690+15]..[21,690+23])
                                    Ppat_or
                                    pattern (lang_fans.ml[21,690+15]..[21,690+20])
                                      Ppat_or
                                      pattern (lang_fans.ml[21,690+15]..[21,690+17])
                                        Ppat_constant Const_int 41
                                      pattern (lang_fans.ml[21,690+18]..[21,690+20])
                                        Ppat_constant Const_int 44
                                    pattern (lang_fans.ml[21,690+21]..[21,690+23])
                                      Ppat_constant Const_int 59
                                  expression (lang_fans.ml[21,690+27]..[21,690+48])
                                    Pexp_apply
                                    expression (lang_fans.ml[21,690+27]..[21,690+45])
                                      Pexp_ident "__ocaml_lex_state3" (lang_fans.ml[21,690+27]..[21,690+45])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[21,690+46]..[21,690+48])
                                          Pexp_construct "()" (lang_fans.ml[21,690+46]..[21,690+48])
                                          None
                                    ]
                                <case>
                                  pattern (lang_fans.ml[22,739+15]..[22,739+22])
                                    Ppat_or
                                    pattern (lang_fans.ml[22,739+15]..[22,739+19])
                                      Ppat_or
                                      pattern (lang_fans.ml[22,739+15]..[22,739+16])
                                        Ppat_constant Const_int 9
                                      pattern (lang_fans.ml[22,739+17]..[22,739+19])
                                        Ppat_constant Const_int 12
                                    pattern (lang_fans.ml[22,739+20]..[22,739+22])
                                      Ppat_constant Const_int 32
                                  expression (lang_fans.ml[22,739+26]..[22,739+47])
                                    Pexp_apply
                                    expression (lang_fans.ml[22,739+26]..[22,739+44])
                                      Pexp_ident "__ocaml_lex_state9" (lang_fans.ml[22,739+26]..[22,739+44])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[22,739+45]..[22,739+47])
                                          Pexp_construct "()" (lang_fans.ml[22,739+45]..[22,739+47])
                                          None
                                    ]
                                <case>
                                  pattern (lang_fans.ml[23,787+15]..[78,3288+75])
                                    Ppat_or
                                    pattern (lang_fans.ml[23,787+15]..[78,3288+71])
                                      Ppat_or
                                      pattern (lang_fans.ml[23,787+15]..[76,3146+71])
                                        Ppat_or
                                        pattern (lang_fans.ml[23,787+15]..[75,3075+70])
                                          Ppat_or
                                          pattern (lang_fans.ml[23,787+15]..[74,3005+69])
                                            Ppat_or
                                            pattern (lang_fans.ml[23,787+15]..[73,2936+68])
                                              Ppat_or
                                              pattern (lang_fans.ml[23,787+15]..[72,2868+67])
                                                Ppat_or
                                                pattern (lang_fans.ml[23,787+15]..[71,2801+66])
                                                  Ppat_or
                                                  pattern (lang_fans.ml[23,787+15]..[70,2735+65])
                                                    Ppat_or
                                                    pattern (lang_fans.ml[23,787+15]..[69,2670+64])
                                                      Ppat_or
                                                      pattern (lang_fans.ml[23,787+15]..[68,2606+63])
                                                        Ppat_or
                                                        pattern (lang_fans.ml[23,787+15]..[67,2543+62])
                                                          Ppat_or
                                                          pattern (lang_fans.ml[23,787+15]..[66,2481+61])
                                                            Ppat_or
                                                            pattern (lang_fans.ml[23,787+15]..[65,2420+60])
                                                              Ppat_or
                                                              pattern (lang_fans.ml[23,787+15]..[64,2360+59])
                                                                Ppat_or
                                                                pattern (lang_fans.ml[23,787+15]..[63,2301+58])
                                                                  Ppat_or
                                                                  pattern (lang_fans.ml[23,787+15]..[62,2243+57])
                                                                    Ppat_or
                                                                    pattern (lang_fans.ml[23,787+15]..[61,2186+56])
                                                                      Ppat_or
                                                                      pattern (lang_fans.ml[23,787+15]..[60,2130+55])
Ppat_or
pattern (lang_fans.ml[23,787+15]..[59,2075+54])
  Ppat_or
  pattern (lang_fans.ml[23,787+15]..[58,2021+53])
    Ppat_or
    pattern (lang_fans.ml[23,787+15]..[57,1968+52])
      Ppat_or
      pattern (lang_fans.ml[23,787+15]..[56,1916+51])
        Ppat_or
        pattern (lang_fans.ml[23,787+15]..[55,1865+50])
          Ppat_or
          pattern (lang_fans.ml[23,787+15]..[54,1815+49])
            Ppat_or
            pattern (lang_fans.ml[23,787+15]..[53,1766+48])
              Ppat_or
              pattern (lang_fans.ml[23,787+15]..[52,1718+47])
                Ppat_or
                pattern (lang_fans.ml[23,787+15]..[51,1671+46])
                  Ppat_or
                  pattern (lang_fans.ml[23,787+15]..[50,1625+45])
                    Ppat_or
                    pattern (lang_fans.ml[23,787+15]..[49,1580+44])
                      Ppat_or
                      pattern (lang_fans.ml[23,787+15]..[48,1537+42])
                        Ppat_or
                        pattern (lang_fans.ml[23,787+15]..[47,1495+41])
                          Ppat_or
                          pattern (lang_fans.ml[23,787+15]..[46,1454+40])
                            Ppat_or
                            pattern (lang_fans.ml[23,787+15]..[45,1414+39])
                              Ppat_or
                              pattern (lang_fans.ml[23,787+15]..[44,1375+38])
                                Ppat_or
                                pattern (lang_fans.ml[23,787+15]..[43,1337+37])
                                  Ppat_or
                                  pattern (lang_fans.ml[23,787+15]..[42,1300+36])
                                    Ppat_or
                                    pattern (lang_fans.ml[23,787+15]..[41,1264+35])
                                      Ppat_or
                                      pattern (lang_fans.ml[23,787+15]..[40,1229+34])
                                        Ppat_or
                                        pattern (lang_fans.ml[23,787+15]..[39,1195+33])
                                          Ppat_or
                                          pattern (lang_fans.ml[23,787+15]..[38,1162+32])
                                            Ppat_or
                                            pattern (lang_fans.ml[23,787+15]..[37,1130+31])
                                              Ppat_or
                                              pattern (lang_fans.ml[23,787+15]..[36,1099+30])
                                                Ppat_or
                                                pattern (lang_fans.ml[23,787+15]..[35,1069+29])
                                                  Ppat_or
                                                  pattern (lang_fans.ml[23,787+15]..[34,1040+28])
                                                    Ppat_or
                                                    pattern (lang_fans.ml[23,787+15]..[33,1012+27])
                                                      Ppat_or
                                                      pattern (lang_fans.ml[23,787+15]..[32,985+26])
                                                        Ppat_or
                                                        pattern (lang_fans.ml[23,787+15]..[31,959+25])
                                                          Ppat_or
                                                          pattern (lang_fans.ml[23,787+15]..[30,934+24])
                                                            Ppat_or
                                                            pattern (lang_fans.ml[23,787+15]..[29,910+23])
                                                              Ppat_or
                                                              pattern (lang_fans.ml[23,787+15]..[28,887+22])
                                                                Ppat_or
                                                                pattern (lang_fans.ml[23,787+15]..[27,865+21])
                                                                  Ppat_or
                                                                  pattern (lang_fans.ml[23,787+15]..[26,844+20])
                                                                    Ppat_or
                                                                    pattern (lang_fans.ml[23,787+15]..[25,824+19])
                                                                      Ppat_or
                                                                      pattern (lang_fans.ml[23,787+15]..[24,805+18])
Ppat_or
pattern (lang_fans.ml[23,787+15]..[23,787+17])
  Ppat_constant Const_int 65
pattern (lang_fans.ml[24,805+16]..[24,805+18])
  Ppat_constant Const_int 66
                                                                      pattern (lang_fans.ml[25,824+17]..[25,824+19])
Ppat_constant Const_int 67
                                                                    pattern (lang_fans.ml[26,844+18]..[26,844+20])
                                                                      Ppat_constant Const_int 68
                                                                  pattern (lang_fans.ml[27,865+19]..[27,865+21])
                                                                    Ppat_constant Const_int 69
                                                                pattern (lang_fans.ml[28,887+20]..[28,887+22])
                                                                  Ppat_constant Const_int 70
                                                              pattern (lang_fans.ml[29,910+21]..[29,910+23])
                                                                Ppat_constant Const_int 71
                                                            pattern (lang_fans.ml[30,934+22]..[30,934+24])
                                                              Ppat_constant Const_int 72
                                                          pattern (lang_fans.ml[31,959+23]..[31,959+25])
                                                            Ppat_constant Const_int 73
                                                        pattern (lang_fans.ml[32,985+24]..[32,985+26])
                                                          Ppat_constant Const_int 74
                                                      pattern (lang_fans.ml[33,1012+25]..[33,1012+27])
                                                        Ppat_constant Const_int 75
                                                    pattern (lang_fans.ml[34,1040+26]..[34,1040+28])
                                                      Ppat_constant Const_int 76
                                                  pattern (lang_fans.ml[35,1069+27]..[35,1069+29])
                                                    Ppat_constant Const_int 77
                                                pattern (lang_fans.ml[36,1099+28]..[36,1099+30])
                                                  Ppat_constant Const_int 78
                                              pattern (lang_fans.ml[37,1130+29]..[37,1130+31])
                                                Ppat_constant Const_int 79
                                            pattern (lang_fans.ml[38,1162+30]..[38,1162+32])
                                              Ppat_constant Const_int 80
                                          pattern (lang_fans.ml[39,1195+31]..[39,1195+33])
                                            Ppat_constant Const_int 81
                                        pattern (lang_fans.ml[40,1229+32]..[40,1229+34])
                                          Ppat_constant Const_int 82
                                      pattern (lang_fans.ml[41,1264+33]..[41,1264+35])
                                        Ppat_constant Const_int 83
                                    pattern (lang_fans.ml[42,1300+34]..[42,1300+36])
                                      Ppat_constant Const_int 84
                                  pattern (lang_fans.ml[43,1337+35]..[43,1337+37])
                                    Ppat_constant Const_int 85
                                pattern (lang_fans.ml[44,1375+36]..[44,1375+38])
                                  Ppat_constant Const_int 86
                              pattern (lang_fans.ml[45,1414+37]..[45,1414+39])
                                Ppat_constant Const_int 87
                            pattern (lang_fans.ml[46,1454+38]..[46,1454+40])
                              Ppat_constant Const_int 88
                          pattern (lang_fans.ml[47,1495+39]..[47,1495+41])
                            Ppat_constant Const_int 89
                        pattern (lang_fans.ml[48,1537+40]..[48,1537+42])
                          Ppat_constant Const_int 90
                      pattern (lang_fans.ml[49,1580+41]..[49,1580+44])
                        Ppat_constant Const_int 192
                    pattern (lang_fans.ml[50,1625+42]..[50,1625+45])
                      Ppat_constant Const_int 193
                  pattern (lang_fans.ml[51,1671+43]..[51,1671+46])
                    Ppat_constant Const_int 194
                pattern (lang_fans.ml[52,1718+44]..[52,1718+47])
                  Ppat_constant Const_int 195
              pattern (lang_fans.ml[53,1766+45]..[53,1766+48])
                Ppat_constant Const_int 196
            pattern (lang_fans.ml[54,1815+46]..[54,1815+49])
              Ppat_constant Const_int 197
          pattern (lang_fans.ml[55,1865+47]..[55,1865+50])
            Ppat_constant Const_int 198
        pattern (lang_fans.ml[56,1916+48]..[56,1916+51])
          Ppat_constant Const_int 199
      pattern (lang_fans.ml[57,1968+49]..[57,1968+52])
        Ppat_constant Const_int 200
    pattern (lang_fans.ml[58,2021+50]..[58,2021+53])
      Ppat_constant Const_int 201
  pattern (lang_fans.ml[59,2075+51]..[59,2075+54])
    Ppat_constant Const_int 202
pattern (lang_fans.ml[60,2130+52]..[60,2130+55])
  Ppat_constant Const_int 203
                                                                      pattern (lang_fans.ml[61,2186+53]..[61,2186+56])
Ppat_constant Const_int 204
                                                                    pattern (lang_fans.ml[62,2243+54]..[62,2243+57])
                                                                      Ppat_constant Const_int 205
                                                                  pattern (lang_fans.ml[63,2301+55]..[63,2301+58])
                                                                    Ppat_constant Const_int 206
                                                                pattern (lang_fans.ml[64,2360+56]..[64,2360+59])
                                                                  Ppat_constant Const_int 207
                                                              pattern (lang_fans.ml[65,2420+57]..[65,2420+60])
                                                                Ppat_constant Const_int 208
                                                            pattern (lang_fans.ml[66,2481+58]..[66,2481+61])
                                                              Ppat_constant Const_int 209
                                                          pattern (lang_fans.ml[67,2543+59]..[67,2543+62])
                                                            Ppat_constant Const_int 210
                                                        pattern (lang_fans.ml[68,2606+60]..[68,2606+63])
                                                          Ppat_constant Const_int 211
                                                      pattern (lang_fans.ml[69,2670+61]..[69,2670+64])
                                                        Ppat_constant Const_int 212
                                                    pattern (lang_fans.ml[70,2735+62]..[70,2735+65])
                                                      Ppat_constant Const_int 213
                                                  pattern (lang_fans.ml[71,2801+63]..[71,2801+66])
                                                    Ppat_constant Const_int 214
                                                pattern (lang_fans.ml[72,2868+64]..[72,2868+67])
                                                  Ppat_constant Const_int 216
                                              pattern (lang_fans.ml[73,2936+65]..[73,2936+68])
                                                Ppat_constant Const_int 217
                                            pattern (lang_fans.ml[74,3005+66]..[74,3005+69])
                                              Ppat_constant Const_int 218
                                          pattern (lang_fans.ml[75,3075+67]..[75,3075+70])
                                            Ppat_constant Const_int 219
                                        pattern (lang_fans.ml[76,3146+68]..[76,3146+71])
                                          Ppat_constant Const_int 220
                                      pattern (lang_fans.ml[78,3288+68]..[78,3288+71])
                                        Ppat_constant Const_int 221
                                    pattern (lang_fans.ml[78,3288+72]..[78,3288+75])
                                      Ppat_constant Const_int 222
                                  expression (lang_fans.ml[79,3364+20]..[79,3364+41])
                                    Pexp_apply
                                    expression (lang_fans.ml[79,3364+20]..[79,3364+38])
                                      Pexp_ident "__ocaml_lex_state4" (lang_fans.ml[79,3364+20]..[79,3364+38])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[79,3364+39]..[79,3364+41])
                                          Pexp_construct "()" (lang_fans.ml[79,3364+39]..[79,3364+41])
                                          None
                                    ]
                                <case>
                                  pattern (lang_fans.ml[80,3406+15]..[80,3406+17])
                                    Ppat_constant Const_int 10
                                  expression (lang_fans.ml[80,3406+21]..[80,3406+42])
                                    Pexp_apply
                                    expression (lang_fans.ml[80,3406+21]..[80,3406+39])
                                      Pexp_ident "__ocaml_lex_state8" (lang_fans.ml[80,3406+21]..[80,3406+39])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[80,3406+40]..[80,3406+42])
                                          Pexp_construct "()" (lang_fans.ml[80,3406+40]..[80,3406+42])
                                          None
                                    ]
                                <case>
                                  pattern (lang_fans.ml[81,3449+15]..[142,6398+75])
                                    Ppat_or
                                    pattern (lang_fans.ml[81,3449+15]..[142,6398+71])
                                      Ppat_or
                                      pattern (lang_fans.ml[81,3449+15]..[140,6256+71])
                                        Ppat_or
                                        pattern (lang_fans.ml[81,3449+15]..[138,6114+71])
                                          Ppat_or
                                          pattern (lang_fans.ml[81,3449+15]..[136,5972+71])
                                            Ppat_or
                                            pattern (lang_fans.ml[81,3449+15]..[134,5830+71])
                                              Ppat_or
                                              pattern (lang_fans.ml[81,3449+15]..[133,5759+70])
                                                Ppat_or
                                                pattern (lang_fans.ml[81,3449+15]..[132,5689+69])
                                                  Ppat_or
                                                  pattern (lang_fans.ml[81,3449+15]..[131,5620+68])
                                                    Ppat_or
                                                    pattern (lang_fans.ml[81,3449+15]..[130,5552+67])
                                                      Ppat_or
                                                      pattern (lang_fans.ml[81,3449+15]..[129,5485+66])
                                                        Ppat_or
                                                        pattern (lang_fans.ml[81,3449+15]..[128,5419+65])
                                                          Ppat_or
                                                          pattern (lang_fans.ml[81,3449+15]..[127,5354+64])
                                                            Ppat_or
                                                            pattern (lang_fans.ml[81,3449+15]..[126,5290+63])
                                                              Ppat_or
                                                              pattern (lang_fans.ml[81,3449+15]..[125,5227+62])
                                                                Ppat_or
                                                                pattern (lang_fans.ml[81,3449+15]..[124,5165+61])
                                                                  Ppat_or
                                                                  pattern (lang_fans.ml[81,3449+15]..[123,5104+60])
                                                                    Ppat_or
                                                                    pattern (lang_fans.ml[81,3449+15]..[122,5044+59])
                                                                      Ppat_or
                                                                      pattern (lang_fans.ml[81,3449+15]..[121,4985+58])
Ppat_or
pattern (lang_fans.ml[81,3449+15]..[120,4927+57])
  Ppat_or
  pattern (lang_fans.ml[81,3449+15]..[119,4870+56])
    Ppat_or
    pattern (lang_fans.ml[81,3449+15]..[118,4814+55])
      Ppat_or
      pattern (lang_fans.ml[81,3449+15]..[117,4759+54])
        Ppat_or
        pattern (lang_fans.ml[81,3449+15]..[116,4705+53])
          Ppat_or
          pattern (lang_fans.ml[81,3449+15]..[115,4652+52])
            Ppat_or
            pattern (lang_fans.ml[81,3449+15]..[114,4600+51])
              Ppat_or
              pattern (lang_fans.ml[81,3449+15]..[113,4549+50])
                Ppat_or
                pattern (lang_fans.ml[81,3449+15]..[112,4499+49])
                  Ppat_or
                  pattern (lang_fans.ml[81,3449+15]..[111,4450+48])
                    Ppat_or
                    pattern (lang_fans.ml[81,3449+15]..[110,4402+47])
                      Ppat_or
                      pattern (lang_fans.ml[81,3449+15]..[109,4355+46])
                        Ppat_or
                        pattern (lang_fans.ml[81,3449+15]..[108,4309+45])
                          Ppat_or
                          pattern (lang_fans.ml[81,3449+15]..[107,4264+44])
                            Ppat_or
                            pattern (lang_fans.ml[81,3449+15]..[106,4220+43])
                              Ppat_or
                              pattern (lang_fans.ml[81,3449+15]..[105,4177+42])
                                Ppat_or
                                pattern (lang_fans.ml[81,3449+15]..[104,4135+41])
                                  Ppat_or
                                  pattern (lang_fans.ml[81,3449+15]..[103,4094+40])
                                    Ppat_or
                                    pattern (lang_fans.ml[81,3449+15]..[102,4054+39])
                                      Ppat_or
                                      pattern (lang_fans.ml[81,3449+15]..[101,4015+38])
                                        Ppat_or
                                        pattern (lang_fans.ml[81,3449+15]..[100,3977+37])
                                          Ppat_or
                                          pattern (lang_fans.ml[81,3449+15]..[99,3940+36])
                                            Ppat_or
                                            pattern (lang_fans.ml[81,3449+15]..[98,3904+35])
                                              Ppat_or
                                              pattern (lang_fans.ml[81,3449+15]..[97,3869+34])
                                                Ppat_or
                                                pattern (lang_fans.ml[81,3449+15]..[96,3835+33])
                                                  Ppat_or
                                                  pattern (lang_fans.ml[81,3449+15]..[95,3802+32])
                                                    Ppat_or
                                                    pattern (lang_fans.ml[81,3449+15]..[94,3770+31])
                                                      Ppat_or
                                                      pattern (lang_fans.ml[81,3449+15]..[93,3739+30])
                                                        Ppat_or
                                                        pattern (lang_fans.ml[81,3449+15]..[92,3709+29])
                                                          Ppat_or
                                                          pattern (lang_fans.ml[81,3449+15]..[91,3680+28])
                                                            Ppat_or
                                                            pattern (lang_fans.ml[81,3449+15]..[90,3652+27])
                                                              Ppat_or
                                                              pattern (lang_fans.ml[81,3449+15]..[89,3625+26])
                                                                Ppat_or
                                                                pattern (lang_fans.ml[81,3449+15]..[88,3599+25])
                                                                  Ppat_or
                                                                  pattern (lang_fans.ml[81,3449+15]..[87,3574+24])
                                                                    Ppat_or
                                                                    pattern (lang_fans.ml[81,3449+15]..[86,3550+23])
                                                                      Ppat_or
                                                                      pattern (lang_fans.ml[81,3449+15]..[85,3527+22])
Ppat_or
pattern (lang_fans.ml[81,3449+15]..[84,3506+20])
  Ppat_or
  pattern (lang_fans.ml[81,3449+15]..[83,3486+19])
    Ppat_or
    pattern (lang_fans.ml[81,3449+15]..[82,3467+18])
      Ppat_or
      pattern (lang_fans.ml[81,3449+15]..[81,3449+17])
        Ppat_constant Const_int 95
      pattern (lang_fans.ml[82,3467+16]..[82,3467+18])
        Ppat_constant Const_int 97
    pattern (lang_fans.ml[83,3486+17]..[83,3486+19])
      Ppat_constant Const_int 98
  pattern (lang_fans.ml[84,3506+18]..[84,3506+20])
    Ppat_constant Const_int 99
pattern (lang_fans.ml[85,3527+19]..[85,3527+22])
  Ppat_constant Const_int 100
                                                                      pattern (lang_fans.ml[86,3550+20]..[86,3550+23])
Ppat_constant Const_int 101
                                                                    pattern (lang_fans.ml[87,3574+21]..[87,3574+24])
                                                                      Ppat_constant Const_int 102
                                                                  pattern (lang_fans.ml[88,3599+22]..[88,3599+25])
                                                                    Ppat_constant Const_int 103
                                                                pattern (lang_fans.ml[89,3625+23]..[89,3625+26])
                                                                  Ppat_constant Const_int 104
                                                              pattern (lang_fans.ml[90,3652+24]..[90,3652+27])
                                                                Ppat_constant Const_int 105
                                                            pattern (lang_fans.ml[91,3680+25]..[91,3680+28])
                                                              Ppat_constant Const_int 106
                                                          pattern (lang_fans.ml[92,3709+26]..[92,3709+29])
                                                            Ppat_constant Const_int 107
                                                        pattern (lang_fans.ml[93,3739+27]..[93,3739+30])
                                                          Ppat_constant Const_int 108
                                                      pattern (lang_fans.ml[94,3770+28]..[94,3770+31])
                                                        Ppat_constant Const_int 109
                                                    pattern (lang_fans.ml[95,3802+29]..[95,3802+32])
                                                      Ppat_constant Const_int 110
                                                  pattern (lang_fans.ml[96,3835+30]..[96,3835+33])
                                                    Ppat_constant Const_int 111
                                                pattern (lang_fans.ml[97,3869+31]..[97,3869+34])
                                                  Ppat_constant Const_int 112
                                              pattern (lang_fans.ml[98,3904+32]..[98,3904+35])
                                                Ppat_constant Const_int 113
                                            pattern (lang_fans.ml[99,3940+33]..[99,3940+36])
                                              Ppat_constant Const_int 114
                                          pattern (lang_fans.ml[100,3977+34]..[100,3977+37])
                                            Ppat_constant Const_int 115
                                        pattern (lang_fans.ml[101,4015+35]..[101,4015+38])
                                          Ppat_constant Const_int 116
                                      pattern (lang_fans.ml[102,4054+36]..[102,4054+39])
                                        Ppat_constant Const_int 117
                                    pattern (lang_fans.ml[103,4094+37]..[103,4094+40])
                                      Ppat_constant Const_int 118
                                  pattern (lang_fans.ml[104,4135+38]..[104,4135+41])
                                    Ppat_constant Const_int 119
                                pattern (lang_fans.ml[105,4177+39]..[105,4177+42])
                                  Ppat_constant Const_int 120
                              pattern (lang_fans.ml[106,4220+40]..[106,4220+43])
                                Ppat_constant Const_int 121
                            pattern (lang_fans.ml[107,4264+41]..[107,4264+44])
                              Ppat_constant Const_int 122
                          pattern (lang_fans.ml[108,4309+42]..[108,4309+45])
                            Ppat_constant Const_int 223
                        pattern (lang_fans.ml[109,4355+43]..[109,4355+46])
                          Ppat_constant Const_int 224
                      pattern (lang_fans.ml[110,4402+44]..[110,4402+47])
                        Ppat_constant Const_int 225
                    pattern (lang_fans.ml[111,4450+45]..[111,4450+48])
                      Ppat_constant Const_int 226
                  pattern (lang_fans.ml[112,4499+46]..[112,4499+49])
                    Ppat_constant Const_int 227
                pattern (lang_fans.ml[113,4549+47]..[113,4549+50])
                  Ppat_constant Const_int 228
              pattern (lang_fans.ml[114,4600+48]..[114,4600+51])
                Ppat_constant Const_int 229
            pattern (lang_fans.ml[115,4652+49]..[115,4652+52])
              Ppat_constant Const_int 230
          pattern (lang_fans.ml[116,4705+50]..[116,4705+53])
            Ppat_constant Const_int 231
        pattern (lang_fans.ml[117,4759+51]..[117,4759+54])
          Ppat_constant Const_int 232
      pattern (lang_fans.ml[118,4814+52]..[118,4814+55])
        Ppat_constant Const_int 233
    pattern (lang_fans.ml[119,4870+53]..[119,4870+56])
      Ppat_constant Const_int 234
  pattern (lang_fans.ml[120,4927+54]..[120,4927+57])
    Ppat_constant Const_int 235
pattern (lang_fans.ml[121,4985+55]..[121,4985+58])
  Ppat_constant Const_int 236
                                                                      pattern (lang_fans.ml[122,5044+56]..[122,5044+59])
Ppat_constant Const_int 237
                                                                    pattern (lang_fans.ml[123,5104+57]..[123,5104+60])
                                                                      Ppat_constant Const_int 238
                                                                  pattern (lang_fans.ml[124,5165+58]..[124,5165+61])
                                                                    Ppat_constant Const_int 239
                                                                pattern (lang_fans.ml[125,5227+59]..[125,5227+62])
                                                                  Ppat_constant Const_int 240
                                                              pattern (lang_fans.ml[126,5290+60]..[126,5290+63])
                                                                Ppat_constant Const_int 241
                                                            pattern (lang_fans.ml[127,5354+61]..[127,5354+64])
                                                              Ppat_constant Const_int 242
                                                          pattern (lang_fans.ml[128,5419+62]..[128,5419+65])
                                                            Ppat_constant Const_int 243
                                                        pattern (lang_fans.ml[129,5485+63]..[129,5485+66])
                                                          Ppat_constant Const_int 244
                                                      pattern (lang_fans.ml[130,5552+64]..[130,5552+67])
                                                        Ppat_constant Const_int 245
                                                    pattern (lang_fans.ml[131,5620+65]..[131,5620+68])
                                                      Ppat_constant Const_int 246
                                                  pattern (lang_fans.ml[132,5689+66]..[132,5689+69])
                                                    Ppat_constant Const_int 248
                                                pattern (lang_fans.ml[133,5759+67]..[133,5759+70])
                                                  Ppat_constant Const_int 249
                                              pattern (lang_fans.ml[134,5830+68]..[134,5830+71])
                                                Ppat_constant Const_int 250
                                            pattern (lang_fans.ml[136,5972+68]..[136,5972+71])
                                              Ppat_constant Const_int 251
                                          pattern (lang_fans.ml[138,6114+68]..[138,6114+71])
                                            Ppat_constant Const_int 252
                                        pattern (lang_fans.ml[140,6256+68]..[140,6256+71])
                                          Ppat_constant Const_int 253
                                      pattern (lang_fans.ml[142,6398+68]..[142,6398+71])
                                        Ppat_constant Const_int 254
                                    pattern (lang_fans.ml[142,6398+72]..[142,6398+75])
                                      Ppat_constant Const_int 255
                                  expression (lang_fans.ml[143,6474+20]..[143,6474+41])
                                    Pexp_apply
                                    expression (lang_fans.ml[143,6474+20]..[143,6474+38])
                                      Pexp_ident "__ocaml_lex_state5" (lang_fans.ml[143,6474+20]..[143,6474+38])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[143,6474+39]..[143,6474+41])
                                          Pexp_construct "()" (lang_fans.ml[143,6474+39]..[143,6474+41])
                                          None
                                    ]
                                <case>
                                  pattern (lang_fans.ml[144,6516+15]..[144,6516+17])
                                    Ppat_constant Const_int 13
                                  expression (lang_fans.ml[144,6516+21]..[144,6516+42])
                                    Pexp_apply
                                    expression (lang_fans.ml[144,6516+21]..[144,6516+39])
                                      Pexp_ident "__ocaml_lex_state7" (lang_fans.ml[144,6516+21]..[144,6516+39])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[144,6516+40]..[144,6516+42])
                                          Pexp_construct "()" (lang_fans.ml[144,6516+40]..[144,6516+42])
                                          None
                                    ]
                                <case>
                                  pattern (lang_fans.ml[145,6559+15]..[145,6559+18])
                                    Ppat_constant Const_int 256
                                  expression (lang_fans.ml[145,6559+22]..[145,6559+43])
                                    Pexp_apply
                                    expression (lang_fans.ml[145,6559+22]..[145,6559+40])
                                      Pexp_ident "__ocaml_lex_state2" (lang_fans.ml[145,6559+22]..[145,6559+40])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[145,6559+41]..[145,6559+43])
                                          Pexp_construct "()" (lang_fans.ml[145,6559+41]..[145,6559+43])
                                          None
                                    ]
                                <case>
                                  pattern (lang_fans.ml[146,6603+15]..[146,6603+16])
                                    Ppat_any
                                  expression (lang_fans.ml[146,6603+20]..[146,6603+41])
                                    Pexp_apply
                                    expression (lang_fans.ml[146,6603+20]..[146,6603+38])
                                      Pexp_ident "__ocaml_lex_state1" (lang_fans.ml[146,6603+20]..[146,6603+38])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[146,6603+39]..[146,6603+41])
                                          Pexp_construct "()" (lang_fans.ml[146,6603+39]..[146,6603+41])
                                          None
                                    ]
                              ]
                        ]
                    <def>
                      pattern (lang_fans.ml[147,6646+10]..[147,6646+28])
                        Ppat_var "__ocaml_lex_state1" (lang_fans.ml[147,6646+10]..[147,6646+28])
                      expression (lang_fans.ml[147,6646+31]..[147,6646+49])
                        Pexp_function
                        [
                          <case>
                            pattern (lang_fans.ml[147,6646+42]..[147,6646+44])
                              Ppat_construct "()" (lang_fans.ml[147,6646+42]..[147,6646+44])
                              None
                            expression (lang_fans.ml[147,6646+48]..[147,6646+49])
                              Pexp_constant Const_int 7
                        ]
                    <def>
                      pattern (lang_fans.ml[148,6696+10]..[148,6696+28])
                        Ppat_var "__ocaml_lex_state2" (lang_fans.ml[148,6696+10]..[148,6696+28])
                      expression (lang_fans.ml[148,6696+31]..[148,6696+49])
                        Pexp_function
                        [
                          <case>
                            pattern (lang_fans.ml[148,6696+42]..[148,6696+44])
                              Ppat_construct "()" (lang_fans.ml[148,6696+42]..[148,6696+44])
                              None
                            expression (lang_fans.ml[148,6696+48]..[148,6696+49])
                              Pexp_constant Const_int 6
                        ]
                    <def>
                      pattern (lang_fans.ml[149,6746+10]..[149,6746+28])
                        Ppat_var "__ocaml_lex_state3" (lang_fans.ml[149,6746+10]..[149,6746+28])
                      expression (lang_fans.ml[149,6746+31]..[149,6746+49])
                        Pexp_function
                        [
                          <case>
                            pattern (lang_fans.ml[149,6746+42]..[149,6746+44])
                              Ppat_construct "()" (lang_fans.ml[149,6746+42]..[149,6746+44])
                              None
                            expression (lang_fans.ml[149,6746+48]..[149,6746+49])
                              Pexp_constant Const_int 5
                        ]
                    <def>
                      pattern (lang_fans.ml[150,6796+10]..[150,6796+28])
                        Ppat_var "__ocaml_lex_state4" (lang_fans.ml[150,6796+10]..[150,6796+28])
                      expression (lang_fans.ml[151,6827+8]..[356,19761+44])
                        Pexp_function
                        [
                          <case>
                            pattern (lang_fans.ml[152,6844+10]..[152,6844+12])
                              Ppat_construct "()" (lang_fans.ml[152,6844+10]..[152,6844+12])
                              None
                            expression (lang_fans.ml[153,6860+12]..[356,19761+44])
                              Pexp_sequence
                              expression (lang_fans.ml[153,6860+13]..[153,6860+55])
                                Pexp_setfield
                                expression (lang_fans.ml[153,6860+13]..[153,6860+19])
                                  Pexp_ident "lexbuf" (lang_fans.ml[153,6860+13]..[153,6860+19])
                                "lex_last_pos" (lang_fans.ml[153,6860+20]..[153,6860+32])
                                expression (lang_fans.ml[153,6860+36]..[153,6860+55])
                                  Pexp_field
                                  expression (lang_fans.ml[153,6860+36]..[153,6860+42])
                                    Pexp_ident "lexbuf" (lang_fans.ml[153,6860+36]..[153,6860+42])
                                  "lex_curr_pos" (lang_fans.ml[153,6860+43]..[153,6860+55])
                              expression (lang_fans.ml[154,6917+13]..[356,19761+43])
                                Pexp_sequence
                                expression (lang_fans.ml[154,6917+13]..[154,6917+40])
                                  Pexp_setfield
                                  expression (lang_fans.ml[154,6917+13]..[154,6917+19])
                                    Pexp_ident "lexbuf" (lang_fans.ml[154,6917+13]..[154,6917+19])
                                  "lex_last_action" (lang_fans.ml[154,6917+20]..[154,6917+35])
                                  expression (lang_fans.ml[154,6917+39]..[154,6917+40])
                                    Pexp_constant Const_int 4
                                expression (lang_fans.ml[155,6959+13]..[356,19761+43])
                                  Pexp_match
                                  expression (lang_fans.ml[155,6959+20]..[155,6959+44])
                                    Pexp_apply
                                    expression (lang_fans.ml[155,6959+20]..[155,6959+41])
                                      Pexp_ident "__ocaml_lex_next_char" (lang_fans.ml[155,6959+20]..[155,6959+41])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[155,6959+42]..[155,6959+44])
                                          Pexp_construct "()" (lang_fans.ml[155,6959+42]..[155,6959+44])
                                          None
                                    ]
                                  [
                                    <case>
                                      pattern (lang_fans.ml[156,7009+16]..[352,19558+75])
                                        Ppat_or
                                        pattern (lang_fans.ml[156,7009+16]..[352,19558+71])
                                          Ppat_or
                                          pattern (lang_fans.ml[156,7009+16]..[350,19416+71])
                                            Ppat_or
                                            pattern (lang_fans.ml[156,7009+16]..[348,19274+71])
                                              Ppat_or
                                              pattern (lang_fans.ml[156,7009+16]..[346,19132+71])
                                                Ppat_or
                                                pattern (lang_fans.ml[156,7009+16]..[344,18990+71])
                                                  Ppat_or
                                                  pattern (lang_fans.ml[156,7009+16]..[342,18848+71])
                                                    Ppat_or
                                                    pattern (lang_fans.ml[156,7009+16]..[340,18706+71])
                                                      Ppat_or
                                                      pattern (lang_fans.ml[156,7009+16]..[338,18564+71])
                                                        Ppat_or
                                                        pattern (lang_fans.ml[156,7009+16]..[336,18422+71])
                                                          Ppat_or
                                                          pattern (lang_fans.ml[156,7009+16]..[334,18280+71])
                                                            Ppat_or
                                                            pattern (lang_fans.ml[156,7009+16]..[332,18138+71])
                                                              Ppat_or
                                                              pattern (lang_fans.ml[156,7009+16]..[330,17996+71])
                                                                Ppat_or
                                                                pattern (lang_fans.ml[156,7009+16]..[328,17854+71])
                                                                  Ppat_or
                                                                  pattern (lang_fans.ml[156,7009+16]..[326,17712+71])
                                                                    Ppat_or
                                                                    pattern (lang_fans.ml[156,7009+16]..[324,17570+71])
                                                                      Ppat_or
                                                                      pattern (lang_fans.ml[156,7009+16]..[322,17428+71])
Ppat_or
pattern (lang_fans.ml[156,7009+16]..[320,17286+71])
  Ppat_or
  pattern (lang_fans.ml[156,7009+16]..[318,17144+71])
    Ppat_or
    pattern (lang_fans.ml[156,7009+16]..[316,17002+71])
      Ppat_or
      pattern (lang_fans.ml[156,7009+16]..[314,16860+71])
        Ppat_or
        pattern (lang_fans.ml[156,7009+16]..[312,16718+71])
          Ppat_or
          pattern (lang_fans.ml[156,7009+16]..[310,16576+71])
            Ppat_or
            pattern (lang_fans.ml[156,7009+16]..[308,16434+71])
              Ppat_or
              pattern (lang_fans.ml[156,7009+16]..[306,16292+71])
                Ppat_or
                pattern (lang_fans.ml[156,7009+16]..[304,16150+71])
                  Ppat_or
                  pattern (lang_fans.ml[156,7009+16]..[302,16008+71])
                    Ppat_or
                    pattern (lang_fans.ml[156,7009+16]..[300,15866+71])
                      Ppat_or
                      pattern (lang_fans.ml[156,7009+16]..[298,15724+71])
                        Ppat_or
                        pattern (lang_fans.ml[156,7009+16]..[296,15582+71])
                          Ppat_or
                          pattern (lang_fans.ml[156,7009+16]..[294,15440+71])
                            Ppat_or
                            pattern (lang_fans.ml[156,7009+16]..[292,15298+71])
                              Ppat_or
                              pattern (lang_fans.ml[156,7009+16]..[290,15156+71])
                                Ppat_or
                                pattern (lang_fans.ml[156,7009+16]..[288,15014+71])
                                  Ppat_or
                                  pattern (lang_fans.ml[156,7009+16]..[286,14872+71])
                                    Ppat_or
                                    pattern (lang_fans.ml[156,7009+16]..[284,14730+71])
                                      Ppat_or
                                      pattern (lang_fans.ml[156,7009+16]..[282,14588+71])
                                        Ppat_or
                                        pattern (lang_fans.ml[156,7009+16]..[280,14446+71])
                                          Ppat_or
                                          pattern (lang_fans.ml[156,7009+16]..[278,14304+71])
                                            Ppat_or
                                            pattern (lang_fans.ml[156,7009+16]..[276,14162+71])
                                              Ppat_or
                                              pattern (lang_fans.ml[156,7009+16]..[274,14020+71])
                                                Ppat_or
                                                pattern (lang_fans.ml[156,7009+16]..[272,13878+71])
                                                  Ppat_or
                                                  pattern (lang_fans.ml[156,7009+16]..[270,13736+71])
                                                    Ppat_or
                                                    pattern (lang_fans.ml[156,7009+16]..[268,13594+71])
                                                      Ppat_or
                                                      pattern (lang_fans.ml[156,7009+16]..[266,13452+71])
                                                        Ppat_or
                                                        pattern (lang_fans.ml[156,7009+16]..[264,13310+71])
                                                          Ppat_or
                                                          pattern (lang_fans.ml[156,7009+16]..[262,13168+71])
                                                            Ppat_or
                                                            pattern (lang_fans.ml[156,7009+16]..[260,13026+71])
                                                              Ppat_or
                                                              pattern (lang_fans.ml[156,7009+16]..[258,12884+71])
                                                                Ppat_or
                                                                pattern (lang_fans.ml[156,7009+16]..[256,12742+71])
                                                                  Ppat_or
                                                                  pattern (lang_fans.ml[156,7009+16]..[254,12600+71])
                                                                    Ppat_or
                                                                    pattern (lang_fans.ml[156,7009+16]..[252,12458+71])
                                                                      Ppat_or
                                                                      pattern (lang_fans.ml[156,7009+16]..[250,12316+71])
Ppat_or
pattern (lang_fans.ml[156,7009+16]..[248,12174+71])
  Ppat_or
  pattern (lang_fans.ml[156,7009+16]..[246,12032+71])
    Ppat_or
    pattern (lang_fans.ml[156,7009+16]..[244,11890+71])
      Ppat_or
      pattern (lang_fans.ml[156,7009+16]..[242,11748+71])
        Ppat_or
        pattern (lang_fans.ml[156,7009+16]..[240,11606+71])
          Ppat_or
          pattern (lang_fans.ml[156,7009+16]..[238,11464+71])
            Ppat_or
            pattern (lang_fans.ml[156,7009+16]..[236,11322+71])
              Ppat_or
              pattern (lang_fans.ml[156,7009+16]..[234,11180+71])
                Ppat_or
                pattern (lang_fans.ml[156,7009+16]..[232,11038+71])
                  Ppat_or
                  pattern (lang_fans.ml[156,7009+16]..[230,10896+71])
                    Ppat_or
                    pattern (lang_fans.ml[156,7009+16]..[228,10754+71])
                      Ppat_or
                      pattern (lang_fans.ml[156,7009+16]..[226,10612+71])
                        Ppat_or
                        pattern (lang_fans.ml[156,7009+16]..[224,10470+71])
                          Ppat_or
                          pattern (lang_fans.ml[156,7009+16]..[222,10328+71])
                            Ppat_or
                            pattern (lang_fans.ml[156,7009+16]..[220,10186+71])
                              Ppat_or
                              pattern (lang_fans.ml[156,7009+16]..[218,10044+71])
                                Ppat_or
                                pattern (lang_fans.ml[156,7009+16]..[216,9902+71])
                                  Ppat_or
                                  pattern (lang_fans.ml[156,7009+16]..[214,9760+71])
                                    Ppat_or
                                    pattern (lang_fans.ml[156,7009+16]..[212,9618+71])
                                      Ppat_or
                                      pattern (lang_fans.ml[156,7009+16]..[210,9476+71])
                                        Ppat_or
                                        pattern (lang_fans.ml[156,7009+16]..[208,9334+71])
                                          Ppat_or
                                          pattern (lang_fans.ml[156,7009+16]..[207,9263+70])
                                            Ppat_or
                                            pattern (lang_fans.ml[156,7009+16]..[206,9193+69])
                                              Ppat_or
                                              pattern (lang_fans.ml[156,7009+16]..[205,9124+68])
                                                Ppat_or
                                                pattern (lang_fans.ml[156,7009+16]..[204,9056+67])
                                                  Ppat_or
                                                  pattern (lang_fans.ml[156,7009+16]..[203,8989+66])
                                                    Ppat_or
                                                    pattern (lang_fans.ml[156,7009+16]..[202,8923+65])
                                                      Ppat_or
                                                      pattern (lang_fans.ml[156,7009+16]..[201,8858+64])
                                                        Ppat_or
                                                        pattern (lang_fans.ml[156,7009+16]..[200,8794+63])
                                                          Ppat_or
                                                          pattern (lang_fans.ml[156,7009+16]..[199,8731+62])
                                                            Ppat_or
                                                            pattern (lang_fans.ml[156,7009+16]..[198,8669+61])
                                                              Ppat_or
                                                              pattern (lang_fans.ml[156,7009+16]..[197,8608+60])
                                                                Ppat_or
                                                                pattern (lang_fans.ml[156,7009+16]..[196,8549+58])
                                                                  Ppat_or
                                                                  pattern (lang_fans.ml[156,7009+16]..[195,8491+57])
                                                                    Ppat_or
                                                                    pattern (lang_fans.ml[156,7009+16]..[194,8434+56])
                                                                      Ppat_or
                                                                      pattern (lang_fans.ml[156,7009+16]..[193,8378+55])
Ppat_or
pattern (lang_fans.ml[156,7009+16]..[192,8323+54])
  Ppat_or
  pattern (lang_fans.ml[156,7009+16]..[191,8269+53])
    Ppat_or
    pattern (lang_fans.ml[156,7009+16]..[190,8216+52])
      Ppat_or
      pattern (lang_fans.ml[156,7009+16]..[189,8164+51])
        Ppat_or
        pattern (lang_fans.ml[156,7009+16]..[188,8113+50])
          Ppat_or
          pattern (lang_fans.ml[156,7009+16]..[187,8063+49])
            Ppat_or
            pattern (lang_fans.ml[156,7009+16]..[186,8014+48])
              Ppat_or
              pattern (lang_fans.ml[156,7009+16]..[185,7966+47])
                Ppat_or
                pattern (lang_fans.ml[156,7009+16]..[184,7919+46])
                  Ppat_or
                  pattern (lang_fans.ml[156,7009+16]..[183,7873+45])
                    Ppat_or
                    pattern (lang_fans.ml[156,7009+16]..[182,7828+44])
                      Ppat_or
                      pattern (lang_fans.ml[156,7009+16]..[181,7784+43])
                        Ppat_or
                        pattern (lang_fans.ml[156,7009+16]..[180,7741+42])
                          Ppat_or
                          pattern (lang_fans.ml[156,7009+16]..[179,7699+41])
                            Ppat_or
                            pattern (lang_fans.ml[156,7009+16]..[178,7658+40])
                              Ppat_or
                              pattern (lang_fans.ml[156,7009+16]..[177,7618+39])
                                Ppat_or
                                pattern (lang_fans.ml[156,7009+16]..[176,7579+38])
                                  Ppat_or
                                  pattern (lang_fans.ml[156,7009+16]..[175,7541+37])
                                    Ppat_or
                                    pattern (lang_fans.ml[156,7009+16]..[174,7504+36])
                                      Ppat_or
                                      pattern (lang_fans.ml[156,7009+16]..[173,7468+35])
                                        Ppat_or
                                        pattern (lang_fans.ml[156,7009+16]..[172,7433+34])
                                          Ppat_or
                                          pattern (lang_fans.ml[156,7009+16]..[171,7399+33])
                                            Ppat_or
                                            pattern (lang_fans.ml[156,7009+16]..[170,7366+32])
                                              Ppat_or
                                              pattern (lang_fans.ml[156,7009+16]..[169,7334+31])
                                                Ppat_or
                                                pattern (lang_fans.ml[156,7009+16]..[168,7303+30])
                                                  Ppat_or
                                                  pattern (lang_fans.ml[156,7009+16]..[167,7273+29])
                                                    Ppat_or
                                                    pattern (lang_fans.ml[156,7009+16]..[166,7244+28])
                                                      Ppat_or
                                                      pattern (lang_fans.ml[156,7009+16]..[165,7216+27])
                                                        Ppat_or
                                                        pattern (lang_fans.ml[156,7009+16]..[164,7189+26])
                                                          Ppat_or
                                                          pattern (lang_fans.ml[156,7009+16]..[163,7163+25])
                                                            Ppat_or
                                                            pattern (lang_fans.ml[156,7009+16]..[162,7138+24])
                                                              Ppat_or
                                                              pattern (lang_fans.ml[156,7009+16]..[161,7114+23])
                                                                Ppat_or
                                                                pattern (lang_fans.ml[156,7009+16]..[160,7091+22])
                                                                  Ppat_or
                                                                  pattern (lang_fans.ml[156,7009+16]..[159,7069+21])
                                                                    Ppat_or
                                                                    pattern (lang_fans.ml[156,7009+16]..[158,7048+20])
                                                                      Ppat_or
                                                                      pattern (lang_fans.ml[156,7009+16]..[157,7028+19])
Ppat_or
pattern (lang_fans.ml[156,7009+16]..[156,7009+18])
  Ppat_constant Const_int 39
pattern (lang_fans.ml[157,7028+17]..[157,7028+19])
  Ppat_constant Const_int 48
                                                                      pattern (lang_fans.ml[158,7048+18]..[158,7048+20])
Ppat_constant Const_int 49
                                                                    pattern (lang_fans.ml[159,7069+19]..[159,7069+21])
                                                                      Ppat_constant Const_int 50
                                                                  pattern (lang_fans.ml[160,7091+20]..[160,7091+22])
                                                                    Ppat_constant Const_int 51
                                                                pattern (lang_fans.ml[161,7114+21]..[161,7114+23])
                                                                  Ppat_constant Const_int 52
                                                              pattern (lang_fans.ml[162,7138+22]..[162,7138+24])
                                                                Ppat_constant Const_int 53
                                                            pattern (lang_fans.ml[163,7163+23]..[163,7163+25])
                                                              Ppat_constant Const_int 54
                                                          pattern (lang_fans.ml[164,7189+24]..[164,7189+26])
                                                            Ppat_constant Const_int 55
                                                        pattern (lang_fans.ml[165,7216+25]..[165,7216+27])
                                                          Ppat_constant Const_int 56
                                                      pattern (lang_fans.ml[166,7244+26]..[166,7244+28])
                                                        Ppat_constant Const_int 57
                                                    pattern (lang_fans.ml[167,7273+27]..[167,7273+29])
                                                      Ppat_constant Const_int 65
                                                  pattern (lang_fans.ml[168,7303+28]..[168,7303+30])
                                                    Ppat_constant Const_int 66
                                                pattern (lang_fans.ml[169,7334+29]..[169,7334+31])
                                                  Ppat_constant Const_int 67
                                              pattern (lang_fans.ml[170,7366+30]..[170,7366+32])
                                                Ppat_constant Const_int 68
                                            pattern (lang_fans.ml[171,7399+31]..[171,7399+33])
                                              Ppat_constant Const_int 69
                                          pattern (lang_fans.ml[172,7433+32]..[172,7433+34])
                                            Ppat_constant Const_int 70
                                        pattern (lang_fans.ml[173,7468+33]..[173,7468+35])
                                          Ppat_constant Const_int 71
                                      pattern (lang_fans.ml[174,7504+34]..[174,7504+36])
                                        Ppat_constant Const_int 72
                                    pattern (lang_fans.ml[175,7541+35]..[175,7541+37])
                                      Ppat_constant Const_int 73
                                  pattern (lang_fans.ml[176,7579+36]..[176,7579+38])
                                    Ppat_constant Const_int 74
                                pattern (lang_fans.ml[177,7618+37]..[177,7618+39])
                                  Ppat_constant Const_int 75
                              pattern (lang_fans.ml[178,7658+38]..[178,7658+40])
                                Ppat_constant Const_int 76
                            pattern (lang_fans.ml[179,7699+39]..[179,7699+41])
                              Ppat_constant Const_int 77
                          pattern (lang_fans.ml[180,7741+40]..[180,7741+42])
                            Ppat_constant Const_int 78
                        pattern (lang_fans.ml[181,7784+41]..[181,7784+43])
                          Ppat_constant Const_int 79
                      pattern (lang_fans.ml[182,7828+42]..[182,7828+44])
                        Ppat_constant Const_int 80
                    pattern (lang_fans.ml[183,7873+43]..[183,7873+45])
                      Ppat_constant Const_int 81
                  pattern (lang_fans.ml[184,7919+44]..[184,7919+46])
                    Ppat_constant Const_int 82
                pattern (lang_fans.ml[185,7966+45]..[185,7966+47])
                  Ppat_constant Const_int 83
              pattern (lang_fans.ml[186,8014+46]..[186,8014+48])
                Ppat_constant Const_int 84
            pattern (lang_fans.ml[187,8063+47]..[187,8063+49])
              Ppat_constant Const_int 85
          pattern (lang_fans.ml[188,8113+48]..[188,8113+50])
            Ppat_constant Const_int 86
        pattern (lang_fans.ml[189,8164+49]..[189,8164+51])
          Ppat_constant Const_int 87
      pattern (lang_fans.ml[190,8216+50]..[190,8216+52])
        Ppat_constant Const_int 88
    pattern (lang_fans.ml[191,8269+51]..[191,8269+53])
      Ppat_constant Const_int 89
  pattern (lang_fans.ml[192,8323+52]..[192,8323+54])
    Ppat_constant Const_int 90
pattern (lang_fans.ml[193,8378+53]..[193,8378+55])
  Ppat_constant Const_int 95
                                                                      pattern (lang_fans.ml[194,8434+54]..[194,8434+56])
Ppat_constant Const_int 97
                                                                    pattern (lang_fans.ml[195,8491+55]..[195,8491+57])
                                                                      Ppat_constant Const_int 98
                                                                  pattern (lang_fans.ml[196,8549+56]..[196,8549+58])
                                                                    Ppat_constant Const_int 99
                                                                pattern (lang_fans.ml[197,8608+57]..[197,8608+60])
                                                                  Ppat_constant Const_int 100
                                                              pattern (lang_fans.ml[198,8669+58]..[198,8669+61])
                                                                Ppat_constant Const_int 101
                                                            pattern (lang_fans.ml[199,8731+59]..[199,8731+62])
                                                              Ppat_constant Const_int 102
                                                          pattern (lang_fans.ml[200,8794+60]..[200,8794+63])
                                                            Ppat_constant Const_int 103
                                                        pattern (lang_fans.ml[201,8858+61]..[201,8858+64])
                                                          Ppat_constant Const_int 104
                                                      pattern (lang_fans.ml[202,8923+62]..[202,8923+65])
                                                        Ppat_constant Const_int 105
                                                    pattern (lang_fans.ml[203,8989+63]..[203,8989+66])
                                                      Ppat_constant Const_int 106
                                                  pattern (lang_fans.ml[204,9056+64]..[204,9056+67])
                                                    Ppat_constant Const_int 107
                                                pattern (lang_fans.ml[205,9124+65]..[205,9124+68])
                                                  Ppat_constant Const_int 108
                                              pattern (lang_fans.ml[206,9193+66]..[206,9193+69])
                                                Ppat_constant Const_int 109
                                            pattern (lang_fans.ml[207,9263+67]..[207,9263+70])
                                              Ppat_constant Const_int 110
                                          pattern (lang_fans.ml[208,9334+68]..[208,9334+71])
                                            Ppat_constant Const_int 111
                                        pattern (lang_fans.ml[210,9476+68]..[210,9476+71])
                                          Ppat_constant Const_int 112
                                      pattern (lang_fans.ml[212,9618+68]..[212,9618+71])
                                        Ppat_constant Const_int 113
                                    pattern (lang_fans.ml[214,9760+68]..[214,9760+71])
                                      Ppat_constant Const_int 114
                                  pattern (lang_fans.ml[216,9902+68]..[216,9902+71])
                                    Ppat_constant Const_int 115
                                pattern (lang_fans.ml[218,10044+68]..[218,10044+71])
                                  Ppat_constant Const_int 116
                              pattern (lang_fans.ml[220,10186+68]..[220,10186+71])
                                Ppat_constant Const_int 117
                            pattern (lang_fans.ml[222,10328+68]..[222,10328+71])
                              Ppat_constant Const_int 118
                          pattern (lang_fans.ml[224,10470+68]..[224,10470+71])
                            Ppat_constant Const_int 119
                        pattern (lang_fans.ml[226,10612+68]..[226,10612+71])
                          Ppat_constant Const_int 120
                      pattern (lang_fans.ml[228,10754+68]..[228,10754+71])
                        Ppat_constant Const_int 121
                    pattern (lang_fans.ml[230,10896+68]..[230,10896+71])
                      Ppat_constant Const_int 122
                  pattern (lang_fans.ml[232,11038+68]..[232,11038+71])
                    Ppat_constant Const_int 192
                pattern (lang_fans.ml[234,11180+68]..[234,11180+71])
                  Ppat_constant Const_int 193
              pattern (lang_fans.ml[236,11322+68]..[236,11322+71])
                Ppat_constant Const_int 194
            pattern (lang_fans.ml[238,11464+68]..[238,11464+71])
              Ppat_constant Const_int 195
          pattern (lang_fans.ml[240,11606+68]..[240,11606+71])
            Ppat_constant Const_int 196
        pattern (lang_fans.ml[242,11748+68]..[242,11748+71])
          Ppat_constant Const_int 197
      pattern (lang_fans.ml[244,11890+68]..[244,11890+71])
        Ppat_constant Const_int 198
    pattern (lang_fans.ml[246,12032+68]..[246,12032+71])
      Ppat_constant Const_int 199
  pattern (lang_fans.ml[248,12174+68]..[248,12174+71])
    Ppat_constant Const_int 200
pattern (lang_fans.ml[250,12316+68]..[250,12316+71])
  Ppat_constant Const_int 201
                                                                      pattern (lang_fans.ml[252,12458+68]..[252,12458+71])
Ppat_constant Const_int 202
                                                                    pattern (lang_fans.ml[254,12600+68]..[254,12600+71])
                                                                      Ppat_constant Const_int 203
                                                                  pattern (lang_fans.ml[256,12742+68]..[256,12742+71])
                                                                    Ppat_constant Const_int 204
                                                                pattern (lang_fans.ml[258,12884+68]..[258,12884+71])
                                                                  Ppat_constant Const_int 205
                                                              pattern (lang_fans.ml[260,13026+68]..[260,13026+71])
                                                                Ppat_constant Const_int 206
                                                            pattern (lang_fans.ml[262,13168+68]..[262,13168+71])
                                                              Ppat_constant Const_int 207
                                                          pattern (lang_fans.ml[264,13310+68]..[264,13310+71])
                                                            Ppat_constant Const_int 208
                                                        pattern (lang_fans.ml[266,13452+68]..[266,13452+71])
                                                          Ppat_constant Const_int 209
                                                      pattern (lang_fans.ml[268,13594+68]..[268,13594+71])
                                                        Ppat_constant Const_int 210
                                                    pattern (lang_fans.ml[270,13736+68]..[270,13736+71])
                                                      Ppat_constant Const_int 211
                                                  pattern (lang_fans.ml[272,13878+68]..[272,13878+71])
                                                    Ppat_constant Const_int 212
                                                pattern (lang_fans.ml[274,14020+68]..[274,14020+71])
                                                  Ppat_constant Const_int 213
                                              pattern (lang_fans.ml[276,14162+68]..[276,14162+71])
                                                Ppat_constant Const_int 214
                                            pattern (lang_fans.ml[278,14304+68]..[278,14304+71])
                                              Ppat_constant Const_int 216
                                          pattern (lang_fans.ml[280,14446+68]..[280,14446+71])
                                            Ppat_constant Const_int 217
                                        pattern (lang_fans.ml[282,14588+68]..[282,14588+71])
                                          Ppat_constant Const_int 218
                                      pattern (lang_fans.ml[284,14730+68]..[284,14730+71])
                                        Ppat_constant Const_int 219
                                    pattern (lang_fans.ml[286,14872+68]..[286,14872+71])
                                      Ppat_constant Const_int 220
                                  pattern (lang_fans.ml[288,15014+68]..[288,15014+71])
                                    Ppat_constant Const_int 221
                                pattern (lang_fans.ml[290,15156+68]..[290,15156+71])
                                  Ppat_constant Const_int 222
                              pattern (lang_fans.ml[292,15298+68]..[292,15298+71])
                                Ppat_constant Const_int 223
                            pattern (lang_fans.ml[294,15440+68]..[294,15440+71])
                              Ppat_constant Const_int 224
                          pattern (lang_fans.ml[296,15582+68]..[296,15582+71])
                            Ppat_constant Const_int 225
                        pattern (lang_fans.ml[298,15724+68]..[298,15724+71])
                          Ppat_constant Const_int 226
                      pattern (lang_fans.ml[300,15866+68]..[300,15866+71])
                        Ppat_constant Const_int 227
                    pattern (lang_fans.ml[302,16008+68]..[302,16008+71])
                      Ppat_constant Const_int 228
                  pattern (lang_fans.ml[304,16150+68]..[304,16150+71])
                    Ppat_constant Const_int 229
                pattern (lang_fans.ml[306,16292+68]..[306,16292+71])
                  Ppat_constant Const_int 230
              pattern (lang_fans.ml[308,16434+68]..[308,16434+71])
                Ppat_constant Const_int 231
            pattern (lang_fans.ml[310,16576+68]..[310,16576+71])
              Ppat_constant Const_int 232
          pattern (lang_fans.ml[312,16718+68]..[312,16718+71])
            Ppat_constant Const_int 233
        pattern (lang_fans.ml[314,16860+68]..[314,16860+71])
          Ppat_constant Const_int 234
      pattern (lang_fans.ml[316,17002+68]..[316,17002+71])
        Ppat_constant Const_int 235
    pattern (lang_fans.ml[318,17144+68]..[318,17144+71])
      Ppat_constant Const_int 236
  pattern (lang_fans.ml[320,17286+68]..[320,17286+71])
    Ppat_constant Const_int 237
pattern (lang_fans.ml[322,17428+68]..[322,17428+71])
  Ppat_constant Const_int 238
                                                                      pattern (lang_fans.ml[324,17570+68]..[324,17570+71])
Ppat_constant Const_int 239
                                                                    pattern (lang_fans.ml[326,17712+68]..[326,17712+71])
                                                                      Ppat_constant Const_int 240
                                                                  pattern (lang_fans.ml[328,17854+68]..[328,17854+71])
                                                                    Ppat_constant Const_int 241
                                                                pattern (lang_fans.ml[330,17996+68]..[330,17996+71])
                                                                  Ppat_constant Const_int 242
                                                              pattern (lang_fans.ml[332,18138+68]..[332,18138+71])
                                                                Ppat_constant Const_int 243
                                                            pattern (lang_fans.ml[334,18280+68]..[334,18280+71])
                                                              Ppat_constant Const_int 244
                                                          pattern (lang_fans.ml[336,18422+68]..[336,18422+71])
                                                            Ppat_constant Const_int 245
                                                        pattern (lang_fans.ml[338,18564+68]..[338,18564+71])
                                                          Ppat_constant Const_int 246
                                                      pattern (lang_fans.ml[340,18706+68]..[340,18706+71])
                                                        Ppat_constant Const_int 248
                                                    pattern (lang_fans.ml[342,18848+68]..[342,18848+71])
                                                      Ppat_constant Const_int 249
                                                  pattern (lang_fans.ml[344,18990+68]..[344,18990+71])
                                                    Ppat_constant Const_int 250
                                                pattern (lang_fans.ml[346,19132+68]..[346,19132+71])
                                                  Ppat_constant Const_int 251
                                              pattern (lang_fans.ml[348,19274+68]..[348,19274+71])
                                                Ppat_constant Const_int 252
                                            pattern (lang_fans.ml[350,19416+68]..[350,19416+71])
                                              Ppat_constant Const_int 253
                                          pattern (lang_fans.ml[352,19558+68]..[352,19558+71])
                                            Ppat_constant Const_int 254
                                        pattern (lang_fans.ml[352,19558+72]..[352,19558+75])
                                          Ppat_constant Const_int 255
                                      expression (lang_fans.ml[353,19634+21]..[353,19634+42])
                                        Pexp_apply
                                        expression (lang_fans.ml[353,19634+21]..[353,19634+39])
                                          Pexp_ident "__ocaml_lex_state4" (lang_fans.ml[353,19634+21]..[353,19634+39])
                                        [
                                          <label> ""
                                            expression (lang_fans.ml[353,19634+40]..[353,19634+42])
                                              Pexp_construct "()" (lang_fans.ml[353,19634+40]..[353,19634+42])
                                              None
                                        ]
                                    <case>
                                      pattern (lang_fans.ml[354,19677+16]..[354,19677+17])
                                        Ppat_any
                                      expression (lang_fans.ml[355,19698+18]..[356,19761+42])
                                        Pexp_sequence
                                        expression (lang_fans.ml[355,19698+19]..[355,19698+61])
                                          Pexp_setfield
                                          expression (lang_fans.ml[355,19698+19]..[355,19698+25])
                                            Pexp_ident "lexbuf" (lang_fans.ml[355,19698+19]..[355,19698+25])
                                          "lex_curr_pos" (lang_fans.ml[355,19698+26]..[355,19698+38])
                                          expression (lang_fans.ml[355,19698+42]..[355,19698+61])
                                            Pexp_field
                                            expression (lang_fans.ml[355,19698+42]..[355,19698+48])
                                              Pexp_ident "lexbuf" (lang_fans.ml[355,19698+42]..[355,19698+48])
                                            "lex_last_pos" (lang_fans.ml[355,19698+49]..[355,19698+61])
                                        expression (lang_fans.ml[356,19761+19]..[356,19761+41])
                                          Pexp_field
                                          expression (lang_fans.ml[356,19761+19]..[356,19761+25])
                                            Pexp_ident "lexbuf" (lang_fans.ml[356,19761+19]..[356,19761+25])
                                          "lex_last_action" (lang_fans.ml[356,19761+26]..[356,19761+41])
                                  ]
                        ]
                    <def>
                      pattern (lang_fans.ml[357,19806+10]..[357,19806+28])
                        Ppat_var "__ocaml_lex_state5" (lang_fans.ml[357,19806+10]..[357,19806+28])
                      expression (lang_fans.ml[358,19837+8]..[563,32771+44])
                        Pexp_function
                        [
                          <case>
                            pattern (lang_fans.ml[359,19854+10]..[359,19854+12])
                              Ppat_construct "()" (lang_fans.ml[359,19854+10]..[359,19854+12])
                              None
                            expression (lang_fans.ml[360,19870+12]..[563,32771+44])
                              Pexp_sequence
                              expression (lang_fans.ml[360,19870+13]..[360,19870+55])
                                Pexp_setfield
                                expression (lang_fans.ml[360,19870+13]..[360,19870+19])
                                  Pexp_ident "lexbuf" (lang_fans.ml[360,19870+13]..[360,19870+19])
                                "lex_last_pos" (lang_fans.ml[360,19870+20]..[360,19870+32])
                                expression (lang_fans.ml[360,19870+36]..[360,19870+55])
                                  Pexp_field
                                  expression (lang_fans.ml[360,19870+36]..[360,19870+42])
                                    Pexp_ident "lexbuf" (lang_fans.ml[360,19870+36]..[360,19870+42])
                                  "lex_curr_pos" (lang_fans.ml[360,19870+43]..[360,19870+55])
                              expression (lang_fans.ml[361,19927+13]..[563,32771+43])
                                Pexp_sequence
                                expression (lang_fans.ml[361,19927+13]..[361,19927+40])
                                  Pexp_setfield
                                  expression (lang_fans.ml[361,19927+13]..[361,19927+19])
                                    Pexp_ident "lexbuf" (lang_fans.ml[361,19927+13]..[361,19927+19])
                                  "lex_last_action" (lang_fans.ml[361,19927+20]..[361,19927+35])
                                  expression (lang_fans.ml[361,19927+39]..[361,19927+40])
                                    Pexp_constant Const_int 3
                                expression (lang_fans.ml[362,19969+13]..[563,32771+43])
                                  Pexp_match
                                  expression (lang_fans.ml[362,19969+20]..[362,19969+44])
                                    Pexp_apply
                                    expression (lang_fans.ml[362,19969+20]..[362,19969+41])
                                      Pexp_ident "__ocaml_lex_next_char" (lang_fans.ml[362,19969+20]..[362,19969+41])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[362,19969+42]..[362,19969+44])
                                          Pexp_construct "()" (lang_fans.ml[362,19969+42]..[362,19969+44])
                                          None
                                    ]
                                  [
                                    <case>
                                      pattern (lang_fans.ml[363,20019+16]..[559,32568+75])
                                        Ppat_or
                                        pattern (lang_fans.ml[363,20019+16]..[559,32568+71])
                                          Ppat_or
                                          pattern (lang_fans.ml[363,20019+16]..[557,32426+71])
                                            Ppat_or
                                            pattern (lang_fans.ml[363,20019+16]..[555,32284+71])
                                              Ppat_or
                                              pattern (lang_fans.ml[363,20019+16]..[553,32142+71])
                                                Ppat_or
                                                pattern (lang_fans.ml[363,20019+16]..[551,32000+71])
                                                  Ppat_or
                                                  pattern (lang_fans.ml[363,20019+16]..[549,31858+71])
                                                    Ppat_or
                                                    pattern (lang_fans.ml[363,20019+16]..[547,31716+71])
                                                      Ppat_or
                                                      pattern (lang_fans.ml[363,20019+16]..[545,31574+71])
                                                        Ppat_or
                                                        pattern (lang_fans.ml[363,20019+16]..[543,31432+71])
                                                          Ppat_or
                                                          pattern (lang_fans.ml[363,20019+16]..[541,31290+71])
                                                            Ppat_or
                                                            pattern (lang_fans.ml[363,20019+16]..[539,31148+71])
                                                              Ppat_or
                                                              pattern (lang_fans.ml[363,20019+16]..[537,31006+71])
                                                                Ppat_or
                                                                pattern (lang_fans.ml[363,20019+16]..[535,30864+71])
                                                                  Ppat_or
                                                                  pattern (lang_fans.ml[363,20019+16]..[533,30722+71])
                                                                    Ppat_or
                                                                    pattern (lang_fans.ml[363,20019+16]..[531,30580+71])
                                                                      Ppat_or
                                                                      pattern (lang_fans.ml[363,20019+16]..[529,30438+71])
Ppat_or
pattern (lang_fans.ml[363,20019+16]..[527,30296+71])
  Ppat_or
  pattern (lang_fans.ml[363,20019+16]..[525,30154+71])
    Ppat_or
    pattern (lang_fans.ml[363,20019+16]..[523,30012+71])
      Ppat_or
      pattern (lang_fans.ml[363,20019+16]..[521,29870+71])
        Ppat_or
        pattern (lang_fans.ml[363,20019+16]..[519,29728+71])
          Ppat_or
          pattern (lang_fans.ml[363,20019+16]..[517,29586+71])
            Ppat_or
            pattern (lang_fans.ml[363,20019+16]..[515,29444+71])
              Ppat_or
              pattern (lang_fans.ml[363,20019+16]..[513,29302+71])
                Ppat_or
                pattern (lang_fans.ml[363,20019+16]..[511,29160+71])
                  Ppat_or
                  pattern (lang_fans.ml[363,20019+16]..[509,29018+71])
                    Ppat_or
                    pattern (lang_fans.ml[363,20019+16]..[507,28876+71])
                      Ppat_or
                      pattern (lang_fans.ml[363,20019+16]..[505,28734+71])
                        Ppat_or
                        pattern (lang_fans.ml[363,20019+16]..[503,28592+71])
                          Ppat_or
                          pattern (lang_fans.ml[363,20019+16]..[501,28450+71])
                            Ppat_or
                            pattern (lang_fans.ml[363,20019+16]..[499,28308+71])
                              Ppat_or
                              pattern (lang_fans.ml[363,20019+16]..[497,28166+71])
                                Ppat_or
                                pattern (lang_fans.ml[363,20019+16]..[495,28024+71])
                                  Ppat_or
                                  pattern (lang_fans.ml[363,20019+16]..[493,27882+71])
                                    Ppat_or
                                    pattern (lang_fans.ml[363,20019+16]..[491,27740+71])
                                      Ppat_or
                                      pattern (lang_fans.ml[363,20019+16]..[489,27598+71])
                                        Ppat_or
                                        pattern (lang_fans.ml[363,20019+16]..[487,27456+71])
                                          Ppat_or
                                          pattern (lang_fans.ml[363,20019+16]..[485,27314+71])
                                            Ppat_or
                                            pattern (lang_fans.ml[363,20019+16]..[483,27172+71])
                                              Ppat_or
                                              pattern (lang_fans.ml[363,20019+16]..[481,27030+71])
                                                Ppat_or
                                                pattern (lang_fans.ml[363,20019+16]..[479,26888+71])
                                                  Ppat_or
                                                  pattern (lang_fans.ml[363,20019+16]..[477,26746+71])
                                                    Ppat_or
                                                    pattern (lang_fans.ml[363,20019+16]..[475,26604+71])
                                                      Ppat_or
                                                      pattern (lang_fans.ml[363,20019+16]..[473,26462+71])
                                                        Ppat_or
                                                        pattern (lang_fans.ml[363,20019+16]..[471,26320+71])
                                                          Ppat_or
                                                          pattern (lang_fans.ml[363,20019+16]..[469,26178+71])
                                                            Ppat_or
                                                            pattern (lang_fans.ml[363,20019+16]..[467,26036+71])
                                                              Ppat_or
                                                              pattern (lang_fans.ml[363,20019+16]..[465,25894+71])
                                                                Ppat_or
                                                                pattern (lang_fans.ml[363,20019+16]..[463,25752+71])
                                                                  Ppat_or
                                                                  pattern (lang_fans.ml[363,20019+16]..[461,25610+71])
                                                                    Ppat_or
                                                                    pattern (lang_fans.ml[363,20019+16]..[459,25468+71])
                                                                      Ppat_or
                                                                      pattern (lang_fans.ml[363,20019+16]..[457,25326+71])
Ppat_or
pattern (lang_fans.ml[363,20019+16]..[455,25184+71])
  Ppat_or
  pattern (lang_fans.ml[363,20019+16]..[453,25042+71])
    Ppat_or
    pattern (lang_fans.ml[363,20019+16]..[451,24900+71])
      Ppat_or
      pattern (lang_fans.ml[363,20019+16]..[449,24758+71])
        Ppat_or
        pattern (lang_fans.ml[363,20019+16]..[447,24616+71])
          Ppat_or
          pattern (lang_fans.ml[363,20019+16]..[445,24474+71])
            Ppat_or
            pattern (lang_fans.ml[363,20019+16]..[443,24332+71])
              Ppat_or
              pattern (lang_fans.ml[363,20019+16]..[441,24190+71])
                Ppat_or
                pattern (lang_fans.ml[363,20019+16]..[439,24048+71])
                  Ppat_or
                  pattern (lang_fans.ml[363,20019+16]..[437,23906+71])
                    Ppat_or
                    pattern (lang_fans.ml[363,20019+16]..[435,23764+71])
                      Ppat_or
                      pattern (lang_fans.ml[363,20019+16]..[433,23622+71])
                        Ppat_or
                        pattern (lang_fans.ml[363,20019+16]..[431,23480+71])
                          Ppat_or
                          pattern (lang_fans.ml[363,20019+16]..[429,23338+71])
                            Ppat_or
                            pattern (lang_fans.ml[363,20019+16]..[427,23196+71])
                              Ppat_or
                              pattern (lang_fans.ml[363,20019+16]..[425,23054+71])
                                Ppat_or
                                pattern (lang_fans.ml[363,20019+16]..[423,22912+71])
                                  Ppat_or
                                  pattern (lang_fans.ml[363,20019+16]..[421,22770+71])
                                    Ppat_or
                                    pattern (lang_fans.ml[363,20019+16]..[419,22628+71])
                                      Ppat_or
                                      pattern (lang_fans.ml[363,20019+16]..[417,22486+71])
                                        Ppat_or
                                        pattern (lang_fans.ml[363,20019+16]..[415,22344+71])
                                          Ppat_or
                                          pattern (lang_fans.ml[363,20019+16]..[414,22273+70])
                                            Ppat_or
                                            pattern (lang_fans.ml[363,20019+16]..[413,22203+69])
                                              Ppat_or
                                              pattern (lang_fans.ml[363,20019+16]..[412,22134+68])
                                                Ppat_or
                                                pattern (lang_fans.ml[363,20019+16]..[411,22066+67])
                                                  Ppat_or
                                                  pattern (lang_fans.ml[363,20019+16]..[410,21999+66])
                                                    Ppat_or
                                                    pattern (lang_fans.ml[363,20019+16]..[409,21933+65])
                                                      Ppat_or
                                                      pattern (lang_fans.ml[363,20019+16]..[408,21868+64])
                                                        Ppat_or
                                                        pattern (lang_fans.ml[363,20019+16]..[407,21804+63])
                                                          Ppat_or
                                                          pattern (lang_fans.ml[363,20019+16]..[406,21741+62])
                                                            Ppat_or
                                                            pattern (lang_fans.ml[363,20019+16]..[405,21679+61])
                                                              Ppat_or
                                                              pattern (lang_fans.ml[363,20019+16]..[404,21618+60])
                                                                Ppat_or
                                                                pattern (lang_fans.ml[363,20019+16]..[403,21559+58])
                                                                  Ppat_or
                                                                  pattern (lang_fans.ml[363,20019+16]..[402,21501+57])
                                                                    Ppat_or
                                                                    pattern (lang_fans.ml[363,20019+16]..[401,21444+56])
                                                                      Ppat_or
                                                                      pattern (lang_fans.ml[363,20019+16]..[400,21388+55])
Ppat_or
pattern (lang_fans.ml[363,20019+16]..[399,21333+54])
  Ppat_or
  pattern (lang_fans.ml[363,20019+16]..[398,21279+53])
    Ppat_or
    pattern (lang_fans.ml[363,20019+16]..[397,21226+52])
      Ppat_or
      pattern (lang_fans.ml[363,20019+16]..[396,21174+51])
        Ppat_or
        pattern (lang_fans.ml[363,20019+16]..[395,21123+50])
          Ppat_or
          pattern (lang_fans.ml[363,20019+16]..[394,21073+49])
            Ppat_or
            pattern (lang_fans.ml[363,20019+16]..[393,21024+48])
              Ppat_or
              pattern (lang_fans.ml[363,20019+16]..[392,20976+47])
                Ppat_or
                pattern (lang_fans.ml[363,20019+16]..[391,20929+46])
                  Ppat_or
                  pattern (lang_fans.ml[363,20019+16]..[390,20883+45])
                    Ppat_or
                    pattern (lang_fans.ml[363,20019+16]..[389,20838+44])
                      Ppat_or
                      pattern (lang_fans.ml[363,20019+16]..[388,20794+43])
                        Ppat_or
                        pattern (lang_fans.ml[363,20019+16]..[387,20751+42])
                          Ppat_or
                          pattern (lang_fans.ml[363,20019+16]..[386,20709+41])
                            Ppat_or
                            pattern (lang_fans.ml[363,20019+16]..[385,20668+40])
                              Ppat_or
                              pattern (lang_fans.ml[363,20019+16]..[384,20628+39])
                                Ppat_or
                                pattern (lang_fans.ml[363,20019+16]..[383,20589+38])
                                  Ppat_or
                                  pattern (lang_fans.ml[363,20019+16]..[382,20551+37])
                                    Ppat_or
                                    pattern (lang_fans.ml[363,20019+16]..[381,20514+36])
                                      Ppat_or
                                      pattern (lang_fans.ml[363,20019+16]..[380,20478+35])
                                        Ppat_or
                                        pattern (lang_fans.ml[363,20019+16]..[379,20443+34])
                                          Ppat_or
                                          pattern (lang_fans.ml[363,20019+16]..[378,20409+33])
                                            Ppat_or
                                            pattern (lang_fans.ml[363,20019+16]..[377,20376+32])
                                              Ppat_or
                                              pattern (lang_fans.ml[363,20019+16]..[376,20344+31])
                                                Ppat_or
                                                pattern (lang_fans.ml[363,20019+16]..[375,20313+30])
                                                  Ppat_or
                                                  pattern (lang_fans.ml[363,20019+16]..[374,20283+29])
                                                    Ppat_or
                                                    pattern (lang_fans.ml[363,20019+16]..[373,20254+28])
                                                      Ppat_or
                                                      pattern (lang_fans.ml[363,20019+16]..[372,20226+27])
                                                        Ppat_or
                                                        pattern (lang_fans.ml[363,20019+16]..[371,20199+26])
                                                          Ppat_or
                                                          pattern (lang_fans.ml[363,20019+16]..[370,20173+25])
                                                            Ppat_or
                                                            pattern (lang_fans.ml[363,20019+16]..[369,20148+24])
                                                              Ppat_or
                                                              pattern (lang_fans.ml[363,20019+16]..[368,20124+23])
                                                                Ppat_or
                                                                pattern (lang_fans.ml[363,20019+16]..[367,20101+22])
                                                                  Ppat_or
                                                                  pattern (lang_fans.ml[363,20019+16]..[366,20079+21])
                                                                    Ppat_or
                                                                    pattern (lang_fans.ml[363,20019+16]..[365,20058+20])
                                                                      Ppat_or
                                                                      pattern (lang_fans.ml[363,20019+16]..[364,20038+19])
Ppat_or
pattern (lang_fans.ml[363,20019+16]..[363,20019+18])
  Ppat_constant Const_int 39
pattern (lang_fans.ml[364,20038+17]..[364,20038+19])
  Ppat_constant Const_int 48
                                                                      pattern (lang_fans.ml[365,20058+18]..[365,20058+20])
Ppat_constant Const_int 49
                                                                    pattern (lang_fans.ml[366,20079+19]..[366,20079+21])
                                                                      Ppat_constant Const_int 50
                                                                  pattern (lang_fans.ml[367,20101+20]..[367,20101+22])
                                                                    Ppat_constant Const_int 51
                                                                pattern (lang_fans.ml[368,20124+21]..[368,20124+23])
                                                                  Ppat_constant Const_int 52
                                                              pattern (lang_fans.ml[369,20148+22]..[369,20148+24])
                                                                Ppat_constant Const_int 53
                                                            pattern (lang_fans.ml[370,20173+23]..[370,20173+25])
                                                              Ppat_constant Const_int 54
                                                          pattern (lang_fans.ml[371,20199+24]..[371,20199+26])
                                                            Ppat_constant Const_int 55
                                                        pattern (lang_fans.ml[372,20226+25]..[372,20226+27])
                                                          Ppat_constant Const_int 56
                                                      pattern (lang_fans.ml[373,20254+26]..[373,20254+28])
                                                        Ppat_constant Const_int 57
                                                    pattern (lang_fans.ml[374,20283+27]..[374,20283+29])
                                                      Ppat_constant Const_int 65
                                                  pattern (lang_fans.ml[375,20313+28]..[375,20313+30])
                                                    Ppat_constant Const_int 66
                                                pattern (lang_fans.ml[376,20344+29]..[376,20344+31])
                                                  Ppat_constant Const_int 67
                                              pattern (lang_fans.ml[377,20376+30]..[377,20376+32])
                                                Ppat_constant Const_int 68
                                            pattern (lang_fans.ml[378,20409+31]..[378,20409+33])
                                              Ppat_constant Const_int 69
                                          pattern (lang_fans.ml[379,20443+32]..[379,20443+34])
                                            Ppat_constant Const_int 70
                                        pattern (lang_fans.ml[380,20478+33]..[380,20478+35])
                                          Ppat_constant Const_int 71
                                      pattern (lang_fans.ml[381,20514+34]..[381,20514+36])
                                        Ppat_constant Const_int 72
                                    pattern (lang_fans.ml[382,20551+35]..[382,20551+37])
                                      Ppat_constant Const_int 73
                                  pattern (lang_fans.ml[383,20589+36]..[383,20589+38])
                                    Ppat_constant Const_int 74
                                pattern (lang_fans.ml[384,20628+37]..[384,20628+39])
                                  Ppat_constant Const_int 75
                              pattern (lang_fans.ml[385,20668+38]..[385,20668+40])
                                Ppat_constant Const_int 76
                            pattern (lang_fans.ml[386,20709+39]..[386,20709+41])
                              Ppat_constant Const_int 77
                          pattern (lang_fans.ml[387,20751+40]..[387,20751+42])
                            Ppat_constant Const_int 78
                        pattern (lang_fans.ml[388,20794+41]..[388,20794+43])
                          Ppat_constant Const_int 79
                      pattern (lang_fans.ml[389,20838+42]..[389,20838+44])
                        Ppat_constant Const_int 80
                    pattern (lang_fans.ml[390,20883+43]..[390,20883+45])
                      Ppat_constant Const_int 81
                  pattern (lang_fans.ml[391,20929+44]..[391,20929+46])
                    Ppat_constant Const_int 82
                pattern (lang_fans.ml[392,20976+45]..[392,20976+47])
                  Ppat_constant Const_int 83
              pattern (lang_fans.ml[393,21024+46]..[393,21024+48])
                Ppat_constant Const_int 84
            pattern (lang_fans.ml[394,21073+47]..[394,21073+49])
              Ppat_constant Const_int 85
          pattern (lang_fans.ml[395,21123+48]..[395,21123+50])
            Ppat_constant Const_int 86
        pattern (lang_fans.ml[396,21174+49]..[396,21174+51])
          Ppat_constant Const_int 87
      pattern (lang_fans.ml[397,21226+50]..[397,21226+52])
        Ppat_constant Const_int 88
    pattern (lang_fans.ml[398,21279+51]..[398,21279+53])
      Ppat_constant Const_int 89
  pattern (lang_fans.ml[399,21333+52]..[399,21333+54])
    Ppat_constant Const_int 90
pattern (lang_fans.ml[400,21388+53]..[400,21388+55])
  Ppat_constant Const_int 95
                                                                      pattern (lang_fans.ml[401,21444+54]..[401,21444+56])
Ppat_constant Const_int 97
                                                                    pattern (lang_fans.ml[402,21501+55]..[402,21501+57])
                                                                      Ppat_constant Const_int 98
                                                                  pattern (lang_fans.ml[403,21559+56]..[403,21559+58])
                                                                    Ppat_constant Const_int 99
                                                                pattern (lang_fans.ml[404,21618+57]..[404,21618+60])
                                                                  Ppat_constant Const_int 100
                                                              pattern (lang_fans.ml[405,21679+58]..[405,21679+61])
                                                                Ppat_constant Const_int 101
                                                            pattern (lang_fans.ml[406,21741+59]..[406,21741+62])
                                                              Ppat_constant Const_int 102
                                                          pattern (lang_fans.ml[407,21804+60]..[407,21804+63])
                                                            Ppat_constant Const_int 103
                                                        pattern (lang_fans.ml[408,21868+61]..[408,21868+64])
                                                          Ppat_constant Const_int 104
                                                      pattern (lang_fans.ml[409,21933+62]..[409,21933+65])
                                                        Ppat_constant Const_int 105
                                                    pattern (lang_fans.ml[410,21999+63]..[410,21999+66])
                                                      Ppat_constant Const_int 106
                                                  pattern (lang_fans.ml[411,22066+64]..[411,22066+67])
                                                    Ppat_constant Const_int 107
                                                pattern (lang_fans.ml[412,22134+65]..[412,22134+68])
                                                  Ppat_constant Const_int 108
                                              pattern (lang_fans.ml[413,22203+66]..[413,22203+69])
                                                Ppat_constant Const_int 109
                                            pattern (lang_fans.ml[414,22273+67]..[414,22273+70])
                                              Ppat_constant Const_int 110
                                          pattern (lang_fans.ml[415,22344+68]..[415,22344+71])
                                            Ppat_constant Const_int 111
                                        pattern (lang_fans.ml[417,22486+68]..[417,22486+71])
                                          Ppat_constant Const_int 112
                                      pattern (lang_fans.ml[419,22628+68]..[419,22628+71])
                                        Ppat_constant Const_int 113
                                    pattern (lang_fans.ml[421,22770+68]..[421,22770+71])
                                      Ppat_constant Const_int 114
                                  pattern (lang_fans.ml[423,22912+68]..[423,22912+71])
                                    Ppat_constant Const_int 115
                                pattern (lang_fans.ml[425,23054+68]..[425,23054+71])
                                  Ppat_constant Const_int 116
                              pattern (lang_fans.ml[427,23196+68]..[427,23196+71])
                                Ppat_constant Const_int 117
                            pattern (lang_fans.ml[429,23338+68]..[429,23338+71])
                              Ppat_constant Const_int 118
                          pattern (lang_fans.ml[431,23480+68]..[431,23480+71])
                            Ppat_constant Const_int 119
                        pattern (lang_fans.ml[433,23622+68]..[433,23622+71])
                          Ppat_constant Const_int 120
                      pattern (lang_fans.ml[435,23764+68]..[435,23764+71])
                        Ppat_constant Const_int 121
                    pattern (lang_fans.ml[437,23906+68]..[437,23906+71])
                      Ppat_constant Const_int 122
                  pattern (lang_fans.ml[439,24048+68]..[439,24048+71])
                    Ppat_constant Const_int 192
                pattern (lang_fans.ml[441,24190+68]..[441,24190+71])
                  Ppat_constant Const_int 193
              pattern (lang_fans.ml[443,24332+68]..[443,24332+71])
                Ppat_constant Const_int 194
            pattern (lang_fans.ml[445,24474+68]..[445,24474+71])
              Ppat_constant Const_int 195
          pattern (lang_fans.ml[447,24616+68]..[447,24616+71])
            Ppat_constant Const_int 196
        pattern (lang_fans.ml[449,24758+68]..[449,24758+71])
          Ppat_constant Const_int 197
      pattern (lang_fans.ml[451,24900+68]..[451,24900+71])
        Ppat_constant Const_int 198
    pattern (lang_fans.ml[453,25042+68]..[453,25042+71])
      Ppat_constant Const_int 199
  pattern (lang_fans.ml[455,25184+68]..[455,25184+71])
    Ppat_constant Const_int 200
pattern (lang_fans.ml[457,25326+68]..[457,25326+71])
  Ppat_constant Const_int 201
                                                                      pattern (lang_fans.ml[459,25468+68]..[459,25468+71])
Ppat_constant Const_int 202
                                                                    pattern (lang_fans.ml[461,25610+68]..[461,25610+71])
                                                                      Ppat_constant Const_int 203
                                                                  pattern (lang_fans.ml[463,25752+68]..[463,25752+71])
                                                                    Ppat_constant Const_int 204
                                                                pattern (lang_fans.ml[465,25894+68]..[465,25894+71])
                                                                  Ppat_constant Const_int 205
                                                              pattern (lang_fans.ml[467,26036+68]..[467,26036+71])
                                                                Ppat_constant Const_int 206
                                                            pattern (lang_fans.ml[469,26178+68]..[469,26178+71])
                                                              Ppat_constant Const_int 207
                                                          pattern (lang_fans.ml[471,26320+68]..[471,26320+71])
                                                            Ppat_constant Const_int 208
                                                        pattern (lang_fans.ml[473,26462+68]..[473,26462+71])
                                                          Ppat_constant Const_int 209
                                                      pattern (lang_fans.ml[475,26604+68]..[475,26604+71])
                                                        Ppat_constant Const_int 210
                                                    pattern (lang_fans.ml[477,26746+68]..[477,26746+71])
                                                      Ppat_constant Const_int 211
                                                  pattern (lang_fans.ml[479,26888+68]..[479,26888+71])
                                                    Ppat_constant Const_int 212
                                                pattern (lang_fans.ml[481,27030+68]..[481,27030+71])
                                                  Ppat_constant Const_int 213
                                              pattern (lang_fans.ml[483,27172+68]..[483,27172+71])
                                                Ppat_constant Const_int 214
                                            pattern (lang_fans.ml[485,27314+68]..[485,27314+71])
                                              Ppat_constant Const_int 216
                                          pattern (lang_fans.ml[487,27456+68]..[487,27456+71])
                                            Ppat_constant Const_int 217
                                        pattern (lang_fans.ml[489,27598+68]..[489,27598+71])
                                          Ppat_constant Const_int 218
                                      pattern (lang_fans.ml[491,27740+68]..[491,27740+71])
                                        Ppat_constant Const_int 219
                                    pattern (lang_fans.ml[493,27882+68]..[493,27882+71])
                                      Ppat_constant Const_int 220
                                  pattern (lang_fans.ml[495,28024+68]..[495,28024+71])
                                    Ppat_constant Const_int 221
                                pattern (lang_fans.ml[497,28166+68]..[497,28166+71])
                                  Ppat_constant Const_int 222
                              pattern (lang_fans.ml[499,28308+68]..[499,28308+71])
                                Ppat_constant Const_int 223
                            pattern (lang_fans.ml[501,28450+68]..[501,28450+71])
                              Ppat_constant Const_int 224
                          pattern (lang_fans.ml[503,28592+68]..[503,28592+71])
                            Ppat_constant Const_int 225
                        pattern (lang_fans.ml[505,28734+68]..[505,28734+71])
                          Ppat_constant Const_int 226
                      pattern (lang_fans.ml[507,28876+68]..[507,28876+71])
                        Ppat_constant Const_int 227
                    pattern (lang_fans.ml[509,29018+68]..[509,29018+71])
                      Ppat_constant Const_int 228
                  pattern (lang_fans.ml[511,29160+68]..[511,29160+71])
                    Ppat_constant Const_int 229
                pattern (lang_fans.ml[513,29302+68]..[513,29302+71])
                  Ppat_constant Const_int 230
              pattern (lang_fans.ml[515,29444+68]..[515,29444+71])
                Ppat_constant Const_int 231
            pattern (lang_fans.ml[517,29586+68]..[517,29586+71])
              Ppat_constant Const_int 232
          pattern (lang_fans.ml[519,29728+68]..[519,29728+71])
            Ppat_constant Const_int 233
        pattern (lang_fans.ml[521,29870+68]..[521,29870+71])
          Ppat_constant Const_int 234
      pattern (lang_fans.ml[523,30012+68]..[523,30012+71])
        Ppat_constant Const_int 235
    pattern (lang_fans.ml[525,30154+68]..[525,30154+71])
      Ppat_constant Const_int 236
  pattern (lang_fans.ml[527,30296+68]..[527,30296+71])
    Ppat_constant Const_int 237
pattern (lang_fans.ml[529,30438+68]..[529,30438+71])
  Ppat_constant Const_int 238
                                                                      pattern (lang_fans.ml[531,30580+68]..[531,30580+71])
Ppat_constant Const_int 239
                                                                    pattern (lang_fans.ml[533,30722+68]..[533,30722+71])
                                                                      Ppat_constant Const_int 240
                                                                  pattern (lang_fans.ml[535,30864+68]..[535,30864+71])
                                                                    Ppat_constant Const_int 241
                                                                pattern (lang_fans.ml[537,31006+68]..[537,31006+71])
                                                                  Ppat_constant Const_int 242
                                                              pattern (lang_fans.ml[539,31148+68]..[539,31148+71])
                                                                Ppat_constant Const_int 243
                                                            pattern (lang_fans.ml[541,31290+68]..[541,31290+71])
                                                              Ppat_constant Const_int 244
                                                          pattern (lang_fans.ml[543,31432+68]..[543,31432+71])
                                                            Ppat_constant Const_int 245
                                                        pattern (lang_fans.ml[545,31574+68]..[545,31574+71])
                                                          Ppat_constant Const_int 246
                                                      pattern (lang_fans.ml[547,31716+68]..[547,31716+71])
                                                        Ppat_constant Const_int 248
                                                    pattern (lang_fans.ml[549,31858+68]..[549,31858+71])
                                                      Ppat_constant Const_int 249
                                                  pattern (lang_fans.ml[551,32000+68]..[551,32000+71])
                                                    Ppat_constant Const_int 250
                                                pattern (lang_fans.ml[553,32142+68]..[553,32142+71])
                                                  Ppat_constant Const_int 251
                                              pattern (lang_fans.ml[555,32284+68]..[555,32284+71])
                                                Ppat_constant Const_int 252
                                            pattern (lang_fans.ml[557,32426+68]..[557,32426+71])
                                              Ppat_constant Const_int 253
                                          pattern (lang_fans.ml[559,32568+68]..[559,32568+71])
                                            Ppat_constant Const_int 254
                                        pattern (lang_fans.ml[559,32568+72]..[559,32568+75])
                                          Ppat_constant Const_int 255
                                      expression (lang_fans.ml[560,32644+21]..[560,32644+42])
                                        Pexp_apply
                                        expression (lang_fans.ml[560,32644+21]..[560,32644+39])
                                          Pexp_ident "__ocaml_lex_state5" (lang_fans.ml[560,32644+21]..[560,32644+39])
                                        [
                                          <label> ""
                                            expression (lang_fans.ml[560,32644+40]..[560,32644+42])
                                              Pexp_construct "()" (lang_fans.ml[560,32644+40]..[560,32644+42])
                                              None
                                        ]
                                    <case>
                                      pattern (lang_fans.ml[561,32687+16]..[561,32687+17])
                                        Ppat_any
                                      expression (lang_fans.ml[562,32708+18]..[563,32771+42])
                                        Pexp_sequence
                                        expression (lang_fans.ml[562,32708+19]..[562,32708+61])
                                          Pexp_setfield
                                          expression (lang_fans.ml[562,32708+19]..[562,32708+25])
                                            Pexp_ident "lexbuf" (lang_fans.ml[562,32708+19]..[562,32708+25])
                                          "lex_curr_pos" (lang_fans.ml[562,32708+26]..[562,32708+38])
                                          expression (lang_fans.ml[562,32708+42]..[562,32708+61])
                                            Pexp_field
                                            expression (lang_fans.ml[562,32708+42]..[562,32708+48])
                                              Pexp_ident "lexbuf" (lang_fans.ml[562,32708+42]..[562,32708+48])
                                            "lex_last_pos" (lang_fans.ml[562,32708+49]..[562,32708+61])
                                        expression (lang_fans.ml[563,32771+19]..[563,32771+41])
                                          Pexp_field
                                          expression (lang_fans.ml[563,32771+19]..[563,32771+25])
                                            Pexp_ident "lexbuf" (lang_fans.ml[563,32771+19]..[563,32771+25])
                                          "lex_last_action" (lang_fans.ml[563,32771+26]..[563,32771+41])
                                  ]
                        ]
                    <def>
                      pattern (lang_fans.ml[564,32816+10]..[564,32816+28])
                        Ppat_var "__ocaml_lex_state6" (lang_fans.ml[564,32816+10]..[564,32816+28])
                      expression (lang_fans.ml[565,32847+8]..[575,33242+44])
                        Pexp_function
                        [
                          <case>
                            pattern (lang_fans.ml[566,32864+10]..[566,32864+12])
                              Ppat_construct "()" (lang_fans.ml[566,32864+10]..[566,32864+12])
                              None
                            expression (lang_fans.ml[567,32880+12]..[575,33242+44])
                              Pexp_sequence
                              expression (lang_fans.ml[567,32880+13]..[567,32880+55])
                                Pexp_setfield
                                expression (lang_fans.ml[567,32880+13]..[567,32880+19])
                                  Pexp_ident "lexbuf" (lang_fans.ml[567,32880+13]..[567,32880+19])
                                "lex_last_pos" (lang_fans.ml[567,32880+20]..[567,32880+32])
                                expression (lang_fans.ml[567,32880+36]..[567,32880+55])
                                  Pexp_field
                                  expression (lang_fans.ml[567,32880+36]..[567,32880+42])
                                    Pexp_ident "lexbuf" (lang_fans.ml[567,32880+36]..[567,32880+42])
                                  "lex_curr_pos" (lang_fans.ml[567,32880+43]..[567,32880+55])
                              expression (lang_fans.ml[568,32937+13]..[575,33242+43])
                                Pexp_sequence
                                expression (lang_fans.ml[568,32937+13]..[568,32937+40])
                                  Pexp_setfield
                                  expression (lang_fans.ml[568,32937+13]..[568,32937+19])
                                    Pexp_ident "lexbuf" (lang_fans.ml[568,32937+13]..[568,32937+19])
                                  "lex_last_action" (lang_fans.ml[568,32937+20]..[568,32937+35])
                                  expression (lang_fans.ml[568,32937+39]..[568,32937+40])
                                    Pexp_constant Const_int 5
                                expression (lang_fans.ml[569,32979+13]..[575,33242+43])
                                  Pexp_match
                                  expression (lang_fans.ml[569,32979+20]..[569,32979+44])
                                    Pexp_apply
                                    expression (lang_fans.ml[569,32979+20]..[569,32979+41])
                                      Pexp_ident "__ocaml_lex_next_char" (lang_fans.ml[569,32979+20]..[569,32979+41])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[569,32979+42]..[569,32979+44])
                                          Pexp_construct "()" (lang_fans.ml[569,32979+42]..[569,32979+44])
                                          None
                                    ]
                                  [
                                    <case>
                                      pattern (lang_fans.ml[570,33029+16]..[570,33029+18])
                                        Ppat_constant Const_int 42
                                      expression (lang_fans.ml[571,33051+18]..[572,33115+42])
                                        Pexp_sequence
                                        expression (lang_fans.ml[571,33051+19]..[571,33051+62])
                                          Pexp_apply
                                          expression (lang_fans.ml[571,33051+19]..[571,33051+62]) ghost
                                            Pexp_ident "Array.set" (lang_fans.ml[571,33051+19]..[571,33051+62]) ghost
                                          [
                                            <label> ""
                                              expression (lang_fans.ml[571,33051+19]..[571,33051+35])
                                                Pexp_field
                                                expression (lang_fans.ml[571,33051+20]..[571,33051+26])
                                                  Pexp_ident "lexbuf" (lang_fans.ml[571,33051+20]..[571,33051+26])
                                                "lex_mem" (lang_fans.ml[571,33051+27]..[571,33051+34])
                                            <label> ""
                                              expression (lang_fans.ml[571,33051+37]..[571,33051+38])
                                                Pexp_constant Const_int 1
                                            <label> ""
                                              expression (lang_fans.ml[571,33051+43]..[571,33051+62])
                                                Pexp_field
                                                expression (lang_fans.ml[571,33051+43]..[571,33051+49])
                                                  Pexp_ident "lexbuf" (lang_fans.ml[571,33051+43]..[571,33051+49])
                                                "lex_curr_pos" (lang_fans.ml[571,33051+50]..[571,33051+62])
                                          ]
                                        expression (lang_fans.ml[572,33115+19]..[572,33115+41])
                                          Pexp_apply
                                          expression (lang_fans.ml[572,33115+19]..[572,33115+38])
                                            Pexp_ident "__ocaml_lex_state10" (lang_fans.ml[572,33115+19]..[572,33115+38])
                                          [
                                            <label> ""
                                              expression (lang_fans.ml[572,33115+39]..[572,33115+41])
                                                Pexp_construct "()" (lang_fans.ml[572,33115+39]..[572,33115+41])
                                                None
                                          ]
                                    <case>
                                      pattern (lang_fans.ml[573,33158+16]..[573,33158+17])
                                        Ppat_any
                                      expression (lang_fans.ml[574,33179+18]..[575,33242+42])
                                        Pexp_sequence
                                        expression (lang_fans.ml[574,33179+19]..[574,33179+61])
                                          Pexp_setfield
                                          expression (lang_fans.ml[574,33179+19]..[574,33179+25])
                                            Pexp_ident "lexbuf" (lang_fans.ml[574,33179+19]..[574,33179+25])
                                          "lex_curr_pos" (lang_fans.ml[574,33179+26]..[574,33179+38])
                                          expression (lang_fans.ml[574,33179+42]..[574,33179+61])
                                            Pexp_field
                                            expression (lang_fans.ml[574,33179+42]..[574,33179+48])
                                              Pexp_ident "lexbuf" (lang_fans.ml[574,33179+42]..[574,33179+48])
                                            "lex_last_pos" (lang_fans.ml[574,33179+49]..[574,33179+61])
                                        expression (lang_fans.ml[575,33242+19]..[575,33242+41])
                                          Pexp_field
                                          expression (lang_fans.ml[575,33242+19]..[575,33242+25])
                                            Pexp_ident "lexbuf" (lang_fans.ml[575,33242+19]..[575,33242+25])
                                          "lex_last_action" (lang_fans.ml[575,33242+26]..[575,33242+41])
                                  ]
                        ]
                    <def>
                      pattern (lang_fans.ml[576,33287+10]..[576,33287+28])
                        Ppat_var "__ocaml_lex_state7" (lang_fans.ml[576,33287+10]..[576,33287+28])
                      expression (lang_fans.ml[577,33318+8]..[585,33628+44])
                        Pexp_function
                        [
                          <case>
                            pattern (lang_fans.ml[578,33335+10]..[578,33335+12])
                              Ppat_construct "()" (lang_fans.ml[578,33335+10]..[578,33335+12])
                              None
                            expression (lang_fans.ml[579,33351+12]..[585,33628+44])
                              Pexp_sequence
                              expression (lang_fans.ml[579,33351+13]..[579,33351+55])
                                Pexp_setfield
                                expression (lang_fans.ml[579,33351+13]..[579,33351+19])
                                  Pexp_ident "lexbuf" (lang_fans.ml[579,33351+13]..[579,33351+19])
                                "lex_last_pos" (lang_fans.ml[579,33351+20]..[579,33351+32])
                                expression (lang_fans.ml[579,33351+36]..[579,33351+55])
                                  Pexp_field
                                  expression (lang_fans.ml[579,33351+36]..[579,33351+42])
                                    Pexp_ident "lexbuf" (lang_fans.ml[579,33351+36]..[579,33351+42])
                                  "lex_curr_pos" (lang_fans.ml[579,33351+43]..[579,33351+55])
                              expression (lang_fans.ml[580,33408+13]..[585,33628+43])
                                Pexp_sequence
                                expression (lang_fans.ml[580,33408+13]..[580,33408+40])
                                  Pexp_setfield
                                  expression (lang_fans.ml[580,33408+13]..[580,33408+19])
                                    Pexp_ident "lexbuf" (lang_fans.ml[580,33408+13]..[580,33408+19])
                                  "lex_last_action" (lang_fans.ml[580,33408+20]..[580,33408+35])
                                  expression (lang_fans.ml[580,33408+39]..[580,33408+40])
                                    Pexp_constant Const_int 1
                                expression (lang_fans.ml[581,33450+13]..[585,33628+43])
                                  Pexp_match
                                  expression (lang_fans.ml[581,33450+20]..[581,33450+44])
                                    Pexp_apply
                                    expression (lang_fans.ml[581,33450+20]..[581,33450+41])
                                      Pexp_ident "__ocaml_lex_next_char" (lang_fans.ml[581,33450+20]..[581,33450+41])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[581,33450+42]..[581,33450+44])
                                          Pexp_construct "()" (lang_fans.ml[581,33450+42]..[581,33450+44])
                                          None
                                    ]
                                  [
                                    <case>
                                      pattern (lang_fans.ml[582,33500+16]..[582,33500+18])
                                        Ppat_constant Const_int 10
                                      expression (lang_fans.ml[582,33500+22]..[582,33500+43])
                                        Pexp_apply
                                        expression (lang_fans.ml[582,33500+22]..[582,33500+40])
                                          Pexp_ident "__ocaml_lex_state8" (lang_fans.ml[582,33500+22]..[582,33500+40])
                                        [
                                          <label> ""
                                            expression (lang_fans.ml[582,33500+41]..[582,33500+43])
                                              Pexp_construct "()" (lang_fans.ml[582,33500+41]..[582,33500+43])
                                              None
                                        ]
                                    <case>
                                      pattern (lang_fans.ml[583,33544+16]..[583,33544+17])
                                        Ppat_any
                                      expression (lang_fans.ml[584,33565+18]..[585,33628+42])
                                        Pexp_sequence
                                        expression (lang_fans.ml[584,33565+19]..[584,33565+61])
                                          Pexp_setfield
                                          expression (lang_fans.ml[584,33565+19]..[584,33565+25])
                                            Pexp_ident "lexbuf" (lang_fans.ml[584,33565+19]..[584,33565+25])
                                          "lex_curr_pos" (lang_fans.ml[584,33565+26]..[584,33565+38])
                                          expression (lang_fans.ml[584,33565+42]..[584,33565+61])
                                            Pexp_field
                                            expression (lang_fans.ml[584,33565+42]..[584,33565+48])
                                              Pexp_ident "lexbuf" (lang_fans.ml[584,33565+42]..[584,33565+48])
                                            "lex_last_pos" (lang_fans.ml[584,33565+49]..[584,33565+61])
                                        expression (lang_fans.ml[585,33628+19]..[585,33628+41])
                                          Pexp_field
                                          expression (lang_fans.ml[585,33628+19]..[585,33628+25])
                                            Pexp_ident "lexbuf" (lang_fans.ml[585,33628+19]..[585,33628+25])
                                          "lex_last_action" (lang_fans.ml[585,33628+26]..[585,33628+41])
                                  ]
                        ]
                    <def>
                      pattern (lang_fans.ml[586,33673+10]..[586,33673+28])
                        Ppat_var "__ocaml_lex_state8" (lang_fans.ml[586,33673+10]..[586,33673+28])
                      expression (lang_fans.ml[586,33673+31]..[586,33673+49])
                        Pexp_function
                        [
                          <case>
                            pattern (lang_fans.ml[586,33673+42]..[586,33673+44])
                              Ppat_construct "()" (lang_fans.ml[586,33673+42]..[586,33673+44])
                              None
                            expression (lang_fans.ml[586,33673+48]..[586,33673+49])
                              Pexp_constant Const_int 1
                        ]
                    <def>
                      pattern (lang_fans.ml[587,33723+10]..[587,33723+28])
                        Ppat_var "__ocaml_lex_state9" (lang_fans.ml[587,33723+10]..[587,33723+28])
                      expression (lang_fans.ml[588,33754+8]..[596,34069+44])
                        Pexp_function
                        [
                          <case>
                            pattern (lang_fans.ml[589,33771+10]..[589,33771+12])
                              Ppat_construct "()" (lang_fans.ml[589,33771+10]..[589,33771+12])
                              None
                            expression (lang_fans.ml[590,33787+12]..[596,34069+44])
                              Pexp_sequence
                              expression (lang_fans.ml[590,33787+13]..[590,33787+55])
                                Pexp_setfield
                                expression (lang_fans.ml[590,33787+13]..[590,33787+19])
                                  Pexp_ident "lexbuf" (lang_fans.ml[590,33787+13]..[590,33787+19])
                                "lex_last_pos" (lang_fans.ml[590,33787+20]..[590,33787+32])
                                expression (lang_fans.ml[590,33787+36]..[590,33787+55])
                                  Pexp_field
                                  expression (lang_fans.ml[590,33787+36]..[590,33787+42])
                                    Pexp_ident "lexbuf" (lang_fans.ml[590,33787+36]..[590,33787+42])
                                  "lex_curr_pos" (lang_fans.ml[590,33787+43]..[590,33787+55])
                              expression (lang_fans.ml[591,33844+13]..[596,34069+43])
                                Pexp_sequence
                                expression (lang_fans.ml[591,33844+13]..[591,33844+40])
                                  Pexp_setfield
                                  expression (lang_fans.ml[591,33844+13]..[591,33844+19])
                                    Pexp_ident "lexbuf" (lang_fans.ml[591,33844+13]..[591,33844+19])
                                  "lex_last_action" (lang_fans.ml[591,33844+20]..[591,33844+35])
                                  expression (lang_fans.ml[591,33844+39]..[591,33844+40])
                                    Pexp_constant Const_int 0
                                expression (lang_fans.ml[592,33886+13]..[596,34069+43])
                                  Pexp_match
                                  expression (lang_fans.ml[592,33886+20]..[592,33886+44])
                                    Pexp_apply
                                    expression (lang_fans.ml[592,33886+20]..[592,33886+41])
                                      Pexp_ident "__ocaml_lex_next_char" (lang_fans.ml[592,33886+20]..[592,33886+41])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[592,33886+42]..[592,33886+44])
                                          Pexp_construct "()" (lang_fans.ml[592,33886+42]..[592,33886+44])
                                          None
                                    ]
                                  [
                                    <case>
                                      pattern (lang_fans.ml[593,33936+16]..[593,33936+23])
                                        Ppat_or
                                        pattern (lang_fans.ml[593,33936+16]..[593,33936+20])
                                          Ppat_or
                                          pattern (lang_fans.ml[593,33936+16]..[593,33936+17])
                                            Ppat_constant Const_int 9
                                          pattern (lang_fans.ml[593,33936+18]..[593,33936+20])
                                            Ppat_constant Const_int 12
                                        pattern (lang_fans.ml[593,33936+21]..[593,33936+23])
                                          Ppat_constant Const_int 32
                                      expression (lang_fans.ml[593,33936+27]..[593,33936+48])
                                        Pexp_apply
                                        expression (lang_fans.ml[593,33936+27]..[593,33936+45])
                                          Pexp_ident "__ocaml_lex_state9" (lang_fans.ml[593,33936+27]..[593,33936+45])
                                        [
                                          <label> ""
                                            expression (lang_fans.ml[593,33936+46]..[593,33936+48])
                                              Pexp_construct "()" (lang_fans.ml[593,33936+46]..[593,33936+48])
                                              None
                                        ]
                                    <case>
                                      pattern (lang_fans.ml[594,33985+16]..[594,33985+17])
                                        Ppat_any
                                      expression (lang_fans.ml[595,34006+18]..[596,34069+42])
                                        Pexp_sequence
                                        expression (lang_fans.ml[595,34006+19]..[595,34006+61])
                                          Pexp_setfield
                                          expression (lang_fans.ml[595,34006+19]..[595,34006+25])
                                            Pexp_ident "lexbuf" (lang_fans.ml[595,34006+19]..[595,34006+25])
                                          "lex_curr_pos" (lang_fans.ml[595,34006+26]..[595,34006+38])
                                          expression (lang_fans.ml[595,34006+42]..[595,34006+61])
                                            Pexp_field
                                            expression (lang_fans.ml[595,34006+42]..[595,34006+48])
                                              Pexp_ident "lexbuf" (lang_fans.ml[595,34006+42]..[595,34006+48])
                                            "lex_last_pos" (lang_fans.ml[595,34006+49]..[595,34006+61])
                                        expression (lang_fans.ml[596,34069+19]..[596,34069+41])
                                          Pexp_field
                                          expression (lang_fans.ml[596,34069+19]..[596,34069+25])
                                            Pexp_ident "lexbuf" (lang_fans.ml[596,34069+19]..[596,34069+25])
                                          "lex_last_action" (lang_fans.ml[596,34069+26]..[596,34069+41])
                                  ]
                        ]
                    <def>
                      pattern (lang_fans.ml[597,34114+10]..[597,34114+29])
                        Ppat_var "__ocaml_lex_state10" (lang_fans.ml[597,34114+10]..[597,34114+29])
                      expression (lang_fans.ml[598,34146+8]..[607,34500+44])
                        Pexp_function
                        [
                          <case>
                            pattern (lang_fans.ml[599,34163+10]..[599,34163+12])
                              Ppat_construct "()" (lang_fans.ml[599,34163+10]..[599,34163+12])
                              None
                            expression (lang_fans.ml[600,34179+12]..[607,34500+44])
                              Pexp_sequence
                              expression (lang_fans.ml[600,34179+13]..[600,34179+41])
                                Pexp_apply
                                expression (lang_fans.ml[600,34179+13]..[600,34179+41]) ghost
                                  Pexp_ident "Array.set" (lang_fans.ml[600,34179+13]..[600,34179+41]) ghost
                                [
                                  <label> ""
                                    expression (lang_fans.ml[600,34179+13]..[600,34179+29])
                                      Pexp_field
                                      expression (lang_fans.ml[600,34179+14]..[600,34179+20])
                                        Pexp_ident "lexbuf" (lang_fans.ml[600,34179+14]..[600,34179+20])
                                      "lex_mem" (lang_fans.ml[600,34179+21]..[600,34179+28])
                                  <label> ""
                                    expression (lang_fans.ml[600,34179+31]..[600,34179+32])
                                      Pexp_constant Const_int 0
                                  <label> ""
                                    expression (lang_fans.ml[600,34179+37]..[600,34179+41])
                                      Pexp_constant Const_int -1
                                ]
                              expression (lang_fans.ml[601,34222+13]..[607,34500+43])
                                Pexp_sequence
                                expression (lang_fans.ml[601,34222+13]..[601,34222+55])
                                  Pexp_setfield
                                  expression (lang_fans.ml[601,34222+13]..[601,34222+19])
                                    Pexp_ident "lexbuf" (lang_fans.ml[601,34222+13]..[601,34222+19])
                                  "lex_last_pos" (lang_fans.ml[601,34222+20]..[601,34222+32])
                                  expression (lang_fans.ml[601,34222+36]..[601,34222+55])
                                    Pexp_field
                                    expression (lang_fans.ml[601,34222+36]..[601,34222+42])
                                      Pexp_ident "lexbuf" (lang_fans.ml[601,34222+36]..[601,34222+42])
                                    "lex_curr_pos" (lang_fans.ml[601,34222+43]..[601,34222+55])
                                expression (lang_fans.ml[602,34279+13]..[607,34500+43])
                                  Pexp_sequence
                                  expression (lang_fans.ml[602,34279+13]..[602,34279+40])
                                    Pexp_setfield
                                    expression (lang_fans.ml[602,34279+13]..[602,34279+19])
                                      Pexp_ident "lexbuf" (lang_fans.ml[602,34279+13]..[602,34279+19])
                                    "lex_last_action" (lang_fans.ml[602,34279+20]..[602,34279+35])
                                    expression (lang_fans.ml[602,34279+39]..[602,34279+40])
                                      Pexp_constant Const_int 2
                                  expression (lang_fans.ml[603,34321+13]..[607,34500+43])
                                    Pexp_match
                                    expression (lang_fans.ml[603,34321+20]..[603,34321+44])
                                      Pexp_apply
                                      expression (lang_fans.ml[603,34321+20]..[603,34321+41])
                                        Pexp_ident "__ocaml_lex_next_char" (lang_fans.ml[603,34321+20]..[603,34321+41])
                                      [
                                        <label> ""
                                          expression (lang_fans.ml[603,34321+42]..[603,34321+44])
                                            Pexp_construct "()" (lang_fans.ml[603,34321+42]..[603,34321+44])
                                            None
                                      ]
                                    [
                                      <case>
                                        pattern (lang_fans.ml[604,34371+16]..[604,34371+18])
                                          Ppat_constant Const_int 41
                                        expression (lang_fans.ml[604,34371+22]..[604,34371+44])
                                          Pexp_apply
                                          expression (lang_fans.ml[604,34371+22]..[604,34371+41])
                                            Pexp_ident "__ocaml_lex_state11" (lang_fans.ml[604,34371+22]..[604,34371+41])
                                          [
                                            <label> ""
                                              expression (lang_fans.ml[604,34371+42]..[604,34371+44])
                                                Pexp_construct "()" (lang_fans.ml[604,34371+42]..[604,34371+44])
                                                None
                                          ]
                                      <case>
                                        pattern (lang_fans.ml[605,34416+16]..[605,34416+17])
                                          Ppat_any
                                        expression (lang_fans.ml[606,34437+18]..[607,34500+42])
                                          Pexp_sequence
                                          expression (lang_fans.ml[606,34437+19]..[606,34437+61])
                                            Pexp_setfield
                                            expression (lang_fans.ml[606,34437+19]..[606,34437+25])
                                              Pexp_ident "lexbuf" (lang_fans.ml[606,34437+19]..[606,34437+25])
                                            "lex_curr_pos" (lang_fans.ml[606,34437+26]..[606,34437+38])
                                            expression (lang_fans.ml[606,34437+42]..[606,34437+61])
                                              Pexp_field
                                              expression (lang_fans.ml[606,34437+42]..[606,34437+48])
                                                Pexp_ident "lexbuf" (lang_fans.ml[606,34437+42]..[606,34437+48])
                                              "lex_last_pos" (lang_fans.ml[606,34437+49]..[606,34437+61])
                                          expression (lang_fans.ml[607,34500+19]..[607,34500+41])
                                            Pexp_field
                                            expression (lang_fans.ml[607,34500+19]..[607,34500+25])
                                              Pexp_ident "lexbuf" (lang_fans.ml[607,34500+19]..[607,34500+25])
                                            "lex_last_action" (lang_fans.ml[607,34500+26]..[607,34500+41])
                                    ]
                        ]
                    <def>
                      pattern (lang_fans.ml[608,34545+10]..[608,34545+29])
                        Ppat_var "__ocaml_lex_state11" (lang_fans.ml[608,34545+10]..[608,34545+29])
                      expression (lang_fans.ml[609,34577+8]..[609,34577+74])
                        Pexp_function
                        [
                          <case>
                            pattern (lang_fans.ml[609,34577+19]..[609,34577+21])
                              Ppat_construct "()" (lang_fans.ml[609,34577+19]..[609,34577+21])
                              None
                            expression (lang_fans.ml[609,34577+25]..[609,34577+74])
                              Pexp_sequence
                              expression (lang_fans.ml[609,34577+26]..[609,34577+70])
                                Pexp_apply
                                expression (lang_fans.ml[609,34577+26]..[609,34577+70]) ghost
                                  Pexp_ident "Array.set" (lang_fans.ml[609,34577+26]..[609,34577+70]) ghost
                                [
                                  <label> ""
                                    expression (lang_fans.ml[609,34577+26]..[609,34577+42])
                                      Pexp_field
                                      expression (lang_fans.ml[609,34577+27]..[609,34577+33])
                                        Pexp_ident "lexbuf" (lang_fans.ml[609,34577+27]..[609,34577+33])
                                      "lex_mem" (lang_fans.ml[609,34577+34]..[609,34577+41])
                                  <label> ""
                                    expression (lang_fans.ml[609,34577+44]..[609,34577+45])
                                      Pexp_constant Const_int 0
                                  <label> ""
                                    expression (lang_fans.ml[609,34577+50]..[609,34577+70])
                                      Pexp_apply
                                      expression (lang_fans.ml[609,34577+50]..[609,34577+70]) ghost
                                        Pexp_ident "Array.get" (lang_fans.ml[609,34577+50]..[609,34577+70]) ghost
                                      [
                                        <label> ""
                                          expression (lang_fans.ml[609,34577+50]..[609,34577+66])
                                            Pexp_field
                                            expression (lang_fans.ml[609,34577+51]..[609,34577+57])
                                              Pexp_ident "lexbuf" (lang_fans.ml[609,34577+51]..[609,34577+57])
                                            "lex_mem" (lang_fans.ml[609,34577+58]..[609,34577+65])
                                        <label> ""
                                          expression (lang_fans.ml[609,34577+68]..[609,34577+69])
                                            Pexp_constant Const_int 1
                                      ]
                                ]
                              expression (lang_fans.ml[609,34577+72]..[609,34577+73])
                                Pexp_constant Const_int 2
                        ]
                  ]
                  expression (lang_fans.ml[610,34655+6]..[717,38453+76])
                    Pexp_sequence
                    expression (lang_fans.ml[610,34655+7]..[614,34814+46])
                      Pexp_sequence
                      expression (lang_fans.ml[610,34655+8]..[613,34772+40])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lang_fans.ml[610,34655+13]..[610,34655+16])
                              Ppat_var "pos" (lang_fans.ml[610,34655+13]..[610,34655+16])
                            expression (lang_fans.ml[610,34655+19]..[610,34655+38])
                              Pexp_field
                              expression (lang_fans.ml[610,34655+19]..[610,34655+25])
                                Pexp_ident "lexbuf" (lang_fans.ml[610,34655+19]..[610,34655+25])
                              "lex_curr_pos" (lang_fans.ml[610,34655+26]..[610,34655+38])
                        ]
                        expression (lang_fans.ml[611,34697+9]..[613,34772+39])
                          Pexp_sequence
                          expression (lang_fans.ml[611,34697+9]..[611,34697+36])
                            Pexp_setfield
                            expression (lang_fans.ml[611,34697+9]..[611,34697+15])
                              Pexp_ident "lexbuf" (lang_fans.ml[611,34697+9]..[611,34697+15])
                            "lex_start_pos" (lang_fans.ml[611,34697+16]..[611,34697+29])
                            expression (lang_fans.ml[611,34697+33]..[611,34697+36])
                              Pexp_ident "pos" (lang_fans.ml[611,34697+33]..[611,34697+36])
                          expression (lang_fans.ml[612,34735+9]..[613,34772+39])
                            Pexp_sequence
                            expression (lang_fans.ml[612,34735+9]..[612,34735+35])
                              Pexp_setfield
                              expression (lang_fans.ml[612,34735+9]..[612,34735+15])
                                Pexp_ident "lexbuf" (lang_fans.ml[612,34735+9]..[612,34735+15])
                              "lex_last_pos" (lang_fans.ml[612,34735+16]..[612,34735+28])
                              expression (lang_fans.ml[612,34735+32]..[612,34735+35])
                                Pexp_ident "pos" (lang_fans.ml[612,34735+32]..[612,34735+35])
                            expression (lang_fans.ml[613,34772+9]..[613,34772+39])
                              Pexp_setfield
                              expression (lang_fans.ml[613,34772+9]..[613,34772+15])
                                Pexp_ident "lexbuf" (lang_fans.ml[613,34772+9]..[613,34772+15])
                              "lex_last_action" (lang_fans.ml[613,34772+16]..[613,34772+31])
                              expression (lang_fans.ml[613,34772+35]..[613,34772+39])
                                Pexp_constant Const_int -1
                      expression (lang_fans.ml[614,34814+8]..[614,34814+45])
                        Pexp_setfield
                        expression (lang_fans.ml[614,34814+8]..[614,34814+14])
                          Pexp_ident "lexbuf" (lang_fans.ml[614,34814+8]..[614,34814+14])
                        "lex_mem" (lang_fans.ml[614,34814+15]..[614,34814+22])
                        expression (lang_fans.ml[614,34814+26]..[614,34814+45])
                          Pexp_apply
                          expression (lang_fans.ml[614,34814+26]..[614,34814+38])
                            Pexp_ident "Array.create" (lang_fans.ml[614,34814+26]..[614,34814+38])
                          [
                            <label> ""
                              expression (lang_fans.ml[614,34814+39]..[614,34814+40])
                                Pexp_constant Const_int 2
                            <label> ""
                              expression (lang_fans.ml[614,34814+41]..[614,34814+45])
                                Pexp_constant Const_int -1
                          ]
                    expression (lang_fans.ml[615,34862+7]..[717,38453+75])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lang_fans.ml[615,34862+12]..[615,34862+30])
                            Ppat_var "__ocaml_lex_result" (lang_fans.ml[615,34862+12]..[615,34862+30])
                          expression (lang_fans.ml[615,34862+33]..[615,34862+54])
                            Pexp_apply
                            expression (lang_fans.ml[615,34862+33]..[615,34862+51])
                              Pexp_ident "__ocaml_lex_state0" (lang_fans.ml[615,34862+33]..[615,34862+51])
                            [
                              <label> ""
                                expression (lang_fans.ml[615,34862+52]..[615,34862+54])
                                  Pexp_construct "()" (lang_fans.ml[615,34862+52]..[615,34862+54])
                                  None
                            ]
                      ]
                      expression (lang_fans.ml[616,34920+8]..[717,38453+74])
                        Pexp_sequence
                        expression (lang_fans.ml[616,34920+8]..[616,34920+47])
                          Pexp_setfield
                          expression (lang_fans.ml[616,34920+8]..[616,34920+14])
                            Pexp_ident "lexbuf" (lang_fans.ml[616,34920+8]..[616,34920+14])
                          "lex_start_p" (lang_fans.ml[616,34920+15]..[616,34920+26])
                          expression (lang_fans.ml[616,34920+30]..[616,34920+47])
                            Pexp_field
                            expression (lang_fans.ml[616,34920+30]..[616,34920+36])
                              Pexp_ident "lexbuf" (lang_fans.ml[616,34920+30]..[616,34920+36])
                            "lex_curr_p" (lang_fans.ml[616,34920+37]..[616,34920+47])
                        expression (lang_fans.ml[617,34969+8]..[717,38453+74])
                          Pexp_sequence
                          expression (lang_fans.ml[617,34969+8]..[621,35113+11])
                            Pexp_setfield
                            expression (lang_fans.ml[617,34969+8]..[617,34969+14])
                              Pexp_ident "lexbuf" (lang_fans.ml[617,34969+8]..[617,34969+14])
                            "lex_curr_p" (lang_fans.ml[617,34969+15]..[617,34969+25])
                            expression (lang_fans.ml[618,34998+10]..[621,35113+11])
                              Pexp_record
                              [
                                "pos_cnum" (lang_fans.ml[620,35047+12]..[620,35047+20])
                                  expression (lang_fans.ml[620,35047+23]..[620,35047+65])
                                    Pexp_apply
                                    expression (lang_fans.ml[620,35047+43]..[620,35047+44])
                                      Pexp_ident "+" (lang_fans.ml[620,35047+43]..[620,35047+44])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[620,35047+24]..[620,35047+42])
                                          Pexp_field
                                          expression (lang_fans.ml[620,35047+24]..[620,35047+30])
                                            Pexp_ident "lexbuf" (lang_fans.ml[620,35047+24]..[620,35047+30])
                                          "lex_abs_pos" (lang_fans.ml[620,35047+31]..[620,35047+42])
                                      <label> ""
                                        expression (lang_fans.ml[620,35047+45]..[620,35047+64])
                                          Pexp_field
                                          expression (lang_fans.ml[620,35047+45]..[620,35047+51])
                                            Pexp_ident "lexbuf" (lang_fans.ml[620,35047+45]..[620,35047+51])
                                          "lex_curr_pos" (lang_fans.ml[620,35047+52]..[620,35047+64])
                                    ]
                              ]
                              Some
                                expression (lang_fans.ml[619,35010+12]..[619,35010+31])
                                  Pexp_field
                                  expression (lang_fans.ml[619,35010+13]..[619,35010+19])
                                    Pexp_ident "lexbuf" (lang_fans.ml[619,35010+13]..[619,35010+19])
                                  "lex_curr_p" (lang_fans.ml[619,35010+20]..[619,35010+30])
                          expression (lang_fans.ml[622,35126+8]..[717,38453+74])
                            Pexp_match
                            expression (lang_fans.ml[622,35126+15]..[622,35126+33])
                              Pexp_ident "__ocaml_lex_result" (lang_fans.ml[622,35126+15]..[622,35126+33])
                            [
                              <case>
                                pattern (lang_fans.ml[623,35165+11]..[623,35165+12])
                                  Ppat_constant Const_int 0
                                expression (lang_fans.ml[623,35165+16]..[623,35165+34])
                                  Pexp_sequence
                                  expression (lang_fans.ml[623,35165+17]..[623,35165+19])
                                    Pexp_construct "()" (lang_fans.ml[623,35165+17]..[623,35165+19])
                                    None
                                  expression (lang_fans.ml[623,35165+21]..[623,35165+33])
                                    Pexp_apply
                                    expression (lang_fans.ml[623,35165+21]..[623,35165+26])
                                      Pexp_ident "token" (lang_fans.ml[623,35165+21]..[623,35165+26])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[623,35165+27]..[623,35165+33])
                                          Pexp_ident "lexbuf" (lang_fans.ml[623,35165+27]..[623,35165+33])
                                    ]
                              <case>
                                pattern (lang_fans.ml[624,35200+11]..[624,35200+12])
                                  Ppat_constant Const_int 1
                                expression (lang_fans.ml[624,35200+16]..[624,35200+61])
                                  Pexp_sequence
                                  expression (lang_fans.ml[624,35200+17]..[624,35200+46])
                                    Pexp_apply
                                    expression (lang_fans.ml[624,35200+17]..[624,35200+39])
                                      Pexp_ident "Lexing_util.update_loc" (lang_fans.ml[624,35200+17]..[624,35200+39])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[624,35200+40]..[624,35200+46])
                                          Pexp_ident "lexbuf" (lang_fans.ml[624,35200+40]..[624,35200+46])
                                    ]
                                  expression (lang_fans.ml[624,35200+48]..[624,35200+60])
                                    Pexp_apply
                                    expression (lang_fans.ml[624,35200+48]..[624,35200+53])
                                      Pexp_ident "token" (lang_fans.ml[624,35200+48]..[624,35200+53])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[624,35200+54]..[624,35200+60])
                                          Pexp_ident "lexbuf" (lang_fans.ml[624,35200+54]..[624,35200+60])
                                    ]
                              <case>
                                pattern (lang_fans.ml[625,35262+11]..[625,35262+12])
                                  Ppat_constant Const_int 2
                                expression (lang_fans.ml[626,35278+13]..[635,35729+27])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lang_fans.ml[626,35278+17]..[626,35278+18])
                                        Ppat_var "x" (lang_fans.ml[626,35278+17]..[626,35278+18])
                                      expression (lang_fans.ml[626,35278+21]..[626,35278+77])
                                        Pexp_apply
                                        expression (lang_fans.ml[626,35278+21]..[626,35278+47])
                                          Pexp_ident "Lexing.sub_lexeme_char_opt" (lang_fans.ml[626,35278+21]..[626,35278+47])
                                        [
                                          <label> ""
                                            expression (lang_fans.ml[626,35278+48]..[626,35278+54])
                                              Pexp_ident "lexbuf" (lang_fans.ml[626,35278+48]..[626,35278+54])
                                          <label> ""
                                            expression (lang_fans.ml[626,35278+55]..[626,35278+77])
                                              Pexp_apply
                                              expression (lang_fans.ml[626,35278+56]..[626,35278+76]) ghost
                                                Pexp_ident "Array.get" (lang_fans.ml[626,35278+56]..[626,35278+76]) ghost
                                              [
                                                <label> ""
                                                  expression (lang_fans.ml[626,35278+56]..[626,35278+72])
                                                    Pexp_field
                                                    expression (lang_fans.ml[626,35278+57]..[626,35278+63])
                                                      Pexp_ident "lexbuf" (lang_fans.ml[626,35278+57]..[626,35278+63])
                                                    "lex_mem" (lang_fans.ml[626,35278+64]..[626,35278+71])
                                                <label> ""
                                                  expression (lang_fans.ml[626,35278+74]..[626,35278+75])
                                                    Pexp_constant Const_int 0
                                              ]
                                        ]
                                  ]
                                  expression (lang_fans.ml[627,35359+13]..[635,35729+27])
                                    Pexp_sequence
                                    expression (lang_fans.ml[627,35359+14]..[634,35675+52])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lang_fans.ml[627,35359+19]..[627,35359+20])
                                            Ppat_var "c" (lang_fans.ml[627,35359+19]..[627,35359+20])
                                          expression (lang_fans.ml[627,35359+23]..[627,35359+45])
                                            Pexp_apply
                                            expression (lang_fans.ml[627,35359+23]..[627,35359+42])
                                              Pexp_ident "Lexing_util.new_cxt" (lang_fans.ml[627,35359+23]..[627,35359+42])
                                            [
                                              <label> ""
                                                expression (lang_fans.ml[627,35359+43]..[627,35359+45])
                                                  Pexp_construct "()" (lang_fans.ml[627,35359+43]..[627,35359+45])
                                                  None
                                            ]
                                      ]
                                      expression (lang_fans.ml[628,35408+15]..[634,35675+51])
                                        Pexp_sequence
                                        expression (lang_fans.ml[628,35408+15]..[631,35504+51])
                                          Pexp_ifthenelse
                                          expression (lang_fans.ml[628,35408+18]..[628,35408+27])
                                            Pexp_apply
                                            expression (lang_fans.ml[628,35408+20]..[628,35408+22])
                                              Pexp_ident "<>" (lang_fans.ml[628,35408+20]..[628,35408+22])
                                            [
                                              <label> ""
                                                expression (lang_fans.ml[628,35408+18]..[628,35408+19])
                                                  Pexp_ident "x" (lang_fans.ml[628,35408+18]..[628,35408+19])
                                              <label> ""
                                                expression (lang_fans.ml[628,35408+23]..[628,35408+27])
                                                  Pexp_construct "None" (lang_fans.ml[628,35408+23]..[628,35408+27])
                                                  None
                                            ]
                                          expression (lang_fans.ml[630,35456+17]..[631,35504+51])
                                            Pexp_apply
                                            expression (lang_fans.ml[630,35456+17]..[630,35456+33])
                                              Pexp_ident "Lexing_util.warn" (lang_fans.ml[630,35456+17]..[630,35456+33])
                                            [
                                              <label> ""
                                                expression (lang_fans.ml[630,35456+34]..[630,35456+47])
                                                  Pexp_construct "Comment_start" (lang_fans.ml[630,35456+34]..[630,35456+47])
                                                  None
                                              <label> ""
                                                expression (lang_fans.ml[631,35504+19]..[631,35504+51])
                                                  Pexp_apply
                                                  expression (lang_fans.ml[631,35504+20]..[631,35504+43])
                                                    Pexp_ident "Lexing_util.from_lexbuf" (lang_fans.ml[631,35504+20]..[631,35504+43])
                                                  [
                                                    <label> ""
                                                      expression (lang_fans.ml[631,35504+44]..[631,35504+50])
                                                        Pexp_ident "lexbuf" (lang_fans.ml[631,35504+44]..[631,35504+50])
                                                  ]
                                            ]
                                          None
                                        expression (lang_fans.ml[632,35557+15]..[634,35675+51])
                                          Pexp_sequence
                                          expression (lang_fans.ml[632,35557+15]..[632,35557+41])
                                            Pexp_apply
                                            expression (lang_fans.ml[632,35557+15]..[632,35557+32])
                                              Pexp_ident "Lexing_util.store" (lang_fans.ml[632,35557+15]..[632,35557+32])
                                            [
                                              <label> ""
                                                expression (lang_fans.ml[632,35557+33]..[632,35557+34])
                                                  Pexp_ident "c" (lang_fans.ml[632,35557+33]..[632,35557+34])
                                              <label> ""
                                                expression (lang_fans.ml[632,35557+35]..[632,35557+41])
                                                  Pexp_ident "lexbuf" (lang_fans.ml[632,35557+35]..[632,35557+41])
                                            ]
                                          expression (lang_fans.ml[633,35600+15]..[634,35675+51])
                                            Pexp_sequence
                                            expression (lang_fans.ml[633,35600+15]..[633,35600+73])
                                              Pexp_apply
                                              expression (lang_fans.ml[633,35600+15]..[633,35600+40])
                                                Pexp_ident "Lexing_util.push_loc_cont" (lang_fans.ml[633,35600+15]..[633,35600+40])
                                              [
                                                <label> ""
                                                  expression (lang_fans.ml[633,35600+41]..[633,35600+42])
                                                    Pexp_ident "c" (lang_fans.ml[633,35600+41]..[633,35600+42])
                                                <label> ""
                                                  expression (lang_fans.ml[633,35600+43]..[633,35600+49])
                                                    Pexp_ident "lexbuf" (lang_fans.ml[633,35600+43]..[633,35600+49])
                                                <label> ""
                                                  expression (lang_fans.ml[633,35600+50]..[633,35600+73])
                                                    Pexp_ident "Lexing_util.lex_comment" (lang_fans.ml[633,35600+50]..[633,35600+73])
                                              ]
                                            expression (lang_fans.ml[634,35675+15]..[634,35675+51])
                                              Pexp_apply
                                              expression (lang_fans.ml[634,35675+15]..[634,35675+21])
                                                Pexp_ident "ignore" (lang_fans.ml[634,35675+15]..[634,35675+21])
                                              [
                                                <label> ""
                                                  expression (lang_fans.ml[634,35675+22]..[634,35675+51])
                                                    Pexp_apply
                                                    expression (lang_fans.ml[634,35675+23]..[634,35675+48])
                                                      Pexp_ident "Lexing_util.buff_contents" (lang_fans.ml[634,35675+23]..[634,35675+48])
                                                    [
                                                      <label> ""
                                                        expression (lang_fans.ml[634,35675+49]..[634,35675+50])
                                                          Pexp_ident "c" (lang_fans.ml[634,35675+49]..[634,35675+50])
                                                    ]
                                              ]
                                    expression (lang_fans.ml[635,35729+14]..[635,35729+26])
                                      Pexp_apply
                                      expression (lang_fans.ml[635,35729+14]..[635,35729+19])
                                        Pexp_ident "token" (lang_fans.ml[635,35729+14]..[635,35729+19])
                                      [
                                        <label> ""
                                          expression (lang_fans.ml[635,35729+20]..[635,35729+26])
                                            Pexp_ident "lexbuf" (lang_fans.ml[635,35729+20]..[635,35729+26])
                                      ]
                              <case>
                                pattern (lang_fans.ml[636,35757+11]..[636,35757+12])
                                  Ppat_constant Const_int 3
                                expression (lang_fans.ml[637,35773+13]..[672,36963+18])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lang_fans.ml[637,35773+17]..[637,35773+20])
                                        Ppat_var "txt" (lang_fans.ml[637,35773+17]..[637,35773+20])
                                      expression (lang_fans.ml[638,35796+15]..[639,35857+36])
                                        Pexp_apply
                                        expression (lang_fans.ml[638,35796+15]..[638,35796+32])
                                          Pexp_ident "Lexing.sub_lexeme" (lang_fans.ml[638,35796+15]..[638,35796+32])
                                        [
                                          <label> ""
                                            expression (lang_fans.ml[638,35796+33]..[638,35796+39])
                                              Pexp_ident "lexbuf" (lang_fans.ml[638,35796+33]..[638,35796+39])
                                          <label> ""
                                            expression (lang_fans.ml[638,35796+40]..[638,35796+60])
                                              Pexp_field
                                              expression (lang_fans.ml[638,35796+40]..[638,35796+46])
                                                Pexp_ident "lexbuf" (lang_fans.ml[638,35796+40]..[638,35796+46])
                                              "lex_start_pos" (lang_fans.ml[638,35796+47]..[638,35796+60])
                                          <label> ""
                                            expression (lang_fans.ml[639,35857+17]..[639,35857+36])
                                              Pexp_field
                                              expression (lang_fans.ml[639,35857+17]..[639,35857+23])
                                                Pexp_ident "lexbuf" (lang_fans.ml[639,35857+17]..[639,35857+23])
                                              "lex_curr_pos" (lang_fans.ml[639,35857+24]..[639,35857+36])
                                        ]
                                  ]
                                  expression (lang_fans.ml[640,35897+13]..[672,36963+18])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lang_fans.ml[640,35897+17]..[640,35897+18])
                                          Ppat_var "v" (lang_fans.ml[640,35897+17]..[640,35897+18])
                                        expression (lang_fans.ml[640,35897+21]..[640,35897+37])
                                          Pexp_apply
                                          expression (lang_fans.ml[640,35897+21]..[640,35897+33])
                                            Pexp_ident "Hashtbl.hash" (lang_fans.ml[640,35897+21]..[640,35897+33])
                                          [
                                            <label> ""
                                              expression (lang_fans.ml[640,35897+34]..[640,35897+37])
                                                Pexp_ident "txt" (lang_fans.ml[640,35897+34]..[640,35897+37])
                                          ]
                                    ]
                                    expression (lang_fans.ml[641,35938+13]..[672,36963+18])
                                      Pexp_ifthenelse
                                      expression (lang_fans.ml[642,35954+15]..[650,36302+33])
                                        Pexp_apply
                                        expression (lang_fans.ml[642,35954+15]..[650,36302+31])
                                          Pexp_function
                                          [
                                            <case>
                                              pattern (lang_fans.ml[643,35980+19]..[643,35980+28])
                                                Ppat_constant Const_int 669538498
                                              expression (lang_fans.ml[643,35980+32]..[643,35980+46])
                                                Pexp_apply
                                                expression (lang_fans.ml[643,35980+36]..[643,35980+37])
                                                  Pexp_ident "=" (lang_fans.ml[643,35980+36]..[643,35980+37])
                                                [
                                                  <label> ""
                                                    expression (lang_fans.ml[643,35980+32]..[643,35980+35])
                                                      Pexp_ident "txt" (lang_fans.ml[643,35980+32]..[643,35980+35])
                                                  <label> ""
                                                    expression (lang_fans.ml[643,35980+38]..[643,35980+46])
                                                      Pexp_constant Const_string("derive",None)
                                                ]
                                            <case>
                                              pattern (lang_fans.ml[644,36027+19]..[644,36027+28])
                                                Ppat_constant Const_int 769889260
                                              expression (lang_fans.ml[644,36027+32]..[644,36027+46])
                                                Pexp_apply
                                                expression (lang_fans.ml[644,36027+36]..[644,36027+37])
                                                  Pexp_ident "=" (lang_fans.ml[644,36027+36]..[644,36027+37])
                                                [
                                                  <label> ""
                                                    expression (lang_fans.ml[644,36027+32]..[644,36027+35])
                                                      Pexp_ident "txt" (lang_fans.ml[644,36027+32]..[644,36027+35])
                                                  <label> ""
                                                    expression (lang_fans.ml[644,36027+38]..[644,36027+46])
                                                      Pexp_constant Const_string("unload",None)
                                                ]
                                            <case>
                                              pattern (lang_fans.ml[645,36074+19]..[645,36074+28])
                                                Ppat_constant Const_int 112559905
                                              expression (lang_fans.ml[645,36074+32]..[645,36074+45])
                                                Pexp_apply
                                                expression (lang_fans.ml[645,36074+36]..[645,36074+37])
                                                  Pexp_ident "=" (lang_fans.ml[645,36074+36]..[645,36074+37])
                                                [
                                                  <label> ""
                                                    expression (lang_fans.ml[645,36074+32]..[645,36074+35])
                                                      Pexp_ident "txt" (lang_fans.ml[645,36074+32]..[645,36074+35])
                                                  <label> ""
                                                    expression (lang_fans.ml[645,36074+38]..[645,36074+45])
                                                      Pexp_constant Const_string("clear",None)
                                                ]
                                            <case>
                                              pattern (lang_fans.ml[646,36120+19]..[646,36120+28])
                                                Ppat_constant Const_int 728165346
                                              expression (lang_fans.ml[646,36120+32]..[646,36120+44])
                                                Pexp_apply
                                                expression (lang_fans.ml[646,36120+36]..[646,36120+37])
                                                  Pexp_ident "=" (lang_fans.ml[646,36120+36]..[646,36120+37])
                                                [
                                                  <label> ""
                                                    expression (lang_fans.ml[646,36120+32]..[646,36120+35])
                                                      Pexp_ident "txt" (lang_fans.ml[646,36120+32]..[646,36120+35])
                                                  <label> ""
                                                    expression (lang_fans.ml[646,36120+38]..[646,36120+44])
                                                      Pexp_constant Const_string("keep",None)
                                                ]
                                            <case>
                                              pattern (lang_fans.ml[647,36165+19]..[647,36165+28])
                                                Ppat_constant Const_int 788757552
                                              expression (lang_fans.ml[647,36165+32]..[647,36165+42])
                                                Pexp_apply
                                                expression (lang_fans.ml[647,36165+36]..[647,36165+37])
                                                  Pexp_ident "=" (lang_fans.ml[647,36165+36]..[647,36165+37])
                                                [
                                                  <label> ""
                                                    expression (lang_fans.ml[647,36165+32]..[647,36165+35])
                                                      Pexp_ident "txt" (lang_fans.ml[647,36165+32]..[647,36165+35])
                                                  <label> ""
                                                    expression (lang_fans.ml[647,36165+38]..[647,36165+42])
                                                      Pexp_constant Const_string("on",None)
                                                ]
                                            <case>
                                              pattern (lang_fans.ml[648,36208+19]..[648,36208+28])
                                                Ppat_constant Const_int 189838782
                                              expression (lang_fans.ml[648,36208+32]..[648,36208+43])
                                                Pexp_apply
                                                expression (lang_fans.ml[648,36208+36]..[648,36208+37])
                                                  Pexp_ident "=" (lang_fans.ml[648,36208+36]..[648,36208+37])
                                                [
                                                  <label> ""
                                                    expression (lang_fans.ml[648,36208+32]..[648,36208+35])
                                                      Pexp_ident "txt" (lang_fans.ml[648,36208+32]..[648,36208+35])
                                                  <label> ""
                                                    expression (lang_fans.ml[648,36208+38]..[648,36208+43])
                                                      Pexp_constant Const_string("off",None)
                                                ]
                                            <case>
                                              pattern (lang_fans.ml[649,36252+19]..[649,36252+28])
                                                Ppat_constant Const_int 535818803
                                              expression (lang_fans.ml[649,36252+32]..[649,36252+49])
                                                Pexp_apply
                                                expression (lang_fans.ml[649,36252+36]..[649,36252+37])
                                                  Pexp_ident "=" (lang_fans.ml[649,36252+36]..[649,36252+37])
                                                [
                                                  <label> ""
                                                    expression (lang_fans.ml[649,36252+32]..[649,36252+35])
                                                      Pexp_ident "txt" (lang_fans.ml[649,36252+32]..[649,36252+35])
                                                  <label> ""
                                                    expression (lang_fans.ml[649,36252+38]..[649,36252+49])
                                                      Pexp_constant Const_string("show_code",None)
                                                ]
                                            <case>
                                              pattern (lang_fans.ml[650,36302+19]..[650,36302+20])
                                                Ppat_any
                                              expression (lang_fans.ml[650,36302+24]..[650,36302+29])
                                                Pexp_construct "false" (lang_fans.ml[650,36302+24]..[650,36302+29])
                                                None
                                          ]
                                        [
                                          <label> ""
                                            expression (lang_fans.ml[650,36302+32]..[650,36302+33])
                                              Pexp_ident "v" (lang_fans.ml[650,36302+32]..[650,36302+33])
                                        ]
                                      expression (lang_fans.ml[652,36354+15]..[661,36640+18])
                                        Pexp_variant "Key"
                                        Some
                                          expression (lang_fans.ml[653,36374+17]..[661,36640+18])
                                            Pexp_record
                                            [
                                              "loc" (lang_fans.ml[654,36393+19]..[654,36393+22])
                                                expression (lang_fans.ml[655,36418+21]..[659,36593+22])
                                                  Pexp_record
                                                  [
                                                    "loc_start" (lang_fans.ml[656,36441+23]..[656,36441+32])
                                                      expression (lang_fans.ml[656,36441+35]..[656,36441+55])
                                                        Pexp_field
                                                        expression (lang_fans.ml[656,36441+36]..[656,36441+42])
                                                          Pexp_ident "lexbuf" (lang_fans.ml[656,36441+36]..[656,36441+42])
                                                        "lex_start_p" (lang_fans.ml[656,36441+43]..[656,36441+54])
                                                    "loc_end" (lang_fans.ml[657,36498+23]..[657,36498+30])
                                                      expression (lang_fans.ml[657,36498+33]..[657,36498+52])
                                                        Pexp_field
                                                        expression (lang_fans.ml[657,36498+34]..[657,36498+40])
                                                          Pexp_ident "lexbuf" (lang_fans.ml[657,36498+34]..[657,36498+40])
                                                        "lex_curr_p" (lang_fans.ml[657,36498+41]..[657,36498+51])
                                                    "loc_ghost" (lang_fans.ml[658,36552+23]..[658,36552+32])
                                                      expression (lang_fans.ml[658,36552+35]..[658,36552+40])
                                                        Pexp_construct "false" (lang_fans.ml[658,36552+35]..[658,36552+40])
                                                        None
                                                  ]
                                                  None
                                              "txt" (lang_fans.ml[660,36617+19]..[660,36617+22])
                                                expression (lang_fans.ml[660,36617+19]..[660,36617+22])
                                                  Pexp_ident "txt" (lang_fans.ml[660,36617+19]..[660,36617+22])
                                            ]
                                            None
                                      Some
                                        expression (lang_fans.ml[663,36677+15]..[672,36963+18])
                                          Pexp_variant "Lid"
                                          Some
                                            expression (lang_fans.ml[664,36697+17]..[672,36963+18])
                                              Pexp_record
                                              [
                                                "loc" (lang_fans.ml[665,36716+19]..[665,36716+22])
                                                  expression (lang_fans.ml[666,36741+21]..[670,36916+22])
                                                    Pexp_record
                                                    [
                                                      "loc_start" (lang_fans.ml[667,36764+23]..[667,36764+32])
                                                        expression (lang_fans.ml[667,36764+35]..[667,36764+55])
                                                          Pexp_field
                                                          expression (lang_fans.ml[667,36764+36]..[667,36764+42])
                                                            Pexp_ident "lexbuf" (lang_fans.ml[667,36764+36]..[667,36764+42])
                                                          "lex_start_p" (lang_fans.ml[667,36764+43]..[667,36764+54])
                                                      "loc_end" (lang_fans.ml[668,36821+23]..[668,36821+30])
                                                        expression (lang_fans.ml[668,36821+33]..[668,36821+52])
                                                          Pexp_field
                                                          expression (lang_fans.ml[668,36821+34]..[668,36821+40])
                                                            Pexp_ident "lexbuf" (lang_fans.ml[668,36821+34]..[668,36821+40])
                                                          "lex_curr_p" (lang_fans.ml[668,36821+41]..[668,36821+51])
                                                      "loc_ghost" (lang_fans.ml[669,36875+23]..[669,36875+32])
                                                        expression (lang_fans.ml[669,36875+35]..[669,36875+40])
                                                          Pexp_construct "false" (lang_fans.ml[669,36875+35]..[669,36875+40])
                                                          None
                                                    ]
                                                    None
                                                "txt" (lang_fans.ml[671,36940+19]..[671,36940+22])
                                                  expression (lang_fans.ml[671,36940+19]..[671,36940+22])
                                                    Pexp_ident "txt" (lang_fans.ml[671,36940+19]..[671,36940+22])
                                              ]
                                              None
                              <case>
                                pattern (lang_fans.ml[673,36982+11]..[673,36982+12])
                                  Ppat_constant Const_int 4
                                expression (lang_fans.ml[674,36998+13]..[686,37390+16])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lang_fans.ml[674,36998+17]..[674,36998+20])
                                        Ppat_var "txt" (lang_fans.ml[674,36998+17]..[674,36998+20])
                                      expression (lang_fans.ml[675,37021+15]..[676,37082+36])
                                        Pexp_apply
                                        expression (lang_fans.ml[675,37021+15]..[675,37021+32])
                                          Pexp_ident "Lexing.sub_lexeme" (lang_fans.ml[675,37021+15]..[675,37021+32])
                                        [
                                          <label> ""
                                            expression (lang_fans.ml[675,37021+33]..[675,37021+39])
                                              Pexp_ident "lexbuf" (lang_fans.ml[675,37021+33]..[675,37021+39])
                                          <label> ""
                                            expression (lang_fans.ml[675,37021+40]..[675,37021+60])
                                              Pexp_field
                                              expression (lang_fans.ml[675,37021+40]..[675,37021+46])
                                                Pexp_ident "lexbuf" (lang_fans.ml[675,37021+40]..[675,37021+46])
                                              "lex_start_pos" (lang_fans.ml[675,37021+47]..[675,37021+60])
                                          <label> ""
                                            expression (lang_fans.ml[676,37082+17]..[676,37082+36])
                                              Pexp_field
                                              expression (lang_fans.ml[676,37082+17]..[676,37082+23])
                                                Pexp_ident "lexbuf" (lang_fans.ml[676,37082+17]..[676,37082+23])
                                              "lex_curr_pos" (lang_fans.ml[676,37082+24]..[676,37082+36])
                                        ]
                                  ]
                                  expression (lang_fans.ml[677,37122+13]..[686,37390+16])
                                    Pexp_variant "Uid"
                                    Some
                                      expression (lang_fans.ml[678,37140+15]..[686,37390+16])
                                        Pexp_record
                                        [
                                          "loc" (lang_fans.ml[679,37157+17]..[679,37157+20])
                                            expression (lang_fans.ml[680,37180+19]..[684,37347+20])
                                              Pexp_record
                                              [
                                                "loc_start" (lang_fans.ml[681,37201+21]..[681,37201+30])
                                                  expression (lang_fans.ml[681,37201+33]..[681,37201+53])
                                                    Pexp_field
                                                    expression (lang_fans.ml[681,37201+34]..[681,37201+40])
                                                      Pexp_ident "lexbuf" (lang_fans.ml[681,37201+34]..[681,37201+40])
                                                    "lex_start_p" (lang_fans.ml[681,37201+41]..[681,37201+52])
                                                "loc_end" (lang_fans.ml[682,37256+21]..[682,37256+28])
                                                  expression (lang_fans.ml[682,37256+31]..[682,37256+50])
                                                    Pexp_field
                                                    expression (lang_fans.ml[682,37256+32]..[682,37256+38])
                                                      Pexp_ident "lexbuf" (lang_fans.ml[682,37256+32]..[682,37256+38])
                                                    "lex_curr_p" (lang_fans.ml[682,37256+39]..[682,37256+49])
                                                "loc_ghost" (lang_fans.ml[683,37308+21]..[683,37308+30])
                                                  expression (lang_fans.ml[683,37308+33]..[683,37308+38])
                                                    Pexp_construct "false" (lang_fans.ml[683,37308+33]..[683,37308+38])
                                                    None
                                              ]
                                              None
                                          "txt" (lang_fans.ml[685,37369+17]..[685,37369+20])
                                            expression (lang_fans.ml[685,37369+17]..[685,37369+20])
                                              Pexp_ident "txt" (lang_fans.ml[685,37369+17]..[685,37369+20])
                                        ]
                                        None
                              <case>
                                pattern (lang_fans.ml[687,37407+11]..[687,37407+12])
                                  Ppat_constant Const_int 5
                                expression (lang_fans.ml[688,37423+13]..[700,37824+29])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lang_fans.ml[688,37423+17]..[688,37423+20])
                                        Ppat_var "txt" (lang_fans.ml[688,37423+17]..[688,37423+20])
                                      expression (lang_fans.ml[689,37446+15]..[690,37507+36])
                                        Pexp_apply
                                        expression (lang_fans.ml[689,37446+15]..[689,37446+32])
                                          Pexp_ident "Lexing.sub_lexeme" (lang_fans.ml[689,37446+15]..[689,37446+32])
                                        [
                                          <label> ""
                                            expression (lang_fans.ml[689,37446+33]..[689,37446+39])
                                              Pexp_ident "lexbuf" (lang_fans.ml[689,37446+33]..[689,37446+39])
                                          <label> ""
                                            expression (lang_fans.ml[689,37446+40]..[689,37446+60])
                                              Pexp_field
                                              expression (lang_fans.ml[689,37446+40]..[689,37446+46])
                                                Pexp_ident "lexbuf" (lang_fans.ml[689,37446+40]..[689,37446+46])
                                              "lex_start_pos" (lang_fans.ml[689,37446+47]..[689,37446+60])
                                          <label> ""
                                            expression (lang_fans.ml[690,37507+17]..[690,37507+36])
                                              Pexp_field
                                              expression (lang_fans.ml[690,37507+17]..[690,37507+23])
                                                Pexp_ident "lexbuf" (lang_fans.ml[690,37507+17]..[690,37507+23])
                                              "lex_curr_pos" (lang_fans.ml[690,37507+24]..[690,37507+36])
                                        ]
                                  ]
                                  expression (lang_fans.ml[691,37547+13]..[700,37824+29]) ghost
                                    Pexp_constraint
                                    expression (lang_fans.ml[691,37547+14]..[700,37824+17])
                                      Pexp_variant "Key"
                                      Some
                                        expression (lang_fans.ml[692,37566+16]..[700,37824+17])
                                          Pexp_record
                                          [
                                            "loc" (lang_fans.ml[693,37584+18]..[693,37584+21])
                                              expression (lang_fans.ml[694,37608+20]..[698,37779+21])
                                                Pexp_record
                                                [
                                                  "loc_start" (lang_fans.ml[695,37630+22]..[695,37630+31])
                                                    expression (lang_fans.ml[695,37630+34]..[695,37630+54])
                                                      Pexp_field
                                                      expression (lang_fans.ml[695,37630+35]..[695,37630+41])
                                                        Pexp_ident "lexbuf" (lang_fans.ml[695,37630+35]..[695,37630+41])
                                                      "lex_start_p" (lang_fans.ml[695,37630+42]..[695,37630+53])
                                                  "loc_end" (lang_fans.ml[696,37686+22]..[696,37686+29])
                                                    expression (lang_fans.ml[696,37686+32]..[696,37686+51])
                                                      Pexp_field
                                                      expression (lang_fans.ml[696,37686+33]..[696,37686+39])
                                                        Pexp_ident "lexbuf" (lang_fans.ml[696,37686+33]..[696,37686+39])
                                                      "lex_curr_p" (lang_fans.ml[696,37686+40]..[696,37686+50])
                                                  "loc_ghost" (lang_fans.ml[697,37739+22]..[697,37739+31])
                                                    expression (lang_fans.ml[697,37739+34]..[697,37739+39])
                                                      Pexp_construct "false" (lang_fans.ml[697,37739+34]..[697,37739+39])
                                                      None
                                                ]
                                                None
                                            "txt" (lang_fans.ml[699,37802+18]..[699,37802+21])
                                              expression (lang_fans.ml[699,37802+18]..[699,37802+21])
                                                Pexp_ident "txt" (lang_fans.ml[699,37802+18]..[699,37802+21])
                                          ]
                                          None
                                    core_type (lang_fans.ml[700,37824+20]..[700,37824+28])
                                      Ptyp_constr "Tokenf.t" (lang_fans.ml[700,37824+20]..[700,37824+28])
                                      []
                              <case>
                                pattern (lang_fans.ml[701,37854+11]..[701,37854+12])
                                  Ppat_constant Const_int 6
                                expression (lang_fans.ml[702,37870+13]..[710,38167+52])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lang_fans.ml[702,37870+17]..[702,37870+20])
                                        Ppat_var "pos" (lang_fans.ml[702,37870+17]..[702,37870+20])
                                      expression (lang_fans.ml[702,37870+23]..[702,37870+40])
                                        Pexp_field
                                        expression (lang_fans.ml[702,37870+23]..[702,37870+29])
                                          Pexp_ident "lexbuf" (lang_fans.ml[702,37870+23]..[702,37870+29])
                                        "lex_curr_p" (lang_fans.ml[702,37870+30]..[702,37870+40])
                                  ]
                                  expression (lang_fans.ml[703,37914+13]..[710,38167+52])
                                    Pexp_sequence
                                    expression (lang_fans.ml[703,37914+14]..[708,38089+17])
                                      Pexp_setfield
                                      expression (lang_fans.ml[703,37914+14]..[703,37914+20])
                                        Pexp_ident "lexbuf" (lang_fans.ml[703,37914+14]..[703,37914+20])
                                      "lex_curr_p" (lang_fans.ml[703,37914+21]..[703,37914+31])
                                      expression (lang_fans.ml[704,37949+16]..[708,38089+17])
                                        Pexp_record
                                        [
                                          "pos_bol" (lang_fans.ml[706,37994+18]..[706,37994+25])
                                            expression (lang_fans.ml[706,37994+28]..[706,37994+45])
                                              Pexp_apply
                                              expression (lang_fans.ml[706,37994+41]..[706,37994+42])
                                                Pexp_ident "+" (lang_fans.ml[706,37994+41]..[706,37994+42])
                                              [
                                                <label> ""
                                                  expression (lang_fans.ml[706,37994+29]..[706,37994+40])
                                                    Pexp_field
                                                    expression (lang_fans.ml[706,37994+29]..[706,37994+32])
                                                      Pexp_ident "pos" (lang_fans.ml[706,37994+29]..[706,37994+32])
                                                    "pos_bol" (lang_fans.ml[706,37994+33]..[706,37994+40])
                                                <label> ""
                                                  expression (lang_fans.ml[706,37994+43]..[706,37994+44])
                                                    Pexp_constant Const_int 1
                                              ]
                                          "pos_cnum" (lang_fans.ml[707,38041+18]..[707,38041+26])
                                            expression (lang_fans.ml[707,38041+29]..[707,38041+47])
                                              Pexp_apply
                                              expression (lang_fans.ml[707,38041+43]..[707,38041+44])
                                                Pexp_ident "+" (lang_fans.ml[707,38041+43]..[707,38041+44])
                                              [
                                                <label> ""
                                                  expression (lang_fans.ml[707,38041+30]..[707,38041+42])
                                                    Pexp_field
                                                    expression (lang_fans.ml[707,38041+30]..[707,38041+33])
                                                      Pexp_ident "pos" (lang_fans.ml[707,38041+30]..[707,38041+33])
                                                    "pos_cnum" (lang_fans.ml[707,38041+34]..[707,38041+42])
                                                <label> ""
                                                  expression (lang_fans.ml[707,38041+45]..[707,38041+46])
                                                    Pexp_constant Const_int 1
                                              ]
                                        ]
                                        Some
                                          expression (lang_fans.ml[705,37967+18]..[705,37967+21])
                                            Pexp_ident "pos" (lang_fans.ml[705,37967+18]..[705,37967+21])
                                    expression (lang_fans.ml[709,38108+14]..[710,38167+51])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lang_fans.ml[709,38108+19]..[709,38108+22])
                                            Ppat_var "loc" (lang_fans.ml[709,38108+19]..[709,38108+22])
                                          expression (lang_fans.ml[709,38108+25]..[709,38108+55])
                                            Pexp_apply
                                            expression (lang_fans.ml[709,38108+25]..[709,38108+48])
                                              Pexp_ident "Lexing_util.from_lexbuf" (lang_fans.ml[709,38108+25]..[709,38108+48])
                                            [
                                              <label> ""
                                                expression (lang_fans.ml[709,38108+49]..[709,38108+55])
                                                  Pexp_ident "lexbuf" (lang_fans.ml[709,38108+49]..[709,38108+55])
                                            ]
                                      ]
                                      expression (lang_fans.ml[710,38167+15]..[710,38167+50]) ghost
                                        Pexp_constraint
                                        expression (lang_fans.ml[710,38167+16]..[710,38167+38])
                                          Pexp_variant "EOI"
                                          Some
                                            expression (lang_fans.ml[710,38167+21]..[710,38167+38])
                                              Pexp_record
                                              [
                                                "loc" (lang_fans.ml[710,38167+23]..[710,38167+26])
                                                  expression (lang_fans.ml[710,38167+23]..[710,38167+26])
                                                    Pexp_ident "loc" (lang_fans.ml[710,38167+23]..[710,38167+26])
                                                "txt" (lang_fans.ml[710,38167+28]..[710,38167+31])
                                                  expression (lang_fans.ml[710,38167+34]..[710,38167+36])
                                                    Pexp_constant Const_string("",None)
                                              ]
                                              None
                                        core_type (lang_fans.ml[710,38167+41]..[710,38167+49])
                                          Ptyp_constr "Tokenf.t" (lang_fans.ml[710,38167+41]..[710,38167+49])
                                          []
                              <case>
                                pattern (lang_fans.ml[711,38220+11]..[711,38220+12])
                                  Ppat_constant Const_int 7
                                expression (lang_fans.ml[712,38236+13]..[714,38367+47])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lang_fans.ml[712,38236+17]..[712,38236+18])
                                        Ppat_var "c" (lang_fans.ml[712,38236+17]..[712,38236+18])
                                      expression (lang_fans.ml[712,38236+21]..[712,38236+71])
                                        Pexp_apply
                                        expression (lang_fans.ml[712,38236+21]..[712,38236+43])
                                          Pexp_ident "Lexing.sub_lexeme_char" (lang_fans.ml[712,38236+21]..[712,38236+43])
                                        [
                                          <label> ""
                                            expression (lang_fans.ml[712,38236+44]..[712,38236+50])
                                              Pexp_ident "lexbuf" (lang_fans.ml[712,38236+44]..[712,38236+50])
                                          <label> ""
                                            expression (lang_fans.ml[712,38236+51]..[712,38236+71])
                                              Pexp_field
                                              expression (lang_fans.ml[712,38236+51]..[712,38236+57])
                                                Pexp_ident "lexbuf" (lang_fans.ml[712,38236+51]..[712,38236+57])
                                              "lex_start_pos" (lang_fans.ml[712,38236+58]..[712,38236+71])
                                        ]
                                  ]
                                  expression (lang_fans.ml[713,38311+13]..[714,38367+47])
                                    Pexp_apply
                                    expression (lang_fans.ml[713,38311+53]..[713,38311+55])
                                      Pexp_ident "@@" (lang_fans.ml[713,38311+53]..[713,38311+55])
                                    [
                                      <label> ""
                                        expression (lang_fans.ml[713,38311+13]..[713,38311+52])
                                          Pexp_apply
                                          expression (lang_fans.ml[713,38311+14]..[713,38311+29])
                                            Pexp_ident "Lexing_util.err" (lang_fans.ml[713,38311+14]..[713,38311+29])
                                          [
                                            <label> ""
                                              expression (lang_fans.ml[713,38311+30]..[713,38311+51])
                                                Pexp_construct "Illegal_character" (lang_fans.ml[713,38311+31]..[713,38311+48])
                                                Some
                                                  expression (lang_fans.ml[713,38311+49]..[713,38311+50])
                                                    Pexp_ident "c" (lang_fans.ml[713,38311+49]..[713,38311+50])
                                          ]
                                      <label> ""
                                        expression (lang_fans.ml[714,38367+15]..[714,38367+47])
                                          Pexp_apply
                                          expression (lang_fans.ml[714,38367+16]..[714,38367+39])
                                            Pexp_ident "Lexing_util.from_lexbuf" (lang_fans.ml[714,38367+16]..[714,38367+39])
                                          [
                                            <label> ""
                                              expression (lang_fans.ml[714,38367+40]..[714,38367+46])
                                                Pexp_ident "lexbuf" (lang_fans.ml[714,38367+40]..[714,38367+46])
                                          ]
                                    ]
                              <case>
                                pattern (lang_fans.ml[715,38415+11]..[715,38415+12])
                                  Ppat_any
                                expression (lang_fans.ml[716,38431+13]..[717,38453+73])
                                  Pexp_apply
                                  expression (lang_fans.ml[716,38431+13]..[716,38431+21])
                                    Pexp_ident "failwith" (lang_fans.ml[716,38431+13]..[716,38431+21])
                                  [
                                    <label> ""
                                      expression (lang_fans.ml[717,38453+15]..[717,38453+73])
                                        Pexp_apply
                                        expression (lang_fans.ml[717,38453+28]..[717,38453+29])
                                          Pexp_ident "^" (lang_fans.ml[717,38453+28]..[717,38453+29])
                                        [
                                          <label> ""
                                            expression (lang_fans.ml[717,38453+16]..[717,38453+27])
                                              Pexp_constant Const_string("Lang_fans",None)
                                          <label> ""
                                            expression (lang_fans.ml[717,38453+30]..[717,38453+72])
                                              Pexp_apply
                                              expression (lang_fans.ml[717,38453+35]..[717,38453+36])
                                                Pexp_ident "^" (lang_fans.ml[717,38453+35]..[717,38453+36])
                                              [
                                                <label> ""
                                                  expression (lang_fans.ml[717,38453+31]..[717,38453+34])
                                                    Pexp_constant Const_string(".",None)
                                                <label> ""
                                                  expression (lang_fans.ml[717,38453+37]..[717,38453+71])
                                                    Pexp_apply
                                                    expression (lang_fans.ml[717,38453+46]..[717,38453+47])
                                                      Pexp_ident "^" (lang_fans.ml[717,38453+46]..[717,38453+47])
                                                    [
                                                      <label> ""
                                                        expression (lang_fans.ml[717,38453+38]..[717,38453+45])
                                                          Pexp_constant Const_string("token",None)
                                                      <label> ""
                                                        expression (lang_fans.ml[717,38453+48]..[717,38453+70])
                                                          Pexp_constant Const_string(" lexing: empty token",None)
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
            ]
          core_type (lang_fans.ml[1,0+15]..[1,0+40])
            Ptyp_arrow
            ""
            core_type (lang_fans.ml[1,0+15]..[1,0+28])
              Ptyp_constr "Lexing.lexbuf" (lang_fans.ml[1,0+15]..[1,0+28])
              []
            core_type (lang_fans.ml[1,0+32]..[1,0+40])
              Ptyp_constr "Tokenf.t" (lang_fans.ml[1,0+32]..[1,0+40])
              []
    ]
  structure_item (lang_fans.ml[718,38530+0]..[718,38530+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (lang_fans.ml[718,38530+4]..[718,38530+12])
          Ppat_var "fan_quot" (lang_fans.ml[718,38530+4]..[718,38530+12])
        expression (lang_fans.ml[718,38530+15]..[718,38530+34])
          Pexp_apply
          expression (lang_fans.ml[718,38530+15]..[718,38530+23])
            Pexp_ident "Gramf.mk" (lang_fans.ml[718,38530+15]..[718,38530+23])
          [
            <label> ""
              expression (lang_fans.ml[718,38530+24]..[718,38530+34])
                Pexp_constant Const_string("fan_quot",None)
          ]
    ]
  structure_item (lang_fans.ml[719,38565+0]..[719,38565+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (lang_fans.ml[719,38565+4]..[719,38565+13])
          Ppat_var "fan_quots" (lang_fans.ml[719,38565+4]..[719,38565+13])
        expression (lang_fans.ml[719,38565+16]..[719,38565+36])
          Pexp_apply
          expression (lang_fans.ml[719,38565+16]..[719,38565+24])
            Pexp_ident "Gramf.mk" (lang_fans.ml[719,38565+16]..[719,38565+24])
          [
            <label> ""
              expression (lang_fans.ml[719,38565+25]..[719,38565+36])
                Pexp_constant Const_string("fan_quots",None)
          ]
    ]
  structure_item (lang_fans.ml[720,38602+0]..[1023,50262+41])
    Pstr_eval
    expression (lang_fans.ml[721,38610+2]..[1023,50262+41])
      Pexp_let Nonrec
      [
        <def>
          pattern (lang_fans.ml[721,38610+6]..[721,38610+8])
            Ppat_var "id" (lang_fans.ml[721,38610+6]..[721,38610+8])
          expression (lang_fans.ml[721,38610+8]..[721,38610+37]) ghost
            Pexp_constraint
            expression (lang_fans.ml[721,38610+24]..[721,38610+37])
              Pexp_apply
              expression (lang_fans.ml[721,38610+24]..[721,38610+32])
                Pexp_ident "Gramf.mk" (lang_fans.ml[721,38610+24]..[721,38610+32])
              [
                <label> ""
                  expression (lang_fans.ml[721,38610+33]..[721,38610+37])
                    Pexp_constant Const_string("id",None)
              ]
            core_type (lang_fans.ml[721,38610+10]..[721,38610+21])
              Ptyp_constr "Gramf.t" (lang_fans.ml[721,38610+14]..[721,38610+21])
              [
                core_type (lang_fans.ml[721,38610+10]..[721,38610+13])
                  Ptyp_var id
              ]
        <def>
          pattern (lang_fans.ml[722,38648+6]..[722,38648+19])
            Ppat_var "fan_quot_semi" (lang_fans.ml[722,38648+6]..[722,38648+19])
          expression (lang_fans.ml[722,38648+19]..[722,38648+70]) ghost
            Pexp_constraint
            expression (lang_fans.ml[722,38648+46]..[722,38648+70])
              Pexp_apply
              expression (lang_fans.ml[722,38648+46]..[722,38648+54])
                Pexp_ident "Gramf.mk" (lang_fans.ml[722,38648+46]..[722,38648+54])
              [
                <label> ""
                  expression (lang_fans.ml[722,38648+55]..[722,38648+70])
                    Pexp_constant Const_string("fan_quot_semi",None)
              ]
            core_type (lang_fans.ml[722,38648+21]..[722,38648+43])
              Ptyp_constr "Gramf.t" (lang_fans.ml[722,38648+36]..[722,38648+43])
              [
                core_type (lang_fans.ml[722,38648+21]..[722,38648+35])
                  Ptyp_var fan_quot_semi
              ]
      ]
      expression (lang_fans.ml[723,38722+2]..[1023,50262+41])
        Pexp_sequence
        expression (lang_fans.ml[723,38722+2]..[925,46615+41])
          Pexp_apply
          expression (lang_fans.ml[723,38722+2]..[723,38722+21])
            Pexp_ident "Gramf.extend_single" (lang_fans.ml[723,38722+2]..[723,38722+21])
          [
            <label> ""
              expression (lang_fans.ml[724,38744+4]..[925,46615+41]) ghost
                Pexp_constraint
                expression (lang_fans.ml[724,38744+5]..[925,46615+6])
                  Pexp_record
                  [
                    "entry" (lang_fans.ml[725,38751+7]..[725,38751+12])
                      expression (lang_fans.ml[725,38751+15]..[725,38751+45]) ghost
                        Pexp_constraint
                        expression (lang_fans.ml[725,38751+16]..[725,38751+24])
                          Pexp_ident "fan_quot" (lang_fans.ml[725,38751+16]..[725,38751+24])
                        core_type (lang_fans.ml[725,38751+27]..[725,38751+44])
                          Ptyp_constr "Gramf.t" (lang_fans.ml[725,38751+37]..[725,38751+44])
                          [
                            core_type (lang_fans.ml[725,38751+27]..[725,38751+36])
                              Ptyp_var fan_quot
                          ]
                    "olevel" (lang_fans.ml[726,38798+7]..[726,38798+13])
                      expression (lang_fans.ml[727,38814+9]..[924,46587+27]) ghost
                        Pexp_constraint
                        expression (lang_fans.ml[727,38814+10]..[924,46587+11])
                          Pexp_record
                          [
                            "label" (lang_fans.ml[728,38826+12]..[728,38826+17])
                              expression (lang_fans.ml[728,38826+20]..[728,38826+24])
                                Pexp_construct "None" (lang_fans.ml[728,38826+20]..[728,38826+24])
                                None
                            "lassoc" (lang_fans.ml[729,38852+12]..[729,38852+18])
                              expression (lang_fans.ml[729,38852+21]..[729,38852+25])
                                Pexp_construct "true" (lang_fans.ml[729,38852+21]..[729,38852+25])
                                None
                            "productions" (lang_fans.ml[730,38879+12]..[730,38879+23])
                              expression (lang_fans.ml[731,38905+14]..[923,46570+16])
                                Pexp_construct "::" (lang_fans.ml[731,38905+15]..[923,46570+16]) ghost
                                Some
                                  expression (lang_fans.ml[731,38905+15]..[923,46570+16]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lang_fans.ml[731,38905+15]..[771,40609+16])
                                        Pexp_record
                                        [
                                          "symbols" (lang_fans.ml[732,38922+17]..[732,38922+24])
                                            expression (lang_fans.ml[733,38949+19]..[752,39692+42])
                                              Pexp_construct "::" (lang_fans.ml[733,38949+20]..[752,39692+42]) ghost
                                              Some
                                                expression (lang_fans.ml[733,38949+20]..[752,39692+42]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (lang_fans.ml[733,38949+20]..[741,39228+42])
                                                      Pexp_construct "Token" (lang_fans.ml[733,38949+20]..[733,38949+25])
                                                      Some
                                                        expression (lang_fans.ml[734,38975+22]..[741,39228+42]) ghost
                                                          Pexp_constraint
                                                          expression (lang_fans.ml[734,38975+23]..[741,39228+24])
                                                            Pexp_record
                                                            [
                                                              "descr" (lang_fans.ml[735,39000+25]..[735,39000+30])
                                                                expression (lang_fans.ml[736,39033+27]..[740,39199+28])
                                                                  Pexp_record
                                                                  [
                                                                    "tag" (lang_fans.ml[737,39062+29]..[737,39062+32])
                                                                      expression (lang_fans.ml[737,39062+35]..[737,39062+39])
Pexp_variant "Key"
None
                                                                    "word" (lang_fans.ml[738,39103+29]..[738,39103+33])
                                                                      expression (lang_fans.ml[738,39103+36]..[738,39103+48])
Pexp_construct "A" (lang_fans.ml[738,39103+37]..[738,39103+38])
Some
  expression (lang_fans.ml[738,39103+39]..[738,39103+47])
    Pexp_constant Const_string("derive",None)
                                                                    "tag_name" (lang_fans.ml[739,39153+29]..[739,39153+37])
                                                                      expression (lang_fans.ml[739,39153+40]..[739,39153+45])
Pexp_constant Const_string("Key",None)
                                                                  ]
                                                                  None
                                                            ]
                                                            None
                                                          core_type (lang_fans.ml[741,39228+27]..[741,39228+41])
                                                            Ptyp_constr "Tokenf.pattern" (lang_fans.ml[741,39228+27]..[741,39228+41])
                                                            []
                                                    expression (lang_fans.ml[742,39272+19]..[752,39692+42]) ghost
                                                      Pexp_construct "::" (lang_fans.ml[742,39272+19]..[752,39692+42]) ghost
                                                      Some
                                                        expression (lang_fans.ml[742,39272+19]..[752,39692+42]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (lang_fans.ml[742,39272+19]..[746,39428+41])
                                                              Pexp_construct "Token" (lang_fans.ml[742,39272+19]..[742,39272+24])
                                                              Some
                                                                expression (lang_fans.ml[743,39297+21]..[746,39428+41]) ghost
                                                                  Pexp_constraint
                                                                  expression (lang_fans.ml[743,39297+22]..[746,39428+23])
                                                                    Pexp_record
                                                                    [
                                                                      "descr" (lang_fans.ml[744,39321+24]..[744,39321+29])
expression (lang_fans.ml[745,39353+26]..[745,39353+74])
  Pexp_record
  [
    "tag" (lang_fans.ml[745,39353+28]..[745,39353+31])
      expression (lang_fans.ml[745,39353+34]..[745,39353+38])
        Pexp_variant "Key"
        None
    "word" (lang_fans.ml[745,39353+40]..[745,39353+44])
      expression (lang_fans.ml[745,39353+47]..[745,39353+54])
        Pexp_construct "A" (lang_fans.ml[745,39353+48]..[745,39353+49])
        Some
          expression (lang_fans.ml[745,39353+50]..[745,39353+53])
            Pexp_constant Const_string("(",None)
    "tag_name" (lang_fans.ml[745,39353+56]..[745,39353+64])
      expression (lang_fans.ml[745,39353+67]..[745,39353+72])
        Pexp_constant Const_string("Key",None)
  ]
  None
                                                                    ]
                                                                    None
                                                                  core_type (lang_fans.ml[746,39428+26]..[746,39428+40])
                                                                    Ptyp_constr "Tokenf.pattern" (lang_fans.ml[746,39428+26]..[746,39428+40])
                                                                    []
                                                            expression (lang_fans.ml[747,39471+19]..[752,39692+42]) ghost
                                                              Pexp_construct "::" (lang_fans.ml[747,39471+19]..[752,39692+42]) ghost
                                                              Some
                                                                expression (lang_fans.ml[747,39471+19]..[752,39692+42]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lang_fans.ml[747,39471+19]..[747,39471+63])
                                                                      Pexp_construct "List1" (lang_fans.ml[747,39471+19]..[747,39471+24])
                                                                      Some
expression (lang_fans.ml[747,39471+25]..[747,39471+63])
  Pexp_construct "Nterm" (lang_fans.ml[747,39471+26]..[747,39471+31])
  Some
    expression (lang_fans.ml[747,39471+32]..[747,39471+62])
      Pexp_apply
      expression (lang_fans.ml[747,39471+33]..[747,39471+42])
        Pexp_ident "Gramf.obj" (lang_fans.ml[747,39471+33]..[747,39471+42])
      [
        <label> ""
          expression (lang_fans.ml[747,39471+43]..[747,39471+61]) ghost
            Pexp_constraint
            expression (lang_fans.ml[747,39471+44]..[747,39471+46])
              Pexp_ident "id" (lang_fans.ml[747,39471+44]..[747,39471+46])
            core_type (lang_fans.ml[747,39471+49]..[747,39471+60])
              Ptyp_constr "Gramf.t" (lang_fans.ml[747,39471+53]..[747,39471+60])
              [
                core_type (lang_fans.ml[747,39471+49]..[747,39471+52])
                  Ptyp_var id
              ]
      ]
                                                                    expression (lang_fans.ml[748,39536+19]..[752,39692+42]) ghost
                                                                      Pexp_construct "::" (lang_fans.ml[748,39536+19]..[752,39692+42]) ghost
                                                                      Some
expression (lang_fans.ml[748,39536+19]..[752,39692+42]) ghost
  Pexp_tuple
  [
    expression (lang_fans.ml[748,39536+19]..[752,39692+41])
      Pexp_construct "Token" (lang_fans.ml[748,39536+19]..[748,39536+24])
      Some
        expression (lang_fans.ml[749,39561+21]..[752,39692+41]) ghost
          Pexp_constraint
          expression (lang_fans.ml[749,39561+22]..[752,39692+23])
            Pexp_record
            [
              "descr" (lang_fans.ml[750,39585+24]..[750,39585+29])
                expression (lang_fans.ml[751,39617+26]..[751,39617+74])
                  Pexp_record
                  [
                    "tag" (lang_fans.ml[751,39617+28]..[751,39617+31])
                      expression (lang_fans.ml[751,39617+34]..[751,39617+38])
                        Pexp_variant "Key"
                        None
                    "word" (lang_fans.ml[751,39617+40]..[751,39617+44])
                      expression (lang_fans.ml[751,39617+47]..[751,39617+54])
                        Pexp_construct "A" (lang_fans.ml[751,39617+48]..[751,39617+49])
                        Some
                          expression (lang_fans.ml[751,39617+50]..[751,39617+53])
                            Pexp_constant Const_string(")",None)
                    "tag_name" (lang_fans.ml[751,39617+56]..[751,39617+64])
                      expression (lang_fans.ml[751,39617+67]..[751,39617+72])
                        Pexp_constant Const_string("Key",None)
                  ]
                  None
            ]
            None
          core_type (lang_fans.ml[752,39692+26]..[752,39692+40])
            Ptyp_constr "Tokenf.pattern" (lang_fans.ml[752,39692+26]..[752,39692+40])
            []
    expression (lang_fans.ml[752,39692+41]..[752,39692+42]) ghost
      Pexp_construct "[]" (lang_fans.ml[752,39692+41]..[752,39692+42]) ghost
      None
  ]
                                                                  ]
                                                          ]
                                                  ]
                                          "annot" (lang_fans.ml[753,39736+17]..[753,39736+22])
                                            expression (lang_fans.ml[753,39736+25]..[753,39736+66])
                                              Pexp_constant Const_string("List.iter Typehook.plugin_add plugins\n",None)
                                          "fn" (lang_fans.ml[754,39804+17]..[754,39804+19])
                                            expression (lang_fans.ml[755,39826+19]..[770,40533+75])
                                              Pexp_apply
                                              expression (lang_fans.ml[755,39826+20]..[755,39826+35])
                                                Pexp_ident "Gramf.mk_action" (lang_fans.ml[755,39826+20]..[755,39826+35])
                                              [
                                                <label> ""
                                                  expression (lang_fans.ml[756,39862+22]..[770,40533+74]) ghost
                                                    Pexp_constraint
                                                    expression (lang_fans.ml[756,39862+23]..[767,40383+74])
                                                      Pexp_function
                                                      [
                                                        <case>
                                                          pattern (lang_fans.ml[757,39894+25]..[757,39894+26])
                                                            Ppat_any
                                                          expression (lang_fans.ml[758,39924+27]..[767,40383+74])
                                                            Pexp_function
                                                            [
                                                              <case>
                                                                pattern (lang_fans.ml[759,39961+30]..[759,39961+50])
                                                                  Ppat_constraint
                                                                  pattern (lang_fans.ml[759,39961+31]..[759,39961+38])
                                                                    Ppat_var "plugins" (lang_fans.ml[759,39961+31]..[759,39961+38])
                                                                  core_type (lang_fans.ml[759,39961+41]..[759,39961+49])
                                                                    Ptyp_constr "list" (lang_fans.ml[759,39961+45]..[759,39961+49])
                                                                    [
                                                                      core_type (lang_fans.ml[759,39961+41]..[759,39961+44])
Ptyp_var id
                                                                    ]
                                                                expression (lang_fans.ml[760,40015+32]..[767,40383+73])
                                                                  Pexp_function
                                                                  [
                                                                    <case>
                                                                      pattern (lang_fans.ml[761,40057+35]..[761,40057+36])
Ppat_any
                                                                      expression (lang_fans.ml[762,40097+37]..[767,40383+72])
Pexp_function
[
  <case>
    pattern (lang_fans.ml[763,40144+40]..[763,40144+41])
      Ppat_any
    expression (lang_fans.ml[764,40189+42]..[767,40383+71])
      Pexp_function
      [
        <case>
          pattern (lang_fans.ml[765,40241+45]..[765,40241+60])
            Ppat_constraint
            pattern (lang_fans.ml[765,40241+46]..[765,40241+50])
              Ppat_var "_loc" (lang_fans.ml[765,40241+46]..[765,40241+50])
            core_type (lang_fans.ml[765,40241+53]..[765,40241+59])
              Ptyp_constr "Locf.t" (lang_fans.ml[765,40241+53]..[765,40241+59])
              []
          expression (lang_fans.ml[766,40305+47]..[767,40383+70]) ghost
            Pexp_constraint
            expression (lang_fans.ml[766,40305+48]..[767,40383+57])
              Pexp_apply
              expression (lang_fans.ml[766,40305+48]..[766,40305+57])
                Pexp_ident "List.iter" (lang_fans.ml[766,40305+48]..[766,40305+57])
              [
                <label> ""
                  expression (lang_fans.ml[766,40305+58]..[766,40305+77])
                    Pexp_ident "Typehook.plugin_add" (lang_fans.ml[766,40305+58]..[766,40305+77])
                <label> ""
                  expression (lang_fans.ml[767,40383+50]..[767,40383+57])
                    Pexp_ident "plugins" (lang_fans.ml[767,40383+50]..[767,40383+57])
              ]
            core_type (lang_fans.ml[767,40383+60]..[767,40383+69])
              Ptyp_var fan_quot
      ]
]
                                                                  ]
                                                            ]
                                                      ]
                                                    core_type (lang_fans.ml[768,40461+22]..[770,40533+73])
                                                      Ptyp_arrow
                                                      ""
                                                      core_type (lang_fans.ml[768,40461+22]..[768,40461+32])
                                                        Ptyp_constr "Tokenf.txt" (lang_fans.ml[768,40461+22]..[768,40461+32])
                                                        []
                                                      core_type (lang_fans.ml[769,40497+24]..[770,40533+73])
                                                        Ptyp_arrow
                                                        ""
                                                        core_type (lang_fans.ml[769,40497+24]..[769,40497+32])
                                                          Ptyp_constr "list" (lang_fans.ml[769,40497+28]..[769,40497+32])
                                                          [
                                                            core_type (lang_fans.ml[769,40497+24]..[769,40497+27])
                                                              Ptyp_var id
                                                          ]
                                                        core_type (lang_fans.ml[770,40533+26]..[770,40533+73])
                                                          Ptyp_arrow
                                                          ""
                                                          core_type (lang_fans.ml[770,40533+26]..[770,40533+36])
                                                            Ptyp_constr "Tokenf.txt" (lang_fans.ml[770,40533+26]..[770,40533+36])
                                                            []
                                                          core_type (lang_fans.ml[770,40533+40]..[770,40533+73])
                                                            Ptyp_arrow
                                                            ""
                                                            core_type (lang_fans.ml[770,40533+40]..[770,40533+50])
                                                              Ptyp_constr "Tokenf.txt" (lang_fans.ml[770,40533+40]..[770,40533+50])
                                                              []
                                                            core_type (lang_fans.ml[770,40533+54]..[770,40533+73])
                                                              Ptyp_arrow
                                                              ""
                                                              core_type (lang_fans.ml[770,40533+54]..[770,40533+60])
                                                                Ptyp_constr "Locf.t" (lang_fans.ml[770,40533+54]..[770,40533+60])
                                                                []
                                                              core_type (lang_fans.ml[770,40533+64]..[770,40533+73])
                                                                Ptyp_var fan_quot
                                              ]
                                        ]
                                        None
                                      expression (lang_fans.ml[772,40627+14]..[923,46570+16]) ghost
                                        Pexp_construct "::" (lang_fans.ml[772,40627+14]..[923,46570+16]) ghost
                                        Some
                                          expression (lang_fans.ml[772,40627+14]..[923,46570+16]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lang_fans.ml[772,40627+14]..[801,41896+15])
                                                Pexp_record
                                                [
                                                  "symbols" (lang_fans.ml[773,40643+16]..[773,40643+23])
                                                    expression (lang_fans.ml[774,40669+18]..[787,41189+48])
                                                      Pexp_construct "::" (lang_fans.ml[774,40669+19]..[787,41189+48]) ghost
                                                      Some
                                                        expression (lang_fans.ml[774,40669+19]..[787,41189+48]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (lang_fans.ml[774,40669+19]..[779,40856+41])
                                                              Pexp_construct "Token" (lang_fans.ml[774,40669+19]..[774,40669+24])
                                                              Some
                                                                expression (lang_fans.ml[775,40694+21]..[779,40856+41]) ghost
                                                                  Pexp_constraint
                                                                  expression (lang_fans.ml[775,40694+22]..[779,40856+23])
                                                                    Pexp_record
                                                                    [
                                                                      "descr" (lang_fans.ml[776,40718+24]..[776,40718+29])
expression (lang_fans.ml[777,40750+26]..[778,40828+27])
  Pexp_record
  [
    "tag" (lang_fans.ml[777,40750+28]..[777,40750+31])
      expression (lang_fans.ml[777,40750+34]..[777,40750+38])
        Pexp_variant "Key"
        None
    "word" (lang_fans.ml[777,40750+40]..[777,40750+44])
      expression (lang_fans.ml[777,40750+47]..[777,40750+59])
        Pexp_construct "A" (lang_fans.ml[777,40750+48]..[777,40750+49])
        Some
          expression (lang_fans.ml[777,40750+50]..[777,40750+58])
            Pexp_constant Const_string("unload",None)
    "tag_name" (lang_fans.ml[777,40750+61]..[777,40750+69])
      expression (lang_fans.ml[777,40750+72]..[777,40750+77])
        Pexp_constant Const_string("Key",None)
  ]
  None
                                                                    ]
                                                                    None
                                                                  core_type (lang_fans.ml[779,40856+26]..[779,40856+40])
                                                                    Ptyp_constr "Tokenf.pattern" (lang_fans.ml[779,40856+26]..[779,40856+40])
                                                                    []
                                                            expression (lang_fans.ml[780,40899+18]..[787,41189+48]) ghost
                                                              Pexp_construct "::" (lang_fans.ml[780,40899+18]..[787,41189+48]) ghost
                                                              Some
                                                                expression (lang_fans.ml[780,40899+18]..[787,41189+48]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lang_fans.ml[780,40899+18]..[787,41189+47])
                                                                      Pexp_construct "List1sep" (lang_fans.ml[780,40899+18]..[780,40899+26])
                                                                      Some
expression (lang_fans.ml[781,40926+20]..[787,41189+47])
  Pexp_tuple
  [
    expression (lang_fans.ml[781,40926+21]..[781,40926+59])
      Pexp_construct "Nterm" (lang_fans.ml[781,40926+22]..[781,40926+27])
      Some
        expression (lang_fans.ml[781,40926+28]..[781,40926+58])
          Pexp_apply
          expression (lang_fans.ml[781,40926+29]..[781,40926+38])
            Pexp_ident "Gramf.obj" (lang_fans.ml[781,40926+29]..[781,40926+38])
          [
            <label> ""
              expression (lang_fans.ml[781,40926+39]..[781,40926+57]) ghost
                Pexp_constraint
                expression (lang_fans.ml[781,40926+40]..[781,40926+42])
                  Pexp_ident "id" (lang_fans.ml[781,40926+40]..[781,40926+42])
                core_type (lang_fans.ml[781,40926+45]..[781,40926+56])
                  Ptyp_constr "Gramf.t" (lang_fans.ml[781,40926+49]..[781,40926+56])
                  [
                    core_type (lang_fans.ml[781,40926+45]..[781,40926+48])
                      Ptyp_var id
                  ]
          ]
    expression (lang_fans.ml[782,40987+22]..[787,41189+46])
      Pexp_construct "Token" (lang_fans.ml[782,40987+23]..[782,40987+28])
      Some
        expression (lang_fans.ml[783,41016+25]..[787,41189+45]) ghost
          Pexp_constraint
          expression (lang_fans.ml[783,41016+26]..[787,41189+27])
            Pexp_record
            [
              "descr" (lang_fans.ml[784,41044+28]..[784,41044+33])
                expression (lang_fans.ml[785,41080+30]..[786,41157+31])
                  Pexp_record
                  [
                    "tag" (lang_fans.ml[785,41080+32]..[785,41080+35])
                      expression (lang_fans.ml[785,41080+38]..[785,41080+42])
                        Pexp_variant "Key"
                        None
                    "word" (lang_fans.ml[785,41080+44]..[785,41080+48])
                      expression (lang_fans.ml[785,41080+51]..[785,41080+58])
                        Pexp_construct "A" (lang_fans.ml[785,41080+52]..[785,41080+53])
                        Some
                          expression (lang_fans.ml[785,41080+54]..[785,41080+57])
                            Pexp_constant Const_string(",",None)
                    "tag_name" (lang_fans.ml[785,41080+60]..[785,41080+68])
                      expression (lang_fans.ml[785,41080+71]..[785,41080+76])
                        Pexp_constant Const_string("Key",None)
                  ]
                  None
            ]
            None
          core_type (lang_fans.ml[787,41189+30]..[787,41189+44])
            Ptyp_constr "Tokenf.pattern" (lang_fans.ml[787,41189+30]..[787,41189+44])
            []
  ]
                                                                    expression (lang_fans.ml[787,41189+47]..[787,41189+48]) ghost
                                                                      Pexp_construct "[]" (lang_fans.ml[787,41189+47]..[787,41189+48]) ghost
                                                                      None
                                                                  ]
                                                          ]
                                                  "annot" (lang_fans.ml[788,41239+16]..[788,41239+21])
                                                    expression (lang_fans.ml[788,41239+24]..[788,41239+68])
                                                      Pexp_constant Const_string("List.iter Typehook.plugin_remove plugins\n",None)
                                                  "fn" (lang_fans.ml[789,41309+16]..[789,41309+18])
                                                    expression (lang_fans.ml[790,41330+18]..[800,41819+76])
                                                      Pexp_apply
                                                      expression (lang_fans.ml[790,41330+19]..[790,41330+34])
                                                        Pexp_ident "Gramf.mk_action" (lang_fans.ml[790,41330+19]..[790,41330+34])
                                                      [
                                                        <label> ""
                                                          expression (lang_fans.ml[791,41365+21]..[800,41819+75]) ghost
                                                            Pexp_constraint
                                                            expression (lang_fans.ml[791,41365+22]..[798,41689+48])
                                                              Pexp_function
                                                              [
                                                                <case>
                                                                  pattern (lang_fans.ml[792,41396+24]..[792,41396+44])
                                                                    Ppat_constraint
                                                                    pattern (lang_fans.ml[792,41396+25]..[792,41396+32])
                                                                      Ppat_var "plugins" (lang_fans.ml[792,41396+25]..[792,41396+32])
                                                                    core_type (lang_fans.ml[792,41396+35]..[792,41396+43])
                                                                      Ptyp_constr "list" (lang_fans.ml[792,41396+39]..[792,41396+43])
                                                                      [
core_type (lang_fans.ml[792,41396+35]..[792,41396+38])
  Ptyp_var id
                                                                      ]
                                                                  expression (lang_fans.ml[793,41444+26]..[798,41689+48])
                                                                    Pexp_function
                                                                    [
                                                                      <case>
pattern (lang_fans.ml[794,41480+29]..[794,41480+30])
  Ppat_any
expression (lang_fans.ml[795,41514+31]..[798,41689+47])
  Pexp_function
  [
    <case>
      pattern (lang_fans.ml[796,41555+34]..[796,41555+49])
        Ppat_constraint
        pattern (lang_fans.ml[796,41555+35]..[796,41555+39])
          Ppat_var "_loc" (lang_fans.ml[796,41555+35]..[796,41555+39])
        core_type (lang_fans.ml[796,41555+42]..[796,41555+48])
          Ptyp_constr "Locf.t" (lang_fans.ml[796,41555+42]..[796,41555+48])
          []
      expression (lang_fans.ml[797,41608+36]..[798,41689+46]) ghost
        Pexp_constraint
        expression (lang_fans.ml[797,41608+37]..[797,41608+77])
          Pexp_apply
          expression (lang_fans.ml[797,41608+37]..[797,41608+46])
            Pexp_ident "List.iter" (lang_fans.ml[797,41608+37]..[797,41608+46])
          [
            <label> ""
              expression (lang_fans.ml[797,41608+47]..[797,41608+69])
                Pexp_ident "Typehook.plugin_remove" (lang_fans.ml[797,41608+47]..[797,41608+69])
            <label> ""
              expression (lang_fans.ml[797,41608+70]..[797,41608+77])
                Pexp_ident "plugins" (lang_fans.ml[797,41608+70]..[797,41608+77])
          ]
        core_type (lang_fans.ml[798,41689+36]..[798,41689+45])
          Ptyp_var fan_quot
  ]
                                                                    ]
                                                              ]
                                                            core_type (lang_fans.ml[798,41689+51]..[800,41819+74])
                                                              Ptyp_arrow
                                                              ""
                                                              core_type (lang_fans.ml[798,41689+51]..[798,41689+59])
                                                                Ptyp_constr "list" (lang_fans.ml[798,41689+55]..[798,41689+59])
                                                                [
                                                                  core_type (lang_fans.ml[798,41689+51]..[798,41689+54])
                                                                    Ptyp_var id
                                                                ]
                                                              core_type (lang_fans.ml[799,41752+53]..[800,41819+74])
                                                                Ptyp_arrow
                                                                ""
                                                                core_type (lang_fans.ml[799,41752+53]..[799,41752+63])
                                                                  Ptyp_constr "Tokenf.txt" (lang_fans.ml[799,41752+53]..[799,41752+63])
                                                                  []
                                                                core_type (lang_fans.ml[800,41819+55]..[800,41819+74])
                                                                  Ptyp_arrow
                                                                  ""
                                                                  core_type (lang_fans.ml[800,41819+55]..[800,41819+61])
                                                                    Ptyp_constr "Locf.t" (lang_fans.ml[800,41819+55]..[800,41819+61])
                                                                    []
                                                                  core_type (lang_fans.ml[800,41819+65]..[800,41819+74])
                                                                    Ptyp_var fan_quot
                                                      ]
                                                ]
                                                None
                                              expression (lang_fans.ml[802,41913+14]..[923,46570+16]) ghost
                                                Pexp_construct "::" (lang_fans.ml[802,41913+14]..[923,46570+16]) ghost
                                                Some
                                                  expression (lang_fans.ml[802,41913+14]..[923,46570+16]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lang_fans.ml[802,41913+14]..[819,42582+15])
                                                        Pexp_record
                                                        [
                                                          "symbols" (lang_fans.ml[803,41929+16]..[803,41929+23])
                                                            expression (lang_fans.ml[804,41955+18]..[809,42141+42])
                                                              Pexp_construct "::" (lang_fans.ml[804,41955+19]..[809,42141+42]) ghost
                                                              Some
                                                                expression (lang_fans.ml[804,41955+19]..[809,42141+42]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lang_fans.ml[804,41955+19]..[809,42141+41])
                                                                      Pexp_construct "Token" (lang_fans.ml[804,41955+19]..[804,41955+24])
                                                                      Some
expression (lang_fans.ml[805,41980+21]..[809,42141+41]) ghost
  Pexp_constraint
  expression (lang_fans.ml[805,41980+22]..[809,42141+23])
    Pexp_record
    [
      "descr" (lang_fans.ml[806,42004+24]..[806,42004+29])
        expression (lang_fans.ml[807,42036+26]..[808,42113+27])
          Pexp_record
          [
            "tag" (lang_fans.ml[807,42036+28]..[807,42036+31])
              expression (lang_fans.ml[807,42036+34]..[807,42036+38])
                Pexp_variant "Key"
                None
            "word" (lang_fans.ml[807,42036+40]..[807,42036+44])
              expression (lang_fans.ml[807,42036+47]..[807,42036+58])
                Pexp_construct "A" (lang_fans.ml[807,42036+48]..[807,42036+49])
                Some
                  expression (lang_fans.ml[807,42036+50]..[807,42036+57])
                    Pexp_constant Const_string("clear",None)
            "tag_name" (lang_fans.ml[807,42036+60]..[807,42036+68])
              expression (lang_fans.ml[807,42036+71]..[807,42036+76])
                Pexp_constant Const_string("Key",None)
          ]
          None
    ]
    None
  core_type (lang_fans.ml[809,42141+26]..[809,42141+40])
    Ptyp_constr "Tokenf.pattern" (lang_fans.ml[809,42141+26]..[809,42141+40])
    []
                                                                    expression (lang_fans.ml[809,42141+41]..[809,42141+42]) ghost
                                                                      Pexp_construct "[]" (lang_fans.ml[809,42141+41]..[809,42141+42]) ghost
                                                                      None
                                                                  ]
                                                          "annot" (lang_fans.ml[810,42185+16]..[810,42185+21])
                                                            expression (lang_fans.ml[810,42185+24]..[810,42185+58])
                                                              Pexp_constant Const_string("State.reset_current_filters ()\n",None)
                                                          "fn" (lang_fans.ml[811,42245+16]..[811,42245+18])
                                                            expression (lang_fans.ml[812,42266+18]..[818,42525+56])
                                                              Pexp_apply
                                                              expression (lang_fans.ml[812,42266+19]..[812,42266+34])
                                                                Pexp_ident "Gramf.mk_action" (lang_fans.ml[812,42266+19]..[812,42266+34])
                                                              [
                                                                <label> ""
                                                                  expression (lang_fans.ml[813,42301+21]..[818,42525+55]) ghost
                                                                    Pexp_constraint
                                                                    expression (lang_fans.ml[813,42301+22]..[817,42445+76])
                                                                      Pexp_function
                                                                      [
<case>
  pattern (lang_fans.ml[814,42332+24]..[814,42332+25])
    Ppat_any
  expression (lang_fans.ml[815,42361+26]..[817,42445+76])
    Pexp_function
    [
      <case>
        pattern (lang_fans.ml[816,42397+29]..[816,42397+44])
          Ppat_constraint
          pattern (lang_fans.ml[816,42397+30]..[816,42397+34])
            Ppat_var "_loc" (lang_fans.ml[816,42397+30]..[816,42397+34])
          core_type (lang_fans.ml[816,42397+37]..[816,42397+43])
            Ptyp_constr "Locf.t" (lang_fans.ml[816,42397+37]..[816,42397+43])
            []
        expression (lang_fans.ml[817,42445+31]..[817,42445+75]) ghost
          Pexp_constraint
          expression (lang_fans.ml[817,42445+32]..[817,42445+62])
            Pexp_apply
            expression (lang_fans.ml[817,42445+32]..[817,42445+59])
              Pexp_ident "State.reset_current_filters" (lang_fans.ml[817,42445+32]..[817,42445+59])
            [
              <label> ""
                expression (lang_fans.ml[817,42445+60]..[817,42445+62])
                  Pexp_construct "()" (lang_fans.ml[817,42445+60]..[817,42445+62])
                  None
            ]
          core_type (lang_fans.ml[817,42445+65]..[817,42445+74])
            Ptyp_var fan_quot
    ]
                                                                      ]
                                                                    core_type (lang_fans.ml[818,42525+21]..[818,42525+54])
                                                                      Ptyp_arrow
                                                                      ""
                                                                      core_type (lang_fans.ml[818,42525+21]..[818,42525+31])
Ptyp_constr "Tokenf.txt" (lang_fans.ml[818,42525+21]..[818,42525+31])
[]
                                                                      core_type (lang_fans.ml[818,42525+35]..[818,42525+54])
Ptyp_arrow
""
core_type (lang_fans.ml[818,42525+35]..[818,42525+41])
  Ptyp_constr "Locf.t" (lang_fans.ml[818,42525+35]..[818,42525+41])
  []
core_type (lang_fans.ml[818,42525+45]..[818,42525+54])
  Ptyp_var fan_quot
                                                              ]
                                                        ]
                                                        None
                                                      expression (lang_fans.ml[820,42599+14]..[923,46570+16]) ghost
                                                        Pexp_construct "::" (lang_fans.ml[820,42599+14]..[923,46570+16]) ghost
                                                        Some
                                                          expression (lang_fans.ml[820,42599+14]..[923,46570+16]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lang_fans.ml[820,42599+14]..[843,43512+15])
                                                                Pexp_record
                                                                [
                                                                  "symbols" (lang_fans.ml[821,42615+16]..[821,42615+23])
                                                                    expression (lang_fans.ml[822,42641+18]..[831,42996+41])
                                                                      Pexp_construct "::" (lang_fans.ml[822,42641+19]..[831,42996+41]) ghost
                                                                      Some
expression (lang_fans.ml[822,42641+19]..[831,42996+41]) ghost
  Pexp_tuple
  [
    expression (lang_fans.ml[822,42641+19]..[826,42800+41])
      Pexp_construct "Token" (lang_fans.ml[822,42641+19]..[822,42641+24])
      Some
        expression (lang_fans.ml[823,42666+21]..[826,42800+41]) ghost
          Pexp_constraint
          expression (lang_fans.ml[823,42666+22]..[826,42800+23])
            Pexp_record
            [
              "descr" (lang_fans.ml[824,42690+24]..[824,42690+29])
                expression (lang_fans.ml[825,42722+26]..[825,42722+77])
                  Pexp_record
                  [
                    "tag" (lang_fans.ml[825,42722+28]..[825,42722+31])
                      expression (lang_fans.ml[825,42722+34]..[825,42722+38])
                        Pexp_variant "Key"
                        None
                    "word" (lang_fans.ml[825,42722+40]..[825,42722+44])
                      expression (lang_fans.ml[825,42722+47]..[825,42722+57])
                        Pexp_construct "A" (lang_fans.ml[825,42722+48]..[825,42722+49])
                        Some
                          expression (lang_fans.ml[825,42722+50]..[825,42722+56])
                            Pexp_constant Const_string("keep",None)
                    "tag_name" (lang_fans.ml[825,42722+59]..[825,42722+67])
                      expression (lang_fans.ml[825,42722+70]..[825,42722+75])
                        Pexp_constant Const_string("Key",None)
                  ]
                  None
            ]
            None
          core_type (lang_fans.ml[826,42800+26]..[826,42800+40])
            Ptyp_constr "Tokenf.pattern" (lang_fans.ml[826,42800+26]..[826,42800+40])
            []
    expression (lang_fans.ml[827,42843+18]..[831,42996+41]) ghost
      Pexp_construct "::" (lang_fans.ml[827,42843+18]..[831,42996+41]) ghost
      Some
        expression (lang_fans.ml[827,42843+18]..[831,42996+41]) ghost
          Pexp_tuple
          [
            expression (lang_fans.ml[827,42843+18]..[831,42996+40])
              Pexp_construct "Token" (lang_fans.ml[827,42843+18]..[827,42843+23])
              Some
                expression (lang_fans.ml[828,42867+20]..[831,42996+40]) ghost
                  Pexp_constraint
                  expression (lang_fans.ml[828,42867+21]..[831,42996+22])
                    Pexp_record
                    [
                      "descr" (lang_fans.ml[829,42890+23]..[829,42890+28])
                        expression (lang_fans.ml[830,42921+25]..[830,42921+74])
                          Pexp_record
                          [
                            "tag" (lang_fans.ml[830,42921+27]..[830,42921+30])
                              expression (lang_fans.ml[830,42921+33]..[830,42921+37])
                                Pexp_variant "Key"
                                None
                            "word" (lang_fans.ml[830,42921+39]..[830,42921+43])
                              expression (lang_fans.ml[830,42921+46]..[830,42921+54])
                                Pexp_construct "A" (lang_fans.ml[830,42921+47]..[830,42921+48])
                                Some
                                  expression (lang_fans.ml[830,42921+49]..[830,42921+53])
                                    Pexp_constant Const_string("on",None)
                            "tag_name" (lang_fans.ml[830,42921+56]..[830,42921+64])
                              expression (lang_fans.ml[830,42921+67]..[830,42921+72])
                                Pexp_constant Const_string("Key",None)
                          ]
                          None
                    ]
                    None
                  core_type (lang_fans.ml[831,42996+25]..[831,42996+39])
                    Ptyp_constr "Tokenf.pattern" (lang_fans.ml[831,42996+25]..[831,42996+39])
                    []
            expression (lang_fans.ml[831,42996+40]..[831,42996+41]) ghost
              Pexp_construct "[]" (lang_fans.ml[831,42996+40]..[831,42996+41]) ghost
              None
          ]
  ]
                                                                  "annot" (lang_fans.ml[832,43039+16]..[832,43039+21])
                                                                    expression (lang_fans.ml[832,43039+24]..[832,43039+46])
                                                                      Pexp_constant Const_string("State.keep := true\n",None)
                                                                  "fn" (lang_fans.ml[833,43087+16]..[833,43087+18])
                                                                    expression (lang_fans.ml[834,43108+18]..[842,43441+70])
                                                                      Pexp_apply
                                                                      expression (lang_fans.ml[834,43108+19]..[834,43108+34])
Pexp_ident "Gramf.mk_action" (lang_fans.ml[834,43108+19]..[834,43108+34])
                                                                      [
<label> ""
  expression (lang_fans.ml[835,43143+21]..[842,43441+69]) ghost
    Pexp_constraint
    expression (lang_fans.ml[835,43143+22]..[841,43367+70])
      Pexp_function
      [
        <case>
          pattern (lang_fans.ml[836,43174+24]..[836,43174+25])
            Ppat_any
          expression (lang_fans.ml[837,43203+26]..[841,43367+70])
            Pexp_function
            [
              <case>
                pattern (lang_fans.ml[838,43239+29]..[838,43239+30])
                  Ppat_any
                expression (lang_fans.ml[839,43273+31]..[841,43367+69])
                  Pexp_function
                  [
                    <case>
                      pattern (lang_fans.ml[840,43314+34]..[840,43314+49])
                        Ppat_constraint
                        pattern (lang_fans.ml[840,43314+35]..[840,43314+39])
                          Ppat_var "_loc" (lang_fans.ml[840,43314+35]..[840,43314+39])
                        core_type (lang_fans.ml[840,43314+42]..[840,43314+48])
                          Ptyp_constr "Locf.t" (lang_fans.ml[840,43314+42]..[840,43314+48])
                          []
                      expression (lang_fans.ml[841,43367+36]..[841,43367+68]) ghost
                        Pexp_constraint
                        expression (lang_fans.ml[841,43367+37]..[841,43367+55])
                          Pexp_apply
                          expression (lang_fans.ml[841,43367+48]..[841,43367+50])
                            Pexp_ident ":=" (lang_fans.ml[841,43367+48]..[841,43367+50])
                          [
                            <label> ""
                              expression (lang_fans.ml[841,43367+37]..[841,43367+47])
                                Pexp_ident "State.keep" (lang_fans.ml[841,43367+37]..[841,43367+47])
                            <label> ""
                              expression (lang_fans.ml[841,43367+51]..[841,43367+55])
                                Pexp_construct "true" (lang_fans.ml[841,43367+51]..[841,43367+55])
                                None
                          ]
                        core_type (lang_fans.ml[841,43367+58]..[841,43367+67])
                          Ptyp_var fan_quot
                  ]
            ]
      ]
    core_type (lang_fans.ml[842,43441+21]..[842,43441+68])
      Ptyp_arrow
      ""
      core_type (lang_fans.ml[842,43441+21]..[842,43441+31])
        Ptyp_constr "Tokenf.txt" (lang_fans.ml[842,43441+21]..[842,43441+31])
        []
      core_type (lang_fans.ml[842,43441+35]..[842,43441+68])
        Ptyp_arrow
        ""
        core_type (lang_fans.ml[842,43441+35]..[842,43441+45])
          Ptyp_constr "Tokenf.txt" (lang_fans.ml[842,43441+35]..[842,43441+45])
          []
        core_type (lang_fans.ml[842,43441+49]..[842,43441+68])
          Ptyp_arrow
          ""
          core_type (lang_fans.ml[842,43441+49]..[842,43441+55])
            Ptyp_constr "Locf.t" (lang_fans.ml[842,43441+49]..[842,43441+55])
            []
          core_type (lang_fans.ml[842,43441+59]..[842,43441+68])
            Ptyp_var fan_quot
                                                                      ]
                                                                ]
                                                                None
                                                              expression (lang_fans.ml[844,43529+14]..[923,46570+16]) ghost
                                                                Pexp_construct "::" (lang_fans.ml[844,43529+14]..[923,46570+16]) ghost
                                                                Some
                                                                  expression (lang_fans.ml[844,43529+14]..[923,46570+16]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lang_fans.ml[844,43529+14]..[867,44445+15])
Pexp_record
[
  "symbols" (lang_fans.ml[845,43545+16]..[845,43545+23])
    expression (lang_fans.ml[846,43571+18]..[855,43927+41])
      Pexp_construct "::" (lang_fans.ml[846,43571+19]..[855,43927+41]) ghost
      Some
        expression (lang_fans.ml[846,43571+19]..[855,43927+41]) ghost
          Pexp_tuple
          [
            expression (lang_fans.ml[846,43571+19]..[850,43730+41])
              Pexp_construct "Token" (lang_fans.ml[846,43571+19]..[846,43571+24])
              Some
                expression (lang_fans.ml[847,43596+21]..[850,43730+41]) ghost
                  Pexp_constraint
                  expression (lang_fans.ml[847,43596+22]..[850,43730+23])
                    Pexp_record
                    [
                      "descr" (lang_fans.ml[848,43620+24]..[848,43620+29])
                        expression (lang_fans.ml[849,43652+26]..[849,43652+77])
                          Pexp_record
                          [
                            "tag" (lang_fans.ml[849,43652+28]..[849,43652+31])
                              expression (lang_fans.ml[849,43652+34]..[849,43652+38])
                                Pexp_variant "Key"
                                None
                            "word" (lang_fans.ml[849,43652+40]..[849,43652+44])
                              expression (lang_fans.ml[849,43652+47]..[849,43652+57])
                                Pexp_construct "A" (lang_fans.ml[849,43652+48]..[849,43652+49])
                                Some
                                  expression (lang_fans.ml[849,43652+50]..[849,43652+56])
                                    Pexp_constant Const_string("keep",None)
                            "tag_name" (lang_fans.ml[849,43652+59]..[849,43652+67])
                              expression (lang_fans.ml[849,43652+70]..[849,43652+75])
                                Pexp_constant Const_string("Key",None)
                          ]
                          None
                    ]
                    None
                  core_type (lang_fans.ml[850,43730+26]..[850,43730+40])
                    Ptyp_constr "Tokenf.pattern" (lang_fans.ml[850,43730+26]..[850,43730+40])
                    []
            expression (lang_fans.ml[851,43773+18]..[855,43927+41]) ghost
              Pexp_construct "::" (lang_fans.ml[851,43773+18]..[855,43927+41]) ghost
              Some
                expression (lang_fans.ml[851,43773+18]..[855,43927+41]) ghost
                  Pexp_tuple
                  [
                    expression (lang_fans.ml[851,43773+18]..[855,43927+40])
                      Pexp_construct "Token" (lang_fans.ml[851,43773+18]..[851,43773+23])
                      Some
                        expression (lang_fans.ml[852,43797+20]..[855,43927+40]) ghost
                          Pexp_constraint
                          expression (lang_fans.ml[852,43797+21]..[855,43927+22])
                            Pexp_record
                            [
                              "descr" (lang_fans.ml[853,43820+23]..[853,43820+28])
                                expression (lang_fans.ml[854,43851+25]..[854,43851+75])
                                  Pexp_record
                                  [
                                    "tag" (lang_fans.ml[854,43851+27]..[854,43851+30])
                                      expression (lang_fans.ml[854,43851+33]..[854,43851+37])
                                        Pexp_variant "Key"
                                        None
                                    "word" (lang_fans.ml[854,43851+39]..[854,43851+43])
                                      expression (lang_fans.ml[854,43851+46]..[854,43851+55])
                                        Pexp_construct "A" (lang_fans.ml[854,43851+47]..[854,43851+48])
                                        Some
                                          expression (lang_fans.ml[854,43851+49]..[854,43851+54])
                                            Pexp_constant Const_string("off",None)
                                    "tag_name" (lang_fans.ml[854,43851+57]..[854,43851+65])
                                      expression (lang_fans.ml[854,43851+68]..[854,43851+73])
                                        Pexp_constant Const_string("Key",None)
                                  ]
                                  None
                            ]
                            None
                          core_type (lang_fans.ml[855,43927+25]..[855,43927+39])
                            Ptyp_constr "Tokenf.pattern" (lang_fans.ml[855,43927+25]..[855,43927+39])
                            []
                    expression (lang_fans.ml[855,43927+40]..[855,43927+41]) ghost
                      Pexp_construct "[]" (lang_fans.ml[855,43927+40]..[855,43927+41]) ghost
                      None
                  ]
          ]
  "annot" (lang_fans.ml[856,43970+16]..[856,43970+21])
    expression (lang_fans.ml[856,43970+24]..[856,43970+47])
      Pexp_constant Const_string("State.keep := false\n",None)
  "fn" (lang_fans.ml[857,44019+16]..[857,44019+18])
    expression (lang_fans.ml[858,44040+18]..[866,44374+70])
      Pexp_apply
      expression (lang_fans.ml[858,44040+19]..[858,44040+34])
        Pexp_ident "Gramf.mk_action" (lang_fans.ml[858,44040+19]..[858,44040+34])
      [
        <label> ""
          expression (lang_fans.ml[859,44075+21]..[866,44374+69]) ghost
            Pexp_constraint
            expression (lang_fans.ml[859,44075+22]..[865,44299+71])
              Pexp_function
              [
                <case>
                  pattern (lang_fans.ml[860,44106+24]..[860,44106+25])
                    Ppat_any
                  expression (lang_fans.ml[861,44135+26]..[865,44299+71])
                    Pexp_function
                    [
                      <case>
                        pattern (lang_fans.ml[862,44171+29]..[862,44171+30])
                          Ppat_any
                        expression (lang_fans.ml[863,44205+31]..[865,44299+70])
                          Pexp_function
                          [
                            <case>
                              pattern (lang_fans.ml[864,44246+34]..[864,44246+49])
                                Ppat_constraint
                                pattern (lang_fans.ml[864,44246+35]..[864,44246+39])
                                  Ppat_var "_loc" (lang_fans.ml[864,44246+35]..[864,44246+39])
                                core_type (lang_fans.ml[864,44246+42]..[864,44246+48])
                                  Ptyp_constr "Locf.t" (lang_fans.ml[864,44246+42]..[864,44246+48])
                                  []
                              expression (lang_fans.ml[865,44299+36]..[865,44299+69]) ghost
                                Pexp_constraint
                                expression (lang_fans.ml[865,44299+37]..[865,44299+56])
                                  Pexp_apply
                                  expression (lang_fans.ml[865,44299+48]..[865,44299+50])
                                    Pexp_ident ":=" (lang_fans.ml[865,44299+48]..[865,44299+50])
                                  [
                                    <label> ""
                                      expression (lang_fans.ml[865,44299+37]..[865,44299+47])
                                        Pexp_ident "State.keep" (lang_fans.ml[865,44299+37]..[865,44299+47])
                                    <label> ""
                                      expression (lang_fans.ml[865,44299+51]..[865,44299+56])
                                        Pexp_construct "false" (lang_fans.ml[865,44299+51]..[865,44299+56])
                                        None
                                  ]
                                core_type (lang_fans.ml[865,44299+59]..[865,44299+68])
                                  Ptyp_var fan_quot
                          ]
                    ]
              ]
            core_type (lang_fans.ml[866,44374+21]..[866,44374+68])
              Ptyp_arrow
              ""
              core_type (lang_fans.ml[866,44374+21]..[866,44374+31])
                Ptyp_constr "Tokenf.txt" (lang_fans.ml[866,44374+21]..[866,44374+31])
                []
              core_type (lang_fans.ml[866,44374+35]..[866,44374+68])
                Ptyp_arrow
                ""
                core_type (lang_fans.ml[866,44374+35]..[866,44374+45])
                  Ptyp_constr "Tokenf.txt" (lang_fans.ml[866,44374+35]..[866,44374+45])
                  []
                core_type (lang_fans.ml[866,44374+49]..[866,44374+68])
                  Ptyp_arrow
                  ""
                  core_type (lang_fans.ml[866,44374+49]..[866,44374+55])
                    Ptyp_constr "Locf.t" (lang_fans.ml[866,44374+49]..[866,44374+55])
                    []
                  core_type (lang_fans.ml[866,44374+59]..[866,44374+68])
                    Ptyp_var fan_quot
      ]
]
None
                                                                      expression (lang_fans.ml[868,44462+14]..[923,46570+16]) ghost
Pexp_construct "::" (lang_fans.ml[868,44462+14]..[923,46570+16]) ghost
Some
  expression (lang_fans.ml[868,44462+14]..[923,46570+16]) ghost
    Pexp_tuple
    [
      expression (lang_fans.ml[868,44462+14]..[895,45506+15])
        Pexp_record
        [
          "symbols" (lang_fans.ml[869,44478+16]..[869,44478+23])
            expression (lang_fans.ml[870,44504+18]..[883,44974+41])
              Pexp_construct "::" (lang_fans.ml[870,44504+19]..[883,44974+41]) ghost
              Some
                expression (lang_fans.ml[870,44504+19]..[883,44974+41]) ghost
                  Pexp_tuple
                  [
                    expression (lang_fans.ml[870,44504+19]..[878,44778+41])
                      Pexp_construct "Token" (lang_fans.ml[870,44504+19]..[870,44504+24])
                      Some
                        expression (lang_fans.ml[871,44529+21]..[878,44778+41]) ghost
                          Pexp_constraint
                          expression (lang_fans.ml[871,44529+22]..[878,44778+23])
                            Pexp_record
                            [
                              "descr" (lang_fans.ml[872,44553+24]..[872,44553+29])
                                expression (lang_fans.ml[873,44585+26]..[877,44750+27])
                                  Pexp_record
                                  [
                                    "tag" (lang_fans.ml[874,44613+28]..[874,44613+31])
                                      expression (lang_fans.ml[874,44613+34]..[874,44613+38])
                                        Pexp_variant "Key"
                                        None
                                    "word" (lang_fans.ml[875,44653+28]..[875,44653+32])
                                      expression (lang_fans.ml[875,44653+35]..[875,44653+50])
                                        Pexp_construct "A" (lang_fans.ml[875,44653+36]..[875,44653+37])
                                        Some
                                          expression (lang_fans.ml[875,44653+38]..[875,44653+49])
                                            Pexp_constant Const_string("show_code",None)
                                    "tag_name" (lang_fans.ml[876,44705+28]..[876,44705+36])
                                      expression (lang_fans.ml[876,44705+39]..[876,44705+44])
                                        Pexp_constant Const_string("Key",None)
                                  ]
                                  None
                            ]
                            None
                          core_type (lang_fans.ml[878,44778+26]..[878,44778+40])
                            Ptyp_constr "Tokenf.pattern" (lang_fans.ml[878,44778+26]..[878,44778+40])
                            []
                    expression (lang_fans.ml[879,44821+18]..[883,44974+41]) ghost
                      Pexp_construct "::" (lang_fans.ml[879,44821+18]..[883,44974+41]) ghost
                      Some
                        expression (lang_fans.ml[879,44821+18]..[883,44974+41]) ghost
                          Pexp_tuple
                          [
                            expression (lang_fans.ml[879,44821+18]..[883,44974+40])
                              Pexp_construct "Token" (lang_fans.ml[879,44821+18]..[879,44821+23])
                              Some
                                expression (lang_fans.ml[880,44845+20]..[883,44974+40]) ghost
                                  Pexp_constraint
                                  expression (lang_fans.ml[880,44845+21]..[883,44974+22])
                                    Pexp_record
                                    [
                                      "descr" (lang_fans.ml[881,44868+23]..[881,44868+28])
                                        expression (lang_fans.ml[882,44899+25]..[882,44899+74])
                                          Pexp_record
                                          [
                                            "tag" (lang_fans.ml[882,44899+27]..[882,44899+30])
                                              expression (lang_fans.ml[882,44899+33]..[882,44899+37])
                                                Pexp_variant "Key"
                                                None
                                            "word" (lang_fans.ml[882,44899+39]..[882,44899+43])
                                              expression (lang_fans.ml[882,44899+46]..[882,44899+54])
                                                Pexp_construct "A" (lang_fans.ml[882,44899+47]..[882,44899+48])
                                                Some
                                                  expression (lang_fans.ml[882,44899+49]..[882,44899+53])
                                                    Pexp_constant Const_string("on",None)
                                            "tag_name" (lang_fans.ml[882,44899+56]..[882,44899+64])
                                              expression (lang_fans.ml[882,44899+67]..[882,44899+72])
                                                Pexp_constant Const_string("Key",None)
                                          ]
                                          None
                                    ]
                                    None
                                  core_type (lang_fans.ml[883,44974+25]..[883,44974+39])
                                    Ptyp_constr "Tokenf.pattern" (lang_fans.ml[883,44974+25]..[883,44974+39])
                                    []
                            expression (lang_fans.ml[883,44974+40]..[883,44974+41]) ghost
                              Pexp_construct "[]" (lang_fans.ml[883,44974+40]..[883,44974+41]) ghost
                              None
                          ]
                  ]
          "annot" (lang_fans.ml[884,45017+16]..[884,45017+21])
            expression (lang_fans.ml[884,45017+24]..[884,45017+54])
              Pexp_constant Const_string("Typehook.show_code := true\n",None)
          "fn" (lang_fans.ml[885,45073+16]..[885,45073+18])
            expression (lang_fans.ml[886,45094+18]..[894,45435+70])
              Pexp_apply
              expression (lang_fans.ml[886,45094+19]..[886,45094+34])
                Pexp_ident "Gramf.mk_action" (lang_fans.ml[886,45094+19]..[886,45094+34])
              [
                <label> ""
                  expression (lang_fans.ml[887,45129+21]..[894,45435+69]) ghost
                    Pexp_constraint
                    expression (lang_fans.ml[887,45129+22]..[893,45353+78])
                      Pexp_function
                      [
                        <case>
                          pattern (lang_fans.ml[888,45160+24]..[888,45160+25])
                            Ppat_any
                          expression (lang_fans.ml[889,45189+26]..[893,45353+78])
                            Pexp_function
                            [
                              <case>
                                pattern (lang_fans.ml[890,45225+29]..[890,45225+30])
                                  Ppat_any
                                expression (lang_fans.ml[891,45259+31]..[893,45353+77])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (lang_fans.ml[892,45300+34]..[892,45300+49])
                                        Ppat_constraint
                                        pattern (lang_fans.ml[892,45300+35]..[892,45300+39])
                                          Ppat_var "_loc" (lang_fans.ml[892,45300+35]..[892,45300+39])
                                        core_type (lang_fans.ml[892,45300+42]..[892,45300+48])
                                          Ptyp_constr "Locf.t" (lang_fans.ml[892,45300+42]..[892,45300+48])
                                          []
                                      expression (lang_fans.ml[893,45353+36]..[893,45353+76]) ghost
                                        Pexp_constraint
                                        expression (lang_fans.ml[893,45353+37]..[893,45353+63])
                                          Pexp_apply
                                          expression (lang_fans.ml[893,45353+56]..[893,45353+58])
                                            Pexp_ident ":=" (lang_fans.ml[893,45353+56]..[893,45353+58])
                                          [
                                            <label> ""
                                              expression (lang_fans.ml[893,45353+37]..[893,45353+55])
                                                Pexp_ident "Typehook.show_code" (lang_fans.ml[893,45353+37]..[893,45353+55])
                                            <label> ""
                                              expression (lang_fans.ml[893,45353+59]..[893,45353+63])
                                                Pexp_construct "true" (lang_fans.ml[893,45353+59]..[893,45353+63])
                                                None
                                          ]
                                        core_type (lang_fans.ml[893,45353+66]..[893,45353+75])
                                          Ptyp_var fan_quot
                                  ]
                            ]
                      ]
                    core_type (lang_fans.ml[894,45435+21]..[894,45435+68])
                      Ptyp_arrow
                      ""
                      core_type (lang_fans.ml[894,45435+21]..[894,45435+31])
                        Ptyp_constr "Tokenf.txt" (lang_fans.ml[894,45435+21]..[894,45435+31])
                        []
                      core_type (lang_fans.ml[894,45435+35]..[894,45435+68])
                        Ptyp_arrow
                        ""
                        core_type (lang_fans.ml[894,45435+35]..[894,45435+45])
                          Ptyp_constr "Tokenf.txt" (lang_fans.ml[894,45435+35]..[894,45435+45])
                          []
                        core_type (lang_fans.ml[894,45435+49]..[894,45435+68])
                          Ptyp_arrow
                          ""
                          core_type (lang_fans.ml[894,45435+49]..[894,45435+55])
                            Ptyp_constr "Locf.t" (lang_fans.ml[894,45435+49]..[894,45435+55])
                            []
                          core_type (lang_fans.ml[894,45435+59]..[894,45435+68])
                            Ptyp_var fan_quot
              ]
        ]
        None
      expression (lang_fans.ml[896,45523+14]..[923,46570+16]) ghost
        Pexp_construct "::" (lang_fans.ml[896,45523+14]..[923,46570+16]) ghost
        Some
          expression (lang_fans.ml[896,45523+14]..[923,46570+16]) ghost
            Pexp_tuple
            [
              expression (lang_fans.ml[896,45523+14]..[923,46570+15])
                Pexp_record
                [
                  "symbols" (lang_fans.ml[897,45539+16]..[897,45539+23])
                    expression (lang_fans.ml[898,45565+18]..[911,46036+41])
                      Pexp_construct "::" (lang_fans.ml[898,45565+19]..[911,46036+41]) ghost
                      Some
                        expression (lang_fans.ml[898,45565+19]..[911,46036+41]) ghost
                          Pexp_tuple
                          [
                            expression (lang_fans.ml[898,45565+19]..[906,45839+41])
                              Pexp_construct "Token" (lang_fans.ml[898,45565+19]..[898,45565+24])
                              Some
                                expression (lang_fans.ml[899,45590+21]..[906,45839+41]) ghost
                                  Pexp_constraint
                                  expression (lang_fans.ml[899,45590+22]..[906,45839+23])
                                    Pexp_record
                                    [
                                      "descr" (lang_fans.ml[900,45614+24]..[900,45614+29])
                                        expression (lang_fans.ml[901,45646+26]..[905,45811+27])
                                          Pexp_record
                                          [
                                            "tag" (lang_fans.ml[902,45674+28]..[902,45674+31])
                                              expression (lang_fans.ml[902,45674+34]..[902,45674+38])
                                                Pexp_variant "Key"
                                                None
                                            "word" (lang_fans.ml[903,45714+28]..[903,45714+32])
                                              expression (lang_fans.ml[903,45714+35]..[903,45714+50])
                                                Pexp_construct "A" (lang_fans.ml[903,45714+36]..[903,45714+37])
                                                Some
                                                  expression (lang_fans.ml[903,45714+38]..[903,45714+49])
                                                    Pexp_constant Const_string("show_code",None)
                                            "tag_name" (lang_fans.ml[904,45766+28]..[904,45766+36])
                                              expression (lang_fans.ml[904,45766+39]..[904,45766+44])
                                                Pexp_constant Const_string("Key",None)
                                          ]
                                          None
                                    ]
                                    None
                                  core_type (lang_fans.ml[906,45839+26]..[906,45839+40])
                                    Ptyp_constr "Tokenf.pattern" (lang_fans.ml[906,45839+26]..[906,45839+40])
                                    []
                            expression (lang_fans.ml[907,45882+18]..[911,46036+41]) ghost
                              Pexp_construct "::" (lang_fans.ml[907,45882+18]..[911,46036+41]) ghost
                              Some
                                expression (lang_fans.ml[907,45882+18]..[911,46036+41]) ghost
                                  Pexp_tuple
                                  [
                                    expression (lang_fans.ml[907,45882+18]..[911,46036+40])
                                      Pexp_construct "Token" (lang_fans.ml[907,45882+18]..[907,45882+23])
                                      Some
                                        expression (lang_fans.ml[908,45906+20]..[911,46036+40]) ghost
                                          Pexp_constraint
                                          expression (lang_fans.ml[908,45906+21]..[911,46036+22])
                                            Pexp_record
                                            [
                                              "descr" (lang_fans.ml[909,45929+23]..[909,45929+28])
                                                expression (lang_fans.ml[910,45960+25]..[910,45960+75])
                                                  Pexp_record
                                                  [
                                                    "tag" (lang_fans.ml[910,45960+27]..[910,45960+30])
                                                      expression (lang_fans.ml[910,45960+33]..[910,45960+37])
                                                        Pexp_variant "Key"
                                                        None
                                                    "word" (lang_fans.ml[910,45960+39]..[910,45960+43])
                                                      expression (lang_fans.ml[910,45960+46]..[910,45960+55])
                                                        Pexp_construct "A" (lang_fans.ml[910,45960+47]..[910,45960+48])
                                                        Some
                                                          expression (lang_fans.ml[910,45960+49]..[910,45960+54])
                                                            Pexp_constant Const_string("off",None)
                                                    "tag_name" (lang_fans.ml[910,45960+57]..[910,45960+65])
                                                      expression (lang_fans.ml[910,45960+68]..[910,45960+73])
                                                        Pexp_constant Const_string("Key",None)
                                                  ]
                                                  None
                                            ]
                                            None
                                          core_type (lang_fans.ml[911,46036+25]..[911,46036+39])
                                            Ptyp_constr "Tokenf.pattern" (lang_fans.ml[911,46036+25]..[911,46036+39])
                                            []
                                    expression (lang_fans.ml[911,46036+40]..[911,46036+41]) ghost
                                      Pexp_construct "[]" (lang_fans.ml[911,46036+40]..[911,46036+41]) ghost
                                      None
                                  ]
                          ]
                  "annot" (lang_fans.ml[912,46079+16]..[912,46079+21])
                    expression (lang_fans.ml[912,46079+24]..[912,46079+55])
                      Pexp_constant Const_string("Typehook.show_code := false\n",None)
                  "fn" (lang_fans.ml[913,46136+16]..[913,46136+18])
                    expression (lang_fans.ml[914,46157+18]..[922,46499+70])
                      Pexp_apply
                      expression (lang_fans.ml[914,46157+19]..[914,46157+34])
                        Pexp_ident "Gramf.mk_action" (lang_fans.ml[914,46157+19]..[914,46157+34])
                      [
                        <label> ""
                          expression (lang_fans.ml[915,46192+21]..[922,46499+69]) ghost
                            Pexp_constraint
                            expression (lang_fans.ml[915,46192+22]..[921,46416+79])
                              Pexp_function
                              [
                                <case>
                                  pattern (lang_fans.ml[916,46223+24]..[916,46223+25])
                                    Ppat_any
                                  expression (lang_fans.ml[917,46252+26]..[921,46416+79])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (lang_fans.ml[918,46288+29]..[918,46288+30])
                                          Ppat_any
                                        expression (lang_fans.ml[919,46322+31]..[921,46416+78])
                                          Pexp_function
                                          [
                                            <case>
                                              pattern (lang_fans.ml[920,46363+34]..[920,46363+49])
                                                Ppat_constraint
                                                pattern (lang_fans.ml[920,46363+35]..[920,46363+39])
                                                  Ppat_var "_loc" (lang_fans.ml[920,46363+35]..[920,46363+39])
                                                core_type (lang_fans.ml[920,46363+42]..[920,46363+48])
                                                  Ptyp_constr "Locf.t" (lang_fans.ml[920,46363+42]..[920,46363+48])
                                                  []
                                              expression (lang_fans.ml[921,46416+36]..[921,46416+77]) ghost
                                                Pexp_constraint
                                                expression (lang_fans.ml[921,46416+37]..[921,46416+64])
                                                  Pexp_apply
                                                  expression (lang_fans.ml[921,46416+56]..[921,46416+58])
                                                    Pexp_ident ":=" (lang_fans.ml[921,46416+56]..[921,46416+58])
                                                  [
                                                    <label> ""
                                                      expression (lang_fans.ml[921,46416+37]..[921,46416+55])
                                                        Pexp_ident "Typehook.show_code" (lang_fans.ml[921,46416+37]..[921,46416+55])
                                                    <label> ""
                                                      expression (lang_fans.ml[921,46416+59]..[921,46416+64])
                                                        Pexp_construct "false" (lang_fans.ml[921,46416+59]..[921,46416+64])
                                                        None
                                                  ]
                                                core_type (lang_fans.ml[921,46416+67]..[921,46416+76])
                                                  Ptyp_var fan_quot
                                          ]
                                    ]
                              ]
                            core_type (lang_fans.ml[922,46499+21]..[922,46499+68])
                              Ptyp_arrow
                              ""
                              core_type (lang_fans.ml[922,46499+21]..[922,46499+31])
                                Ptyp_constr "Tokenf.txt" (lang_fans.ml[922,46499+21]..[922,46499+31])
                                []
                              core_type (lang_fans.ml[922,46499+35]..[922,46499+68])
                                Ptyp_arrow
                                ""
                                core_type (lang_fans.ml[922,46499+35]..[922,46499+45])
                                  Ptyp_constr "Tokenf.txt" (lang_fans.ml[922,46499+35]..[922,46499+45])
                                  []
                                core_type (lang_fans.ml[922,46499+49]..[922,46499+68])
                                  Ptyp_arrow
                                  ""
                                  core_type (lang_fans.ml[922,46499+49]..[922,46499+55])
                                    Ptyp_constr "Locf.t" (lang_fans.ml[922,46499+49]..[922,46499+55])
                                    []
                                  core_type (lang_fans.ml[922,46499+59]..[922,46499+68])
                                    Ptyp_var fan_quot
                      ]
                ]
                None
              expression (lang_fans.ml[923,46570+15]..[923,46570+16]) ghost
                Pexp_construct "[]" (lang_fans.ml[923,46570+15]..[923,46570+16]) ghost
                None
            ]
    ]
                                                                    ]
                                                            ]
                                                    ]
                                            ]
                                    ]
                          ]
                          None
                        core_type (lang_fans.ml[924,46587+14]..[924,46587+26])
                          Ptyp_constr "Gramf.olevel" (lang_fans.ml[924,46587+14]..[924,46587+26])
                          []
                  ]
                  None
                core_type (lang_fans.ml[925,46615+9]..[925,46615+40])
                  Ptyp_constr "Gramf.single_extend_statement" (lang_fans.ml[925,46615+11]..[925,46615+40])
                  [
                    core_type (lang_fans.ml[925,46615+9]..[925,46615+10])
                      Ptyp_any
                  ]
          ]
        expression (lang_fans.ml[926,46658+2]..[1023,50262+41])
          Pexp_sequence
          expression (lang_fans.ml[926,46658+2]..[969,48387+41])
            Pexp_apply
            expression (lang_fans.ml[926,46658+2]..[926,46658+21])
              Pexp_ident "Gramf.extend_single" (lang_fans.ml[926,46658+2]..[926,46658+21])
            [
              <label> ""
                expression (lang_fans.ml[927,46680+4]..[969,48387+41]) ghost
                  Pexp_constraint
                  expression (lang_fans.ml[927,46680+5]..[969,48387+6])
                    Pexp_record
                    [
                      "entry" (lang_fans.ml[928,46687+7]..[928,46687+12])
                        expression (lang_fans.ml[928,46687+15]..[928,46687+33]) ghost
                          Pexp_constraint
                          expression (lang_fans.ml[928,46687+16]..[928,46687+18])
                            Pexp_ident "id" (lang_fans.ml[928,46687+16]..[928,46687+18])
                          core_type (lang_fans.ml[928,46687+21]..[928,46687+32])
                            Ptyp_constr "Gramf.t" (lang_fans.ml[928,46687+25]..[928,46687+32])
                            [
                              core_type (lang_fans.ml[928,46687+21]..[928,46687+24])
                                Ptyp_var id
                            ]
                      "olevel" (lang_fans.ml[929,46722+7]..[929,46722+13])
                        expression (lang_fans.ml[930,46738+9]..[968,48359+27]) ghost
                          Pexp_constraint
                          expression (lang_fans.ml[930,46738+10]..[968,48359+11])
                            Pexp_record
                            [
                              "label" (lang_fans.ml[931,46750+12]..[931,46750+17])
                                expression (lang_fans.ml[931,46750+20]..[931,46750+24])
                                  Pexp_construct "None" (lang_fans.ml[931,46750+20]..[931,46750+24])
                                  None
                              "lassoc" (lang_fans.ml[932,46776+12]..[932,46776+18])
                                expression (lang_fans.ml[932,46776+21]..[932,46776+25])
                                  Pexp_construct "true" (lang_fans.ml[932,46776+21]..[932,46776+25])
                                  None
                              "productions" (lang_fans.ml[933,46803+12]..[933,46803+23])
                                expression (lang_fans.ml[934,46829+14]..[967,48342+16])
                                  Pexp_construct "::" (lang_fans.ml[934,46829+15]..[967,48342+16]) ghost
                                  Some
                                    expression (lang_fans.ml[934,46829+15]..[967,48342+16]) ghost
                                      Pexp_tuple
                                      [
                                        expression (lang_fans.ml[934,46829+15]..[950,47583+16])
                                          Pexp_record
                                          [
                                            "symbols" (lang_fans.ml[935,46846+17]..[935,46846+24])
                                              expression (lang_fans.ml[936,46873+19]..[938,46977+43])
                                                Pexp_construct "::" (lang_fans.ml[936,46873+20]..[938,46977+43]) ghost
                                                Some
                                                  expression (lang_fans.ml[936,46873+20]..[938,46977+43]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lang_fans.ml[936,46873+20]..[938,46977+42])
                                                        Pexp_construct "Token" (lang_fans.ml[936,46873+20]..[936,46873+25])
                                                        Some
                                                          expression (lang_fans.ml[937,46899+22]..[938,46977+42]) ghost
                                                            Pexp_constraint
                                                            expression (lang_fans.ml[937,46899+23]..[938,46977+24])
                                                              Pexp_record
                                                              [
                                                                "descr" (lang_fans.ml[937,46899+25]..[937,46899+30])
                                                                  expression (lang_fans.ml[937,46899+33]..[937,46899+77])
                                                                    Pexp_record
                                                                    [
                                                                      "tag" (lang_fans.ml[937,46899+35]..[937,46899+38])
expression (lang_fans.ml[937,46899+41]..[937,46899+45])
  Pexp_variant "Lid"
  None
                                                                      "word" (lang_fans.ml[937,46899+47]..[937,46899+51])
expression (lang_fans.ml[937,46899+54]..[937,46899+57])
  Pexp_construct "Any" (lang_fans.ml[937,46899+54]..[937,46899+57])
  None
                                                                      "tag_name" (lang_fans.ml[937,46899+59]..[937,46899+67])
expression (lang_fans.ml[937,46899+70]..[937,46899+75])
  Pexp_constant Const_string("Lid",None)
                                                                    ]
                                                                    None
                                                              ]
                                                              None
                                                            core_type (lang_fans.ml[938,46977+27]..[938,46977+41])
                                                              Ptyp_constr "Tokenf.pattern" (lang_fans.ml[938,46977+27]..[938,46977+41])
                                                              []
                                                      expression (lang_fans.ml[938,46977+42]..[938,46977+43]) ghost
                                                        Pexp_construct "[]" (lang_fans.ml[938,46977+42]..[938,46977+43]) ghost
                                                        None
                                                    ]
                                            "annot" (lang_fans.ml[939,47022+17]..[939,47022+22])
                                              expression (lang_fans.ml[939,47022+25]..[939,47022+30])
                                                Pexp_constant Const_string("x\n",None)
                                            "fn" (lang_fans.ml[940,47054+17]..[940,47054+19])
                                              expression (lang_fans.ml[941,47076+19]..[949,47509+73])
                                                Pexp_apply
                                                expression (lang_fans.ml[941,47076+20]..[941,47076+35])
                                                  Pexp_ident "Gramf.mk_action" (lang_fans.ml[941,47076+20]..[941,47076+35])
                                                [
                                                  <label> ""
                                                    expression (lang_fans.ml[942,47112+22]..[949,47509+72]) ghost
                                                      Pexp_constraint
                                                      expression (lang_fans.ml[942,47112+23]..[946,47281+65])
                                                        Pexp_function
                                                        [
                                                          <case>
                                                            pattern (lang_fans.ml[943,47144+25]..[943,47144+47])
                                                              Ppat_constraint
                                                              pattern (lang_fans.ml[943,47144+26]..[943,47144+33])
                                                                Ppat_var "__fan_0" (lang_fans.ml[943,47144+26]..[943,47144+33])
                                                              core_type (lang_fans.ml[943,47144+36]..[943,47144+46])
                                                                Ptyp_constr "Tokenf.txt" (lang_fans.ml[943,47144+36]..[943,47144+46])
                                                                []
                                                            expression (lang_fans.ml[944,47195+27]..[946,47281+65])
                                                              Pexp_function
                                                              [
                                                                <case>
                                                                  pattern (lang_fans.ml[945,47232+30]..[945,47232+45])
                                                                    Ppat_constraint
                                                                    pattern (lang_fans.ml[945,47232+31]..[945,47232+35])
                                                                      Ppat_var "_loc" (lang_fans.ml[945,47232+31]..[945,47232+35])
                                                                    core_type (lang_fans.ml[945,47232+38]..[945,47232+44])
                                                                      Ptyp_constr "Locf.t" (lang_fans.ml[945,47232+38]..[945,47232+44])
                                                                      []
                                                                  expression (lang_fans.ml[946,47281+32]..[946,47281+64])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (lang_fans.ml[946,47281+36]..[946,47281+37])
  Ppat_var "x" (lang_fans.ml[946,47281+36]..[946,47281+37])
expression (lang_fans.ml[946,47281+40]..[946,47281+51])
  Pexp_field
  expression (lang_fans.ml[946,47281+40]..[946,47281+47])
    Pexp_ident "__fan_0" (lang_fans.ml[946,47281+40]..[946,47281+47])
  "txt" (lang_fans.ml[946,47281+48]..[946,47281+51])
                                                                    ]
                                                                    expression (lang_fans.ml[946,47281+55]..[946,47281+64]) ghost
                                                                      Pexp_constraint
                                                                      expression (lang_fans.ml[946,47281+56]..[946,47281+57])
Pexp_ident "x" (lang_fans.ml[946,47281+56]..[946,47281+57])
                                                                      core_type (lang_fans.ml[946,47281+60]..[946,47281+63])
Ptyp_var id
                                                              ]
                                                        ]
                                                      core_type (lang_fans.ml[946,47281+68]..[949,47509+71])
                                                        Ptyp_arrow
                                                        ""
                                                        core_type (lang_fans.ml[946,47281+68]..[946,47281+78])
                                                          Ptyp_constr "Tokenf.txt" (lang_fans.ml[946,47281+68]..[946,47281+78])
                                                          []
                                                        core_type (lang_fans.ml[948,47431+68]..[949,47509+71])
                                                          Ptyp_arrow
                                                          ""
                                                          core_type (lang_fans.ml[948,47431+68]..[948,47431+74])
                                                            Ptyp_constr "Locf.t" (lang_fans.ml[948,47431+68]..[948,47431+74])
                                                            []
                                                          core_type (lang_fans.ml[949,47509+68]..[949,47509+71])
                                                            Ptyp_var id
                                                ]
                                          ]
                                          None
                                        expression (lang_fans.ml[951,47601+14]..[967,48342+16]) ghost
                                          Pexp_construct "::" (lang_fans.ml[951,47601+14]..[967,48342+16]) ghost
                                          Some
                                            expression (lang_fans.ml[951,47601+14]..[967,48342+16]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lang_fans.ml[951,47601+14]..[967,48342+15])
                                                  Pexp_record
                                                  [
                                                    "symbols" (lang_fans.ml[952,47617+16]..[952,47617+23])
                                                      expression (lang_fans.ml[953,47643+18]..[955,47745+42])
                                                        Pexp_construct "::" (lang_fans.ml[953,47643+19]..[955,47745+42]) ghost
                                                        Some
                                                          expression (lang_fans.ml[953,47643+19]..[955,47745+42]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lang_fans.ml[953,47643+19]..[955,47745+41])
                                                                Pexp_construct "Token" (lang_fans.ml[953,47643+19]..[953,47643+24])
                                                                Some
                                                                  expression (lang_fans.ml[954,47668+21]..[955,47745+41]) ghost
                                                                    Pexp_constraint
                                                                    expression (lang_fans.ml[954,47668+22]..[955,47745+23])
                                                                      Pexp_record
                                                                      [
"descr" (lang_fans.ml[954,47668+24]..[954,47668+29])
  expression (lang_fans.ml[954,47668+32]..[954,47668+76])
    Pexp_record
    [
      "tag" (lang_fans.ml[954,47668+34]..[954,47668+37])
        expression (lang_fans.ml[954,47668+40]..[954,47668+44])
          Pexp_variant "Uid"
          None
      "word" (lang_fans.ml[954,47668+46]..[954,47668+50])
        expression (lang_fans.ml[954,47668+53]..[954,47668+56])
          Pexp_construct "Any" (lang_fans.ml[954,47668+53]..[954,47668+56])
          None
      "tag_name" (lang_fans.ml[954,47668+58]..[954,47668+66])
        expression (lang_fans.ml[954,47668+69]..[954,47668+74])
          Pexp_constant Const_string("Uid",None)
    ]
    None
                                                                      ]
                                                                      None
                                                                    core_type (lang_fans.ml[955,47745+26]..[955,47745+40])
                                                                      Ptyp_constr "Tokenf.pattern" (lang_fans.ml[955,47745+26]..[955,47745+40])
                                                                      []
                                                              expression (lang_fans.ml[955,47745+41]..[955,47745+42]) ghost
                                                                Pexp_construct "[]" (lang_fans.ml[955,47745+41]..[955,47745+42]) ghost
                                                                None
                                                            ]
                                                    "annot" (lang_fans.ml[956,47789+16]..[956,47789+21])
                                                      expression (lang_fans.ml[956,47789+24]..[956,47789+29])
                                                        Pexp_constant Const_string("x\n",None)
                                                    "fn" (lang_fans.ml[957,47820+16]..[957,47820+18])
                                                      expression (lang_fans.ml[958,47841+18]..[966,48268+73])
                                                        Pexp_apply
                                                        expression (lang_fans.ml[958,47841+19]..[958,47841+34])
                                                          Pexp_ident "Gramf.mk_action" (lang_fans.ml[958,47841+19]..[958,47841+34])
                                                        [
                                                          <label> ""
                                                            expression (lang_fans.ml[959,47876+21]..[966,48268+72]) ghost
                                                              Pexp_constraint
                                                              expression (lang_fans.ml[959,47876+22]..[963,48041+64])
                                                                Pexp_function
                                                                [
                                                                  <case>
                                                                    pattern (lang_fans.ml[960,47907+24]..[960,47907+46])
                                                                      Ppat_constraint
                                                                      pattern (lang_fans.ml[960,47907+25]..[960,47907+32])
Ppat_var "__fan_0" (lang_fans.ml[960,47907+25]..[960,47907+32])
                                                                      core_type (lang_fans.ml[960,47907+35]..[960,47907+45])
Ptyp_constr "Tokenf.txt" (lang_fans.ml[960,47907+35]..[960,47907+45])
[]
                                                                    expression (lang_fans.ml[961,47957+26]..[963,48041+64])
                                                                      Pexp_function
                                                                      [
<case>
  pattern (lang_fans.ml[962,47993+29]..[962,47993+44])
    Ppat_constraint
    pattern (lang_fans.ml[962,47993+30]..[962,47993+34])
      Ppat_var "_loc" (lang_fans.ml[962,47993+30]..[962,47993+34])
    core_type (lang_fans.ml[962,47993+37]..[962,47993+43])
      Ptyp_constr "Locf.t" (lang_fans.ml[962,47993+37]..[962,47993+43])
      []
  expression (lang_fans.ml[963,48041+31]..[963,48041+63])
    Pexp_let Nonrec
    [
      <def>
        pattern (lang_fans.ml[963,48041+35]..[963,48041+36])
          Ppat_var "x" (lang_fans.ml[963,48041+35]..[963,48041+36])
        expression (lang_fans.ml[963,48041+39]..[963,48041+50])
          Pexp_field
          expression (lang_fans.ml[963,48041+39]..[963,48041+46])
            Pexp_ident "__fan_0" (lang_fans.ml[963,48041+39]..[963,48041+46])
          "txt" (lang_fans.ml[963,48041+47]..[963,48041+50])
    ]
    expression (lang_fans.ml[963,48041+54]..[963,48041+63]) ghost
      Pexp_constraint
      expression (lang_fans.ml[963,48041+55]..[963,48041+56])
        Pexp_ident "x" (lang_fans.ml[963,48041+55]..[963,48041+56])
      core_type (lang_fans.ml[963,48041+59]..[963,48041+62])
        Ptyp_var id
                                                                      ]
                                                                ]
                                                              core_type (lang_fans.ml[963,48041+67]..[966,48268+71])
                                                                Ptyp_arrow
                                                                ""
                                                                core_type (lang_fans.ml[963,48041+67]..[963,48041+77])
                                                                  Ptyp_constr "Tokenf.txt" (lang_fans.ml[963,48041+67]..[963,48041+77])
                                                                  []
                                                                core_type (lang_fans.ml[965,48190+68]..[966,48268+71])
                                                                  Ptyp_arrow
                                                                  ""
                                                                  core_type (lang_fans.ml[965,48190+68]..[965,48190+74])
                                                                    Ptyp_constr "Locf.t" (lang_fans.ml[965,48190+68]..[965,48190+74])
                                                                    []
                                                                  core_type (lang_fans.ml[966,48268+68]..[966,48268+71])
                                                                    Ptyp_var id
                                                        ]
                                                  ]
                                                  None
                                                expression (lang_fans.ml[967,48342+15]..[967,48342+16]) ghost
                                                  Pexp_construct "[]" (lang_fans.ml[967,48342+15]..[967,48342+16]) ghost
                                                  None
                                              ]
                                      ]
                            ]
                            None
                          core_type (lang_fans.ml[968,48359+14]..[968,48359+26])
                            Ptyp_constr "Gramf.olevel" (lang_fans.ml[968,48359+14]..[968,48359+26])
                            []
                    ]
                    None
                  core_type (lang_fans.ml[969,48387+9]..[969,48387+40])
                    Ptyp_constr "Gramf.single_extend_statement" (lang_fans.ml[969,48387+11]..[969,48387+40])
                    [
                      core_type (lang_fans.ml[969,48387+9]..[969,48387+10])
                        Ptyp_any
                    ]
            ]
          expression (lang_fans.ml[970,48430+2]..[1023,50262+41])
            Pexp_sequence
            expression (lang_fans.ml[970,48430+2]..[998,49403+41])
              Pexp_apply
              expression (lang_fans.ml[970,48430+2]..[970,48430+21])
                Pexp_ident "Gramf.extend_single" (lang_fans.ml[970,48430+2]..[970,48430+21])
              [
                <label> ""
                  expression (lang_fans.ml[971,48452+4]..[998,49403+41]) ghost
                    Pexp_constraint
                    expression (lang_fans.ml[971,48452+5]..[998,49403+6])
                      Pexp_record
                      [
                        "entry" (lang_fans.ml[972,48459+7]..[972,48459+12])
                          expression (lang_fans.ml[972,48459+15]..[972,48459+55]) ghost
                            Pexp_constraint
                            expression (lang_fans.ml[972,48459+16]..[972,48459+29])
                              Pexp_ident "fan_quot_semi" (lang_fans.ml[972,48459+16]..[972,48459+29])
                            core_type (lang_fans.ml[972,48459+32]..[972,48459+54])
                              Ptyp_constr "Gramf.t" (lang_fans.ml[972,48459+47]..[972,48459+54])
                              [
                                core_type (lang_fans.ml[972,48459+32]..[972,48459+46])
                                  Ptyp_var fan_quot_semi
                              ]
                        "olevel" (lang_fans.ml[973,48516+7]..[973,48516+13])
                          expression (lang_fans.ml[974,48532+9]..[997,49375+27]) ghost
                            Pexp_constraint
                            expression (lang_fans.ml[974,48532+10]..[997,49375+11])
                              Pexp_record
                              [
                                "label" (lang_fans.ml[975,48544+12]..[975,48544+17])
                                  expression (lang_fans.ml[975,48544+20]..[975,48544+24])
                                    Pexp_construct "None" (lang_fans.ml[975,48544+20]..[975,48544+24])
                                    None
                                "lassoc" (lang_fans.ml[976,48570+12]..[976,48570+18])
                                  expression (lang_fans.ml[976,48570+21]..[976,48570+25])
                                    Pexp_construct "true" (lang_fans.ml[976,48570+21]..[976,48570+25])
                                    None
                                "productions" (lang_fans.ml[977,48597+12]..[977,48597+23])
                                  expression (lang_fans.ml[978,48623+14]..[996,49357+17])
                                    Pexp_construct "::" (lang_fans.ml[978,48623+15]..[996,49357+17]) ghost
                                    Some
                                      expression (lang_fans.ml[978,48623+15]..[996,49357+17]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lang_fans.ml[978,48623+15]..[996,49357+16])
                                            Pexp_record
                                            [
                                              "symbols" (lang_fans.ml[979,48640+17]..[979,48640+24])
                                                expression (lang_fans.ml[980,48667+19]..[985,48893+42])
                                                  Pexp_construct "::" (lang_fans.ml[980,48667+20]..[985,48893+42]) ghost
                                                  Some
                                                    expression (lang_fans.ml[980,48667+20]..[985,48893+42]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lang_fans.ml[980,48667+20]..[980,48667+68])
                                                          Pexp_construct "Nterm" (lang_fans.ml[980,48667+20]..[980,48667+25])
                                                          Some
                                                            expression (lang_fans.ml[980,48667+26]..[980,48667+68])
                                                              Pexp_apply
                                                              expression (lang_fans.ml[980,48667+27]..[980,48667+36])
                                                                Pexp_ident "Gramf.obj" (lang_fans.ml[980,48667+27]..[980,48667+36])
                                                              [
                                                                <label> ""
                                                                  expression (lang_fans.ml[980,48667+37]..[980,48667+67]) ghost
                                                                    Pexp_constraint
                                                                    expression (lang_fans.ml[980,48667+38]..[980,48667+46])
                                                                      Pexp_ident "fan_quot" (lang_fans.ml[980,48667+38]..[980,48667+46])
                                                                    core_type (lang_fans.ml[980,48667+49]..[980,48667+66])
                                                                      Ptyp_constr "Gramf.t" (lang_fans.ml[980,48667+59]..[980,48667+66])
                                                                      [
core_type (lang_fans.ml[980,48667+49]..[980,48667+58])
  Ptyp_var fan_quot
                                                                      ]
                                                              ]
                                                        expression (lang_fans.ml[981,48737+19]..[985,48893+42]) ghost
                                                          Pexp_construct "::" (lang_fans.ml[981,48737+19]..[985,48893+42]) ghost
                                                          Some
                                                            expression (lang_fans.ml[981,48737+19]..[985,48893+42]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (lang_fans.ml[981,48737+19]..[985,48893+41])
                                                                  Pexp_construct "Token" (lang_fans.ml[981,48737+19]..[981,48737+24])
                                                                  Some
                                                                    expression (lang_fans.ml[982,48762+21]..[985,48893+41]) ghost
                                                                      Pexp_constraint
                                                                      expression (lang_fans.ml[982,48762+22]..[985,48893+23])
Pexp_record
[
  "descr" (lang_fans.ml[983,48786+24]..[983,48786+29])
    expression (lang_fans.ml[984,48818+26]..[984,48818+74])
      Pexp_record
      [
        "tag" (lang_fans.ml[984,48818+28]..[984,48818+31])
          expression (lang_fans.ml[984,48818+34]..[984,48818+38])
            Pexp_variant "Key"
            None
        "word" (lang_fans.ml[984,48818+40]..[984,48818+44])
          expression (lang_fans.ml[984,48818+47]..[984,48818+54])
            Pexp_construct "A" (lang_fans.ml[984,48818+48]..[984,48818+49])
            Some
              expression (lang_fans.ml[984,48818+50]..[984,48818+53])
                Pexp_constant Const_string(";",None)
        "tag_name" (lang_fans.ml[984,48818+56]..[984,48818+64])
          expression (lang_fans.ml[984,48818+67]..[984,48818+72])
            Pexp_constant Const_string("Key",None)
      ]
      None
]
None
                                                                      core_type (lang_fans.ml[985,48893+26]..[985,48893+40])
Ptyp_constr "Tokenf.pattern" (lang_fans.ml[985,48893+26]..[985,48893+40])
[]
                                                                expression (lang_fans.ml[985,48893+41]..[985,48893+42]) ghost
                                                                  Pexp_construct "[]" (lang_fans.ml[985,48893+41]..[985,48893+42]) ghost
                                                                  None
                                                              ]
                                                      ]
                                              "annot" (lang_fans.ml[986,48937+17]..[986,48937+22])
                                                expression (lang_fans.ml[986,48937+25]..[986,48937+27])
                                                  Pexp_constant Const_string("",None)
                                              "fn" (lang_fans.ml[987,48966+17]..[987,48966+19])
                                                expression (lang_fans.ml[988,48988+19]..[995,49281+75])
                                                  Pexp_apply
                                                  expression (lang_fans.ml[988,48988+20]..[988,48988+35])
                                                    Pexp_ident "Gramf.mk_action" (lang_fans.ml[988,48988+20]..[988,48988+35])
                                                  [
                                                    <label> ""
                                                      expression (lang_fans.ml[989,49024+22]..[995,49281+74]) ghost
                                                        Pexp_constraint
                                                        expression (lang_fans.ml[989,49024+23]..[994,49200+77])
                                                          Pexp_function
                                                          [
                                                            <case>
                                                              pattern (lang_fans.ml[990,49056+25]..[990,49056+26])
                                                                Ppat_any
                                                              expression (lang_fans.ml[991,49086+27]..[994,49200+77])
                                                                Pexp_function
                                                                [
                                                                  <case>
                                                                    pattern (lang_fans.ml[992,49123+30]..[992,49123+31])
                                                                      Ppat_any
                                                                    expression (lang_fans.ml[993,49158+32]..[994,49200+76])
                                                                      Pexp_function
                                                                      [
<case>
  pattern (lang_fans.ml[994,49200+35]..[994,49200+50])
    Ppat_constraint
    pattern (lang_fans.ml[994,49200+36]..[994,49200+40])
      Ppat_var "_loc" (lang_fans.ml[994,49200+36]..[994,49200+40])
    core_type (lang_fans.ml[994,49200+43]..[994,49200+49])
      Ptyp_constr "Locf.t" (lang_fans.ml[994,49200+43]..[994,49200+49])
      []
  expression (lang_fans.ml[994,49200+54]..[994,49200+75]) ghost
    Pexp_constraint
    expression (lang_fans.ml[994,49200+55]..[994,49200+57])
      Pexp_construct "()" (lang_fans.ml[994,49200+55]..[994,49200+57])
      None
    core_type (lang_fans.ml[994,49200+60]..[994,49200+74])
      Ptyp_var fan_quot_semi
                                                                      ]
                                                                ]
                                                          ]
                                                        core_type (lang_fans.ml[995,49281+22]..[995,49281+73])
                                                          Ptyp_arrow
                                                          ""
                                                          core_type (lang_fans.ml[995,49281+22]..[995,49281+32])
                                                            Ptyp_constr "Tokenf.txt" (lang_fans.ml[995,49281+22]..[995,49281+32])
                                                            []
                                                          core_type (lang_fans.ml[995,49281+36]..[995,49281+73])
                                                            Ptyp_arrow
                                                            ""
                                                            core_type (lang_fans.ml[995,49281+36]..[995,49281+45])
                                                              Ptyp_var fan_quot
                                                            core_type (lang_fans.ml[995,49281+49]..[995,49281+73])
                                                              Ptyp_arrow
                                                              ""
                                                              core_type (lang_fans.ml[995,49281+49]..[995,49281+55])
                                                                Ptyp_constr "Locf.t" (lang_fans.ml[995,49281+49]..[995,49281+55])
                                                                []
                                                              core_type (lang_fans.ml[995,49281+59]..[995,49281+73])
                                                                Ptyp_var fan_quot_semi
                                                  ]
                                            ]
                                            None
                                          expression (lang_fans.ml[996,49357+16]..[996,49357+17]) ghost
                                            Pexp_construct "[]" (lang_fans.ml[996,49357+16]..[996,49357+17]) ghost
                                            None
                                        ]
                              ]
                              None
                            core_type (lang_fans.ml[997,49375+14]..[997,49375+26])
                              Ptyp_constr "Gramf.olevel" (lang_fans.ml[997,49375+14]..[997,49375+26])
                              []
                      ]
                      None
                    core_type (lang_fans.ml[998,49403+9]..[998,49403+40])
                      Ptyp_constr "Gramf.single_extend_statement" (lang_fans.ml[998,49403+11]..[998,49403+40])
                      [
                        core_type (lang_fans.ml[998,49403+9]..[998,49403+10])
                          Ptyp_any
                      ]
              ]
            expression (lang_fans.ml[999,49446+2]..[1023,50262+41])
              Pexp_apply
              expression (lang_fans.ml[999,49446+2]..[999,49446+21])
                Pexp_ident "Gramf.extend_single" (lang_fans.ml[999,49446+2]..[999,49446+21])
              [
                <label> ""
                  expression (lang_fans.ml[1000,49468+4]..[1023,50262+41]) ghost
                    Pexp_constraint
                    expression (lang_fans.ml[1000,49468+5]..[1023,50262+6])
                      Pexp_record
                      [
                        "entry" (lang_fans.ml[1001,49475+7]..[1001,49475+12])
                          expression (lang_fans.ml[1001,49475+15]..[1001,49475+47]) ghost
                            Pexp_constraint
                            expression (lang_fans.ml[1001,49475+16]..[1001,49475+25])
                              Pexp_ident "fan_quots" (lang_fans.ml[1001,49475+16]..[1001,49475+25])
                            core_type (lang_fans.ml[1001,49475+28]..[1001,49475+46])
                              Ptyp_constr "Gramf.t" (lang_fans.ml[1001,49475+39]..[1001,49475+46])
                              [
                                core_type (lang_fans.ml[1001,49475+28]..[1001,49475+38])
                                  Ptyp_var fan_quots
                              ]
                        "olevel" (lang_fans.ml[1002,49524+7]..[1002,49524+13])
                          expression (lang_fans.ml[1003,49540+9]..[1022,50234+27]) ghost
                            Pexp_constraint
                            expression (lang_fans.ml[1003,49540+10]..[1022,50234+11])
                              Pexp_record
                              [
                                "label" (lang_fans.ml[1004,49552+12]..[1004,49552+17])
                                  expression (lang_fans.ml[1004,49552+20]..[1004,49552+24])
                                    Pexp_construct "None" (lang_fans.ml[1004,49552+20]..[1004,49552+24])
                                    None
                                "lassoc" (lang_fans.ml[1005,49578+12]..[1005,49578+18])
                                  expression (lang_fans.ml[1005,49578+21]..[1005,49578+25])
                                    Pexp_construct "true" (lang_fans.ml[1005,49578+21]..[1005,49578+25])
                                    None
                                "productions" (lang_fans.ml[1006,49605+12]..[1006,49605+23])
                                  expression (lang_fans.ml[1007,49631+14]..[1021,50216+17])
                                    Pexp_construct "::" (lang_fans.ml[1007,49631+15]..[1021,50216+17]) ghost
                                    Some
                                      expression (lang_fans.ml[1007,49631+15]..[1021,50216+17]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lang_fans.ml[1007,49631+15]..[1021,50216+16])
                                            Pexp_record
                                            [
                                              "symbols" (lang_fans.ml[1008,49648+17]..[1008,49648+24])
                                                expression (lang_fans.ml[1009,49675+19]..[1011,49730+79])
                                                  Pexp_construct "::" (lang_fans.ml[1009,49675+20]..[1011,49730+79]) ghost
                                                  Some
                                                    expression (lang_fans.ml[1009,49675+20]..[1011,49730+79]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lang_fans.ml[1009,49675+20]..[1011,49730+78])
                                                          Pexp_construct "List1" (lang_fans.ml[1009,49675+20]..[1009,49675+25])
                                                          Some
                                                            expression (lang_fans.ml[1010,49701+22]..[1011,49730+78])
                                                              Pexp_construct "Nterm" (lang_fans.ml[1010,49701+23]..[1010,49701+28])
                                                              Some
                                                                expression (lang_fans.ml[1011,49730+25]..[1011,49730+77])
                                                                  Pexp_apply
                                                                  expression (lang_fans.ml[1011,49730+26]..[1011,49730+35])
                                                                    Pexp_ident "Gramf.obj" (lang_fans.ml[1011,49730+26]..[1011,49730+35])
                                                                  [
                                                                    <label> ""
                                                                      expression (lang_fans.ml[1011,49730+36]..[1011,49730+76]) ghost
Pexp_constraint
expression (lang_fans.ml[1011,49730+37]..[1011,49730+50])
  Pexp_ident "fan_quot_semi" (lang_fans.ml[1011,49730+37]..[1011,49730+50])
core_type (lang_fans.ml[1011,49730+53]..[1011,49730+75])
  Ptyp_constr "Gramf.t" (lang_fans.ml[1011,49730+68]..[1011,49730+75])
  [
    core_type (lang_fans.ml[1011,49730+53]..[1011,49730+67])
      Ptyp_var fan_quot_semi
  ]
                                                                  ]
                                                        expression (lang_fans.ml[1011,49730+78]..[1011,49730+79]) ghost
                                                          Pexp_construct "[]" (lang_fans.ml[1011,49730+78]..[1011,49730+79]) ghost
                                                          None
                                                      ]
                                              "annot" (lang_fans.ml[1012,49811+17]..[1012,49811+22])
                                                expression (lang_fans.ml[1012,49811+25]..[1012,49811+53])
                                                  Pexp_constant Const_string("(`Unit _loc :> Astf.exp)\n",None)
                                              "fn" (lang_fans.ml[1013,49866+17]..[1013,49866+19])
                                                expression (lang_fans.ml[1014,49888+19]..[1020,50148+67])
                                                  Pexp_apply
                                                  expression (lang_fans.ml[1014,49888+20]..[1014,49888+35])
                                                    Pexp_ident "Gramf.mk_action" (lang_fans.ml[1014,49888+20]..[1014,49888+35])
                                                  [
                                                    <label> ""
                                                      expression (lang_fans.ml[1015,49924+22]..[1020,50148+66]) ghost
                                                        Pexp_constraint
                                                        expression (lang_fans.ml[1015,49924+23]..[1019,50072+72])
                                                          Pexp_function
                                                          [
                                                            <case>
                                                              pattern (lang_fans.ml[1016,49956+25]..[1016,49956+26])
                                                                Ppat_any
                                                              expression (lang_fans.ml[1017,49986+27]..[1019,50072+72])
                                                                Pexp_function
                                                                [
                                                                  <case>
                                                                    pattern (lang_fans.ml[1018,50023+30]..[1018,50023+45])
                                                                      Ppat_constraint
                                                                      pattern (lang_fans.ml[1018,50023+31]..[1018,50023+35])
Ppat_var "_loc" (lang_fans.ml[1018,50023+31]..[1018,50023+35])
                                                                      core_type (lang_fans.ml[1018,50023+38]..[1018,50023+44])
Ptyp_constr "Locf.t" (lang_fans.ml[1018,50023+38]..[1018,50023+44])
[]
                                                                    expression (lang_fans.ml[1019,50072+32]..[1019,50072+71]) ghost
                                                                      Pexp_constraint
                                                                      expression (lang_fans.ml[1019,50072+33]..[1019,50072+57]) ghost
Pexp_coerce
expression (lang_fans.ml[1019,50072+34]..[1019,50072+44])
  Pexp_variant "Unit"
  Some
    expression (lang_fans.ml[1019,50072+40]..[1019,50072+44])
      Pexp_ident "_loc" (lang_fans.ml[1019,50072+40]..[1019,50072+44])
None
core_type (lang_fans.ml[1019,50072+48]..[1019,50072+56])
  Ptyp_constr "Astf.exp" (lang_fans.ml[1019,50072+48]..[1019,50072+56])
  []
                                                                      core_type (lang_fans.ml[1019,50072+60]..[1019,50072+70])
Ptyp_var fan_quots
                                                                ]
                                                          ]
                                                        core_type (lang_fans.ml[1020,50148+22]..[1020,50148+65])
                                                          Ptyp_arrow
                                                          ""
                                                          core_type (lang_fans.ml[1020,50148+22]..[1020,50148+41])
                                                            Ptyp_constr "list" (lang_fans.ml[1020,50148+37]..[1020,50148+41])
                                                            [
                                                              core_type (lang_fans.ml[1020,50148+22]..[1020,50148+36])
                                                                Ptyp_var fan_quot_semi
                                                            ]
                                                          core_type (lang_fans.ml[1020,50148+45]..[1020,50148+65])
                                                            Ptyp_arrow
                                                            ""
                                                            core_type (lang_fans.ml[1020,50148+45]..[1020,50148+51])
                                                              Ptyp_constr "Locf.t" (lang_fans.ml[1020,50148+45]..[1020,50148+51])
                                                              []
                                                            core_type (lang_fans.ml[1020,50148+55]..[1020,50148+65])
                                                              Ptyp_var fan_quots
                                                  ]
                                            ]
                                            None
                                          expression (lang_fans.ml[1021,50216+16]..[1021,50216+17]) ghost
                                            Pexp_construct "[]" (lang_fans.ml[1021,50216+16]..[1021,50216+17]) ghost
                                            None
                                        ]
                              ]
                              None
                            core_type (lang_fans.ml[1022,50234+14]..[1022,50234+26])
                              Ptyp_constr "Gramf.olevel" (lang_fans.ml[1022,50234+14]..[1022,50234+26])
                              []
                      ]
                      None
                    core_type (lang_fans.ml[1023,50262+9]..[1023,50262+40])
                      Ptyp_constr "Gramf.single_extend_statement" (lang_fans.ml[1023,50262+11]..[1023,50262+40])
                      [
                        core_type (lang_fans.ml[1023,50262+9]..[1023,50262+10])
                          Ptyp_any
                      ]
              ]
  structure_item (lang_fans.ml[1024,50304+0]..[1024,50304+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (lang_fans.ml[1024,50304+4]..[1024,50304+9])
          Ppat_var "lexer" (lang_fans.ml[1024,50304+4]..[1024,50304+9])
        expression (lang_fans.ml[1024,50304+12]..[1024,50304+45])
          Pexp_apply
          expression (lang_fans.ml[1024,50304+12]..[1024,50304+39])
            Pexp_ident "Lexing_util.adapt_to_stream" (lang_fans.ml[1024,50304+12]..[1024,50304+39])
          [
            <label> ""
              expression (lang_fans.ml[1024,50304+40]..[1024,50304+45])
                Pexp_ident "token" (lang_fans.ml[1024,50304+40]..[1024,50304+45])
          ]
    ]
  structure_item (lang_fans.ml[1025,50350+0]..[1027,50423+30])
    Pstr_eval
    expression (lang_fans.ml[1026,50358+2]..[1027,50423+30])
      Pexp_apply
      expression (lang_fans.ml[1026,50358+2]..[1026,50358+22])
        Pexp_ident "Ast_quotation.of_exp" (lang_fans.ml[1026,50358+2]..[1026,50358+22])
      [
        <label> "name"
          expression (lang_fans.ml[1026,50358+29]..[1026,50358+64])
            Pexp_record
            [
              "domain" (lang_fans.ml[1026,50358+31]..[1026,50358+37])
                expression (lang_fans.ml[1026,50358+40]..[1026,50358+47])
                  Pexp_ident "Ns.lang" (lang_fans.ml[1026,50358+40]..[1026,50358+47])
              "name" (lang_fans.ml[1026,50358+49]..[1026,50358+53])
                expression (lang_fans.ml[1026,50358+56]..[1026,50358+62])
                  Pexp_constant Const_string("fans",None)
            ]
            None
        <label> "entry"
          expression (lang_fans.ml[1027,50423+11]..[1027,50423+20])
            Pexp_ident "fan_quots" (lang_fans.ml[1027,50423+11]..[1027,50423+20])
        <label> "lexer"
          expression (lang_fans.ml[1027,50423+22]..[1027,50423+27])
            Pexp_ident "lexer" (lang_fans.ml[1027,50423+22]..[1027,50423+27])
        <label> ""
          expression (lang_fans.ml[1027,50423+28]..[1027,50423+30])
            Pexp_construct "()" (lang_fans.ml[1027,50423+28]..[1027,50423+30])
            None
      ]
]
