[
  structure_item (plugins.ml[1,0+0]..[1,0+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[1,0+4]..[1,0+12])
          Ppat_var "gen_stru" (plugins.ml[1,0+4]..[1,0+12])
        expression (plugins.ml[1,0+15]..[1,0+30])
          Pexp_ident "Derive.gen_stru" (plugins.ml[1,0+15]..[1,0+30])
    ]
  structure_item (plugins.ml[2,31+0]..[2,31+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[2,31+4]..[2,31+14])
          Ppat_var "gen_object" (plugins.ml[2,31+4]..[2,31+14])
        expression (plugins.ml[2,31+17]..[2,31+34])
          Pexp_ident "Derive.gen_object" (plugins.ml[2,31+17]..[2,31+34])
    ]
  structure_item (plugins.ml[3,66+0]..[3,66+10])
    Pstr_open Fresh "Astfn" (plugins.ml[3,66+5]..[3,66+10])
  structure_item (plugins.ml[4,77+0]..[4,77+14])
    Pstr_open Fresh "Astn_util" (plugins.ml[4,77+5]..[4,77+14])
  structure_item (plugins.ml[5,92+0]..[5,92+9])
    Pstr_open Fresh "Util" (plugins.ml[5,92+5]..[5,92+9])
  structure_item (plugins.ml[6,102+0]..[6,102+14])
    Pstr_open Fresh "Sigs_util" (plugins.ml[6,102+5]..[6,102+14])
  structure_item (plugins.ml[7,117+0]..[22,670+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[7,117+4]..[7,117+14])
          Ppat_var "mk_variant" (plugins.ml[7,117+4]..[7,117+14])
        expression (plugins.ml[8,134+2]..[22,670+31])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[9,145+4]..[9,145+9])
                Ppat_var "_cons" (plugins.ml[9,145+4]..[9,145+9])
              expression (plugins.ml[10,158+6]..[22,670+31]) ghost
                Pexp_constraint
                expression (plugins.ml[10,158+7]..[21,594+72])
                  Pexp_function
                  [
                    <case>
                      pattern (plugins.ml[11,175+10]..[11,175+12])
                        Ppat_construct "[]" (plugins.ml[11,175+10]..[11,175+12])
                        None
                      expression (plugins.ml[11,175+16]..[11,175+41]) ghost
                        Pexp_coerce
                        expression (plugins.ml[11,175+17]..[11,175+27])
                          Pexp_variant "Bool"
                          Some
                            expression (plugins.ml[11,175+23]..[11,175+27])
                              Pexp_construct "true" (plugins.ml[11,175+23]..[11,175+27])
                              None
                        None
                        core_type (plugins.ml[11,175+31]..[11,175+40])
                          Ptyp_constr "Astfn.exp" (plugins.ml[11,175+31]..[11,175+40])
                          []
                    <case>
                      pattern (plugins.ml[12,217+10]..[12,217+12])
                        Ppat_var "ls" (plugins.ml[12,217+10]..[12,217+12])
                      expression (plugins.ml[13,233+12]..[21,594+71])
                        Pexp_apply
                        expression (plugins.ml[13,233+12]..[13,233+34])
                          Pexp_ident "Listf.reduce_left_with" (plugins.ml[13,233+12]..[13,233+34])
                        [
                          <label> "compose"
                            expression (plugins.ml[14,268+23]..[20,522+71])
                              Pexp_function
                              [
                                <case>
                                  pattern (plugins.ml[15,301+26]..[15,301+27])
                                    Ppat_var "x" (plugins.ml[15,301+26]..[15,301+27])
                                  expression (plugins.ml[16,332+28]..[20,522+70])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (plugins.ml[17,370+31]..[17,370+32])
                                          Ppat_var "y" (plugins.ml[17,370+31]..[17,370+32])
                                        expression (plugins.ml[18,406+33]..[20,522+69]) ghost
                                          Pexp_coerce
                                          expression (plugins.ml[18,406+34]..[20,522+55])
                                            Pexp_variant "App"
                                            Some
                                              expression (plugins.ml[19,445+36]..[20,522+55])
                                                Pexp_tuple
                                                [
                                                  expression (plugins.ml[19,445+37]..[19,445+75])
                                                    Pexp_variant "App"
                                                    Some
                                                      expression (plugins.ml[19,445+43]..[19,445+74])
                                                        Pexp_tuple
                                                        [
                                                          expression (plugins.ml[19,445+44]..[19,445+55])
                                                            Pexp_variant "Lid"
                                                            Some
                                                              expression (plugins.ml[19,445+50]..[19,445+54])
                                                                Pexp_constant Const_string("&&",None)
                                                          expression (plugins.ml[19,445+57]..[19,445+73]) ghost
                                                            Pexp_coerce
                                                            expression (plugins.ml[19,445+58]..[19,445+59])
                                                              Pexp_ident "x" (plugins.ml[19,445+58]..[19,445+59])
                                                            None
                                                            core_type (plugins.ml[19,445+63]..[19,445+72])
                                                              Ptyp_constr "Astfn.exp" (plugins.ml[19,445+63]..[19,445+72])
                                                              []
                                                        ]
                                                  expression (plugins.ml[20,522+38]..[20,522+54]) ghost
                                                    Pexp_coerce
                                                    expression (plugins.ml[20,522+39]..[20,522+40])
                                                      Pexp_ident "y" (plugins.ml[20,522+39]..[20,522+40])
                                                    None
                                                    core_type (plugins.ml[20,522+44]..[20,522+53])
                                                      Ptyp_constr "Astfn.exp" (plugins.ml[20,522+44]..[20,522+53])
                                                      []
                                                ]
                                          None
                                          core_type (plugins.ml[20,522+59]..[20,522+68])
                                            Ptyp_constr "Astfn.exp" (plugins.ml[20,522+59]..[20,522+68])
                                            []
                                    ]
                              ]
                          <label> "project"
                            expression (plugins.ml[21,594+23]..[21,594+68])
                              Pexp_function
                              [
                                <case>
                                  pattern (plugins.ml[21,594+35]..[21,594+53])
                                    Ppat_constraint
                                    pattern (plugins.ml[21,594+36]..[21,594+37])
                                      Ppat_var "x" (plugins.ml[21,594+36]..[21,594+37])
                                    core_type (plugins.ml[21,594+40]..[21,594+52])
                                      Ptyp_constr "Ctyp.ty_info" (plugins.ml[21,594+40]..[21,594+52])
                                      []
                                  expression (plugins.ml[21,594+57]..[21,594+67])
                                    Pexp_field
                                    expression (plugins.ml[21,594+57]..[21,594+58])
                                      Pexp_ident "x" (plugins.ml[21,594+57]..[21,594+58])
                                    "info_exp" (plugins.ml[21,594+59]..[21,594+67])
                              ]
                          <label> ""
                            expression (plugins.ml[21,594+69]..[21,594+71])
                              Pexp_ident "ls" (plugins.ml[21,594+69]..[21,594+71])
                        ]
                  ]
                core_type (plugins.ml[22,670+6]..[22,670+30])
                  Ptyp_arrow
                  ""
                  core_type (plugins.ml[22,670+6]..[22,670+23])
                    Ptyp_constr "list" (plugins.ml[22,670+19]..[22,670+23])
                    [
                      core_type (plugins.ml[22,670+6]..[22,670+18])
                        Ptyp_constr "Ctyp.ty_info" (plugins.ml[22,670+6]..[22,670+18])
                        []
                    ]
                  core_type (plugins.ml[22,670+27]..[22,670+30])
                    Ptyp_constr "exp" (plugins.ml[22,670+27]..[22,670+30])
                    []
          ]
    ]
  structure_item (plugins.ml[23,702+0]..[23,702+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[23,702+4]..[23,702+12])
          Ppat_var "mk_tuple" (plugins.ml[23,702+4]..[23,702+12])
        expression (plugins.ml[23,702+15]..[23,702+52])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[23,702+26]..[23,702+30])
                Ppat_var "exps" (plugins.ml[23,702+26]..[23,702+30])
              expression (plugins.ml[23,702+34]..[23,702+52])
                Pexp_apply
                expression (plugins.ml[23,702+34]..[23,702+44])
                  Pexp_ident "mk_variant" (plugins.ml[23,702+34]..[23,702+44])
                [
                  <label> ""
                    expression (plugins.ml[23,702+45]..[23,702+47])
                      Pexp_constant Const_string("",None)
                  <label> ""
                    expression (plugins.ml[23,702+48]..[23,702+52])
                      Pexp_ident "exps" (plugins.ml[23,702+48]..[23,702+52])
                ]
          ]
    ]
  structure_item (plugins.ml[24,755+0]..[28,898+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[24,755+4]..[24,755+13])
          Ppat_var "mk_record" (plugins.ml[24,755+4]..[24,755+13])
        expression (plugins.ml[24,755+13]..[28,898+23]) ghost
          Pexp_constraint
          expression (plugins.ml[25,800+2]..[28,898+23])
            Pexp_function
            [
              <case>
                pattern (plugins.ml[26,811+4]..[26,811+8])
                  Ppat_var "cols" (plugins.ml[26,811+4]..[26,811+8])
                expression (plugins.ml[27,823+6]..[28,898+23])
                  Pexp_apply
                  expression (plugins.ml[27,823+72]..[27,823+74])
                    Pexp_ident "|>" (plugins.ml[27,823+72]..[27,823+74])
                  [
                    <label> ""
                      expression (plugins.ml[27,823+6]..[27,823+71])
                        Pexp_apply
                        expression (plugins.ml[27,823+12]..[27,823+14])
                          Pexp_ident "|>" (plugins.ml[27,823+12]..[27,823+14])
                        [
                          <label> ""
                            expression (plugins.ml[27,823+7]..[27,823+11])
                              Pexp_ident "cols" (plugins.ml[27,823+7]..[27,823+11])
                          <label> ""
                            expression (plugins.ml[27,823+15]..[27,823+70])
                              Pexp_apply
                              expression (plugins.ml[27,823+16]..[27,823+24])
                                Pexp_ident "List.map" (plugins.ml[27,823+16]..[27,823+24])
                              [
                                <label> ""
                                  expression (plugins.ml[27,823+25]..[27,823+69])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (plugins.ml[27,823+37]..[27,823+58])
                                          Ppat_constraint
                                          pattern (plugins.ml[27,823+38]..[27,823+39])
                                            Ppat_var "x" (plugins.ml[27,823+38]..[27,823+39])
                                          core_type (plugins.ml[27,823+42]..[27,823+57])
                                            Ptyp_constr "Ctyp.record_col" (plugins.ml[27,823+42]..[27,823+57])
                                            []
                                        expression (plugins.ml[27,823+62]..[27,823+68])
                                          Pexp_field
                                          expression (plugins.ml[27,823+62]..[27,823+63])
                                            Pexp_ident "x" (plugins.ml[27,823+62]..[27,823+63])
                                          "info" (plugins.ml[27,823+64]..[27,823+68])
                                    ]
                              ]
                        ]
                    <label> ""
                      expression (plugins.ml[28,898+8]..[28,898+23])
                        Pexp_apply
                        expression (plugins.ml[28,898+9]..[28,898+19])
                          Pexp_ident "mk_variant" (plugins.ml[28,898+9]..[28,898+19])
                        [
                          <label> ""
                            expression (plugins.ml[28,898+20]..[28,898+22])
                              Pexp_constant Const_string("",None)
                        ]
                  ]
            ]
          core_type (plugins.ml[24,755+15]..[24,755+42])
            Ptyp_arrow
            ""
            core_type (plugins.ml[24,755+15]..[24,755+35])
              Ptyp_constr "list" (plugins.ml[24,755+31]..[24,755+35])
              [
                core_type (plugins.ml[24,755+15]..[24,755+30])
                  Ptyp_constr "Ctyp.record_col" (plugins.ml[24,755+15]..[24,755+30])
                  []
              ]
            core_type (plugins.ml[24,755+39]..[24,755+42])
              Ptyp_constr "exp" (plugins.ml[24,755+39]..[24,755+42])
              []
    ]
  structure_item (plugins.ml[29,922+0]..[34,1174+47])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[29,922+4]..[29,922+22])
          Ppat_tuple
          [
            pattern (plugins.ml[29,922+5]..[29,922+11])
              Ppat_var "gen_eq" (plugins.ml[29,922+5]..[29,922+11])
            pattern (plugins.ml[29,922+12]..[29,922+21])
              Ppat_var "gen_eqobj" (plugins.ml[29,922+12]..[29,922+21])
          ]
        expression (plugins.ml[30,947+2]..[34,1174+47])
          Pexp_tuple
          [
            expression (plugins.ml[30,947+3]..[31,1019+45])
              Pexp_apply
              expression (plugins.ml[30,947+4]..[30,947+12])
                Pexp_ident "gen_stru" (plugins.ml[30,947+4]..[30,947+12])
              [
                <label> "id"
                  expression (plugins.ml[30,947+17]..[30,947+29])
                    Pexp_variant "Pre"
                    Some
                      expression (plugins.ml[30,947+23]..[30,947+28])
                        Pexp_constant Const_string("eq_",None)
                <label> "arity"
                  expression (plugins.ml[30,947+37]..[30,947+38])
                    Pexp_constant Const_int 2
                <label> "mk_tuple"
                  expression (plugins.ml[30,947+40]..[30,947+48])
                    Pexp_ident "mk_tuple" (plugins.ml[30,947+40]..[30,947+48])
                <label> "mk_record"
                  expression (plugins.ml[30,947+50]..[30,947+59])
                    Pexp_ident "mk_record" (plugins.ml[30,947+50]..[30,947+59])
                <label> "mk_variant"
                  expression (plugins.ml[30,947+61]..[30,947+71])
                    Pexp_ident "mk_variant" (plugins.ml[30,947+61]..[30,947+71])
                <label> "default"
                  expression (plugins.ml[31,1019+15]..[31,1019+41]) ghost
                    Pexp_coerce
                    expression (plugins.ml[31,1019+16]..[31,1019+27])
                      Pexp_variant "Bool"
                      Some
                        expression (plugins.ml[31,1019+22]..[31,1019+27])
                          Pexp_construct "false" (plugins.ml[31,1019+22]..[31,1019+27])
                          None
                    None
                    core_type (plugins.ml[31,1019+31]..[31,1019+40])
                      Ptyp_constr "Astfn.exp" (plugins.ml[31,1019+31]..[31,1019+40])
                      []
                <label> ""
                  expression (plugins.ml[31,1019+42]..[31,1019+44])
                    Pexp_construct "()" (plugins.ml[31,1019+42]..[31,1019+44])
                    None
              ]
            expression (plugins.ml[32,1066+4]..[34,1174+46])
              Pexp_apply
              expression (plugins.ml[32,1066+5]..[32,1066+15])
                Pexp_ident "gen_object" (plugins.ml[32,1066+5]..[32,1066+15])
              [
                <label> "kind"
                  expression (plugins.ml[32,1066+22]..[32,1066+26])
                    Pexp_construct "Iter" (plugins.ml[32,1066+22]..[32,1066+26])
                    None
                <label> "mk_tuple"
                  expression (plugins.ml[32,1066+28]..[32,1066+36])
                    Pexp_ident "mk_tuple" (plugins.ml[32,1066+28]..[32,1066+36])
                <label> "mk_record"
                  expression (plugins.ml[32,1066+38]..[32,1066+47])
                    Pexp_ident "mk_record" (plugins.ml[32,1066+38]..[32,1066+47])
                <label> "base"
                  expression (plugins.ml[32,1066+54]..[32,1066+62])
                    Pexp_constant Const_string("eqbase",None)
                <label> "class_name"
                  expression (plugins.ml[33,1129+19]..[33,1129+23])
                    Pexp_constant Const_string("eq",None)
                <label> "mk_variant"
                  expression (plugins.ml[33,1129+25]..[33,1129+35])
                    Pexp_ident "mk_variant" (plugins.ml[33,1129+25]..[33,1129+35])
                <label> "arity"
                  expression (plugins.ml[33,1129+43]..[33,1129+44])
                    Pexp_constant Const_int 2
                <label> "default"
                  expression (plugins.ml[34,1174+16]..[34,1174+42]) ghost
                    Pexp_coerce
                    expression (plugins.ml[34,1174+17]..[34,1174+28])
                      Pexp_variant "Bool"
                      Some
                        expression (plugins.ml[34,1174+23]..[34,1174+28])
                          Pexp_construct "false" (plugins.ml[34,1174+23]..[34,1174+28])
                          None
                    None
                    core_type (plugins.ml[34,1174+32]..[34,1174+41])
                      Ptyp_constr "Astfn.exp" (plugins.ml[34,1174+32]..[34,1174+41])
                      []
                <label> ""
                  expression (plugins.ml[34,1174+43]..[34,1174+45])
                    Pexp_construct "()" (plugins.ml[34,1174+43]..[34,1174+45])
                    None
              ]
          ]
    ]
  structure_item (plugins.ml[35,1222+0]..[35,1222+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[35,1222+4]..[35,1222+8])
          Ppat_var "some" (plugins.ml[35,1222+4]..[35,1222+8])
        expression (plugins.ml[35,1222+11]..[35,1222+55])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[35,1222+22]..[35,1222+23])
                Ppat_var "f" (plugins.ml[35,1222+22]..[35,1222+23])
              expression (plugins.ml[35,1222+27]..[35,1222+55])
                Pexp_function
                [
                  <case>
                    pattern (plugins.ml[35,1222+39]..[35,1222+40])
                      Ppat_var "x" (plugins.ml[35,1222+39]..[35,1222+40])
                    expression (plugins.ml[35,1222+44]..[35,1222+54])
                      Pexp_construct "Some" (plugins.ml[35,1222+44]..[35,1222+48])
                      Some
                        expression (plugins.ml[35,1222+49]..[35,1222+54])
                          Pexp_apply
                          expression (plugins.ml[35,1222+50]..[35,1222+51])
                            Pexp_ident "f" (plugins.ml[35,1222+50]..[35,1222+51])
                          [
                            <label> ""
                              expression (plugins.ml[35,1222+52]..[35,1222+53])
                                Pexp_ident "x" (plugins.ml[35,1222+52]..[35,1222+53])
                          ]
                ]
          ]
    ]
  structure_item (plugins.ml[36,1278+0]..[69,2562+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[36,1278+4]..[36,1278+24])
          Ppat_tuple
          [
            pattern (plugins.ml[36,1278+5]..[36,1278+13])
              Ppat_var "gen_fold" (plugins.ml[36,1278+5]..[36,1278+13])
            pattern (plugins.ml[36,1278+14]..[36,1278+23])
              Ppat_var "gen_fold2" (plugins.ml[36,1278+14]..[36,1278+23])
          ]
        expression (plugins.ml[37,1305+2]..[69,2562+22])
          Pexp_let Nonrec
          [
            <def>
              pattern (plugins.ml[37,1305+6]..[37,1305+16])
                Ppat_var "mk_variant" (plugins.ml[37,1305+6]..[37,1305+16])
              expression (plugins.ml[38,1324+4]..[57,2001+79])
                Pexp_function
                [
                  <case>
                    pattern (plugins.ml[39,1337+6]..[39,1337+11])
                      Ppat_var "_cons" (plugins.ml[39,1337+6]..[39,1337+11])
                    expression (plugins.ml[40,1352+8]..[57,2001+79])
                      Pexp_function
                      [
                        <case>
                          pattern (plugins.ml[41,1370+11]..[41,1370+17])
                            Ppat_var "params" (plugins.ml[41,1370+11]..[41,1370+17])
                          expression (plugins.ml[42,1391+13]..[57,2001+78])
                            Pexp_apply
                            expression (plugins.ml[44,1489+15]..[44,1489+17])
                              Pexp_ident "|>" (plugins.ml[44,1489+15]..[44,1489+17])
                            [
                              <label> ""
                                expression (plugins.ml[42,1391+13]..[43,1415+73])
                                  Pexp_apply
                                  expression (plugins.ml[42,1391+21]..[42,1391+23])
                                    Pexp_ident "|>" (plugins.ml[42,1391+21]..[42,1391+23])
                                  [
                                    <label> ""
                                      expression (plugins.ml[42,1391+14]..[42,1391+20])
                                        Pexp_ident "params" (plugins.ml[42,1391+14]..[42,1391+20])
                                    <label> ""
                                      expression (plugins.ml[43,1415+16]..[43,1415+72])
                                        Pexp_apply
                                        expression (plugins.ml[43,1415+17]..[43,1415+25])
                                          Pexp_ident "List.map" (plugins.ml[43,1415+17]..[43,1415+25])
                                        [
                                          <label> ""
                                            expression (plugins.ml[43,1415+26]..[43,1415+71])
                                              Pexp_function
                                              [
                                                <case>
                                                  pattern (plugins.ml[43,1415+38]..[43,1415+56])
                                                    Ppat_constraint
                                                    pattern (plugins.ml[43,1415+39]..[43,1415+40])
                                                      Ppat_var "x" (plugins.ml[43,1415+39]..[43,1415+40])
                                                    core_type (plugins.ml[43,1415+43]..[43,1415+55])
                                                      Ptyp_constr "Ctyp.ty_info" (plugins.ml[43,1415+43]..[43,1415+55])
                                                      []
                                                  expression (plugins.ml[43,1415+60]..[43,1415+70])
                                                    Pexp_field
                                                    expression (plugins.ml[43,1415+60]..[43,1415+61])
                                                      Pexp_ident "x" (plugins.ml[43,1415+60]..[43,1415+61])
                                                    "info_exp" (plugins.ml[43,1415+62]..[43,1415+70])
                                              ]
                                        ]
                                  ]
                              <label> ""
                                expression (plugins.ml[45,1507+15]..[57,2001+78])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (plugins.ml[46,1533+19]..[46,1533+21])
                                        Ppat_construct "[]" (plugins.ml[46,1533+19]..[46,1533+21])
                                        None
                                      expression (plugins.ml[46,1533+25]..[46,1533+51]) ghost
                                        Pexp_coerce
                                        expression (plugins.ml[46,1533+26]..[46,1533+37])
                                          Pexp_variant "Lid"
                                          Some
                                            expression (plugins.ml[46,1533+31]..[46,1533+37])
                                              Pexp_constant Const_string("self",None)
                                        None
                                        core_type (plugins.ml[46,1533+41]..[46,1533+50])
                                          Ptyp_constr "Astfn.exp" (plugins.ml[46,1533+41]..[46,1533+50])
                                          []
                                    <case>
                                      pattern (plugins.ml[47,1585+19]..[47,1585+21])
                                        Ppat_var "ls" (plugins.ml[47,1585+19]..[47,1585+21])
                                      expression (plugins.ml[48,1610+21]..[57,2001+76])
                                        Pexp_apply
                                        expression (plugins.ml[48,1610+21]..[48,1610+39])
                                          Pexp_ident "Listf.reduce_right" (plugins.ml[48,1610+21]..[48,1610+39])
                                        [
                                          <label> ""
                                            expression (plugins.ml[49,1650+23]..[57,2001+73])
                                              Pexp_function
                                              [
                                                <case>
                                                  pattern (plugins.ml[50,1683+26]..[50,1683+27])
                                                    Ppat_var "v" (plugins.ml[50,1683+26]..[50,1683+27])
                                                  expression (plugins.ml[51,1714+28]..[57,2001+72])
                                                    Pexp_function
                                                    [
                                                      <case>
                                                        pattern (plugins.ml[52,1752+31]..[52,1752+34])
                                                          Ppat_var "acc" (plugins.ml[52,1752+31]..[52,1752+34])
                                                        expression (plugins.ml[53,1790+33]..[57,2001+71]) ghost
                                                          Pexp_coerce
                                                          expression (plugins.ml[53,1790+34]..[57,2001+57])
                                                            Pexp_variant "LetIn"
                                                            Some
                                                              expression (plugins.ml[54,1831+36]..[57,2001+57])
                                                                Pexp_tuple
                                                                [
                                                                  expression (plugins.ml[54,1831+37]..[54,1831+46])
                                                                    Pexp_variant "Negative"
                                                                    None
                                                                  expression (plugins.ml[55,1879+38]..[56,1924+75])
                                                                    Pexp_variant "Bind"
                                                                    Some
                                                                      expression (plugins.ml[56,1924+41]..[56,1924+74])
Pexp_tuple
[
  expression (plugins.ml[56,1924+42]..[56,1924+55])
    Pexp_variant "Lid"
    Some
      expression (plugins.ml[56,1924+48]..[56,1924+54])
        Pexp_constant Const_string("self",None)
  expression (plugins.ml[56,1924+57]..[56,1924+73]) ghost
    Pexp_coerce
    expression (plugins.ml[56,1924+58]..[56,1924+59])
      Pexp_ident "v" (plugins.ml[56,1924+58]..[56,1924+59])
    None
    core_type (plugins.ml[56,1924+63]..[56,1924+72])
      Ptyp_constr "Astfn.exp" (plugins.ml[56,1924+63]..[56,1924+72])
      []
]
                                                                  expression (plugins.ml[57,2001+38]..[57,2001+56]) ghost
                                                                    Pexp_coerce
                                                                    expression (plugins.ml[57,2001+39]..[57,2001+42])
                                                                      Pexp_ident "acc" (plugins.ml[57,2001+39]..[57,2001+42])
                                                                    None
                                                                    core_type (plugins.ml[57,2001+46]..[57,2001+55])
                                                                      Ptyp_constr "Astfn.exp" (plugins.ml[57,2001+46]..[57,2001+55])
                                                                      []
                                                                ]
                                                          None
                                                          core_type (plugins.ml[57,2001+61]..[57,2001+70])
                                                            Ptyp_constr "Astfn.exp" (plugins.ml[57,2001+61]..[57,2001+70])
                                                            []
                                                    ]
                                              ]
                                          <label> ""
                                            expression (plugins.ml[57,2001+74]..[57,2001+76])
                                              Pexp_ident "ls" (plugins.ml[57,2001+74]..[57,2001+76])
                                        ]
                                  ]
                            ]
                      ]
                ]
          ]
          expression (plugins.ml[58,2084+2]..[69,2562+22])
            Pexp_let Nonrec
            [
              <def>
                pattern (plugins.ml[58,2084+6]..[58,2084+14])
                  Ppat_var "mk_tuple" (plugins.ml[58,2084+6]..[58,2084+14])
                expression (plugins.ml[58,2084+17]..[58,2084+30])
                  Pexp_apply
                  expression (plugins.ml[58,2084+17]..[58,2084+27])
                    Pexp_ident "mk_variant" (plugins.ml[58,2084+17]..[58,2084+27])
                  [
                    <label> ""
                      expression (plugins.ml[58,2084+28]..[58,2084+30])
                        Pexp_constant Const_string("",None)
                  ]
            ]
            expression (plugins.ml[59,2118+2]..[69,2562+22])
              Pexp_let Nonrec
              [
                <def>
                  pattern (plugins.ml[59,2118+6]..[59,2118+15])
                    Ppat_var "mk_record" (plugins.ml[59,2118+6]..[59,2118+15])
                  expression (plugins.ml[60,2136+4]..[63,2240+25])
                    Pexp_function
                    [
                      <case>
                        pattern (plugins.ml[61,2149+6]..[61,2149+10])
                          Ppat_var "cols" (plugins.ml[61,2149+6]..[61,2149+10])
                        expression (plugins.ml[62,2163+8]..[63,2240+25])
                          Pexp_apply
                          expression (plugins.ml[62,2163+74]..[62,2163+76])
                            Pexp_ident "|>" (plugins.ml[62,2163+74]..[62,2163+76])
                          [
                            <label> ""
                              expression (plugins.ml[62,2163+8]..[62,2163+73])
                                Pexp_apply
                                expression (plugins.ml[62,2163+14]..[62,2163+16])
                                  Pexp_ident "|>" (plugins.ml[62,2163+14]..[62,2163+16])
                                [
                                  <label> ""
                                    expression (plugins.ml[62,2163+9]..[62,2163+13])
                                      Pexp_ident "cols" (plugins.ml[62,2163+9]..[62,2163+13])
                                  <label> ""
                                    expression (plugins.ml[62,2163+17]..[62,2163+72])
                                      Pexp_apply
                                      expression (plugins.ml[62,2163+18]..[62,2163+26])
                                        Pexp_ident "List.map" (plugins.ml[62,2163+18]..[62,2163+26])
                                      [
                                        <label> ""
                                          expression (plugins.ml[62,2163+27]..[62,2163+71])
                                            Pexp_function
                                            [
                                              <case>
                                                pattern (plugins.ml[62,2163+39]..[62,2163+60])
                                                  Ppat_constraint
                                                  pattern (plugins.ml[62,2163+40]..[62,2163+41])
                                                    Ppat_var "x" (plugins.ml[62,2163+40]..[62,2163+41])
                                                  core_type (plugins.ml[62,2163+44]..[62,2163+59])
                                                    Ptyp_constr "Ctyp.record_col" (plugins.ml[62,2163+44]..[62,2163+59])
                                                    []
                                                expression (plugins.ml[62,2163+64]..[62,2163+70])
                                                  Pexp_field
                                                  expression (plugins.ml[62,2163+64]..[62,2163+65])
                                                    Pexp_ident "x" (plugins.ml[62,2163+64]..[62,2163+65])
                                                  "info" (plugins.ml[62,2163+66]..[62,2163+70])
                                            ]
                                      ]
                                ]
                            <label> ""
                              expression (plugins.ml[63,2240+10]..[63,2240+25])
                                Pexp_apply
                                expression (plugins.ml[63,2240+11]..[63,2240+21])
                                  Pexp_ident "mk_variant" (plugins.ml[63,2240+11]..[63,2240+21])
                                [
                                  <label> ""
                                    expression (plugins.ml[63,2240+22]..[63,2240+24])
                                      Pexp_constant Const_string("",None)
                                ]
                          ]
                    ]
              ]
              expression (plugins.ml[64,2269+2]..[69,2562+22])
                Pexp_tuple
                [
                  expression (plugins.ml[64,2269+3]..[65,2333+40])
                    Pexp_apply
                    expression (plugins.ml[64,2269+4]..[64,2269+14])
                      Pexp_ident "gen_object" (plugins.ml[64,2269+4]..[64,2269+14])
                    [
                      <label> "kind"
                        expression (plugins.ml[64,2269+21]..[64,2269+25])
                          Pexp_construct "Fold" (plugins.ml[64,2269+21]..[64,2269+25])
                          None
                      <label> "mk_tuple"
                        expression (plugins.ml[64,2269+27]..[64,2269+35])
                          Pexp_ident "mk_tuple" (plugins.ml[64,2269+27]..[64,2269+35])
                      <label> "mk_record"
                        expression (plugins.ml[64,2269+37]..[64,2269+46])
                          Pexp_ident "mk_record" (plugins.ml[64,2269+37]..[64,2269+46])
                      <label> "base"
                        expression (plugins.ml[64,2269+53]..[64,2269+63])
                          Pexp_constant Const_string("foldbase",None)
                      <label> "class_name"
                        expression (plugins.ml[65,2333+18]..[65,2333+24])
                          Pexp_constant Const_string("fold",None)
                      <label> "mk_variant"
                        expression (plugins.ml[65,2333+26]..[65,2333+36])
                          Pexp_ident "mk_variant" (plugins.ml[65,2333+26]..[65,2333+36])
                      <label> ""
                        expression (plugins.ml[65,2333+37]..[65,2333+39])
                          Pexp_construct "()" (plugins.ml[65,2333+37]..[65,2333+39])
                          None
                    ]
                  expression (plugins.ml[66,2375+4]..[69,2562+21])
                    Pexp_apply
                    expression (plugins.ml[66,2375+5]..[66,2375+15])
                      Pexp_ident "gen_object" (plugins.ml[66,2375+5]..[66,2375+15])
                    [
                      <label> "kind"
                        expression (plugins.ml[66,2375+22]..[66,2375+26])
                          Pexp_construct "Fold" (plugins.ml[66,2375+22]..[66,2375+26])
                          None
                      <label> "mk_tuple"
                        expression (plugins.ml[66,2375+28]..[66,2375+36])
                          Pexp_ident "mk_tuple" (plugins.ml[66,2375+28]..[66,2375+36])
                      <label> "mk_record"
                        expression (plugins.ml[66,2375+38]..[66,2375+47])
                          Pexp_ident "mk_record" (plugins.ml[66,2375+38]..[66,2375+47])
                      <label> "base"
                        expression (plugins.ml[66,2375+54]..[66,2375+65])
                          Pexp_constant Const_string("foldbase2",None)
                      <label> "class_name"
                        expression (plugins.ml[67,2441+19]..[67,2441+26])
                          Pexp_constant Const_string("fold2",None)
                      <label> "mk_variant"
                        expression (plugins.ml[67,2441+28]..[67,2441+38])
                          Pexp_ident "mk_variant" (plugins.ml[67,2441+28]..[67,2441+38])
                      <label> "arity"
                        expression (plugins.ml[67,2441+46]..[67,2441+47])
                          Pexp_constant Const_int 2
                      <label> "default"
                        expression (plugins.ml[68,2489+16]..[69,2562+17]) ghost
                          Pexp_coerce
                          expression (plugins.ml[68,2489+17]..[68,2489+68])
                            Pexp_variant "App"
                            Some
                              expression (plugins.ml[68,2489+22]..[68,2489+68])
                                Pexp_tuple
                                [
                                  expression (plugins.ml[68,2489+23]..[68,2489+43])
                                    Pexp_variant "Lid"
                                    Some
                                      expression (plugins.ml[68,2489+29]..[68,2489+42])
                                        Pexp_constant Const_string("invalid_arg",None)
                                  expression (plugins.ml[68,2489+45]..[68,2489+67])
                                    Pexp_variant "Str"
                                    Some
                                      expression (plugins.ml[68,2489+51]..[68,2489+66])
                                        Pexp_constant Const_string("fold2 failure",None)
                                ]
                          None
                          core_type (plugins.ml[69,2562+7]..[69,2562+16])
                            Ptyp_constr "Astfn.exp" (plugins.ml[69,2562+7]..[69,2562+16])
                            []
                      <label> ""
                        expression (plugins.ml[69,2562+18]..[69,2562+20])
                          Pexp_construct "()" (plugins.ml[69,2562+18]..[69,2562+20])
                          None
                    ]
                ]
    ]
  structure_item (plugins.ml[70,2585+0]..[72,2623+60])
    Pstr_eval
    expression (plugins.ml[71,2593+2]..[72,2623+60])
      Pexp_apply
      expression (plugins.ml[71,2593+2]..[71,2593+11])
        Pexp_ident "List.iter" (plugins.ml[71,2593+2]..[71,2593+11])
      [
        <label> ""
          expression (plugins.ml[71,2593+12]..[71,2593+29])
            Pexp_ident "Typehook.register" (plugins.ml[71,2593+12]..[71,2593+29])
        <label> ""
          expression (plugins.ml[72,2623+4]..[72,2623+60])
            Pexp_construct "::" (plugins.ml[72,2623+5]..[72,2623+60]) ghost
            Some
              expression (plugins.ml[72,2623+5]..[72,2623+60]) ghost
                Pexp_tuple
                [
                  expression (plugins.ml[72,2623+5]..[72,2623+30])
                    Pexp_tuple
                    [
                      expression (plugins.ml[72,2623+6]..[72,2623+12])
                        Pexp_constant Const_string("Fold",None)
                      expression (plugins.ml[72,2623+14]..[72,2623+29])
                        Pexp_apply
                        expression (plugins.ml[72,2623+15]..[72,2623+19])
                          Pexp_ident "some" (plugins.ml[72,2623+15]..[72,2623+19])
                        [
                          <label> ""
                            expression (plugins.ml[72,2623+20]..[72,2623+28])
                              Pexp_ident "gen_fold" (plugins.ml[72,2623+20]..[72,2623+28])
                        ]
                    ]
                  expression (plugins.ml[72,2623+32]..[72,2623+60]) ghost
                    Pexp_construct "::" (plugins.ml[72,2623+32]..[72,2623+60]) ghost
                    Some
                      expression (plugins.ml[72,2623+32]..[72,2623+60]) ghost
                        Pexp_tuple
                        [
                          expression (plugins.ml[72,2623+32]..[72,2623+59])
                            Pexp_tuple
                            [
                              expression (plugins.ml[72,2623+33]..[72,2623+40])
                                Pexp_constant Const_string("Fold2",None)
                              expression (plugins.ml[72,2623+42]..[72,2623+58])
                                Pexp_apply
                                expression (plugins.ml[72,2623+43]..[72,2623+47])
                                  Pexp_ident "some" (plugins.ml[72,2623+43]..[72,2623+47])
                                [
                                  <label> ""
                                    expression (plugins.ml[72,2623+48]..[72,2623+57])
                                      Pexp_ident "gen_fold2" (plugins.ml[72,2623+48]..[72,2623+57])
                                ]
                            ]
                          expression (plugins.ml[72,2623+59]..[72,2623+60]) ghost
                            Pexp_construct "[]" (plugins.ml[72,2623+59]..[72,2623+60]) ghost
                            None
                        ]
                ]
      ]
  structure_item (plugins.ml[73,2684+0]..[137,5031+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[73,2684+4]..[73,2684+22])
          Ppat_tuple
          [
            pattern (plugins.ml[73,2684+5]..[73,2684+12])
              Ppat_var "gen_map" (plugins.ml[73,2684+5]..[73,2684+12])
            pattern (plugins.ml[73,2684+13]..[73,2684+21])
              Ppat_var "gen_map2" (plugins.ml[73,2684+13]..[73,2684+21])
          ]
        expression (plugins.ml[74,2709+2]..[137,5031+22])
          Pexp_let Nonrec
          [
            <def>
              pattern (plugins.ml[74,2709+6]..[74,2709+16])
                Ppat_var "mk_variant" (plugins.ml[74,2709+6]..[74,2709+16])
              expression (plugins.ml[75,2728+4]..[94,3432+31])
                Pexp_function
                [
                  <case>
                    pattern (plugins.ml[76,2741+6]..[76,2741+10])
                      Ppat_var "cons" (plugins.ml[76,2741+6]..[76,2741+10])
                    expression (plugins.ml[77,2755+8]..[94,3432+31])
                      Pexp_function
                      [
                        <case>
                          pattern (plugins.ml[78,2773+11]..[78,2773+17])
                            Ppat_var "params" (plugins.ml[78,2773+11]..[78,2773+17])
                          expression (plugins.ml[79,2794+13]..[94,3432+30])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (plugins.ml[79,2794+17]..[79,2794+23])
                                  Ppat_var "result" (plugins.ml[79,2794+17]..[79,2794+23])
                                expression (plugins.ml[80,2820+15]..[82,2898+73])
                                  Pexp_apply
                                  expression (plugins.ml[80,2820+15]..[80,2820+27])
                                    Pexp_ident "appl_of_list" (plugins.ml[80,2820+15]..[80,2820+27])
                                  [
                                    <label> ""
                                      expression (plugins.ml[80,2820+28]..[82,2898+73])
                                        Pexp_construct "::" (plugins.ml[80,2820+47]..[80,2820+49])
                                        Some
                                          expression (plugins.ml[80,2820+29]..[82,2898+72]) ghost
                                            Pexp_tuple
                                            [
                                              expression (plugins.ml[80,2820+29]..[80,2820+46])
                                                Pexp_apply
                                                expression (plugins.ml[80,2820+30]..[80,2820+40])
                                                  Pexp_ident "EpN.of_str" (plugins.ml[80,2820+30]..[80,2820+40])
                                                [
                                                  <label> ""
                                                    expression (plugins.ml[80,2820+41]..[80,2820+45])
                                                      Pexp_ident "cons" (plugins.ml[80,2820+41]..[80,2820+45])
                                                ]
                                              expression (plugins.ml[81,2870+17]..[82,2898+72])
                                                Pexp_apply
                                                expression (plugins.ml[81,2870+25]..[81,2870+27])
                                                  Pexp_ident "|>" (plugins.ml[81,2870+25]..[81,2870+27])
                                                [
                                                  <label> ""
                                                    expression (plugins.ml[81,2870+18]..[81,2870+24])
                                                      Pexp_ident "params" (plugins.ml[81,2870+18]..[81,2870+24])
                                                  <label> ""
                                                    expression (plugins.ml[82,2898+20]..[82,2898+71])
                                                      Pexp_apply
                                                      expression (plugins.ml[82,2898+21]..[82,2898+29])
                                                        Pexp_ident "List.map" (plugins.ml[82,2898+21]..[82,2898+29])
                                                      [
                                                        <label> ""
                                                          expression (plugins.ml[82,2898+30]..[82,2898+70])
                                                            Pexp_function
                                                            [
                                                              <case>
                                                                pattern (plugins.ml[82,2898+42]..[82,2898+60])
                                                                  Ppat_constraint
                                                                  pattern (plugins.ml[82,2898+43]..[82,2898+44])
                                                                    Ppat_var "x" (plugins.ml[82,2898+43]..[82,2898+44])
                                                                  core_type (plugins.ml[82,2898+47]..[82,2898+59])
                                                                    Ptyp_constr "Ctyp.ty_info" (plugins.ml[82,2898+47]..[82,2898+59])
                                                                    []
                                                                expression (plugins.ml[82,2898+64]..[82,2898+69])
                                                                  Pexp_field
                                                                  expression (plugins.ml[82,2898+64]..[82,2898+65])
                                                                    Pexp_ident "x" (plugins.ml[82,2898+64]..[82,2898+65])
                                                                  "ep0" (plugins.ml[82,2898+66]..[82,2898+69])
                                                            ]
                                                      ]
                                                ]
                                            ]
                                  ]
                            ]
                            expression (plugins.ml[83,2975+13]..[94,3432+30])
                              Pexp_apply
                              expression (plugins.ml[83,2975+13]..[83,2975+28])
                                Pexp_ident "List.fold_right" (plugins.ml[83,2975+13]..[83,2975+28])
                              [
                                <label> ""
                                  expression (plugins.ml[84,3004+15]..[93,3359+65])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (plugins.ml[85,3029+18]..[85,3029+36])
                                          Ppat_constraint
                                          pattern (plugins.ml[85,3029+19]..[85,3029+20])
                                            Ppat_var "x" (plugins.ml[85,3029+19]..[85,3029+20])
                                          core_type (plugins.ml[85,3029+23]..[85,3029+35])
                                            Ptyp_constr "Ctyp.ty_info" (plugins.ml[85,3029+23]..[85,3029+35])
                                            []
                                        expression (plugins.ml[86,3069+20]..[93,3359+64])
                                          Pexp_function
                                          [
                                            <case>
                                              pattern (plugins.ml[87,3099+23]..[87,3099+26])
                                                Ppat_var "res" (plugins.ml[87,3099+23]..[87,3099+26])
                                              expression (plugins.ml[88,3129+25]..[93,3359+63]) ghost
                                                Pexp_coerce
                                                expression (plugins.ml[88,3129+26]..[93,3359+49])
                                                  Pexp_variant "LetIn"
                                                  Some
                                                    expression (plugins.ml[89,3162+28]..[93,3359+49])
                                                      Pexp_tuple
                                                      [
                                                        expression (plugins.ml[89,3162+29]..[89,3162+38])
                                                          Pexp_variant "Negative"
                                                          None
                                                        expression (plugins.ml[90,3202+30]..[92,3295+62])
                                                          Pexp_variant "Bind"
                                                          Some
                                                            expression (plugins.ml[91,3239+33]..[92,3295+61])
                                                              Pexp_tuple
                                                              [
                                                                expression (plugins.ml[91,3239+34]..[91,3239+54]) ghost
                                                                  Pexp_coerce
                                                                  expression (plugins.ml[91,3239+35]..[91,3239+40])
                                                                    Pexp_field
                                                                    expression (plugins.ml[91,3239+35]..[91,3239+36])
                                                                      Pexp_ident "x" (plugins.ml[91,3239+35]..[91,3239+36])
                                                                    "ep0" (plugins.ml[91,3239+37]..[91,3239+40])
                                                                  None
                                                                  core_type (plugins.ml[91,3239+44]..[91,3239+53])
                                                                    Ptyp_constr "Astfn.pat" (plugins.ml[91,3239+44]..[91,3239+53])
                                                                    []
                                                                expression (plugins.ml[92,3295+35]..[92,3295+60]) ghost
                                                                  Pexp_coerce
                                                                  expression (plugins.ml[92,3295+36]..[92,3295+46])
                                                                    Pexp_field
                                                                    expression (plugins.ml[92,3295+36]..[92,3295+37])
                                                                      Pexp_ident "x" (plugins.ml[92,3295+36]..[92,3295+37])
                                                                    "info_exp" (plugins.ml[92,3295+38]..[92,3295+46])
                                                                  None
                                                                  core_type (plugins.ml[92,3295+50]..[92,3295+59])
                                                                    Ptyp_constr "Astfn.exp" (plugins.ml[92,3295+50]..[92,3295+59])
                                                                    []
                                                              ]
                                                        expression (plugins.ml[93,3359+30]..[93,3359+48]) ghost
                                                          Pexp_coerce
                                                          expression (plugins.ml[93,3359+31]..[93,3359+34])
                                                            Pexp_ident "res" (plugins.ml[93,3359+31]..[93,3359+34])
                                                          None
                                                          core_type (plugins.ml[93,3359+38]..[93,3359+47])
                                                            Ptyp_constr "Astfn.exp" (plugins.ml[93,3359+38]..[93,3359+47])
                                                            []
                                                      ]
                                                None
                                                core_type (plugins.ml[93,3359+53]..[93,3359+62])
                                                  Ptyp_constr "Astfn.exp" (plugins.ml[93,3359+53]..[93,3359+62])
                                                  []
                                          ]
                                    ]
                                <label> ""
                                  expression (plugins.ml[93,3359+66]..[93,3359+72])
                                    Pexp_ident "params" (plugins.ml[93,3359+66]..[93,3359+72])
                                <label> ""
                                  expression (plugins.ml[94,3432+15]..[94,3432+30]) ghost
                                    Pexp_coerce
                                    expression (plugins.ml[94,3432+16]..[94,3432+22])
                                      Pexp_ident "result" (plugins.ml[94,3432+16]..[94,3432+22])
                                    None
                                    core_type (plugins.ml[94,3432+26]..[94,3432+29])
                                      Ptyp_constr "exp" (plugins.ml[94,3432+26]..[94,3432+29])
                                      []
                              ]
                      ]
                ]
          ]
          expression (plugins.ml[95,3467+2]..[137,5031+22])
            Pexp_let Nonrec
            [
              <def>
                pattern (plugins.ml[95,3467+6]..[95,3467+14])
                  Ppat_var "mk_tuple" (plugins.ml[95,3467+6]..[95,3467+14])
                expression (plugins.ml[96,3484+4]..[111,4008+25])
                  Pexp_function
                  [
                    <case>
                      pattern (plugins.ml[97,3497+6]..[97,3497+12])
                        Ppat_var "params" (plugins.ml[97,3497+6]..[97,3497+12])
                      expression (plugins.ml[98,3513+8]..[111,4008+25])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (plugins.ml[98,3513+12]..[98,3513+18])
                              Ppat_var "result" (plugins.ml[98,3513+12]..[98,3513+18])
                            expression (plugins.ml[99,3534+10]..[100,3611+21])
                              Pexp_apply
                              expression (plugins.ml[99,3534+74]..[99,3534+76])
                                Pexp_ident "|>" (plugins.ml[99,3534+74]..[99,3534+76])
                              [
                                <label> ""
                                  expression (plugins.ml[99,3534+10]..[99,3534+73])
                                    Pexp_apply
                                    expression (plugins.ml[99,3534+18]..[99,3534+20])
                                      Pexp_ident "|>" (plugins.ml[99,3534+18]..[99,3534+20])
                                    [
                                      <label> ""
                                        expression (plugins.ml[99,3534+11]..[99,3534+17])
                                          Pexp_ident "params" (plugins.ml[99,3534+11]..[99,3534+17])
                                      <label> ""
                                        expression (plugins.ml[99,3534+21]..[99,3534+72])
                                          Pexp_apply
                                          expression (plugins.ml[99,3534+22]..[99,3534+30])
                                            Pexp_ident "List.map" (plugins.ml[99,3534+22]..[99,3534+30])
                                          [
                                            <label> ""
                                              expression (plugins.ml[99,3534+31]..[99,3534+71])
                                                Pexp_function
                                                [
                                                  <case>
                                                    pattern (plugins.ml[99,3534+43]..[99,3534+61])
                                                      Ppat_constraint
                                                      pattern (plugins.ml[99,3534+44]..[99,3534+45])
                                                        Ppat_var "x" (plugins.ml[99,3534+44]..[99,3534+45])
                                                      core_type (plugins.ml[99,3534+48]..[99,3534+60])
                                                        Ptyp_constr "Ctyp.ty_info" (plugins.ml[99,3534+48]..[99,3534+60])
                                                        []
                                                    expression (plugins.ml[99,3534+65]..[99,3534+70])
                                                      Pexp_field
                                                      expression (plugins.ml[99,3534+65]..[99,3534+66])
                                                        Pexp_ident "x" (plugins.ml[99,3534+65]..[99,3534+66])
                                                      "ep0" (plugins.ml[99,3534+67]..[99,3534+70])
                                                ]
                                          ]
                                    ]
                                <label> ""
                                  expression (plugins.ml[100,3611+12]..[100,3611+21])
                                    Pexp_ident "tuple_com" (plugins.ml[100,3611+12]..[100,3611+21])
                              ]
                        ]
                        expression (plugins.ml[101,3636+8]..[111,4008+25])
                          Pexp_apply
                          expression (plugins.ml[101,3636+8]..[101,3636+23])
                            Pexp_ident "List.fold_right" (plugins.ml[101,3636+8]..[101,3636+23])
                          [
                            <label> ""
                              expression (plugins.ml[102,3660+10]..[110,3940+60])
                                Pexp_function
                                [
                                  <case>
                                    pattern (plugins.ml[103,3680+13]..[103,3680+31])
                                      Ppat_constraint
                                      pattern (plugins.ml[103,3680+14]..[103,3680+15])
                                        Ppat_var "x" (plugins.ml[103,3680+14]..[103,3680+15])
                                      core_type (plugins.ml[103,3680+18]..[103,3680+30])
                                        Ptyp_constr "Ctyp.ty_info" (plugins.ml[103,3680+18]..[103,3680+30])
                                        []
                                    expression (plugins.ml[104,3715+15]..[110,3940+59])
                                      Pexp_function
                                      [
                                        <case>
                                          pattern (plugins.ml[105,3740+18]..[105,3740+21])
                                            Ppat_var "res" (plugins.ml[105,3740+18]..[105,3740+21])
                                          expression (plugins.ml[106,3765+20]..[110,3940+58]) ghost
                                            Pexp_coerce
                                            expression (plugins.ml[106,3765+21]..[110,3940+44])
                                              Pexp_variant "LetIn"
                                              Some
                                                expression (plugins.ml[107,3793+23]..[110,3940+44])
                                                  Pexp_tuple
                                                  [
                                                    expression (plugins.ml[107,3793+24]..[107,3793+33])
                                                      Pexp_variant "Negative"
                                                      None
                                                    expression (plugins.ml[108,3828+25]..[109,3860+78])
                                                      Pexp_variant "Bind"
                                                      Some
                                                        expression (plugins.ml[109,3860+28]..[109,3860+77])
                                                          Pexp_tuple
                                                          [
                                                            expression (plugins.ml[109,3860+29]..[109,3860+49]) ghost
                                                              Pexp_coerce
                                                              expression (plugins.ml[109,3860+30]..[109,3860+35])
                                                                Pexp_field
                                                                expression (plugins.ml[109,3860+30]..[109,3860+31])
                                                                  Pexp_ident "x" (plugins.ml[109,3860+30]..[109,3860+31])
                                                                "ep0" (plugins.ml[109,3860+32]..[109,3860+35])
                                                              None
                                                              core_type (plugins.ml[109,3860+39]..[109,3860+48])
                                                                Ptyp_constr "Astfn.pat" (plugins.ml[109,3860+39]..[109,3860+48])
                                                                []
                                                            expression (plugins.ml[109,3860+51]..[109,3860+76]) ghost
                                                              Pexp_coerce
                                                              expression (plugins.ml[109,3860+52]..[109,3860+62])
                                                                Pexp_field
                                                                expression (plugins.ml[109,3860+52]..[109,3860+53])
                                                                  Pexp_ident "x" (plugins.ml[109,3860+52]..[109,3860+53])
                                                                "info_exp" (plugins.ml[109,3860+54]..[109,3860+62])
                                                              None
                                                              core_type (plugins.ml[109,3860+66]..[109,3860+75])
                                                                Ptyp_constr "Astfn.exp" (plugins.ml[109,3860+66]..[109,3860+75])
                                                                []
                                                          ]
                                                    expression (plugins.ml[110,3940+25]..[110,3940+43]) ghost
                                                      Pexp_coerce
                                                      expression (plugins.ml[110,3940+26]..[110,3940+29])
                                                        Pexp_ident "res" (plugins.ml[110,3940+26]..[110,3940+29])
                                                      None
                                                      core_type (plugins.ml[110,3940+33]..[110,3940+42])
                                                        Ptyp_constr "Astfn.exp" (plugins.ml[110,3940+33]..[110,3940+42])
                                                        []
                                                  ]
                                            None
                                            core_type (plugins.ml[110,3940+48]..[110,3940+57])
                                              Ptyp_constr "Astfn.exp" (plugins.ml[110,3940+48]..[110,3940+57])
                                              []
                                      ]
                                ]
                            <label> ""
                              expression (plugins.ml[110,3940+61]..[110,3940+67])
                                Pexp_ident "params" (plugins.ml[110,3940+61]..[110,3940+67])
                            <label> ""
                              expression (plugins.ml[111,4008+10]..[111,4008+25]) ghost
                                Pexp_coerce
                                expression (plugins.ml[111,4008+11]..[111,4008+17])
                                  Pexp_ident "result" (plugins.ml[111,4008+11]..[111,4008+17])
                                None
                                core_type (plugins.ml[111,4008+21]..[111,4008+24])
                                  Ptyp_constr "exp" (plugins.ml[111,4008+21]..[111,4008+24])
                                  []
                          ]
                  ]
            ]
            expression (plugins.ml[112,4037+2]..[137,5031+22])
              Pexp_let Nonrec
              [
                <def>
                  pattern (plugins.ml[112,4037+6]..[112,4037+15])
                    Ppat_var "mk_record" (plugins.ml[112,4037+6]..[112,4037+15])
                  expression (plugins.ml[113,4055+4]..[131,4669+72])
                    Pexp_function
                    [
                      <case>
                        pattern (plugins.ml[114,4068+6]..[114,4068+10])
                          Ppat_var "cols" (plugins.ml[114,4068+6]..[114,4068+10])
                        expression (plugins.ml[115,4082+8]..[131,4669+72])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (plugins.ml[115,4082+12]..[115,4082+18])
                                Ppat_var "result" (plugins.ml[115,4082+12]..[115,4082+18])
                              expression (plugins.ml[116,4103+10]..[122,4331+29])
                                Pexp_apply
                                expression (plugins.ml[122,4331+12]..[122,4331+14])
                                  Pexp_ident "|>" (plugins.ml[122,4331+12]..[122,4331+14])
                                [
                                  <label> ""
                                    expression (plugins.ml[116,4103+10]..[121,4250+80])
                                      Pexp_apply
                                      expression (plugins.ml[116,4103+16]..[116,4103+18])
                                        Pexp_ident "|>" (plugins.ml[116,4103+16]..[116,4103+18])
                                      [
                                        <label> ""
                                          expression (plugins.ml[116,4103+11]..[116,4103+15])
                                            Pexp_ident "cols" (plugins.ml[116,4103+11]..[116,4103+15])
                                        <label> ""
                                          expression (plugins.ml[117,4122+13]..[121,4250+79])
                                            Pexp_apply
                                            expression (plugins.ml[117,4122+14]..[117,4122+22])
                                              Pexp_ident "List.map" (plugins.ml[117,4122+14]..[117,4122+22])
                                            [
                                              <label> ""
                                                expression (plugins.ml[118,4145+16]..[121,4250+78])
                                                  Pexp_function
                                                  [
                                                    <case>
                                                      pattern (plugins.ml[119,4171+19]..[119,4171+40])
                                                        Ppat_constraint
                                                        pattern (plugins.ml[119,4171+20]..[119,4171+21])
                                                          Ppat_var "x" (plugins.ml[119,4171+20]..[119,4171+21])
                                                        core_type (plugins.ml[119,4171+24]..[119,4171+39])
                                                          Ptyp_constr "Ctyp.record_col" (plugins.ml[119,4171+24]..[119,4171+39])
                                                          []
                                                      expression (plugins.ml[120,4215+21]..[121,4250+77])
                                                        Pexp_match
                                                        expression (plugins.ml[120,4215+28]..[120,4215+29])
                                                          Pexp_ident "x" (plugins.ml[120,4215+28]..[120,4215+29])
                                                        [
                                                          <case>
                                                            pattern (plugins.ml[121,4250+24]..[121,4250+51])
                                                              Ppat_record Open
                                                              [
                                                                "label" (plugins.ml[121,4250+26]..[121,4250+31])
                                                                  pattern (plugins.ml[121,4250+26]..[121,4250+31])
                                                                    Ppat_var "label" (plugins.ml[121,4250+26]..[121,4250+31])
                                                                "info" (plugins.ml[121,4250+33]..[121,4250+37])
                                                                  pattern (plugins.ml[121,4250+40]..[121,4250+48])
                                                                    Ppat_record Open
                                                                    [
                                                                      "ep0" (plugins.ml[121,4250+42]..[121,4250+45])
pattern (plugins.ml[121,4250+42]..[121,4250+45])
  Ppat_var "ep0" (plugins.ml[121,4250+42]..[121,4250+45])
                                                                    ]
                                                              ]
                                                            expression (plugins.ml[121,4250+55]..[121,4250+76])
                                                              Pexp_tuple
                                                              [
                                                                expression (plugins.ml[121,4250+56]..[121,4250+61])
                                                                  Pexp_ident "label" (plugins.ml[121,4250+56]..[121,4250+61])
                                                                expression (plugins.ml[121,4250+63]..[121,4250+75]) ghost
                                                                  Pexp_coerce
                                                                  expression (plugins.ml[121,4250+64]..[121,4250+67])
                                                                    Pexp_ident "ep0" (plugins.ml[121,4250+64]..[121,4250+67])
                                                                  None
                                                                  core_type (plugins.ml[121,4250+71]..[121,4250+74])
                                                                    Ptyp_constr "exp" (plugins.ml[121,4250+71]..[121,4250+74])
                                                                    []
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                      ]
                                  <label> ""
                                    expression (plugins.ml[122,4331+15]..[122,4331+29])
                                      Pexp_ident "ExpN.mk_record" (plugins.ml[122,4331+15]..[122,4331+29])
                                ]
                          ]
                          expression (plugins.ml[123,4364+8]..[131,4669+72])
                            Pexp_apply
                            expression (plugins.ml[123,4364+8]..[123,4364+23])
                              Pexp_ident "List.fold_right" (plugins.ml[123,4364+8]..[123,4364+23])
                            [
                              <label> ""
                                expression (plugins.ml[124,4388+10]..[131,4669+60])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (plugins.ml[125,4408+13]..[125,4408+69])
                                        Ppat_constraint
                                        pattern (plugins.ml[125,4408+14]..[125,4408+50])
                                          Ppat_record Open
                                          [
                                            "info" (plugins.ml[125,4408+16]..[125,4408+20])
                                              pattern (plugins.ml[125,4408+23]..[125,4408+47])
                                                Ppat_record Open
                                                [
                                                  "info_exp" (plugins.ml[125,4408+25]..[125,4408+33])
                                                    pattern (plugins.ml[125,4408+36]..[125,4408+39])
                                                      Ppat_var "exp" (plugins.ml[125,4408+36]..[125,4408+39])
                                                  "ep0" (plugins.ml[125,4408+41]..[125,4408+44])
                                                    pattern (plugins.ml[125,4408+41]..[125,4408+44])
                                                      Ppat_var "ep0" (plugins.ml[125,4408+41]..[125,4408+44])
                                                ]
                                          ]
                                        core_type (plugins.ml[125,4408+53]..[125,4408+68])
                                          Ptyp_constr "Ctyp.record_col" (plugins.ml[125,4408+53]..[125,4408+68])
                                          []
                                      expression (plugins.ml[126,4481+15]..[131,4669+59])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (plugins.ml[127,4506+18]..[127,4506+21])
                                              Ppat_var "res" (plugins.ml[127,4506+18]..[127,4506+21])
                                            expression (plugins.ml[128,4531+20]..[131,4669+58]) ghost
                                              Pexp_coerce
                                              expression (plugins.ml[128,4531+21]..[131,4669+44])
                                                Pexp_variant "LetIn"
                                                Some
                                                  expression (plugins.ml[129,4559+23]..[131,4669+44])
                                                    Pexp_tuple
                                                    [
                                                      expression (plugins.ml[129,4559+24]..[129,4559+33])
                                                        Pexp_variant "Negative"
                                                        None
                                                      expression (plugins.ml[130,4594+25]..[130,4594+73])
                                                        Pexp_variant "Bind"
                                                        Some
                                                          expression (plugins.ml[130,4594+32]..[130,4594+72])
                                                            Pexp_tuple
                                                            [
                                                              expression (plugins.ml[130,4594+33]..[130,4594+51]) ghost
                                                                Pexp_coerce
                                                                expression (plugins.ml[130,4594+34]..[130,4594+37])
                                                                  Pexp_ident "ep0" (plugins.ml[130,4594+34]..[130,4594+37])
                                                                None
                                                                core_type (plugins.ml[130,4594+41]..[130,4594+50])
                                                                  Ptyp_constr "Astfn.pat" (plugins.ml[130,4594+41]..[130,4594+50])
                                                                  []
                                                              expression (plugins.ml[130,4594+53]..[130,4594+71]) ghost
                                                                Pexp_coerce
                                                                expression (plugins.ml[130,4594+54]..[130,4594+57])
                                                                  Pexp_ident "exp" (plugins.ml[130,4594+54]..[130,4594+57])
                                                                None
                                                                core_type (plugins.ml[130,4594+61]..[130,4594+70])
                                                                  Ptyp_constr "Astfn.exp" (plugins.ml[130,4594+61]..[130,4594+70])
                                                                  []
                                                            ]
                                                      expression (plugins.ml[131,4669+25]..[131,4669+43]) ghost
                                                        Pexp_coerce
                                                        expression (plugins.ml[131,4669+26]..[131,4669+29])
                                                          Pexp_ident "res" (plugins.ml[131,4669+26]..[131,4669+29])
                                                        None
                                                        core_type (plugins.ml[131,4669+33]..[131,4669+42])
                                                          Ptyp_constr "Astfn.exp" (plugins.ml[131,4669+33]..[131,4669+42])
                                                          []
                                                    ]
                                              None
                                              core_type (plugins.ml[131,4669+48]..[131,4669+57])
                                                Ptyp_constr "Astfn.exp" (plugins.ml[131,4669+48]..[131,4669+57])
                                                []
                                        ]
                                  ]
                              <label> ""
                                expression (plugins.ml[131,4669+61]..[131,4669+65])
                                  Pexp_ident "cols" (plugins.ml[131,4669+61]..[131,4669+65])
                              <label> ""
                                expression (plugins.ml[131,4669+66]..[131,4669+72])
                                  Pexp_ident "result" (plugins.ml[131,4669+66]..[131,4669+72])
                            ]
                    ]
              ]
              expression (plugins.ml[132,4745+2]..[137,5031+22])
                Pexp_tuple
                [
                  expression (plugins.ml[132,4745+3]..[133,4807+39])
                    Pexp_apply
                    expression (plugins.ml[132,4745+4]..[132,4745+14])
                      Pexp_ident "gen_object" (plugins.ml[132,4745+4]..[132,4745+14])
                    [
                      <label> "kind"
                        expression (plugins.ml[132,4745+21]..[132,4745+24])
                          Pexp_construct "Map" (plugins.ml[132,4745+21]..[132,4745+24])
                          None
                      <label> "mk_tuple"
                        expression (plugins.ml[132,4745+26]..[132,4745+34])
                          Pexp_ident "mk_tuple" (plugins.ml[132,4745+26]..[132,4745+34])
                      <label> "mk_record"
                        expression (plugins.ml[132,4745+36]..[132,4745+45])
                          Pexp_ident "mk_record" (plugins.ml[132,4745+36]..[132,4745+45])
                      <label> "base"
                        expression (plugins.ml[132,4745+52]..[132,4745+61])
                          Pexp_constant Const_string("mapbase",None)
                      <label> "class_name"
                        expression (plugins.ml[133,4807+18]..[133,4807+23])
                          Pexp_constant Const_string("map",None)
                      <label> "mk_variant"
                        expression (plugins.ml[133,4807+25]..[133,4807+35])
                          Pexp_ident "mk_variant" (plugins.ml[133,4807+25]..[133,4807+35])
                      <label> ""
                        expression (plugins.ml[133,4807+36]..[133,4807+38])
                          Pexp_construct "()" (plugins.ml[133,4807+36]..[133,4807+38])
                          None
                    ]
                  expression (plugins.ml[134,4848+4]..[137,5031+21])
                    Pexp_apply
                    expression (plugins.ml[134,4848+5]..[134,4848+15])
                      Pexp_ident "gen_object" (plugins.ml[134,4848+5]..[134,4848+15])
                    [
                      <label> "kind"
                        expression (plugins.ml[134,4848+22]..[134,4848+25])
                          Pexp_construct "Map" (plugins.ml[134,4848+22]..[134,4848+25])
                          None
                      <label> "mk_tuple"
                        expression (plugins.ml[134,4848+27]..[134,4848+35])
                          Pexp_ident "mk_tuple" (plugins.ml[134,4848+27]..[134,4848+35])
                      <label> "mk_record"
                        expression (plugins.ml[134,4848+37]..[134,4848+46])
                          Pexp_ident "mk_record" (plugins.ml[134,4848+37]..[134,4848+46])
                      <label> "base"
                        expression (plugins.ml[134,4848+53]..[134,4848+63])
                          Pexp_constant Const_string("mapbase2",None)
                      <label> "class_name"
                        expression (plugins.ml[135,4912+19]..[135,4912+25])
                          Pexp_constant Const_string("map2",None)
                      <label> "mk_variant"
                        expression (plugins.ml[135,4912+27]..[135,4912+37])
                          Pexp_ident "mk_variant" (plugins.ml[135,4912+27]..[135,4912+37])
                      <label> "arity"
                        expression (plugins.ml[135,4912+45]..[135,4912+46])
                          Pexp_constant Const_int 2
                      <label> "default"
                        expression (plugins.ml[136,4959+16]..[137,5031+17]) ghost
                          Pexp_coerce
                          expression (plugins.ml[136,4959+17]..[136,4959+67])
                            Pexp_variant "App"
                            Some
                              expression (plugins.ml[136,4959+22]..[136,4959+67])
                                Pexp_tuple
                                [
                                  expression (plugins.ml[136,4959+23]..[136,4959+43])
                                    Pexp_variant "Lid"
                                    Some
                                      expression (plugins.ml[136,4959+29]..[136,4959+42])
                                        Pexp_constant Const_string("invalid_arg",None)
                                  expression (plugins.ml[136,4959+45]..[136,4959+66])
                                    Pexp_variant "Str"
                                    Some
                                      expression (plugins.ml[136,4959+51]..[136,4959+65])
                                        Pexp_constant Const_string("map2 failure",None)
                                ]
                          None
                          core_type (plugins.ml[137,5031+7]..[137,5031+16])
                            Ptyp_constr "Astfn.exp" (plugins.ml[137,5031+7]..[137,5031+16])
                            []
                      <label> ""
                        expression (plugins.ml[137,5031+18]..[137,5031+20])
                          Pexp_construct "()" (plugins.ml[137,5031+18]..[137,5031+20])
                          None
                    ]
                ]
    ]
  structure_item (plugins.ml[138,5054+0]..[140,5120+33])
    Pstr_eval
    expression (plugins.ml[139,5062+2]..[140,5120+33])
      Pexp_apply
      expression (plugins.ml[139,5062+55]..[139,5062+57])
        Pexp_ident "|>" (plugins.ml[139,5062+55]..[139,5062+57])
      [
        <label> ""
          expression (plugins.ml[139,5062+2]..[139,5062+54])
            Pexp_construct "::" (plugins.ml[139,5062+3]..[139,5062+54]) ghost
            Some
              expression (plugins.ml[139,5062+3]..[139,5062+54]) ghost
                Pexp_tuple
                [
                  expression (plugins.ml[139,5062+3]..[139,5062+26])
                    Pexp_tuple
                    [
                      expression (plugins.ml[139,5062+4]..[139,5062+9])
                        Pexp_constant Const_string("Map",None)
                      expression (plugins.ml[139,5062+11]..[139,5062+25])
                        Pexp_apply
                        expression (plugins.ml[139,5062+12]..[139,5062+16])
                          Pexp_ident "some" (plugins.ml[139,5062+12]..[139,5062+16])
                        [
                          <label> ""
                            expression (plugins.ml[139,5062+17]..[139,5062+24])
                              Pexp_ident "gen_map" (plugins.ml[139,5062+17]..[139,5062+24])
                        ]
                    ]
                  expression (plugins.ml[139,5062+28]..[139,5062+54]) ghost
                    Pexp_construct "::" (plugins.ml[139,5062+28]..[139,5062+54]) ghost
                    Some
                      expression (plugins.ml[139,5062+28]..[139,5062+54]) ghost
                        Pexp_tuple
                        [
                          expression (plugins.ml[139,5062+28]..[139,5062+53])
                            Pexp_tuple
                            [
                              expression (plugins.ml[139,5062+29]..[139,5062+35])
                                Pexp_constant Const_string("Map2",None)
                              expression (plugins.ml[139,5062+37]..[139,5062+52])
                                Pexp_apply
                                expression (plugins.ml[139,5062+38]..[139,5062+42])
                                  Pexp_ident "some" (plugins.ml[139,5062+38]..[139,5062+42])
                                [
                                  <label> ""
                                    expression (plugins.ml[139,5062+43]..[139,5062+51])
                                      Pexp_ident "gen_map2" (plugins.ml[139,5062+43]..[139,5062+51])
                                ]
                            ]
                          expression (plugins.ml[139,5062+53]..[139,5062+54]) ghost
                            Pexp_construct "[]" (plugins.ml[139,5062+53]..[139,5062+54]) ghost
                            None
                        ]
                ]
        <label> ""
          expression (plugins.ml[140,5120+4]..[140,5120+33])
            Pexp_apply
            expression (plugins.ml[140,5120+5]..[140,5120+14])
              Pexp_ident "List.iter" (plugins.ml[140,5120+5]..[140,5120+14])
            [
              <label> ""
                expression (plugins.ml[140,5120+15]..[140,5120+32])
                  Pexp_ident "Typehook.register" (plugins.ml[140,5120+15]..[140,5120+32])
            ]
      ]
  structure_item (plugins.ml[141,5154+0]..[209,7874+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[141,5154+4]..[141,5154+13])
          Ppat_var "gen_strip" (plugins.ml[141,5154+4]..[141,5154+13])
        expression (plugins.ml[142,5170+2]..[209,7874+70])
          Pexp_let Nonrec
          [
            <def>
              pattern (plugins.ml[142,5170+6]..[142,5170+16])
                Ppat_var "mk_variant" (plugins.ml[142,5170+6]..[142,5170+16])
              expression (plugins.ml[143,5189+4]..[175,6523+30])
                Pexp_function
                [
                  <case>
                    pattern (plugins.ml[144,5202+6]..[144,5202+10])
                      Ppat_var "cons" (plugins.ml[144,5202+6]..[144,5202+10])
                    expression (plugins.ml[145,5216+8]..[175,6523+30])
                      Pexp_function
                      [
                        <case>
                          pattern (plugins.ml[146,5234+11]..[146,5234+17])
                            Ppat_var "params" (plugins.ml[146,5234+11]..[146,5234+17])
                          expression (plugins.ml[147,5255+13]..[175,6523+29])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (plugins.ml[147,5255+17]..[147,5255+24])
                                  Ppat_var "params'" (plugins.ml[147,5255+17]..[147,5255+24])
                                expression (plugins.ml[148,5282+15]..[150,5382+23])
                                  Pexp_apply
                                  expression (plugins.ml[148,5282+15]..[148,5282+26])
                                    Pexp_ident "List.filter" (plugins.ml[148,5282+15]..[148,5282+26])
                                  [
                                    <label> ""
                                      expression (plugins.ml[149,5309+17]..[149,5309+72])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (plugins.ml[149,5309+29]..[149,5309+47])
                                              Ppat_constraint
                                              pattern (plugins.ml[149,5309+30]..[149,5309+31])
                                                Ppat_var "x" (plugins.ml[149,5309+30]..[149,5309+31])
                                              core_type (plugins.ml[149,5309+34]..[149,5309+46])
                                                Ptyp_constr "Ctyp.ty_info" (plugins.ml[149,5309+34]..[149,5309+46])
                                                []
                                            expression (plugins.ml[149,5309+51]..[149,5309+71])
                                              Pexp_apply
                                              expression (plugins.ml[149,5309+56]..[149,5309+58])
                                                Pexp_ident "<>" (plugins.ml[149,5309+56]..[149,5309+58])
                                              [
                                                <label> ""
                                                  expression (plugins.ml[149,5309+51]..[149,5309+55])
                                                    Pexp_field
                                                    expression (plugins.ml[149,5309+51]..[149,5309+52])
                                                      Pexp_ident "x" (plugins.ml[149,5309+51]..[149,5309+52])
                                                    "ty" (plugins.ml[149,5309+53]..[149,5309+55])
                                                <label> ""
                                                  expression (plugins.ml[149,5309+59]..[149,5309+71])
                                                    Pexp_variant "Lid"
                                                    Some
                                                      expression (plugins.ml[149,5309+65]..[149,5309+70])
                                                        Pexp_constant Const_string("loc",None)
                                              ]
                                        ]
                                    <label> ""
                                      expression (plugins.ml[150,5382+17]..[150,5382+23])
                                        Pexp_ident "params" (plugins.ml[150,5382+17]..[150,5382+23])
                                  ]
                            ]
                            expression (plugins.ml[151,5409+13]..[175,6523+29])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (plugins.ml[151,5409+17]..[151,5409+23])
                                    Ppat_var "result" (plugins.ml[151,5409+17]..[151,5409+23])
                                  expression (plugins.ml[152,5435+15]..[155,5595+19]) ghost
                                    Pexp_coerce
                                    expression (plugins.ml[152,5435+16]..[154,5516+74])
                                      Pexp_apply
                                      expression (plugins.ml[152,5435+16]..[152,5435+28])
                                        Pexp_ident "appl_of_list" (plugins.ml[152,5435+16]..[152,5435+28])
                                      [
                                        <label> ""
                                          expression (plugins.ml[152,5435+29]..[154,5516+74])
                                            Pexp_construct "::" (plugins.ml[152,5435+48]..[152,5435+50])
                                            Some
                                              expression (plugins.ml[152,5435+30]..[154,5516+73]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (plugins.ml[152,5435+30]..[152,5435+47])
                                                    Pexp_apply
                                                    expression (plugins.ml[152,5435+31]..[152,5435+41])
                                                      Pexp_ident "EpN.of_str" (plugins.ml[152,5435+31]..[152,5435+41])
                                                    [
                                                      <label> ""
                                                        expression (plugins.ml[152,5435+42]..[152,5435+46])
                                                          Pexp_ident "cons" (plugins.ml[152,5435+42]..[152,5435+46])
                                                    ]
                                                  expression (plugins.ml[153,5486+18]..[154,5516+73])
                                                    Pexp_apply
                                                    expression (plugins.ml[153,5486+27]..[153,5486+29])
                                                      Pexp_ident "|>" (plugins.ml[153,5486+27]..[153,5486+29])
                                                    [
                                                      <label> ""
                                                        expression (plugins.ml[153,5486+19]..[153,5486+26])
                                                          Pexp_ident "params'" (plugins.ml[153,5486+19]..[153,5486+26])
                                                      <label> ""
                                                        expression (plugins.ml[154,5516+21]..[154,5516+72])
                                                          Pexp_apply
                                                          expression (plugins.ml[154,5516+22]..[154,5516+30])
                                                            Pexp_ident "List.map" (plugins.ml[154,5516+22]..[154,5516+30])
                                                          [
                                                            <label> ""
                                                              expression (plugins.ml[154,5516+31]..[154,5516+71])
                                                                Pexp_function
                                                                [
                                                                  <case>
                                                                    pattern (plugins.ml[154,5516+43]..[154,5516+61])
                                                                      Ppat_constraint
                                                                      pattern (plugins.ml[154,5516+44]..[154,5516+45])
Ppat_var "x" (plugins.ml[154,5516+44]..[154,5516+45])
                                                                      core_type (plugins.ml[154,5516+48]..[154,5516+60])
Ptyp_constr "Ctyp.ty_info" (plugins.ml[154,5516+48]..[154,5516+60])
[]
                                                                    expression (plugins.ml[154,5516+65]..[154,5516+70])
                                                                      Pexp_field
                                                                      expression (plugins.ml[154,5516+65]..[154,5516+66])
Pexp_ident "x" (plugins.ml[154,5516+65]..[154,5516+66])
                                                                      "ep0" (plugins.ml[154,5516+67]..[154,5516+70])
                                                                ]
                                                          ]
                                                    ]
                                                ]
                                      ]
                                    None
                                    core_type (plugins.ml[155,5595+15]..[155,5595+18])
                                      Ptyp_constr "exp" (plugins.ml[155,5595+15]..[155,5595+18])
                                      []
                              ]
                              expression (plugins.ml[156,5618+13]..[175,6523+29])
                                Pexp_apply
                                expression (plugins.ml[156,5618+13]..[156,5618+28])
                                  Pexp_ident "List.fold_right" (plugins.ml[156,5618+13]..[156,5618+28])
                                [
                                  <label> ""
                                    expression (plugins.ml[157,5647+15]..[174,6451+71])
                                      Pexp_function
                                      [
                                        <case>
                                          pattern (plugins.ml[158,5672+18]..[158,5672+36])
                                            Ppat_constraint
                                            pattern (plugins.ml[158,5672+19]..[158,5672+20])
                                              Ppat_var "x" (plugins.ml[158,5672+19]..[158,5672+20])
                                            core_type (plugins.ml[158,5672+23]..[158,5672+35])
                                              Ptyp_constr "Ctyp.ty_info" (plugins.ml[158,5672+23]..[158,5672+35])
                                              []
                                          expression (plugins.ml[159,5712+20]..[174,6451+70])
                                            Pexp_function
                                            [
                                              <case>
                                                pattern (plugins.ml[160,5742+23]..[160,5742+26])
                                                  Ppat_var "res" (plugins.ml[160,5742+23]..[160,5742+26])
                                                expression (plugins.ml[161,5772+25]..[174,6451+69])
                                                  Pexp_match
                                                  expression (plugins.ml[161,5772+32]..[161,5772+36])
                                                    Pexp_field
                                                    expression (plugins.ml[161,5772+32]..[161,5772+33])
                                                      Pexp_ident "x" (plugins.ml[161,5772+32]..[161,5772+33])
                                                    "ty" (plugins.ml[161,5772+34]..[161,5772+36])
                                                  [
                                                    <case>
                                                      pattern (plugins.ml[162,5814+28]..[166,6050+75])
                                                        Ppat_or
                                                        pattern (plugins.ml[162,5814+28]..[165,5973+76])
                                                          Ppat_or
                                                          pattern (plugins.ml[162,5814+28]..[164,5915+57])
                                                            Ppat_variant "Lid"
                                                            Some
                                                              pattern (plugins.ml[163,5847+30]..[164,5915+57])
                                                                Ppat_or
                                                                pattern (plugins.ml[163,5847+31]..[164,5915+50])
                                                                  Ppat_or
                                                                  pattern (plugins.ml[163,5847+31]..[164,5915+43])
                                                                    Ppat_or
                                                                    pattern (plugins.ml[163,5847+31]..[163,5847+67])
                                                                      Ppat_or
                                                                      pattern (plugins.ml[163,5847+31]..[163,5847+60])
Ppat_or
pattern (plugins.ml[163,5847+31]..[163,5847+52])
  Ppat_or
  pattern (plugins.ml[163,5847+31]..[163,5847+43])
    Ppat_or
    pattern (plugins.ml[163,5847+31]..[163,5847+36])
      Ppat_constant Const_string("int",None)
    pattern (plugins.ml[163,5847+37]..[163,5847+43])
      Ppat_constant Const_string("char",None)
  pattern (plugins.ml[163,5847+44]..[163,5847+52])
    Ppat_constant Const_string("string",None)
pattern (plugins.ml[163,5847+53]..[163,5847+60])
  Ppat_constant Const_string("int32",None)
                                                                      pattern (plugins.ml[163,5847+61]..[163,5847+67])
Ppat_constant Const_string("unit",None)
                                                                    pattern (plugins.ml[164,5915+32]..[164,5915+43])
                                                                      Ppat_constant Const_string("nativeint",None)
                                                                  pattern (plugins.ml[164,5915+44]..[164,5915+50])
                                                                    Ppat_constant Const_string("bool",None)
                                                                pattern (plugins.ml[164,5915+51]..[164,5915+56])
                                                                  Ppat_constant Const_string("loc",None)
                                                          pattern (plugins.ml[165,5973+29]..[165,5973+76])
                                                            Ppat_constraint
                                                            pattern (plugins.ml[165,5973+30]..[165,5973+62])
                                                              Ppat_variant "Dot"
                                                              Some
                                                                pattern (plugins.ml[165,5973+35]..[165,5973+62])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (plugins.ml[165,5973+36]..[165,5973+49])
                                                                      Ppat_variant "Uid"
                                                                      Some
pattern (plugins.ml[165,5973+41]..[165,5973+49])
  Ppat_constant Const_string("Tokenf",None)
                                                                    pattern (plugins.ml[165,5973+50]..[165,5973+61])
                                                                      Ppat_variant "Lid"
                                                                      Some
pattern (plugins.ml[165,5973+55]..[165,5973+61])
  Ppat_constant Const_string("quot",None)
                                                                  ]
                                                            core_type (plugins.ml[165,5973+65]..[165,5973+75])
                                                              Ptyp_constr "Astfn.ctyp" (plugins.ml[165,5973+65]..[165,5973+75])
                                                              []
                                                        pattern (plugins.ml[166,6050+29]..[166,6050+75])
                                                          Ppat_constraint
                                                          pattern (plugins.ml[166,6050+30]..[166,6050+61])
                                                            Ppat_variant "Dot"
                                                            Some
                                                              pattern (plugins.ml[166,6050+35]..[166,6050+61])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (plugins.ml[166,6050+36]..[166,6050+49])
                                                                    Ppat_variant "Uid"
                                                                    Some
                                                                      pattern (plugins.ml[166,6050+41]..[166,6050+49])
Ppat_constant Const_string("Tokenf",None)
                                                                  pattern (plugins.ml[166,6050+50]..[166,6050+60])
                                                                    Ppat_variant "Lid"
                                                                    Some
                                                                      pattern (plugins.ml[166,6050+55]..[166,6050+60])
Ppat_constant Const_string("ant",None)
                                                                ]
                                                          core_type (plugins.ml[166,6050+64]..[166,6050+74])
                                                            Ptyp_constr "Astfn.ctyp" (plugins.ml[166,6050+64]..[166,6050+74])
                                                            []
                                                      expression (plugins.ml[167,6126+33]..[167,6126+36])
                                                        Pexp_ident "res" (plugins.ml[167,6126+33]..[167,6126+36])
                                                    <case>
                                                      pattern (plugins.ml[168,6163+28]..[168,6163+29])
                                                        Ppat_any
                                                      expression (plugins.ml[169,6196+30]..[174,6451+68]) ghost
                                                        Pexp_coerce
                                                        expression (plugins.ml[169,6196+31]..[174,6451+54])
                                                          Pexp_variant "LetIn"
                                                          Some
                                                            expression (plugins.ml[170,6234+33]..[174,6451+54])
                                                              Pexp_tuple
                                                              [
                                                                expression (plugins.ml[170,6234+34]..[170,6234+43])
                                                                  Pexp_variant "Negative"
                                                                  None
                                                                expression (plugins.ml[171,6279+35]..[173,6382+67])
                                                                  Pexp_variant "Bind"
                                                                  Some
                                                                    expression (plugins.ml[172,6321+38]..[173,6382+66])
                                                                      Pexp_tuple
                                                                      [
expression (plugins.ml[172,6321+39]..[172,6321+59]) ghost
  Pexp_coerce
  expression (plugins.ml[172,6321+40]..[172,6321+45])
    Pexp_field
    expression (plugins.ml[172,6321+40]..[172,6321+41])
      Pexp_ident "x" (plugins.ml[172,6321+40]..[172,6321+41])
    "ep0" (plugins.ml[172,6321+42]..[172,6321+45])
  None
  core_type (plugins.ml[172,6321+49]..[172,6321+58])
    Ptyp_constr "Astfn.pat" (plugins.ml[172,6321+49]..[172,6321+58])
    []
expression (plugins.ml[173,6382+40]..[173,6382+65]) ghost
  Pexp_coerce
  expression (plugins.ml[173,6382+41]..[173,6382+51])
    Pexp_field
    expression (plugins.ml[173,6382+41]..[173,6382+42])
      Pexp_ident "x" (plugins.ml[173,6382+41]..[173,6382+42])
    "info_exp" (plugins.ml[173,6382+43]..[173,6382+51])
  None
  core_type (plugins.ml[173,6382+55]..[173,6382+64])
    Ptyp_constr "Astfn.exp" (plugins.ml[173,6382+55]..[173,6382+64])
    []
                                                                      ]
                                                                expression (plugins.ml[174,6451+35]..[174,6451+53]) ghost
                                                                  Pexp_coerce
                                                                  expression (plugins.ml[174,6451+36]..[174,6451+39])
                                                                    Pexp_ident "res" (plugins.ml[174,6451+36]..[174,6451+39])
                                                                  None
                                                                  core_type (plugins.ml[174,6451+43]..[174,6451+52])
                                                                    Ptyp_constr "Astfn.exp" (plugins.ml[174,6451+43]..[174,6451+52])
                                                                    []
                                                              ]
                                                        None
                                                        core_type (plugins.ml[174,6451+58]..[174,6451+67])
                                                          Ptyp_constr "Astfn.exp" (plugins.ml[174,6451+58]..[174,6451+67])
                                                          []
                                                  ]
                                            ]
                                      ]
                                  <label> ""
                                    expression (plugins.ml[175,6523+15]..[175,6523+22])
                                      Pexp_ident "params'" (plugins.ml[175,6523+15]..[175,6523+22])
                                  <label> ""
                                    expression (plugins.ml[175,6523+23]..[175,6523+29])
                                      Pexp_ident "result" (plugins.ml[175,6523+23]..[175,6523+29])
                                ]
                      ]
                ]
          ]
          expression (plugins.ml[176,6557+2]..[209,7874+70])
            Pexp_let Nonrec
            [
              <def>
                pattern (plugins.ml[176,6557+6]..[176,6557+14])
                  Ppat_var "mk_tuple" (plugins.ml[176,6557+6]..[176,6557+14])
                expression (plugins.ml[177,6574+4]..[201,7553+16])
                  Pexp_function
                  [
                    <case>
                      pattern (plugins.ml[178,6587+6]..[178,6587+12])
                        Ppat_var "params" (plugins.ml[178,6587+6]..[178,6587+12])
                      expression (plugins.ml[179,6603+8]..[201,7553+16])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (plugins.ml[179,6603+12]..[179,6603+18])
                              Ppat_var "result" (plugins.ml[179,6603+12]..[179,6603+18])
                            expression (plugins.ml[180,6624+10]..[181,6702+30]) ghost
                              Pexp_coerce
                              expression (plugins.ml[180,6624+11]..[181,6702+22])
                                Pexp_apply
                                expression (plugins.ml[180,6624+75]..[180,6624+77])
                                  Pexp_ident "|>" (plugins.ml[180,6624+75]..[180,6624+77])
                                [
                                  <label> ""
                                    expression (plugins.ml[180,6624+11]..[180,6624+74])
                                      Pexp_apply
                                      expression (plugins.ml[180,6624+19]..[180,6624+21])
                                        Pexp_ident "|>" (plugins.ml[180,6624+19]..[180,6624+21])
                                      [
                                        <label> ""
                                          expression (plugins.ml[180,6624+12]..[180,6624+18])
                                            Pexp_ident "params" (plugins.ml[180,6624+12]..[180,6624+18])
                                        <label> ""
                                          expression (plugins.ml[180,6624+22]..[180,6624+73])
                                            Pexp_apply
                                            expression (plugins.ml[180,6624+23]..[180,6624+31])
                                              Pexp_ident "List.map" (plugins.ml[180,6624+23]..[180,6624+31])
                                            [
                                              <label> ""
                                                expression (plugins.ml[180,6624+32]..[180,6624+72])
                                                  Pexp_function
                                                  [
                                                    <case>
                                                      pattern (plugins.ml[180,6624+44]..[180,6624+62])
                                                        Ppat_constraint
                                                        pattern (plugins.ml[180,6624+45]..[180,6624+46])
                                                          Ppat_var "x" (plugins.ml[180,6624+45]..[180,6624+46])
                                                        core_type (plugins.ml[180,6624+49]..[180,6624+61])
                                                          Ptyp_constr "Ctyp.ty_info" (plugins.ml[180,6624+49]..[180,6624+61])
                                                          []
                                                      expression (plugins.ml[180,6624+66]..[180,6624+71])
                                                        Pexp_field
                                                        expression (plugins.ml[180,6624+66]..[180,6624+67])
                                                          Pexp_ident "x" (plugins.ml[180,6624+66]..[180,6624+67])
                                                        "ep0" (plugins.ml[180,6624+68]..[180,6624+71])
                                                  ]
                                            ]
                                      ]
                                  <label> ""
                                    expression (plugins.ml[181,6702+13]..[181,6702+22])
                                      Pexp_ident "tuple_com" (plugins.ml[181,6702+13]..[181,6702+22])
                                ]
                              None
                              core_type (plugins.ml[181,6702+26]..[181,6702+29])
                                Ptyp_constr "exp" (plugins.ml[181,6702+26]..[181,6702+29])
                                []
                        ]
                        expression (plugins.ml[182,6736+8]..[201,7553+16])
                          Pexp_apply
                          expression (plugins.ml[182,6736+8]..[182,6736+23])
                            Pexp_ident "List.fold_right" (plugins.ml[182,6736+8]..[182,6736+23])
                          [
                            <label> ""
                              expression (plugins.ml[183,6760+10]..[200,7479+66])
                                Pexp_function
                                [
                                  <case>
                                    pattern (plugins.ml[184,6780+13]..[184,6780+31])
                                      Ppat_constraint
                                      pattern (plugins.ml[184,6780+14]..[184,6780+15])
                                        Ppat_var "x" (plugins.ml[184,6780+14]..[184,6780+15])
                                      core_type (plugins.ml[184,6780+18]..[184,6780+30])
                                        Ptyp_constr "Ctyp.ty_info" (plugins.ml[184,6780+18]..[184,6780+30])
                                        []
                                    expression (plugins.ml[185,6815+15]..[200,7479+65])
                                      Pexp_function
                                      [
                                        <case>
                                          pattern (plugins.ml[186,6840+18]..[186,6840+21])
                                            Ppat_var "res" (plugins.ml[186,6840+18]..[186,6840+21])
                                          expression (plugins.ml[187,6865+20]..[200,7479+64])
                                            Pexp_match
                                            expression (plugins.ml[187,6865+27]..[187,6865+31])
                                              Pexp_field
                                              expression (plugins.ml[187,6865+27]..[187,6865+28])
                                                Pexp_ident "x" (plugins.ml[187,6865+27]..[187,6865+28])
                                              "ty" (plugins.ml[187,6865+29]..[187,6865+31])
                                            [
                                              <case>
                                                pattern (plugins.ml[188,6902+23]..[192,7117+71])
                                                  Ppat_or
                                                  pattern (plugins.ml[188,6902+23]..[191,7046+70])
                                                    Ppat_or
                                                    pattern (plugins.ml[188,6902+23]..[190,7005+40])
                                                      Ppat_variant "Lid"
                                                      Some
                                                        pattern (plugins.ml[189,6930+25]..[190,7005+40])
                                                          Ppat_or
                                                          pattern (plugins.ml[189,6930+26]..[190,7005+33])
                                                            Ppat_or
                                                            pattern (plugins.ml[189,6930+26]..[189,6930+74])
                                                              Ppat_or
                                                              pattern (plugins.ml[189,6930+26]..[189,6930+62])
                                                                Ppat_or
                                                                pattern (plugins.ml[189,6930+26]..[189,6930+55])
                                                                  Ppat_or
                                                                  pattern (plugins.ml[189,6930+26]..[189,6930+47])
                                                                    Ppat_or
                                                                    pattern (plugins.ml[189,6930+26]..[189,6930+38])
                                                                      Ppat_or
                                                                      pattern (plugins.ml[189,6930+26]..[189,6930+31])
Ppat_constant Const_string("int",None)
                                                                      pattern (plugins.ml[189,6930+32]..[189,6930+38])
Ppat_constant Const_string("char",None)
                                                                    pattern (plugins.ml[189,6930+39]..[189,6930+47])
                                                                      Ppat_constant Const_string("string",None)
                                                                  pattern (plugins.ml[189,6930+48]..[189,6930+55])
                                                                    Ppat_constant Const_string("int32",None)
                                                                pattern (plugins.ml[189,6930+56]..[189,6930+62])
                                                                  Ppat_constant Const_string("unit",None)
                                                              pattern (plugins.ml[189,6930+63]..[189,6930+74])
                                                                Ppat_constant Const_string("nativeint",None)
                                                            pattern (plugins.ml[190,7005+27]..[190,7005+33])
                                                              Ppat_constant Const_string("bool",None)
                                                          pattern (plugins.ml[190,7005+34]..[190,7005+39])
                                                            Ppat_constant Const_string("loc",None)
                                                    pattern (plugins.ml[191,7046+24]..[191,7046+70])
                                                      Ppat_constraint
                                                      pattern (plugins.ml[191,7046+25]..[191,7046+56])
                                                        Ppat_variant "Dot"
                                                        Some
                                                          pattern (plugins.ml[191,7046+30]..[191,7046+56])
                                                            Ppat_tuple
                                                            [
                                                              pattern (plugins.ml[191,7046+31]..[191,7046+44])
                                                                Ppat_variant "Uid"
                                                                Some
                                                                  pattern (plugins.ml[191,7046+36]..[191,7046+44])
                                                                    Ppat_constant Const_string("Tokenf",None)
                                                              pattern (plugins.ml[191,7046+45]..[191,7046+55])
                                                                Ppat_variant "Lid"
                                                                Some
                                                                  pattern (plugins.ml[191,7046+50]..[191,7046+55])
                                                                    Ppat_constant Const_string("ant",None)
                                                            ]
                                                      core_type (plugins.ml[191,7046+59]..[191,7046+69])
                                                        Ptyp_constr "Astfn.ctyp" (plugins.ml[191,7046+59]..[191,7046+69])
                                                        []
                                                  pattern (plugins.ml[192,7117+24]..[192,7117+71])
                                                    Ppat_constraint
                                                    pattern (plugins.ml[192,7117+25]..[192,7117+57])
                                                      Ppat_variant "Dot"
                                                      Some
                                                        pattern (plugins.ml[192,7117+30]..[192,7117+57])
                                                          Ppat_tuple
                                                          [
                                                            pattern (plugins.ml[192,7117+31]..[192,7117+44])
                                                              Ppat_variant "Uid"
                                                              Some
                                                                pattern (plugins.ml[192,7117+36]..[192,7117+44])
                                                                  Ppat_constant Const_string("Tokenf",None)
                                                            pattern (plugins.ml[192,7117+45]..[192,7117+56])
                                                              Ppat_variant "Lid"
                                                              Some
                                                                pattern (plugins.ml[192,7117+50]..[192,7117+56])
                                                                  Ppat_constant Const_string("quot",None)
                                                          ]
                                                    core_type (plugins.ml[192,7117+60]..[192,7117+70])
                                                      Ptyp_constr "Astfn.ctyp" (plugins.ml[192,7117+60]..[192,7117+70])
                                                      []
                                                expression (plugins.ml[193,7192+25]..[193,7192+28])
                                                  Pexp_ident "res" (plugins.ml[193,7192+25]..[193,7192+28])
                                              <case>
                                                pattern (plugins.ml[194,7221+23]..[194,7221+24])
                                                  Ppat_any
                                                expression (plugins.ml[195,7249+25]..[200,7479+63]) ghost
                                                  Pexp_coerce
                                                  expression (plugins.ml[195,7249+26]..[200,7479+49])
                                                    Pexp_variant "LetIn"
                                                    Some
                                                      expression (plugins.ml[196,7282+28]..[200,7479+49])
                                                        Pexp_tuple
                                                        [
                                                          expression (plugins.ml[196,7282+29]..[196,7282+38])
                                                            Pexp_variant "Negative"
                                                            None
                                                          expression (plugins.ml[197,7322+30]..[199,7415+62])
                                                            Pexp_variant "Bind"
                                                            Some
                                                              expression (plugins.ml[198,7359+33]..[199,7415+61])
                                                                Pexp_tuple
                                                                [
                                                                  expression (plugins.ml[198,7359+34]..[198,7359+54]) ghost
                                                                    Pexp_coerce
                                                                    expression (plugins.ml[198,7359+35]..[198,7359+40])
                                                                      Pexp_field
                                                                      expression (plugins.ml[198,7359+35]..[198,7359+36])
Pexp_ident "x" (plugins.ml[198,7359+35]..[198,7359+36])
                                                                      "ep0" (plugins.ml[198,7359+37]..[198,7359+40])
                                                                    None
                                                                    core_type (plugins.ml[198,7359+44]..[198,7359+53])
                                                                      Ptyp_constr "Astfn.pat" (plugins.ml[198,7359+44]..[198,7359+53])
                                                                      []
                                                                  expression (plugins.ml[199,7415+35]..[199,7415+60]) ghost
                                                                    Pexp_coerce
                                                                    expression (plugins.ml[199,7415+36]..[199,7415+46])
                                                                      Pexp_field
                                                                      expression (plugins.ml[199,7415+36]..[199,7415+37])
Pexp_ident "x" (plugins.ml[199,7415+36]..[199,7415+37])
                                                                      "info_exp" (plugins.ml[199,7415+38]..[199,7415+46])
                                                                    None
                                                                    core_type (plugins.ml[199,7415+50]..[199,7415+59])
                                                                      Ptyp_constr "Astfn.exp" (plugins.ml[199,7415+50]..[199,7415+59])
                                                                      []
                                                                ]
                                                          expression (plugins.ml[200,7479+30]..[200,7479+48]) ghost
                                                            Pexp_coerce
                                                            expression (plugins.ml[200,7479+31]..[200,7479+34])
                                                              Pexp_ident "res" (plugins.ml[200,7479+31]..[200,7479+34])
                                                            None
                                                            core_type (plugins.ml[200,7479+38]..[200,7479+47])
                                                              Ptyp_constr "Astfn.exp" (plugins.ml[200,7479+38]..[200,7479+47])
                                                              []
                                                        ]
                                                  None
                                                  core_type (plugins.ml[200,7479+53]..[200,7479+62])
                                                    Ptyp_constr "Astfn.exp" (plugins.ml[200,7479+53]..[200,7479+62])
                                                    []
                                            ]
                                      ]
                                ]
                            <label> ""
                              expression (plugins.ml[200,7479+67]..[200,7479+73])
                                Pexp_ident "params" (plugins.ml[200,7479+67]..[200,7479+73])
                            <label> ""
                              expression (plugins.ml[201,7553+10]..[201,7553+16])
                                Pexp_ident "result" (plugins.ml[201,7553+10]..[201,7553+16])
                          ]
                  ]
            ]
            expression (plugins.ml[202,7573+2]..[209,7874+70])
              Pexp_let Nonrec
              [
                <def>
                  pattern (plugins.ml[202,7573+6]..[202,7573+15])
                    Ppat_var "mk_record" (plugins.ml[202,7573+6]..[202,7573+15])
                  expression (plugins.ml[202,7573+18]..[202,7573+46])
                    Pexp_function
                    [
                      <case>
                        pattern (plugins.ml[202,7573+29]..[202,7573+30])
                          Ppat_any
                        expression (plugins.ml[202,7573+34]..[202,7573+46])
                          Pexp_assert
                          expression (plugins.ml[202,7573+41]..[202,7573+46])
                            Pexp_construct "false" (plugins.ml[202,7573+41]..[202,7573+46])
                            None
                    ]
              ]
              expression (plugins.ml[203,7623+2]..[209,7874+70])
                Pexp_apply
                expression (plugins.ml[203,7623+2]..[203,7623+10])
                  Pexp_ident "gen_stru" (plugins.ml[203,7623+2]..[203,7623+10])
                [
                  <label> "id"
                    expression (plugins.ml[203,7623+15]..[203,7623+24])
                      Pexp_variant "Pre"
                      Some
                        expression (plugins.ml[203,7623+21]..[203,7623+23])
                          Pexp_constant Const_string("",None)
                  <label> "mk_tuple"
                    expression (plugins.ml[203,7623+26]..[203,7623+34])
                      Pexp_ident "mk_tuple" (plugins.ml[203,7623+26]..[203,7623+34])
                  <label> "mk_record"
                    expression (plugins.ml[203,7623+36]..[203,7623+45])
                      Pexp_ident "mk_record" (plugins.ml[203,7623+36]..[203,7623+45])
                  <label> "mk_variant"
                    expression (plugins.ml[203,7623+47]..[203,7623+57])
                      Pexp_ident "mk_variant" (plugins.ml[203,7623+47]..[203,7623+57])
                  <label> "annot"
                    expression (plugins.ml[204,7681+11]..[209,7874+67])
                      Pexp_function
                      [
                        <case>
                          pattern (plugins.ml[205,7702+14]..[205,7702+15])
                            Ppat_var "x" (plugins.ml[205,7702+14]..[205,7702+15])
                          expression (plugins.ml[206,7721+16]..[209,7874+66])
                            Pexp_tuple
                            [
                              expression (plugins.ml[206,7721+17]..[208,7801+71]) ghost
                                Pexp_coerce
                                expression (plugins.ml[206,7721+18]..[208,7801+56])
                                  Pexp_variant "Arrow"
                                  Some
                                    expression (plugins.ml[207,7746+20]..[208,7801+56])
                                      Pexp_tuple
                                      [
                                        expression (plugins.ml[207,7746+21]..[207,7746+53])
                                          Pexp_variant "Dot"
                                          Some
                                            expression (plugins.ml[207,7746+27]..[207,7746+52])
                                              Pexp_tuple
                                              [
                                                expression (plugins.ml[207,7746+28]..[207,7746+41])
                                                  Pexp_variant "Uid"
                                                  Some
                                                    expression (plugins.ml[207,7746+34]..[207,7746+40])
                                                      Pexp_constant Const_string("Astf",None)
                                                expression (plugins.ml[207,7746+43]..[207,7746+51])
                                                  Pexp_variant "Lid"
                                                  Some
                                                    expression (plugins.ml[207,7746+49]..[207,7746+50])
                                                      Pexp_ident "x" (plugins.ml[207,7746+49]..[207,7746+50])
                                              ]
                                        expression (plugins.ml[208,7801+22]..[208,7801+55])
                                          Pexp_variant "Dot"
                                          Some
                                            expression (plugins.ml[208,7801+28]..[208,7801+54])
                                              Pexp_tuple
                                              [
                                                expression (plugins.ml[208,7801+29]..[208,7801+43])
                                                  Pexp_variant "Uid"
                                                  Some
                                                    expression (plugins.ml[208,7801+35]..[208,7801+42])
                                                      Pexp_constant Const_string("Astfn",None)
                                                expression (plugins.ml[208,7801+45]..[208,7801+53])
                                                  Pexp_variant "Lid"
                                                  Some
                                                    expression (plugins.ml[208,7801+51]..[208,7801+52])
                                                      Pexp_ident "x" (plugins.ml[208,7801+51]..[208,7801+52])
                                              ]
                                      ]
                                None
                                core_type (plugins.ml[208,7801+60]..[208,7801+70])
                                  Ptyp_constr "Astfn.ctyp" (plugins.ml[208,7801+60]..[208,7801+70])
                                  []
                              expression (plugins.ml[209,7874+18]..[209,7874+65]) ghost
                                Pexp_coerce
                                expression (plugins.ml[209,7874+19]..[209,7874+50])
                                  Pexp_variant "Dot"
                                  Some
                                    expression (plugins.ml[209,7874+24]..[209,7874+50])
                                      Pexp_tuple
                                      [
                                        expression (plugins.ml[209,7874+25]..[209,7874+39])
                                          Pexp_variant "Uid"
                                          Some
                                            expression (plugins.ml[209,7874+31]..[209,7874+38])
                                              Pexp_constant Const_string("Astfn",None)
                                        expression (plugins.ml[209,7874+41]..[209,7874+49])
                                          Pexp_variant "Lid"
                                          Some
                                            expression (plugins.ml[209,7874+47]..[209,7874+48])
                                              Pexp_ident "x" (plugins.ml[209,7874+47]..[209,7874+48])
                                      ]
                                None
                                core_type (plugins.ml[209,7874+54]..[209,7874+64])
                                  Ptyp_constr "Astfn.ctyp" (plugins.ml[209,7874+54]..[209,7874+64])
                                  []
                            ]
                      ]
                  <label> ""
                    expression (plugins.ml[209,7874+68]..[209,7874+70])
                      Pexp_construct "()" (plugins.ml[209,7874+68]..[209,7874+70])
                      None
                ]
    ]
  structure_item (plugins.ml[210,7945+0]..[213,8043+31])
    Pstr_eval
    expression (plugins.ml[211,7953+2]..[213,8043+31])
      Pexp_apply
      expression (plugins.ml[211,7953+2]..[211,7953+19])
        Pexp_ident "Typehook.register" (plugins.ml[211,7953+2]..[211,7953+19])
      [
        <label> "filter"
          expression (plugins.ml[212,7973+12]..[212,7973+69])
            Pexp_function
            [
              <case>
                pattern (plugins.ml[212,7973+24]..[212,7973+25])
                  Ppat_var "s" (plugins.ml[212,7973+24]..[212,7973+25])
                expression (plugins.ml[212,7973+29]..[212,7973+68])
                  Pexp_apply
                  expression (plugins.ml[212,7973+29]..[212,7973+32])
                    Pexp_ident "not" (plugins.ml[212,7973+29]..[212,7973+32])
                  [
                    <label> ""
                      expression (plugins.ml[212,7973+33]..[212,7973+68])
                        Pexp_apply
                        expression (plugins.ml[212,7973+34]..[212,7973+42])
                          Pexp_ident "List.mem" (plugins.ml[212,7973+34]..[212,7973+42])
                        [
                          <label> ""
                            expression (plugins.ml[212,7973+43]..[212,7973+44])
                              Pexp_ident "s" (plugins.ml[212,7973+43]..[212,7973+44])
                          <label> ""
                            expression (plugins.ml[212,7973+45]..[212,7973+67])
                              Pexp_construct "::" (plugins.ml[212,7973+46]..[212,7973+67]) ghost
                              Some
                                expression (plugins.ml[212,7973+46]..[212,7973+67]) ghost
                                  Pexp_tuple
                                  [
                                    expression (plugins.ml[212,7973+46]..[212,7973+51])
                                      Pexp_constant Const_string("loc",None)
                                    expression (plugins.ml[212,7973+53]..[212,7973+67]) ghost
                                      Pexp_construct "::" (plugins.ml[212,7973+53]..[212,7973+67]) ghost
                                      Some
                                        expression (plugins.ml[212,7973+53]..[212,7973+67]) ghost
                                          Pexp_tuple
                                          [
                                            expression (plugins.ml[212,7973+53]..[212,7973+58])
                                              Pexp_constant Const_string("ant",None)
                                            expression (plugins.ml[212,7973+60]..[212,7973+67]) ghost
                                              Pexp_construct "::" (plugins.ml[212,7973+60]..[212,7973+67]) ghost
                                              Some
                                                expression (plugins.ml[212,7973+60]..[212,7973+67]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (plugins.ml[212,7973+60]..[212,7973+66])
                                                      Pexp_constant Const_string("quot",None)
                                                    expression (plugins.ml[212,7973+66]..[212,7973+67]) ghost
                                                      Pexp_construct "[]" (plugins.ml[212,7973+66]..[212,7973+67]) ghost
                                                      None
                                                  ]
                                          ]
                                  ]
                        ]
                  ]
            ]
        <label> ""
          expression (plugins.ml[213,8043+4]..[213,8043+31])
            Pexp_tuple
            [
              expression (plugins.ml[213,8043+5]..[213,8043+12])
                Pexp_constant Const_string("Strip",None)
              expression (plugins.ml[213,8043+14]..[213,8043+30])
                Pexp_apply
                expression (plugins.ml[213,8043+15]..[213,8043+19])
                  Pexp_ident "some" (plugins.ml[213,8043+15]..[213,8043+19])
                [
                  <label> ""
                    expression (plugins.ml[213,8043+20]..[213,8043+29])
                      Pexp_ident "gen_strip" (plugins.ml[213,8043+20]..[213,8043+29])
                ]
            ]
      ]
  structure_item (plugins.ml[214,8075+0]..[281,10814+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[214,8075+4]..[214,8075+12])
          Ppat_var "gen_fill" (plugins.ml[214,8075+4]..[214,8075+12])
        expression (plugins.ml[215,8090+2]..[281,10814+69])
          Pexp_let Nonrec
          [
            <def>
              pattern (plugins.ml[215,8090+6]..[215,8090+16])
                Ppat_var "mk_variant" (plugins.ml[215,8090+6]..[215,8090+16])
              expression (plugins.ml[216,8109+4]..[245,9340+29])
                Pexp_function
                [
                  <case>
                    pattern (plugins.ml[217,8122+6]..[217,8122+10])
                      Ppat_var "cons" (plugins.ml[217,8122+6]..[217,8122+10])
                    expression (plugins.ml[218,8136+8]..[245,9340+29])
                      Pexp_function
                      [
                        <case>
                          pattern (plugins.ml[219,8154+11]..[219,8154+17])
                            Ppat_var "params" (plugins.ml[219,8154+11]..[219,8154+17])
                          expression (plugins.ml[220,8175+13]..[245,9340+28])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (plugins.ml[220,8175+17]..[220,8175+23])
                                  Ppat_var "result" (plugins.ml[220,8175+17]..[220,8175+23])
                                expression (plugins.ml[221,8201+15]..[225,8406+19]) ghost
                                  Pexp_coerce
                                  expression (plugins.ml[221,8201+16]..[224,8327+74])
                                    Pexp_apply
                                    expression (plugins.ml[221,8201+16]..[221,8201+28])
                                      Pexp_ident "appl_of_list" (plugins.ml[221,8201+16]..[221,8201+28])
                                    [
                                      <label> ""
                                        expression (plugins.ml[221,8201+29]..[224,8327+74])
                                          Pexp_construct "::" (plugins.ml[221,8201+48]..[221,8201+50])
                                          Some
                                            expression (plugins.ml[221,8201+30]..[224,8327+73]) ghost
                                              Pexp_tuple
                                              [
                                                expression (plugins.ml[221,8201+30]..[221,8201+47])
                                                  Pexp_apply
                                                  expression (plugins.ml[221,8201+31]..[221,8201+41])
                                                    Pexp_ident "EpN.of_str" (plugins.ml[221,8201+31]..[221,8201+41])
                                                  [
                                                    <label> ""
                                                      expression (plugins.ml[221,8201+42]..[221,8201+46])
                                                        Pexp_ident "cons" (plugins.ml[221,8201+42]..[221,8201+46])
                                                  ]
                                                expression (plugins.ml[221,8201+51]..[224,8327+73])
                                                  Pexp_construct "::" (plugins.ml[222,8277+18]..[222,8277+20])
                                                  Some
                                                    expression (plugins.ml[221,8201+51]..[224,8327+73]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (plugins.ml[221,8201+51]..[221,8201+75]) ghost
                                                          Pexp_coerce
                                                          expression (plugins.ml[221,8201+52]..[221,8201+62])
                                                            Pexp_variant "Lid"
                                                            Some
                                                              expression (plugins.ml[221,8201+57]..[221,8201+62])
                                                                Pexp_constant Const_string("loc",None)
                                                          None
                                                          core_type (plugins.ml[221,8201+66]..[221,8201+74])
                                                            Ptyp_constr "Astfn.ep" (plugins.ml[221,8201+66]..[221,8201+74])
                                                            []
                                                        expression (plugins.ml[223,8298+18]..[224,8327+73])
                                                          Pexp_apply
                                                          expression (plugins.ml[223,8298+26]..[223,8298+28])
                                                            Pexp_ident "|>" (plugins.ml[223,8298+26]..[223,8298+28])
                                                          [
                                                            <label> ""
                                                              expression (plugins.ml[223,8298+19]..[223,8298+25])
                                                                Pexp_ident "params" (plugins.ml[223,8298+19]..[223,8298+25])
                                                            <label> ""
                                                              expression (plugins.ml[224,8327+21]..[224,8327+72])
                                                                Pexp_apply
                                                                expression (plugins.ml[224,8327+22]..[224,8327+30])
                                                                  Pexp_ident "List.map" (plugins.ml[224,8327+22]..[224,8327+30])
                                                                [
                                                                  <label> ""
                                                                    expression (plugins.ml[224,8327+31]..[224,8327+71])
                                                                      Pexp_function
                                                                      [
<case>
  pattern (plugins.ml[224,8327+43]..[224,8327+61])
    Ppat_constraint
    pattern (plugins.ml[224,8327+44]..[224,8327+45])
      Ppat_var "x" (plugins.ml[224,8327+44]..[224,8327+45])
    core_type (plugins.ml[224,8327+48]..[224,8327+60])
      Ptyp_constr "Ctyp.ty_info" (plugins.ml[224,8327+48]..[224,8327+60])
      []
  expression (plugins.ml[224,8327+65]..[224,8327+70])
    Pexp_field
    expression (plugins.ml[224,8327+65]..[224,8327+66])
      Pexp_ident "x" (plugins.ml[224,8327+65]..[224,8327+66])
    "ep0" (plugins.ml[224,8327+67]..[224,8327+70])
                                                                      ]
                                                                ]
                                                          ]
                                                      ]
                                              ]
                                    ]
                                  None
                                  core_type (plugins.ml[225,8406+15]..[225,8406+18])
                                    Ptyp_constr "exp" (plugins.ml[225,8406+15]..[225,8406+18])
                                    []
                            ]
                            expression (plugins.ml[226,8429+13]..[245,9340+28])
                              Pexp_apply
                              expression (plugins.ml[226,8429+13]..[226,8429+28])
                                Pexp_ident "List.fold_right" (plugins.ml[226,8429+13]..[226,8429+28])
                              [
                                <label> ""
                                  expression (plugins.ml[227,8458+15]..[244,9268+71])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (plugins.ml[228,8483+18]..[228,8483+36])
                                          Ppat_constraint
                                          pattern (plugins.ml[228,8483+19]..[228,8483+20])
                                            Ppat_var "x" (plugins.ml[228,8483+19]..[228,8483+20])
                                          core_type (plugins.ml[228,8483+23]..[228,8483+35])
                                            Ptyp_constr "Ctyp.ty_info" (plugins.ml[228,8483+23]..[228,8483+35])
                                            []
                                        expression (plugins.ml[229,8523+20]..[244,9268+70])
                                          Pexp_function
                                          [
                                            <case>
                                              pattern (plugins.ml[230,8553+23]..[230,8553+26])
                                                Ppat_var "res" (plugins.ml[230,8553+23]..[230,8553+26])
                                              expression (plugins.ml[231,8583+25]..[244,9268+69])
                                                Pexp_match
                                                expression (plugins.ml[231,8583+32]..[231,8583+36])
                                                  Pexp_field
                                                  expression (plugins.ml[231,8583+32]..[231,8583+33])
                                                    Pexp_ident "x" (plugins.ml[231,8583+32]..[231,8583+33])
                                                  "ty" (plugins.ml[231,8583+34]..[231,8583+36])
                                                [
                                                  <case>
                                                    pattern (plugins.ml[232,8625+28]..[236,8866+76])
                                                      Ppat_or
                                                      pattern (plugins.ml[232,8625+28]..[235,8790+75])
                                                        Ppat_or
                                                        pattern (plugins.ml[232,8625+28]..[234,8726+63])
                                                          Ppat_variant "Lid"
                                                          Some
                                                            pattern (plugins.ml[233,8658+30]..[234,8726+63])
                                                              Ppat_or
                                                              pattern (plugins.ml[233,8658+31]..[234,8726+56])
                                                                Ppat_or
                                                                pattern (plugins.ml[233,8658+31]..[234,8726+50])
                                                                  Ppat_or
                                                                  pattern (plugins.ml[233,8658+31]..[234,8726+43])
                                                                    Ppat_or
                                                                    pattern (plugins.ml[233,8658+31]..[233,8658+67])
                                                                      Ppat_or
                                                                      pattern (plugins.ml[233,8658+31]..[233,8658+60])
Ppat_or
pattern (plugins.ml[233,8658+31]..[233,8658+52])
  Ppat_or
  pattern (plugins.ml[233,8658+31]..[233,8658+43])
    Ppat_or
    pattern (plugins.ml[233,8658+31]..[233,8658+36])
      Ppat_constant Const_string("int",None)
    pattern (plugins.ml[233,8658+37]..[233,8658+43])
      Ppat_constant Const_string("char",None)
  pattern (plugins.ml[233,8658+44]..[233,8658+52])
    Ppat_constant Const_string("string",None)
pattern (plugins.ml[233,8658+53]..[233,8658+60])
  Ppat_constant Const_string("int32",None)
                                                                      pattern (plugins.ml[233,8658+61]..[233,8658+67])
Ppat_constant Const_string("unit",None)
                                                                    pattern (plugins.ml[234,8726+32]..[234,8726+43])
                                                                      Ppat_constant Const_string("nativeint",None)
                                                                  pattern (plugins.ml[234,8726+44]..[234,8726+50])
                                                                    Ppat_constant Const_string("bool",None)
                                                                pattern (plugins.ml[234,8726+51]..[234,8726+56])
                                                                  Ppat_constant Const_string("loc",None)
                                                              pattern (plugins.ml[234,8726+57]..[234,8726+62])
                                                                Ppat_constant Const_string("ant",None)
                                                        pattern (plugins.ml[235,8790+29]..[235,8790+75])
                                                          Ppat_constraint
                                                          pattern (plugins.ml[235,8790+30]..[235,8790+61])
                                                            Ppat_variant "Dot"
                                                            Some
                                                              pattern (plugins.ml[235,8790+35]..[235,8790+61])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (plugins.ml[235,8790+36]..[235,8790+49])
                                                                    Ppat_variant "Uid"
                                                                    Some
                                                                      pattern (plugins.ml[235,8790+41]..[235,8790+49])
Ppat_constant Const_string("Tokenf",None)
                                                                  pattern (plugins.ml[235,8790+50]..[235,8790+60])
                                                                    Ppat_variant "Lid"
                                                                    Some
                                                                      pattern (plugins.ml[235,8790+55]..[235,8790+60])
Ppat_constant Const_string("ant",None)
                                                                ]
                                                          core_type (plugins.ml[235,8790+64]..[235,8790+74])
                                                            Ptyp_constr "Astfn.ctyp" (plugins.ml[235,8790+64]..[235,8790+74])
                                                            []
                                                      pattern (plugins.ml[236,8866+29]..[236,8866+76])
                                                        Ppat_constraint
                                                        pattern (plugins.ml[236,8866+30]..[236,8866+62])
                                                          Ppat_variant "Dot"
                                                          Some
                                                            pattern (plugins.ml[236,8866+35]..[236,8866+62])
                                                              Ppat_tuple
                                                              [
                                                                pattern (plugins.ml[236,8866+36]..[236,8866+49])
                                                                  Ppat_variant "Uid"
                                                                  Some
                                                                    pattern (plugins.ml[236,8866+41]..[236,8866+49])
                                                                      Ppat_constant Const_string("Tokenf",None)
                                                                pattern (plugins.ml[236,8866+50]..[236,8866+61])
                                                                  Ppat_variant "Lid"
                                                                  Some
                                                                    pattern (plugins.ml[236,8866+55]..[236,8866+61])
                                                                      Ppat_constant Const_string("quot",None)
                                                              ]
                                                        core_type (plugins.ml[236,8866+65]..[236,8866+75])
                                                          Ptyp_constr "Astfn.ctyp" (plugins.ml[236,8866+65]..[236,8866+75])
                                                          []
                                                    expression (plugins.ml[237,8943+33]..[237,8943+36])
                                                      Pexp_ident "res" (plugins.ml[237,8943+33]..[237,8943+36])
                                                  <case>
                                                    pattern (plugins.ml[238,8980+28]..[238,8980+29])
                                                      Ppat_any
                                                    expression (plugins.ml[239,9013+30]..[244,9268+68]) ghost
                                                      Pexp_coerce
                                                      expression (plugins.ml[239,9013+31]..[244,9268+54])
                                                        Pexp_variant "LetIn"
                                                        Some
                                                          expression (plugins.ml[240,9051+33]..[244,9268+54])
                                                            Pexp_tuple
                                                            [
                                                              expression (plugins.ml[240,9051+34]..[240,9051+43])
                                                                Pexp_variant "Negative"
                                                                None
                                                              expression (plugins.ml[241,9096+35]..[243,9199+67])
                                                                Pexp_variant "Bind"
                                                                Some
                                                                  expression (plugins.ml[242,9138+38]..[243,9199+66])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (plugins.ml[242,9138+39]..[242,9138+59]) ghost
Pexp_coerce
expression (plugins.ml[242,9138+40]..[242,9138+45])
  Pexp_field
  expression (plugins.ml[242,9138+40]..[242,9138+41])
    Pexp_ident "x" (plugins.ml[242,9138+40]..[242,9138+41])
  "ep0" (plugins.ml[242,9138+42]..[242,9138+45])
None
core_type (plugins.ml[242,9138+49]..[242,9138+58])
  Ptyp_constr "Astfn.pat" (plugins.ml[242,9138+49]..[242,9138+58])
  []
                                                                      expression (plugins.ml[243,9199+40]..[243,9199+65]) ghost
Pexp_coerce
expression (plugins.ml[243,9199+41]..[243,9199+51])
  Pexp_field
  expression (plugins.ml[243,9199+41]..[243,9199+42])
    Pexp_ident "x" (plugins.ml[243,9199+41]..[243,9199+42])
  "info_exp" (plugins.ml[243,9199+43]..[243,9199+51])
None
core_type (plugins.ml[243,9199+55]..[243,9199+64])
  Ptyp_constr "Astfn.exp" (plugins.ml[243,9199+55]..[243,9199+64])
  []
                                                                    ]
                                                              expression (plugins.ml[244,9268+35]..[244,9268+53]) ghost
                                                                Pexp_coerce
                                                                expression (plugins.ml[244,9268+36]..[244,9268+39])
                                                                  Pexp_ident "res" (plugins.ml[244,9268+36]..[244,9268+39])
                                                                None
                                                                core_type (plugins.ml[244,9268+43]..[244,9268+52])
                                                                  Ptyp_constr "Astfn.exp" (plugins.ml[244,9268+43]..[244,9268+52])
                                                                  []
                                                            ]
                                                      None
                                                      core_type (plugins.ml[244,9268+58]..[244,9268+67])
                                                        Ptyp_constr "Astfn.exp" (plugins.ml[244,9268+58]..[244,9268+67])
                                                        []
                                                ]
                                          ]
                                    ]
                                <label> ""
                                  expression (plugins.ml[245,9340+15]..[245,9340+21])
                                    Pexp_ident "params" (plugins.ml[245,9340+15]..[245,9340+21])
                                <label> ""
                                  expression (plugins.ml[245,9340+22]..[245,9340+28])
                                    Pexp_ident "result" (plugins.ml[245,9340+22]..[245,9340+28])
                              ]
                      ]
                ]
          ]
          expression (plugins.ml[246,9373+2]..[281,10814+69])
            Pexp_let Nonrec
            [
              <def>
                pattern (plugins.ml[246,9373+6]..[246,9373+14])
                  Ppat_var "mk_tuple" (plugins.ml[246,9373+6]..[246,9373+14])
                expression (plugins.ml[247,9390+4]..[271,10375+16])
                  Pexp_function
                  [
                    <case>
                      pattern (plugins.ml[248,9403+6]..[248,9403+12])
                        Ppat_var "params" (plugins.ml[248,9403+6]..[248,9403+12])
                      expression (plugins.ml[249,9419+8]..[271,10375+16])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (plugins.ml[249,9419+12]..[249,9419+18])
                              Ppat_var "result" (plugins.ml[249,9419+12]..[249,9419+18])
                            expression (plugins.ml[250,9440+10]..[251,9518+30]) ghost
                              Pexp_coerce
                              expression (plugins.ml[250,9440+11]..[251,9518+22])
                                Pexp_apply
                                expression (plugins.ml[250,9440+75]..[250,9440+77])
                                  Pexp_ident "|>" (plugins.ml[250,9440+75]..[250,9440+77])
                                [
                                  <label> ""
                                    expression (plugins.ml[250,9440+11]..[250,9440+74])
                                      Pexp_apply
                                      expression (plugins.ml[250,9440+19]..[250,9440+21])
                                        Pexp_ident "|>" (plugins.ml[250,9440+19]..[250,9440+21])
                                      [
                                        <label> ""
                                          expression (plugins.ml[250,9440+12]..[250,9440+18])
                                            Pexp_ident "params" (plugins.ml[250,9440+12]..[250,9440+18])
                                        <label> ""
                                          expression (plugins.ml[250,9440+22]..[250,9440+73])
                                            Pexp_apply
                                            expression (plugins.ml[250,9440+23]..[250,9440+31])
                                              Pexp_ident "List.map" (plugins.ml[250,9440+23]..[250,9440+31])
                                            [
                                              <label> ""
                                                expression (plugins.ml[250,9440+32]..[250,9440+72])
                                                  Pexp_function
                                                  [
                                                    <case>
                                                      pattern (plugins.ml[250,9440+44]..[250,9440+62])
                                                        Ppat_constraint
                                                        pattern (plugins.ml[250,9440+45]..[250,9440+46])
                                                          Ppat_var "x" (plugins.ml[250,9440+45]..[250,9440+46])
                                                        core_type (plugins.ml[250,9440+49]..[250,9440+61])
                                                          Ptyp_constr "Ctyp.ty_info" (plugins.ml[250,9440+49]..[250,9440+61])
                                                          []
                                                      expression (plugins.ml[250,9440+66]..[250,9440+71])
                                                        Pexp_field
                                                        expression (plugins.ml[250,9440+66]..[250,9440+67])
                                                          Pexp_ident "x" (plugins.ml[250,9440+66]..[250,9440+67])
                                                        "ep0" (plugins.ml[250,9440+68]..[250,9440+71])
                                                  ]
                                            ]
                                      ]
                                  <label> ""
                                    expression (plugins.ml[251,9518+13]..[251,9518+22])
                                      Pexp_ident "tuple_com" (plugins.ml[251,9518+13]..[251,9518+22])
                                ]
                              None
                              core_type (plugins.ml[251,9518+26]..[251,9518+29])
                                Ptyp_constr "exp" (plugins.ml[251,9518+26]..[251,9518+29])
                                []
                        ]
                        expression (plugins.ml[252,9552+8]..[271,10375+16])
                          Pexp_apply
                          expression (plugins.ml[252,9552+8]..[252,9552+23])
                            Pexp_ident "List.fold_right" (plugins.ml[252,9552+8]..[252,9552+23])
                          [
                            <label> ""
                              expression (plugins.ml[253,9576+10]..[270,10301+66])
                                Pexp_function
                                [
                                  <case>
                                    pattern (plugins.ml[254,9596+13]..[254,9596+31])
                                      Ppat_constraint
                                      pattern (plugins.ml[254,9596+14]..[254,9596+15])
                                        Ppat_var "x" (plugins.ml[254,9596+14]..[254,9596+15])
                                      core_type (plugins.ml[254,9596+18]..[254,9596+30])
                                        Ptyp_constr "Ctyp.ty_info" (plugins.ml[254,9596+18]..[254,9596+30])
                                        []
                                    expression (plugins.ml[255,9631+15]..[270,10301+65])
                                      Pexp_function
                                      [
                                        <case>
                                          pattern (plugins.ml[256,9656+18]..[256,9656+21])
                                            Ppat_var "res" (plugins.ml[256,9656+18]..[256,9656+21])
                                          expression (plugins.ml[257,9681+20]..[270,10301+64])
                                            Pexp_match
                                            expression (plugins.ml[257,9681+27]..[257,9681+31])
                                              Pexp_field
                                              expression (plugins.ml[257,9681+27]..[257,9681+28])
                                                Pexp_ident "x" (plugins.ml[257,9681+27]..[257,9681+28])
                                              "ty" (plugins.ml[257,9681+29]..[257,9681+31])
                                            [
                                              <case>
                                                pattern (plugins.ml[258,9718+23]..[262,9939+71])
                                                  Ppat_or
                                                  pattern (plugins.ml[258,9718+23]..[261,9868+70])
                                                    Ppat_or
                                                    pattern (plugins.ml[258,9718+23]..[260,9821+46])
                                                      Ppat_variant "Lid"
                                                      Some
                                                        pattern (plugins.ml[259,9746+25]..[260,9821+46])
                                                          Ppat_or
                                                          pattern (plugins.ml[259,9746+26]..[260,9821+39])
                                                            Ppat_or
                                                            pattern (plugins.ml[259,9746+26]..[260,9821+33])
                                                              Ppat_or
                                                              pattern (plugins.ml[259,9746+26]..[259,9746+74])
                                                                Ppat_or
                                                                pattern (plugins.ml[259,9746+26]..[259,9746+62])
                                                                  Ppat_or
                                                                  pattern (plugins.ml[259,9746+26]..[259,9746+55])
                                                                    Ppat_or
                                                                    pattern (plugins.ml[259,9746+26]..[259,9746+47])
                                                                      Ppat_or
                                                                      pattern (plugins.ml[259,9746+26]..[259,9746+38])
Ppat_or
pattern (plugins.ml[259,9746+26]..[259,9746+31])
  Ppat_constant Const_string("int",None)
pattern (plugins.ml[259,9746+32]..[259,9746+38])
  Ppat_constant Const_string("char",None)
                                                                      pattern (plugins.ml[259,9746+39]..[259,9746+47])
Ppat_constant Const_string("string",None)
                                                                    pattern (plugins.ml[259,9746+48]..[259,9746+55])
                                                                      Ppat_constant Const_string("int32",None)
                                                                  pattern (plugins.ml[259,9746+56]..[259,9746+62])
                                                                    Ppat_constant Const_string("unit",None)
                                                                pattern (plugins.ml[259,9746+63]..[259,9746+74])
                                                                  Ppat_constant Const_string("nativeint",None)
                                                              pattern (plugins.ml[260,9821+27]..[260,9821+33])
                                                                Ppat_constant Const_string("bool",None)
                                                            pattern (plugins.ml[260,9821+34]..[260,9821+39])
                                                              Ppat_constant Const_string("loc",None)
                                                          pattern (plugins.ml[260,9821+40]..[260,9821+45])
                                                            Ppat_constant Const_string("ant",None)
                                                    pattern (plugins.ml[261,9868+24]..[261,9868+70])
                                                      Ppat_constraint
                                                      pattern (plugins.ml[261,9868+25]..[261,9868+56])
                                                        Ppat_variant "Dot"
                                                        Some
                                                          pattern (plugins.ml[261,9868+30]..[261,9868+56])
                                                            Ppat_tuple
                                                            [
                                                              pattern (plugins.ml[261,9868+31]..[261,9868+44])
                                                                Ppat_variant "Uid"
                                                                Some
                                                                  pattern (plugins.ml[261,9868+36]..[261,9868+44])
                                                                    Ppat_constant Const_string("Tokenf",None)
                                                              pattern (plugins.ml[261,9868+45]..[261,9868+55])
                                                                Ppat_variant "Lid"
                                                                Some
                                                                  pattern (plugins.ml[261,9868+50]..[261,9868+55])
                                                                    Ppat_constant Const_string("ant",None)
                                                            ]
                                                      core_type (plugins.ml[261,9868+59]..[261,9868+69])
                                                        Ptyp_constr "Astfn.ctyp" (plugins.ml[261,9868+59]..[261,9868+69])
                                                        []
                                                  pattern (plugins.ml[262,9939+24]..[262,9939+71])
                                                    Ppat_constraint
                                                    pattern (plugins.ml[262,9939+25]..[262,9939+57])
                                                      Ppat_variant "Dot"
                                                      Some
                                                        pattern (plugins.ml[262,9939+30]..[262,9939+57])
                                                          Ppat_tuple
                                                          [
                                                            pattern (plugins.ml[262,9939+31]..[262,9939+44])
                                                              Ppat_variant "Uid"
                                                              Some
                                                                pattern (plugins.ml[262,9939+36]..[262,9939+44])
                                                                  Ppat_constant Const_string("Tokenf",None)
                                                            pattern (plugins.ml[262,9939+45]..[262,9939+56])
                                                              Ppat_variant "Lid"
                                                              Some
                                                                pattern (plugins.ml[262,9939+50]..[262,9939+56])
                                                                  Ppat_constant Const_string("quot",None)
                                                          ]
                                                    core_type (plugins.ml[262,9939+60]..[262,9939+70])
                                                      Ptyp_constr "Astfn.ctyp" (plugins.ml[262,9939+60]..[262,9939+70])
                                                      []
                                                expression (plugins.ml[263,10014+25]..[263,10014+28])
                                                  Pexp_ident "res" (plugins.ml[263,10014+25]..[263,10014+28])
                                              <case>
                                                pattern (plugins.ml[264,10043+23]..[264,10043+24])
                                                  Ppat_any
                                                expression (plugins.ml[265,10071+25]..[270,10301+63]) ghost
                                                  Pexp_coerce
                                                  expression (plugins.ml[265,10071+26]..[270,10301+49])
                                                    Pexp_variant "LetIn"
                                                    Some
                                                      expression (plugins.ml[266,10104+28]..[270,10301+49])
                                                        Pexp_tuple
                                                        [
                                                          expression (plugins.ml[266,10104+29]..[266,10104+38])
                                                            Pexp_variant "Negative"
                                                            None
                                                          expression (plugins.ml[267,10144+30]..[269,10237+62])
                                                            Pexp_variant "Bind"
                                                            Some
                                                              expression (plugins.ml[268,10181+33]..[269,10237+61])
                                                                Pexp_tuple
                                                                [
                                                                  expression (plugins.ml[268,10181+34]..[268,10181+54]) ghost
                                                                    Pexp_coerce
                                                                    expression (plugins.ml[268,10181+35]..[268,10181+40])
                                                                      Pexp_field
                                                                      expression (plugins.ml[268,10181+35]..[268,10181+36])
Pexp_ident "x" (plugins.ml[268,10181+35]..[268,10181+36])
                                                                      "ep0" (plugins.ml[268,10181+37]..[268,10181+40])
                                                                    None
                                                                    core_type (plugins.ml[268,10181+44]..[268,10181+53])
                                                                      Ptyp_constr "Astfn.pat" (plugins.ml[268,10181+44]..[268,10181+53])
                                                                      []
                                                                  expression (plugins.ml[269,10237+35]..[269,10237+60]) ghost
                                                                    Pexp_coerce
                                                                    expression (plugins.ml[269,10237+36]..[269,10237+46])
                                                                      Pexp_field
                                                                      expression (plugins.ml[269,10237+36]..[269,10237+37])
Pexp_ident "x" (plugins.ml[269,10237+36]..[269,10237+37])
                                                                      "info_exp" (plugins.ml[269,10237+38]..[269,10237+46])
                                                                    None
                                                                    core_type (plugins.ml[269,10237+50]..[269,10237+59])
                                                                      Ptyp_constr "Astfn.exp" (plugins.ml[269,10237+50]..[269,10237+59])
                                                                      []
                                                                ]
                                                          expression (plugins.ml[270,10301+30]..[270,10301+48]) ghost
                                                            Pexp_coerce
                                                            expression (plugins.ml[270,10301+31]..[270,10301+34])
                                                              Pexp_ident "res" (plugins.ml[270,10301+31]..[270,10301+34])
                                                            None
                                                            core_type (plugins.ml[270,10301+38]..[270,10301+47])
                                                              Ptyp_constr "Astfn.exp" (plugins.ml[270,10301+38]..[270,10301+47])
                                                              []
                                                        ]
                                                  None
                                                  core_type (plugins.ml[270,10301+53]..[270,10301+62])
                                                    Ptyp_constr "Astfn.exp" (plugins.ml[270,10301+53]..[270,10301+62])
                                                    []
                                            ]
                                      ]
                                ]
                            <label> ""
                              expression (plugins.ml[270,10301+67]..[270,10301+73])
                                Pexp_ident "params" (plugins.ml[270,10301+67]..[270,10301+73])
                            <label> ""
                              expression (plugins.ml[271,10375+10]..[271,10375+16])
                                Pexp_ident "result" (plugins.ml[271,10375+10]..[271,10375+16])
                          ]
                  ]
            ]
            expression (plugins.ml[272,10395+2]..[281,10814+69])
              Pexp_let Nonrec
              [
                <def>
                  pattern (plugins.ml[272,10395+6]..[272,10395+15])
                    Ppat_var "mk_record" (plugins.ml[272,10395+6]..[272,10395+15])
                  expression (plugins.ml[272,10395+18]..[272,10395+50])
                    Pexp_function
                    [
                      <case>
                        pattern (plugins.ml[272,10395+29]..[272,10395+34])
                          Ppat_var "_cols" (plugins.ml[272,10395+29]..[272,10395+34])
                        expression (plugins.ml[272,10395+38]..[272,10395+50])
                          Pexp_assert
                          expression (plugins.ml[272,10395+45]..[272,10395+50])
                            Pexp_construct "false" (plugins.ml[272,10395+45]..[272,10395+50])
                            None
                    ]
              ]
              expression (plugins.ml[273,10449+2]..[281,10814+69])
                Pexp_apply
                expression (plugins.ml[273,10449+2]..[273,10449+10])
                  Pexp_ident "gen_stru" (plugins.ml[273,10449+2]..[273,10449+10])
                [
                  <label> "id"
                    expression (plugins.ml[273,10449+15]..[273,10449+24])
                      Pexp_variant "Pre"
                      Some
                        expression (plugins.ml[273,10449+21]..[273,10449+23])
                          Pexp_constant Const_string("",None)
                  <label> "mk_tuple"
                    expression (plugins.ml[273,10449+26]..[273,10449+34])
                      Pexp_ident "mk_tuple" (plugins.ml[273,10449+26]..[273,10449+34])
                  <label> "mk_record"
                    expression (plugins.ml[273,10449+36]..[273,10449+45])
                      Pexp_ident "mk_record" (plugins.ml[273,10449+36]..[273,10449+45])
                  <label> "mk_variant"
                    expression (plugins.ml[273,10449+47]..[273,10449+57])
                      Pexp_ident "mk_variant" (plugins.ml[273,10449+47]..[273,10449+57])
                  <label> "names"
                    expression (plugins.ml[273,10449+65]..[273,10449+72])
                      Pexp_construct "::" (plugins.ml[273,10449+66]..[273,10449+72]) ghost
                      Some
                        expression (plugins.ml[273,10449+66]..[273,10449+72]) ghost
                          Pexp_tuple
                          [
                            expression (plugins.ml[273,10449+66]..[273,10449+71])
                              Pexp_constant Const_string("loc",None)
                            expression (plugins.ml[273,10449+71]..[273,10449+72]) ghost
                              Pexp_construct "[]" (plugins.ml[273,10449+71]..[273,10449+72]) ghost
                              None
                          ]
                  <label> "annot"
                    expression (plugins.ml[274,10522+11]..[281,10814+66])
                      Pexp_function
                      [
                        <case>
                          pattern (plugins.ml[275,10543+14]..[275,10543+15])
                            Ppat_var "x" (plugins.ml[275,10543+14]..[275,10543+15])
                          expression (plugins.ml[276,10562+16]..[281,10814+65])
                            Pexp_tuple
                            [
                              expression (plugins.ml[276,10562+17]..[280,10735+77]) ghost
                                Pexp_coerce
                                expression (plugins.ml[276,10562+18]..[280,10735+62])
                                  Pexp_variant "Arrow"
                                  Some
                                    expression (plugins.ml[277,10587+20]..[280,10735+62])
                                      Pexp_tuple
                                      [
                                        expression (plugins.ml[277,10587+21]..[277,10587+55])
                                          Pexp_variant "Dot"
                                          Some
                                            expression (plugins.ml[277,10587+27]..[277,10587+54])
                                              Pexp_tuple
                                              [
                                                expression (plugins.ml[277,10587+28]..[277,10587+41])
                                                  Pexp_variant "Uid"
                                                  Some
                                                    expression (plugins.ml[277,10587+34]..[277,10587+40])
                                                      Pexp_constant Const_string("Locf",None)
                                                expression (plugins.ml[277,10587+43]..[277,10587+53])
                                                  Pexp_variant "Lid"
                                                  Some
                                                    expression (plugins.ml[277,10587+49]..[277,10587+52])
                                                      Pexp_constant Const_string("t",None)
                                              ]
                                        expression (plugins.ml[278,10644+22]..[280,10735+61])
                                          Pexp_variant "Arrow"
                                          Some
                                            expression (plugins.ml[279,10674+25]..[280,10735+60])
                                              Pexp_tuple
                                              [
                                                expression (plugins.ml[279,10674+26]..[279,10674+59])
                                                  Pexp_variant "Dot"
                                                  Some
                                                    expression (plugins.ml[279,10674+32]..[279,10674+58])
                                                      Pexp_tuple
                                                      [
                                                        expression (plugins.ml[279,10674+33]..[279,10674+47])
                                                          Pexp_variant "Uid"
                                                          Some
                                                            expression (plugins.ml[279,10674+39]..[279,10674+46])
                                                              Pexp_constant Const_string("Astfn",None)
                                                        expression (plugins.ml[279,10674+49]..[279,10674+57])
                                                          Pexp_variant "Lid"
                                                          Some
                                                            expression (plugins.ml[279,10674+55]..[279,10674+56])
                                                              Pexp_ident "x" (plugins.ml[279,10674+55]..[279,10674+56])
                                                      ]
                                                expression (plugins.ml[280,10735+27]..[280,10735+59])
                                                  Pexp_variant "Dot"
                                                  Some
                                                    expression (plugins.ml[280,10735+33]..[280,10735+58])
                                                      Pexp_tuple
                                                      [
                                                        expression (plugins.ml[280,10735+34]..[280,10735+47])
                                                          Pexp_variant "Uid"
                                                          Some
                                                            expression (plugins.ml[280,10735+40]..[280,10735+46])
                                                              Pexp_constant Const_string("Astf",None)
                                                        expression (plugins.ml[280,10735+49]..[280,10735+57])
                                                          Pexp_variant "Lid"
                                                          Some
                                                            expression (plugins.ml[280,10735+55]..[280,10735+56])
                                                              Pexp_ident "x" (plugins.ml[280,10735+55]..[280,10735+56])
                                                      ]
                                              ]
                                      ]
                                None
                                core_type (plugins.ml[280,10735+66]..[280,10735+76])
                                  Ptyp_constr "Astfn.ctyp" (plugins.ml[280,10735+66]..[280,10735+76])
                                  []
                              expression (plugins.ml[281,10814+18]..[281,10814+64]) ghost
                                Pexp_coerce
                                expression (plugins.ml[281,10814+19]..[281,10814+49])
                                  Pexp_variant "Dot"
                                  Some
                                    expression (plugins.ml[281,10814+24]..[281,10814+49])
                                      Pexp_tuple
                                      [
                                        expression (plugins.ml[281,10814+25]..[281,10814+38])
                                          Pexp_variant "Uid"
                                          Some
                                            expression (plugins.ml[281,10814+31]..[281,10814+37])
                                              Pexp_constant Const_string("Astf",None)
                                        expression (plugins.ml[281,10814+40]..[281,10814+48])
                                          Pexp_variant "Lid"
                                          Some
                                            expression (plugins.ml[281,10814+46]..[281,10814+47])
                                              Pexp_ident "x" (plugins.ml[281,10814+46]..[281,10814+47])
                                      ]
                                None
                                core_type (plugins.ml[281,10814+53]..[281,10814+63])
                                  Ptyp_constr "Astfn.ctyp" (plugins.ml[281,10814+53]..[281,10814+63])
                                  []
                            ]
                      ]
                  <label> ""
                    expression (plugins.ml[281,10814+67]..[281,10814+69])
                      Pexp_construct "()" (plugins.ml[281,10814+67]..[281,10814+69])
                      None
                ]
    ]
  structure_item (plugins.ml[282,10884+0]..[285,10982+29])
    Pstr_eval
    expression (plugins.ml[283,10892+2]..[285,10982+29])
      Pexp_apply
      expression (plugins.ml[283,10892+2]..[283,10892+19])
        Pexp_ident "Typehook.register" (plugins.ml[283,10892+2]..[283,10892+19])
      [
        <label> "filter"
          expression (plugins.ml[284,10912+12]..[284,10912+69])
            Pexp_function
            [
              <case>
                pattern (plugins.ml[284,10912+24]..[284,10912+25])
                  Ppat_var "s" (plugins.ml[284,10912+24]..[284,10912+25])
                expression (plugins.ml[284,10912+29]..[284,10912+68])
                  Pexp_apply
                  expression (plugins.ml[284,10912+29]..[284,10912+32])
                    Pexp_ident "not" (plugins.ml[284,10912+29]..[284,10912+32])
                  [
                    <label> ""
                      expression (plugins.ml[284,10912+33]..[284,10912+68])
                        Pexp_apply
                        expression (plugins.ml[284,10912+34]..[284,10912+42])
                          Pexp_ident "List.mem" (plugins.ml[284,10912+34]..[284,10912+42])
                        [
                          <label> ""
                            expression (plugins.ml[284,10912+43]..[284,10912+44])
                              Pexp_ident "s" (plugins.ml[284,10912+43]..[284,10912+44])
                          <label> ""
                            expression (plugins.ml[284,10912+45]..[284,10912+67])
                              Pexp_construct "::" (plugins.ml[284,10912+46]..[284,10912+67]) ghost
                              Some
                                expression (plugins.ml[284,10912+46]..[284,10912+67]) ghost
                                  Pexp_tuple
                                  [
                                    expression (plugins.ml[284,10912+46]..[284,10912+51])
                                      Pexp_constant Const_string("loc",None)
                                    expression (plugins.ml[284,10912+53]..[284,10912+67]) ghost
                                      Pexp_construct "::" (plugins.ml[284,10912+53]..[284,10912+67]) ghost
                                      Some
                                        expression (plugins.ml[284,10912+53]..[284,10912+67]) ghost
                                          Pexp_tuple
                                          [
                                            expression (plugins.ml[284,10912+53]..[284,10912+58])
                                              Pexp_constant Const_string("ant",None)
                                            expression (plugins.ml[284,10912+60]..[284,10912+67]) ghost
                                              Pexp_construct "::" (plugins.ml[284,10912+60]..[284,10912+67]) ghost
                                              Some
                                                expression (plugins.ml[284,10912+60]..[284,10912+67]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (plugins.ml[284,10912+60]..[284,10912+66])
                                                      Pexp_constant Const_string("quot",None)
                                                    expression (plugins.ml[284,10912+66]..[284,10912+67]) ghost
                                                      Pexp_construct "[]" (plugins.ml[284,10912+66]..[284,10912+67]) ghost
                                                      None
                                                  ]
                                          ]
                                  ]
                        ]
                  ]
            ]
        <label> ""
          expression (plugins.ml[285,10982+4]..[285,10982+29])
            Pexp_tuple
            [
              expression (plugins.ml[285,10982+5]..[285,10982+11])
                Pexp_constant Const_string("Fill",None)
              expression (plugins.ml[285,10982+13]..[285,10982+28])
                Pexp_apply
                expression (plugins.ml[285,10982+14]..[285,10982+18])
                  Pexp_ident "some" (plugins.ml[285,10982+14]..[285,10982+18])
                [
                  <label> ""
                    expression (plugins.ml[285,10982+19]..[285,10982+27])
                      Pexp_ident "gen_fill" (plugins.ml[285,10982+19]..[285,10982+27])
                ]
            ]
      ]
  structure_item (plugins.ml[286,11012+0]..[301,11476+68])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[286,11012+4]..[286,11012+14])
          Ppat_var "mk_variant" (plugins.ml[286,11012+4]..[286,11012+14])
        expression (plugins.ml[287,11029+2]..[301,11476+68])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[288,11040+4]..[288,11040+8])
                Ppat_var "cons" (plugins.ml[288,11040+4]..[288,11040+8])
              expression (plugins.ml[289,11052+6]..[301,11476+68])
                Pexp_function
                [
                  <case>
                    pattern (plugins.ml[290,11068+9]..[290,11068+15])
                      Ppat_var "params" (plugins.ml[290,11068+9]..[290,11068+15])
                    expression (plugins.ml[291,11087+11]..[301,11476+67])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (plugins.ml[291,11087+15]..[291,11087+18])
                            Ppat_var "len" (plugins.ml[291,11087+15]..[291,11087+18])
                          expression (plugins.ml[291,11087+21]..[291,11087+39])
                            Pexp_apply
                            expression (plugins.ml[291,11087+21]..[291,11087+32])
                              Pexp_ident "List.length" (plugins.ml[291,11087+21]..[291,11087+32])
                            [
                              <label> ""
                                expression (plugins.ml[291,11087+33]..[291,11087+39])
                                  Pexp_ident "params" (plugins.ml[291,11087+33]..[291,11087+39])
                            ]
                      ]
                      expression (plugins.ml[292,11130+11]..[301,11476+67])
                        Pexp_ifthenelse
                        expression (plugins.ml[292,11130+14]..[292,11130+42])
                          Pexp_apply
                          expression (plugins.ml[292,11130+14]..[292,11130+31])
                            Pexp_ident "Stringf.ends_with" (plugins.ml[292,11130+14]..[292,11130+31])
                          [
                            <label> ""
                              expression (plugins.ml[292,11130+32]..[292,11130+36])
                                Pexp_ident "cons" (plugins.ml[292,11130+32]..[292,11130+36])
                            <label> ""
                              expression (plugins.ml[292,11130+37]..[292,11130+42])
                                Pexp_constant Const_string("Ant",None)
                          ]
                        expression (plugins.ml[293,11173+16]..[293,11173+53]) ghost
                          Pexp_coerce
                          expression (plugins.ml[293,11173+17]..[293,11173+45])
                            Pexp_apply
                            expression (plugins.ml[293,11173+17]..[293,11173+35])
                              Pexp_ident "EpN.of_vstr_number" (plugins.ml[293,11173+17]..[293,11173+35])
                            [
                              <label> ""
                                expression (plugins.ml[293,11173+36]..[293,11173+41])
                                  Pexp_constant Const_string("Ant",None)
                              <label> ""
                                expression (plugins.ml[293,11173+42]..[293,11173+45])
                                  Pexp_ident "len" (plugins.ml[293,11173+42]..[293,11173+45])
                            ]
                          None
                          core_type (plugins.ml[293,11173+49]..[293,11173+52])
                            Ptyp_constr "exp" (plugins.ml[293,11173+49]..[293,11173+52])
                            []
                        Some
                          expression (plugins.ml[295,11243+13]..[301,11476+67])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (plugins.ml[295,11243+18]..[295,11243+24])
                                  Ppat_var "params" (plugins.ml[295,11243+18]..[295,11243+24])
                                expression (plugins.ml[296,11270+16]..[297,11296+74])
                                  Pexp_apply
                                  expression (plugins.ml[296,11270+23]..[296,11270+25])
                                    Pexp_ident "|>" (plugins.ml[296,11270+23]..[296,11270+25])
                                  [
                                    <label> ""
                                      expression (plugins.ml[296,11270+16]..[296,11270+22])
                                        Pexp_ident "params" (plugins.ml[296,11270+16]..[296,11270+22])
                                    <label> ""
                                      expression (plugins.ml[297,11296+18]..[297,11296+74])
                                        Pexp_apply
                                        expression (plugins.ml[297,11296+19]..[297,11296+27])
                                          Pexp_ident "List.map" (plugins.ml[297,11296+19]..[297,11296+27])
                                        [
                                          <label> ""
                                            expression (plugins.ml[297,11296+28]..[297,11296+73])
                                              Pexp_function
                                              [
                                                <case>
                                                  pattern (plugins.ml[297,11296+40]..[297,11296+58])
                                                    Ppat_constraint
                                                    pattern (plugins.ml[297,11296+41]..[297,11296+42])
                                                      Ppat_var "x" (plugins.ml[297,11296+41]..[297,11296+42])
                                                    core_type (plugins.ml[297,11296+45]..[297,11296+57])
                                                      Ptyp_constr "Ctyp.ty_info" (plugins.ml[297,11296+45]..[297,11296+57])
                                                      []
                                                  expression (plugins.ml[297,11296+62]..[297,11296+72])
                                                    Pexp_field
                                                    expression (plugins.ml[297,11296+62]..[297,11296+63])
                                                      Pexp_ident "x" (plugins.ml[297,11296+62]..[297,11296+63])
                                                    "info_exp" (plugins.ml[297,11296+64]..[297,11296+72])
                                              ]
                                        ]
                                  ]
                            ]
                            expression (plugins.ml[298,11374+14]..[301,11476+66])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (plugins.ml[298,11374+18]..[298,11374+19])
                                    Ppat_var "a" (plugins.ml[298,11374+18]..[298,11374+19])
                                  expression (plugins.ml[298,11374+22]..[298,11374+42])
                                    Pexp_apply
                                    expression (plugins.ml[298,11374+22]..[298,11374+37])
                                      Pexp_ident "ExpN.mee_of_str" (plugins.ml[298,11374+22]..[298,11374+37])
                                    [
                                      <label> ""
                                        expression (plugins.ml[298,11374+38]..[298,11374+42])
                                          Pexp_ident "cons" (plugins.ml[298,11374+38]..[298,11374+42])
                                    ]
                              ]
                              expression (plugins.ml[299,11420+14]..[301,11476+66])
                                Pexp_match
                                expression (plugins.ml[299,11420+20]..[299,11420+26])
                                  Pexp_ident "params" (plugins.ml[299,11420+20]..[299,11420+26])
                                [
                                  <case>
                                    pattern (plugins.ml[300,11452+16]..[300,11452+18])
                                      Ppat_construct "[]" (plugins.ml[300,11452+16]..[300,11452+18])
                                      None
                                    expression (plugins.ml[300,11452+22]..[300,11452+23])
                                      Pexp_ident "a" (plugins.ml[300,11452+22]..[300,11452+23])
                                  <case>
                                    pattern (plugins.ml[301,11476+16]..[301,11476+17])
                                      Ppat_any
                                    expression (plugins.ml[301,11476+21]..[301,11476+66])
                                      Pexp_apply
                                      expression (plugins.ml[301,11476+38]..[301,11476+40])
                                        Pexp_ident "@@" (plugins.ml[301,11476+38]..[301,11476+40])
                                      [
                                        <label> ""
                                          expression (plugins.ml[301,11476+21]..[301,11476+37])
                                            Pexp_apply
                                            expression (plugins.ml[301,11476+22]..[301,11476+34])
                                              Pexp_ident "ExpN.mee_app" (plugins.ml[301,11476+22]..[301,11476+34])
                                            [
                                              <label> ""
                                                expression (plugins.ml[301,11476+35]..[301,11476+36])
                                                  Pexp_ident "a" (plugins.ml[301,11476+35]..[301,11476+36])
                                            ]
                                        <label> ""
                                          expression (plugins.ml[301,11476+41]..[301,11476+66])
                                            Pexp_apply
                                            expression (plugins.ml[301,11476+42]..[301,11476+58])
                                              Pexp_ident "ExpN.mk_tuple_ee" (plugins.ml[301,11476+42]..[301,11476+58])
                                            [
                                              <label> ""
                                                expression (plugins.ml[301,11476+59]..[301,11476+65])
                                                  Pexp_ident "params" (plugins.ml[301,11476+59]..[301,11476+65])
                                            ]
                                      ]
                                ]
                ]
          ]
    ]
  structure_item (plugins.ml[302,11545+0]..[309,11716+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[302,11545+4]..[302,11545+13])
          Ppat_var "mk_record" (plugins.ml[302,11545+4]..[302,11545+13])
        expression (plugins.ml[303,11561+2]..[309,11716+28])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[304,11572+4]..[304,11572+8])
                Ppat_var "cols" (plugins.ml[304,11572+4]..[304,11572+8])
              expression (plugins.ml[305,11584+6]..[309,11716+28])
                Pexp_apply
                expression (plugins.ml[309,11716+8]..[309,11716+10])
                  Pexp_ident "|>" (plugins.ml[309,11716+8]..[309,11716+10])
                [
                  <label> ""
                    expression (plugins.ml[305,11584+6]..[308,11640+75])
                      Pexp_apply
                      expression (plugins.ml[305,11584+12]..[305,11584+14])
                        Pexp_ident "|>" (plugins.ml[305,11584+12]..[305,11584+14])
                      [
                        <label> ""
                          expression (plugins.ml[305,11584+7]..[305,11584+11])
                            Pexp_ident "cols" (plugins.ml[305,11584+7]..[305,11584+11])
                        <label> ""
                          expression (plugins.ml[306,11599+9]..[308,11640+74])
                            Pexp_apply
                            expression (plugins.ml[306,11599+10]..[306,11599+18])
                              Pexp_ident "List.map" (plugins.ml[306,11599+10]..[306,11599+18])
                            [
                              <label> ""
                                expression (plugins.ml[307,11618+12]..[308,11640+73])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (plugins.ml[308,11640+15]..[308,11640+36])
                                        Ppat_constraint
                                        pattern (plugins.ml[308,11640+16]..[308,11640+17])
                                          Ppat_var "x" (plugins.ml[308,11640+16]..[308,11640+17])
                                        core_type (plugins.ml[308,11640+20]..[308,11640+35])
                                          Ptyp_constr "Ctyp.record_col" (plugins.ml[308,11640+20]..[308,11640+35])
                                          []
                                      expression (plugins.ml[308,11640+40]..[308,11640+72])
                                        Pexp_tuple
                                        [
                                          expression (plugins.ml[308,11640+41]..[308,11640+50])
                                            Pexp_field
                                            expression (plugins.ml[308,11640+42]..[308,11640+43])
                                              Pexp_ident "x" (plugins.ml[308,11640+42]..[308,11640+43])
                                            "label" (plugins.ml[308,11640+44]..[308,11640+49])
                                          expression (plugins.ml[308,11640+52]..[308,11640+71])
                                            Pexp_field
                                            expression (plugins.ml[308,11640+53]..[308,11640+61])
                                              Pexp_field
                                              expression (plugins.ml[308,11640+54]..[308,11640+55])
                                                Pexp_ident "x" (plugins.ml[308,11640+54]..[308,11640+55])
                                              "info" (plugins.ml[308,11640+56]..[308,11640+60])
                                            "info_exp" (plugins.ml[308,11640+62]..[308,11640+70])
                                        ]
                                  ]
                            ]
                      ]
                  <label> ""
                    expression (plugins.ml[309,11716+11]..[309,11716+28])
                      Pexp_ident "ExpN.mk_record_ee" (plugins.ml[309,11716+11]..[309,11716+28])
                ]
          ]
    ]
  structure_item (plugins.ml[310,11745+0]..[314,11863+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[310,11745+4]..[310,11745+12])
          Ppat_var "mk_tuple" (plugins.ml[310,11745+4]..[310,11745+12])
        expression (plugins.ml[311,11760+2]..[314,11863+24])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[312,11771+4]..[312,11771+10])
                Ppat_var "params" (plugins.ml[312,11771+4]..[312,11771+10])
              expression (plugins.ml[313,11785+6]..[314,11863+24])
                Pexp_apply
                expression (plugins.ml[313,11785+75]..[313,11785+77])
                  Pexp_ident "|>" (plugins.ml[313,11785+75]..[313,11785+77])
                [
                  <label> ""
                    expression (plugins.ml[313,11785+6]..[313,11785+74])
                      Pexp_apply
                      expression (plugins.ml[313,11785+14]..[313,11785+16])
                        Pexp_ident "|>" (plugins.ml[313,11785+14]..[313,11785+16])
                      [
                        <label> ""
                          expression (plugins.ml[313,11785+7]..[313,11785+13])
                            Pexp_ident "params" (plugins.ml[313,11785+7]..[313,11785+13])
                        <label> ""
                          expression (plugins.ml[313,11785+17]..[313,11785+73])
                            Pexp_apply
                            expression (plugins.ml[313,11785+18]..[313,11785+26])
                              Pexp_ident "List.map" (plugins.ml[313,11785+18]..[313,11785+26])
                            [
                              <label> ""
                                expression (plugins.ml[313,11785+27]..[313,11785+72])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (plugins.ml[313,11785+39]..[313,11785+57])
                                        Ppat_constraint
                                        pattern (plugins.ml[313,11785+40]..[313,11785+41])
                                          Ppat_var "x" (plugins.ml[313,11785+40]..[313,11785+41])
                                        core_type (plugins.ml[313,11785+44]..[313,11785+56])
                                          Ptyp_constr "Ctyp.ty_info" (plugins.ml[313,11785+44]..[313,11785+56])
                                          []
                                      expression (plugins.ml[313,11785+61]..[313,11785+71])
                                        Pexp_field
                                        expression (plugins.ml[313,11785+61]..[313,11785+62])
                                          Pexp_ident "x" (plugins.ml[313,11785+61]..[313,11785+62])
                                        "info_exp" (plugins.ml[313,11785+63]..[313,11785+71])
                                  ]
                            ]
                      ]
                  <label> ""
                    expression (plugins.ml[314,11863+8]..[314,11863+24])
                      Pexp_ident "ExpN.mk_tuple_ee" (plugins.ml[314,11863+8]..[314,11863+24])
                ]
          ]
    ]
  structure_item (plugins.ml[315,11888+0]..[317,11974+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[315,11888+4]..[315,11888+16])
          Ppat_var "gen_meta_exp" (plugins.ml[315,11888+4]..[315,11888+16])
        expression (plugins.ml[316,11907+2]..[317,11974+18])
          Pexp_apply
          expression (plugins.ml[316,11907+2]..[316,11907+10])
            Pexp_ident "gen_stru" (plugins.ml[316,11907+2]..[316,11907+10])
          [
            <label> "id"
              expression (plugins.ml[316,11907+15]..[316,11907+29])
                Pexp_variant "Pre"
                Some
                  expression (plugins.ml[316,11907+21]..[316,11907+28])
                    Pexp_constant Const_string("meta_",None)
            <label> "names"
              expression (plugins.ml[316,11907+37]..[316,11907+45])
                Pexp_construct "::" (plugins.ml[316,11907+38]..[316,11907+45]) ghost
                Some
                  expression (plugins.ml[316,11907+38]..[316,11907+45]) ghost
                    Pexp_tuple
                    [
                      expression (plugins.ml[316,11907+38]..[316,11907+44])
                        Pexp_constant Const_string("_loc",None)
                      expression (plugins.ml[316,11907+44]..[316,11907+45]) ghost
                        Pexp_construct "[]" (plugins.ml[316,11907+44]..[316,11907+45]) ghost
                        None
                    ]
            <label> "mk_tuple"
              expression (plugins.ml[316,11907+47]..[316,11907+55])
                Pexp_ident "mk_tuple" (plugins.ml[316,11907+47]..[316,11907+55])
            <label> "mk_record"
              expression (plugins.ml[316,11907+57]..[316,11907+66])
                Pexp_ident "mk_record" (plugins.ml[316,11907+57]..[316,11907+66])
            <label> "mk_variant"
              expression (plugins.ml[317,11974+5]..[317,11974+15])
                Pexp_ident "mk_variant" (plugins.ml[317,11974+5]..[317,11974+15])
            <label> ""
              expression (plugins.ml[317,11974+16]..[317,11974+18])
                Pexp_construct "()" (plugins.ml[317,11974+16]..[317,11974+18])
                None
          ]
    ]
  structure_item (plugins.ml[318,11993+0]..[322,12166+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[318,11993+4]..[318,11993+12])
          Ppat_var "gen_meta" (plugins.ml[318,11993+4]..[318,11993+12])
        expression (plugins.ml[319,12008+2]..[322,12166+22])
          Pexp_apply
          expression (plugins.ml[319,12008+2]..[319,12008+12])
            Pexp_ident "gen_object" (plugins.ml[319,12008+2]..[319,12008+12])
          [
            <label> "kind"
              expression (plugins.ml[320,12021+10]..[320,12021+70])
                Pexp_construct "Concrete" (plugins.ml[320,12021+11]..[320,12021+19])
                Some
                  expression (plugins.ml[320,12021+20]..[320,12021+69]) ghost
                    Pexp_coerce
                    expression (plugins.ml[320,12021+21]..[320,12021+54])
                      Pexp_variant "Dot"
                      Some
                        expression (plugins.ml[320,12021+26]..[320,12021+54])
                          Pexp_tuple
                          [
                            expression (plugins.ml[320,12021+27]..[320,12021+40])
                              Pexp_variant "Uid"
                              Some
                                expression (plugins.ml[320,12021+33]..[320,12021+39])
                                  Pexp_constant Const_string("Astf",None)
                            expression (plugins.ml[320,12021+42]..[320,12021+53])
                              Pexp_variant "Lid"
                              Some
                                expression (plugins.ml[320,12021+48]..[320,12021+52])
                                  Pexp_constant Const_string("ep",None)
                          ]
                    None
                    core_type (plugins.ml[320,12021+58]..[320,12021+68])
                      Ptyp_constr "Astfn.ctyp" (plugins.ml[320,12021+58]..[320,12021+68])
                      []
            <label> "mk_tuple"
              expression (plugins.ml[321,12092+5]..[321,12092+13])
                Pexp_ident "mk_tuple" (plugins.ml[321,12092+5]..[321,12092+13])
            <label> "mk_record"
              expression (plugins.ml[321,12092+15]..[321,12092+24])
                Pexp_ident "mk_record" (plugins.ml[321,12092+15]..[321,12092+24])
            <label> "base"
              expression (plugins.ml[321,12092+31]..[321,12092+42])
                Pexp_constant Const_string("primitive",None)
            <label> "class_name"
              expression (plugins.ml[321,12092+55]..[321,12092+61])
                Pexp_constant Const_string("meta",None)
            <label> "mk_variant"
              expression (plugins.ml[321,12092+63]..[321,12092+73])
                Pexp_ident "mk_variant" (plugins.ml[321,12092+63]..[321,12092+73])
            <label> "names"
              expression (plugins.ml[322,12166+11]..[322,12166+19])
                Pexp_construct "::" (plugins.ml[322,12166+12]..[322,12166+19]) ghost
                Some
                  expression (plugins.ml[322,12166+12]..[322,12166+19]) ghost
                    Pexp_tuple
                    [
                      expression (plugins.ml[322,12166+12]..[322,12166+18])
                        Pexp_constant Const_string("_loc",None)
                      expression (plugins.ml[322,12166+18]..[322,12166+19]) ghost
                        Pexp_construct "[]" (plugins.ml[322,12166+18]..[322,12166+19]) ghost
                        None
                    ]
            <label> ""
              expression (plugins.ml[322,12166+20]..[322,12166+22])
                Pexp_construct "()" (plugins.ml[322,12166+20]..[322,12166+22])
                None
          ]
    ]
  structure_item (plugins.ml[323,12189+0]..[326,12287+32])
    Pstr_eval
    expression (plugins.ml[324,12197+2]..[326,12287+32])
      Pexp_apply
      expression (plugins.ml[324,12197+2]..[324,12197+19])
        Pexp_ident "Typehook.register" (plugins.ml[324,12197+2]..[324,12197+19])
      [
        <label> "filter"
          expression (plugins.ml[325,12217+12]..[325,12217+69])
            Pexp_function
            [
              <case>
                pattern (plugins.ml[325,12217+24]..[325,12217+25])
                  Ppat_var "s" (plugins.ml[325,12217+24]..[325,12217+25])
                expression (plugins.ml[325,12217+29]..[325,12217+68])
                  Pexp_apply
                  expression (plugins.ml[325,12217+29]..[325,12217+32])
                    Pexp_ident "not" (plugins.ml[325,12217+29]..[325,12217+32])
                  [
                    <label> ""
                      expression (plugins.ml[325,12217+33]..[325,12217+68])
                        Pexp_apply
                        expression (plugins.ml[325,12217+34]..[325,12217+42])
                          Pexp_ident "List.mem" (plugins.ml[325,12217+34]..[325,12217+42])
                        [
                          <label> ""
                            expression (plugins.ml[325,12217+43]..[325,12217+44])
                              Pexp_ident "s" (plugins.ml[325,12217+43]..[325,12217+44])
                          <label> ""
                            expression (plugins.ml[325,12217+45]..[325,12217+67])
                              Pexp_construct "::" (plugins.ml[325,12217+46]..[325,12217+67]) ghost
                              Some
                                expression (plugins.ml[325,12217+46]..[325,12217+67]) ghost
                                  Pexp_tuple
                                  [
                                    expression (plugins.ml[325,12217+46]..[325,12217+51])
                                      Pexp_constant Const_string("loc",None)
                                    expression (plugins.ml[325,12217+53]..[325,12217+67]) ghost
                                      Pexp_construct "::" (plugins.ml[325,12217+53]..[325,12217+67]) ghost
                                      Some
                                        expression (plugins.ml[325,12217+53]..[325,12217+67]) ghost
                                          Pexp_tuple
                                          [
                                            expression (plugins.ml[325,12217+53]..[325,12217+58])
                                              Pexp_constant Const_string("ant",None)
                                            expression (plugins.ml[325,12217+60]..[325,12217+67]) ghost
                                              Pexp_construct "::" (plugins.ml[325,12217+60]..[325,12217+67]) ghost
                                              Some
                                                expression (plugins.ml[325,12217+60]..[325,12217+67]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (plugins.ml[325,12217+60]..[325,12217+66])
                                                      Pexp_constant Const_string("quot",None)
                                                    expression (plugins.ml[325,12217+66]..[325,12217+67]) ghost
                                                      Pexp_construct "[]" (plugins.ml[325,12217+66]..[325,12217+67]) ghost
                                                      None
                                                  ]
                                          ]
                                  ]
                        ]
                  ]
            ]
        <label> ""
          expression (plugins.ml[326,12287+4]..[326,12287+32])
            Pexp_tuple
            [
              expression (plugins.ml[326,12287+5]..[326,12287+14])
                Pexp_constant Const_string("MetaObj",None)
              expression (plugins.ml[326,12287+16]..[326,12287+31])
                Pexp_apply
                expression (plugins.ml[326,12287+17]..[326,12287+21])
                  Pexp_ident "some" (plugins.ml[326,12287+17]..[326,12287+21])
                [
                  <label> ""
                    expression (plugins.ml[326,12287+22]..[326,12287+30])
                      Pexp_ident "gen_meta" (plugins.ml[326,12287+22]..[326,12287+30])
                ]
            ]
      ]
  structure_item (plugins.ml[327,12320+0]..[332,12397+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[327,12320+4]..[327,12320+11])
          Ppat_var "extract" (plugins.ml[327,12320+4]..[327,12320+11])
        expression (plugins.ml[328,12334+2]..[332,12397+77])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[329,12345+4]..[329,12345+8])
                Ppat_var "info" (plugins.ml[329,12345+4]..[329,12345+8])
              expression (plugins.ml[330,12357+6]..[332,12397+77])
                Pexp_apply
                expression (plugins.ml[330,12357+11]..[330,12357+13])
                  Pexp_ident "|>" (plugins.ml[330,12357+11]..[330,12357+13])
                [
                  <label> ""
                    expression (plugins.ml[330,12357+6]..[330,12357+10])
                      Pexp_ident "info" (plugins.ml[330,12357+6]..[330,12357+10])
                  <label> ""
                    expression (plugins.ml[331,12371+8]..[332,12397+77])
                      Pexp_apply
                      expression (plugins.ml[331,12371+9]..[331,12371+25])
                        Pexp_ident "Listf.concat_map" (plugins.ml[331,12371+9]..[331,12371+25])
                      [
                        <label> ""
                          expression (plugins.ml[332,12397+11]..[332,12397+76])
                            Pexp_function
                            [
                              <case>
                                pattern (plugins.ml[332,12397+23]..[332,12397+41])
                                  Ppat_constraint
                                  pattern (plugins.ml[332,12397+24]..[332,12397+25])
                                    Ppat_var "x" (plugins.ml[332,12397+24]..[332,12397+25])
                                  core_type (plugins.ml[332,12397+28]..[332,12397+40])
                                    Ptyp_constr "Ctyp.ty_info" (plugins.ml[332,12397+28]..[332,12397+40])
                                    []
                                expression (plugins.ml[332,12397+45]..[332,12397+75])
                                  Pexp_construct "::" (plugins.ml[332,12397+46]..[332,12397+75]) ghost
                                  Some
                                    expression (plugins.ml[332,12397+46]..[332,12397+75]) ghost
                                      Pexp_tuple
                                      [
                                        expression (plugins.ml[332,12397+46]..[332,12397+56])
                                          Pexp_field
                                          expression (plugins.ml[332,12397+46]..[332,12397+47])
                                            Pexp_ident "x" (plugins.ml[332,12397+46]..[332,12397+47])
                                          "name_exp" (plugins.ml[332,12397+48]..[332,12397+56])
                                        expression (plugins.ml[332,12397+58]..[332,12397+75]) ghost
                                          Pexp_construct "::" (plugins.ml[332,12397+58]..[332,12397+75]) ghost
                                          Some
                                            expression (plugins.ml[332,12397+58]..[332,12397+75]) ghost
                                              Pexp_tuple
                                              [
                                                expression (plugins.ml[332,12397+58]..[332,12397+74]) ghost
                                                  Pexp_coerce
                                                  expression (plugins.ml[332,12397+59]..[332,12397+66])
                                                    Pexp_field
                                                    expression (plugins.ml[332,12397+59]..[332,12397+60])
                                                      Pexp_ident "x" (plugins.ml[332,12397+59]..[332,12397+60])
                                                    "id_ep" (plugins.ml[332,12397+61]..[332,12397+66])
                                                  None
                                                  core_type (plugins.ml[332,12397+70]..[332,12397+73])
                                                    Ptyp_constr "exp" (plugins.ml[332,12397+70]..[332,12397+73])
                                                    []
                                                expression (plugins.ml[332,12397+74]..[332,12397+75]) ghost
                                                  Pexp_construct "[]" (plugins.ml[332,12397+74]..[332,12397+75]) ghost
                                                  None
                                              ]
                                      ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (plugins.ml[333,12475+0]..[346,12844+72])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[333,12475+4]..[333,12475+9])
          Ppat_var "mkfmt" (plugins.ml[333,12475+4]..[333,12475+9])
        expression (plugins.ml[334,12487+2]..[346,12844+72])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[335,12498+4]..[335,12498+7])
                Ppat_var "pre" (plugins.ml[335,12498+4]..[335,12498+7])
              expression (plugins.ml[336,12509+6]..[346,12844+72])
                Pexp_function
                [
                  <case>
                    pattern (plugins.ml[337,12525+9]..[337,12525+12])
                      Ppat_var "sep" (plugins.ml[337,12525+9]..[337,12525+12])
                    expression (plugins.ml[338,12541+11]..[346,12844+71])
                      Pexp_function
                      [
                        <case>
                          pattern (plugins.ml[339,12562+14]..[339,12562+18])
                            Ppat_var "post" (plugins.ml[339,12562+14]..[339,12562+18])
                          expression (plugins.ml[340,12584+16]..[346,12844+70])
                            Pexp_function
                            [
                              <case>
                                pattern (plugins.ml[341,12610+19]..[341,12610+25])
                                  Ppat_var "fields" (plugins.ml[341,12610+19]..[341,12610+25])
                                expression (plugins.ml[342,12639+21]..[346,12844+69])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (plugins.ml[342,12639+25]..[342,12639+26])
                                        Ppat_var "s" (plugins.ml[342,12639+25]..[342,12639+26])
                                      expression (plugins.ml[342,12639+29]..[342,12639+70])
                                        Pexp_apply
                                        expression (plugins.ml[342,12639+33]..[342,12639+34])
                                          Pexp_ident "^" (plugins.ml[342,12639+33]..[342,12639+34])
                                        [
                                          <label> ""
                                            expression (plugins.ml[342,12639+29]..[342,12639+32])
                                              Pexp_ident "pre" (plugins.ml[342,12639+29]..[342,12639+32])
                                          <label> ""
                                            expression (plugins.ml[342,12639+35]..[342,12639+70])
                                              Pexp_apply
                                              expression (plugins.ml[342,12639+63]..[342,12639+64])
                                                Pexp_ident "^" (plugins.ml[342,12639+63]..[342,12639+64])
                                              [
                                                <label> ""
                                                  expression (plugins.ml[342,12639+36]..[342,12639+62])
                                                    Pexp_apply
                                                    expression (plugins.ml[342,12639+37]..[342,12639+50])
                                                      Pexp_ident "String.concat" (plugins.ml[342,12639+37]..[342,12639+50])
                                                    [
                                                      <label> ""
                                                        expression (plugins.ml[342,12639+51]..[342,12639+54])
                                                          Pexp_ident "sep" (plugins.ml[342,12639+51]..[342,12639+54])
                                                      <label> ""
                                                        expression (plugins.ml[342,12639+55]..[342,12639+61])
                                                          Pexp_ident "fields" (plugins.ml[342,12639+55]..[342,12639+61])
                                                    ]
                                                <label> ""
                                                  expression (plugins.ml[342,12639+65]..[342,12639+69])
                                                    Pexp_ident "post" (plugins.ml[342,12639+65]..[342,12639+69])
                                              ]
                                        ]
                                  ]
                                  expression (plugins.ml[343,12713+21]..[346,12844+69]) ghost
                                    Pexp_coerce
                                    expression (plugins.ml[343,12713+22]..[346,12844+55])
                                      Pexp_variant "App"
                                      Some
                                        expression (plugins.ml[344,12740+24]..[346,12844+55])
                                          Pexp_tuple
                                          [
                                            expression (plugins.ml[344,12740+25]..[346,12844+44])
                                              Pexp_variant "App"
                                              Some
                                                expression (plugins.ml[345,12771+28]..[346,12844+43])
                                                  Pexp_tuple
                                                  [
                                                    expression (plugins.ml[345,12771+29]..[345,12771+71])
                                                      Pexp_variant "Dot"
                                                      Some
                                                        expression (plugins.ml[345,12771+35]..[345,12771+70])
                                                          Pexp_tuple
                                                          [
                                                            expression (plugins.ml[345,12771+36]..[345,12771+51])
                                                              Pexp_variant "Uid"
                                                              Some
                                                                expression (plugins.ml[345,12771+42]..[345,12771+50])
                                                                  Pexp_constant Const_string("Format",None)
                                                            expression (plugins.ml[345,12771+53]..[345,12771+69])
                                                              Pexp_variant "Lid"
                                                              Some
                                                                expression (plugins.ml[345,12771+59]..[345,12771+68])
                                                                  Pexp_constant Const_string("fprintf",None)
                                                          ]
                                                    expression (plugins.ml[346,12844+30]..[346,12844+42])
                                                      Pexp_variant "Lid"
                                                      Some
                                                        expression (plugins.ml[346,12844+36]..[346,12844+41])
                                                          Pexp_constant Const_string("fmt",None)
                                                  ]
                                            expression (plugins.ml[346,12844+46]..[346,12844+54])
                                              Pexp_variant "Str"
                                              Some
                                                expression (plugins.ml[346,12844+52]..[346,12844+53])
                                                  Pexp_ident "s" (plugins.ml[346,12844+52]..[346,12844+53])
                                          ]
                                    None
                                    core_type (plugins.ml[346,12844+59]..[346,12844+68])
                                      Ptyp_constr "Astfn.exp" (plugins.ml[346,12844+59]..[346,12844+68])
                                      []
                            ]
                      ]
                ]
          ]
    ]
  structure_item (plugins.ml[347,12917+0]..[359,13267+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[347,12917+4]..[347,12917+20])
          Ppat_var "mk_variant_print" (plugins.ml[347,12917+4]..[347,12917+20])
        expression (plugins.ml[348,12940+2]..[359,13267+50])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[349,12951+4]..[349,12951+8])
                Ppat_var "cons" (plugins.ml[349,12951+4]..[349,12951+8])
              expression (plugins.ml[350,12963+6]..[359,13267+50])
                Pexp_function
                [
                  <case>
                    pattern (plugins.ml[351,12979+9]..[351,12979+15])
                      Ppat_var "params" (plugins.ml[351,12979+9]..[351,12979+15])
                    expression (plugins.ml[352,12998+11]..[359,13267+49])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (plugins.ml[352,12998+15]..[352,12998+18])
                            Ppat_var "len" (plugins.ml[352,12998+15]..[352,12998+18])
                          expression (plugins.ml[352,12998+21]..[352,12998+39])
                            Pexp_apply
                            expression (plugins.ml[352,12998+21]..[352,12998+32])
                              Pexp_ident "List.length" (plugins.ml[352,12998+21]..[352,12998+32])
                            [
                              <label> ""
                                expression (plugins.ml[352,12998+33]..[352,12998+39])
                                  Pexp_ident "params" (plugins.ml[352,12998+33]..[352,12998+39])
                            ]
                      ]
                      expression (plugins.ml[353,13041+11]..[359,13267+49])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (plugins.ml[353,13041+15]..[353,13041+18])
                              Ppat_var "pre" (plugins.ml[353,13041+15]..[353,13041+18])
                            expression (plugins.ml[354,13062+13]..[358,13226+37])
                              Pexp_ifthenelse
                              expression (plugins.ml[354,13062+16]..[354,13062+24])
                                Pexp_apply
                                expression (plugins.ml[354,13062+20]..[354,13062+22])
                                  Pexp_ident ">=" (plugins.ml[354,13062+20]..[354,13062+22])
                                [
                                  <label> ""
                                    expression (plugins.ml[354,13062+16]..[354,13062+19])
                                      Pexp_ident "len" (plugins.ml[354,13062+16]..[354,13062+19])
                                  <label> ""
                                    expression (plugins.ml[354,13062+23]..[354,13062+24])
                                      Pexp_constant Const_int 1
                                ]
                              expression (plugins.ml[356,13105+15]..[357,13169+56])
                                Pexp_apply
                                expression (plugins.ml[356,13105+61]..[356,13105+63])
                                  Pexp_ident "@@" (plugins.ml[356,13105+61]..[356,13105+63])
                                [
                                  <label> ""
                                    expression (plugins.ml[356,13105+15]..[356,13105+60])
                                      Pexp_apply
                                      expression (plugins.ml[356,13105+16]..[356,13105+21])
                                        Pexp_ident "mkfmt" (plugins.ml[356,13105+16]..[356,13105+21])
                                      [
                                        <label> ""
                                          expression (plugins.ml[356,13105+22]..[356,13105+48])
                                            Pexp_apply
                                            expression (plugins.ml[356,13105+32]..[356,13105+33])
                                              Pexp_ident "^" (plugins.ml[356,13105+32]..[356,13105+33])
                                            [
                                              <label> ""
                                                expression (plugins.ml[356,13105+23]..[356,13105+31])
                                                  Pexp_constant Const_string("@[<1>(",None)
                                              <label> ""
                                                expression (plugins.ml[356,13105+34]..[356,13105+47])
                                                  Pexp_apply
                                                  expression (plugins.ml[356,13105+40]..[356,13105+41])
                                                    Pexp_ident "^" (plugins.ml[356,13105+40]..[356,13105+41])
                                                  [
                                                    <label> ""
                                                      expression (plugins.ml[356,13105+35]..[356,13105+39])
                                                        Pexp_ident "cons" (plugins.ml[356,13105+35]..[356,13105+39])
                                                    <label> ""
                                                      expression (plugins.ml[356,13105+42]..[356,13105+46])
                                                        Pexp_constant Const_string("@ ",None)
                                                  ]
                                            ]
                                        <label> ""
                                          expression (plugins.ml[356,13105+49]..[356,13105+53])
                                            Pexp_constant Const_string("@ ",None)
                                        <label> ""
                                          expression (plugins.ml[356,13105+54]..[356,13105+59])
                                            Pexp_constant Const_string(")@]",None)
                                      ]
                                  <label> ""
                                    expression (plugins.ml[357,13169+17]..[357,13169+56])
                                      Pexp_apply
                                      expression (plugins.ml[357,13169+18]..[357,13169+28])
                                        Pexp_ident "Listf.init" (plugins.ml[357,13169+18]..[357,13169+28])
                                      [
                                        <label> ""
                                          expression (plugins.ml[357,13169+29]..[357,13169+32])
                                            Pexp_ident "len" (plugins.ml[357,13169+29]..[357,13169+32])
                                        <label> ""
                                          expression (plugins.ml[357,13169+33]..[357,13169+55])
                                            Pexp_function
                                            [
                                              <case>
                                                pattern (plugins.ml[357,13169+45]..[357,13169+46])
                                                  Ppat_any
                                                expression (plugins.ml[357,13169+50]..[357,13169+54])
                                                  Pexp_constant Const_string("%a",None)
                                            ]
                                      ]
                                ]
                              Some
                                expression (plugins.ml[358,13226+18]..[358,13226+37])
                                  Pexp_apply
                                  expression (plugins.ml[358,13226+18]..[358,13226+23])
                                    Pexp_ident "mkfmt" (plugins.ml[358,13226+18]..[358,13226+23])
                                  [
                                    <label> ""
                                      expression (plugins.ml[358,13226+24]..[358,13226+28])
                                        Pexp_ident "cons" (plugins.ml[358,13226+24]..[358,13226+28])
                                    <label> ""
                                      expression (plugins.ml[358,13226+29]..[358,13226+31])
                                        Pexp_constant Const_string("",None)
                                    <label> ""
                                      expression (plugins.ml[358,13226+32]..[358,13226+34])
                                        Pexp_constant Const_string("",None)
                                    <label> ""
                                      expression (plugins.ml[358,13226+35]..[358,13226+37])
                                        Pexp_construct "[]" (plugins.ml[358,13226+35]..[358,13226+37])
                                        None
                                  ]
                        ]
                        expression (plugins.ml[359,13267+11]..[359,13267+49])
                          Pexp_apply
                          expression (plugins.ml[359,13267+11]..[359,13267+23])
                            Pexp_ident "appl_of_list" (plugins.ml[359,13267+11]..[359,13267+23])
                          [
                            <label> ""
                              expression (plugins.ml[359,13267+24]..[359,13267+49])
                                Pexp_construct "::" (plugins.ml[359,13267+29]..[359,13267+31])
                                Some
                                  expression (plugins.ml[359,13267+25]..[359,13267+48]) ghost
                                    Pexp_tuple
                                    [
                                      expression (plugins.ml[359,13267+25]..[359,13267+28])
                                        Pexp_ident "pre" (plugins.ml[359,13267+25]..[359,13267+28])
                                      expression (plugins.ml[359,13267+32]..[359,13267+48])
                                        Pexp_apply
                                        expression (plugins.ml[359,13267+33]..[359,13267+40])
                                          Pexp_ident "extract" (plugins.ml[359,13267+33]..[359,13267+40])
                                        [
                                          <label> ""
                                            expression (plugins.ml[359,13267+41]..[359,13267+47])
                                              Pexp_ident "params" (plugins.ml[359,13267+41]..[359,13267+47])
                                        ]
                                    ]
                          ]
                ]
          ]
    ]
  structure_item (plugins.ml[360,13318+0]..[367,13511+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[360,13318+4]..[360,13318+18])
          Ppat_var "mk_tuple_print" (plugins.ml[360,13318+4]..[360,13318+18])
        expression (plugins.ml[361,13339+2]..[367,13511+44])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[362,13350+4]..[362,13350+10])
                Ppat_var "params" (plugins.ml[362,13350+4]..[362,13350+10])
              expression (plugins.ml[363,13364+6]..[367,13511+44])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (plugins.ml[363,13364+10]..[363,13364+13])
                      Ppat_var "len" (plugins.ml[363,13364+10]..[363,13364+13])
                    expression (plugins.ml[363,13364+16]..[363,13364+34])
                      Pexp_apply
                      expression (plugins.ml[363,13364+16]..[363,13364+27])
                        Pexp_ident "List.length" (plugins.ml[363,13364+16]..[363,13364+27])
                      [
                        <label> ""
                          expression (plugins.ml[363,13364+28]..[363,13364+34])
                            Pexp_ident "params" (plugins.ml[363,13364+28]..[363,13364+34])
                      ]
                ]
                expression (plugins.ml[364,13402+6]..[367,13511+44])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (plugins.ml[364,13402+10]..[364,13402+13])
                        Ppat_var "pre" (plugins.ml[364,13402+10]..[364,13402+13])
                      expression (plugins.ml[365,13418+8]..[366,13458+49])
                        Pexp_apply
                        expression (plugins.ml[365,13418+37]..[365,13418+39])
                          Pexp_ident "@@" (plugins.ml[365,13418+37]..[365,13418+39])
                        [
                          <label> ""
                            expression (plugins.ml[365,13418+8]..[365,13418+36])
                              Pexp_apply
                              expression (plugins.ml[365,13418+9]..[365,13418+14])
                                Pexp_ident "mkfmt" (plugins.ml[365,13418+9]..[365,13418+14])
                              [
                                <label> ""
                                  expression (plugins.ml[365,13418+15]..[365,13418+23])
                                    Pexp_constant Const_string("@[<1>(",None)
                                <label> ""
                                  expression (plugins.ml[365,13418+24]..[365,13418+29])
                                    Pexp_constant Const_string(",@,",None)
                                <label> ""
                                  expression (plugins.ml[365,13418+30]..[365,13418+35])
                                    Pexp_constant Const_string(")@]",None)
                              ]
                          <label> ""
                            expression (plugins.ml[366,13458+10]..[366,13458+49])
                              Pexp_apply
                              expression (plugins.ml[366,13458+11]..[366,13458+21])
                                Pexp_ident "Listf.init" (plugins.ml[366,13458+11]..[366,13458+21])
                              [
                                <label> ""
                                  expression (plugins.ml[366,13458+22]..[366,13458+25])
                                    Pexp_ident "len" (plugins.ml[366,13458+22]..[366,13458+25])
                                <label> ""
                                  expression (plugins.ml[366,13458+26]..[366,13458+48])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (plugins.ml[366,13458+38]..[366,13458+39])
                                          Ppat_any
                                        expression (plugins.ml[366,13458+43]..[366,13458+47])
                                          Pexp_constant Const_string("%a",None)
                                    ]
                              ]
                        ]
                  ]
                  expression (plugins.ml[367,13511+6]..[367,13511+44])
                    Pexp_apply
                    expression (plugins.ml[367,13511+6]..[367,13511+18])
                      Pexp_ident "appl_of_list" (plugins.ml[367,13511+6]..[367,13511+18])
                    [
                      <label> ""
                        expression (plugins.ml[367,13511+19]..[367,13511+44])
                          Pexp_construct "::" (plugins.ml[367,13511+24]..[367,13511+26])
                          Some
                            expression (plugins.ml[367,13511+20]..[367,13511+43]) ghost
                              Pexp_tuple
                              [
                                expression (plugins.ml[367,13511+20]..[367,13511+23])
                                  Pexp_ident "pre" (plugins.ml[367,13511+20]..[367,13511+23])
                                expression (plugins.ml[367,13511+27]..[367,13511+43])
                                  Pexp_apply
                                  expression (plugins.ml[367,13511+28]..[367,13511+35])
                                    Pexp_ident "extract" (plugins.ml[367,13511+28]..[367,13511+35])
                                  [
                                    <label> ""
                                      expression (plugins.ml[367,13511+36]..[367,13511+42])
                                        Pexp_ident "params" (plugins.ml[367,13511+36]..[367,13511+42])
                                  ]
                              ]
                    ]
          ]
    ]
  structure_item (plugins.ml[368,13556+0]..[377,13864+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[368,13556+4]..[368,13556+19])
          Ppat_var "mk_record_print" (plugins.ml[368,13556+4]..[368,13556+19])
        expression (plugins.ml[369,13578+2]..[377,13864+20])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[370,13589+4]..[370,13589+8])
                Ppat_var "cols" (plugins.ml[370,13589+4]..[370,13589+8])
              expression (plugins.ml[371,13601+6]..[377,13864+20])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (plugins.ml[371,13601+10]..[371,13601+13])
                      Ppat_var "pre" (plugins.ml[371,13601+10]..[371,13601+13])
                    expression (plugins.ml[372,13617+8]..[374,13711+44])
                      Pexp_apply
                      expression (plugins.ml[374,13711+10]..[374,13711+12])
                        Pexp_ident "|>" (plugins.ml[374,13711+10]..[374,13711+12])
                      [
                        <label> ""
                          expression (plugins.ml[372,13617+8]..[373,13634+76])
                            Pexp_apply
                            expression (plugins.ml[372,13617+14]..[372,13617+16])
                              Pexp_ident "|>" (plugins.ml[372,13617+14]..[372,13617+16])
                            [
                              <label> ""
                                expression (plugins.ml[372,13617+9]..[372,13617+13])
                                  Pexp_ident "cols" (plugins.ml[372,13617+9]..[372,13617+13])
                              <label> ""
                                expression (plugins.ml[373,13634+11]..[373,13634+75])
                                  Pexp_apply
                                  expression (plugins.ml[373,13634+12]..[373,13634+20])
                                    Pexp_ident "List.map" (plugins.ml[373,13634+12]..[373,13634+20])
                                  [
                                    <label> ""
                                      expression (plugins.ml[373,13634+21]..[373,13634+74])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (plugins.ml[373,13634+33]..[373,13634+54])
                                              Ppat_constraint
                                              pattern (plugins.ml[373,13634+34]..[373,13634+35])
                                                Ppat_var "x" (plugins.ml[373,13634+34]..[373,13634+35])
                                              core_type (plugins.ml[373,13634+38]..[373,13634+53])
                                                Ptyp_constr "Ctyp.record_col" (plugins.ml[373,13634+38]..[373,13634+53])
                                                []
                                            expression (plugins.ml[373,13634+58]..[373,13634+73])
                                              Pexp_apply
                                              expression (plugins.ml[373,13634+66]..[373,13634+67])
                                                Pexp_ident "^" (plugins.ml[373,13634+66]..[373,13634+67])
                                              [
                                                <label> ""
                                                  expression (plugins.ml[373,13634+58]..[373,13634+65])
                                                    Pexp_field
                                                    expression (plugins.ml[373,13634+58]..[373,13634+59])
                                                      Pexp_ident "x" (plugins.ml[373,13634+58]..[373,13634+59])
                                                    "label" (plugins.ml[373,13634+60]..[373,13634+65])
                                                <label> ""
                                                  expression (plugins.ml[373,13634+68]..[373,13634+73])
                                                    Pexp_constant Const_string(":%a",None)
                                              ]
                                        ]
                                  ]
                            ]
                        <label> ""
                          expression (plugins.ml[374,13711+13]..[374,13711+44])
                            Pexp_apply
                            expression (plugins.ml[374,13711+14]..[374,13711+19])
                              Pexp_ident "mkfmt" (plugins.ml[374,13711+14]..[374,13711+19])
                            [
                              <label> ""
                                expression (plugins.ml[374,13711+20]..[374,13711+31])
                                  Pexp_constant Const_string("@[<hv 1>{",None)
                              <label> ""
                                expression (plugins.ml[374,13711+32]..[374,13711+37])
                                  Pexp_constant Const_string(";@,",None)
                              <label> ""
                                expression (plugins.ml[374,13711+38]..[374,13711+43])
                                  Pexp_constant Const_string("}@]",None)
                            ]
                      ]
                ]
                expression (plugins.ml[375,13759+6]..[377,13864+20])
                  Pexp_apply
                  expression (plugins.ml[375,13759+6]..[375,13759+18])
                    Pexp_ident "appl_of_list" (plugins.ml[375,13759+6]..[375,13759+18])
                  [
                    <label> ""
                      expression (plugins.ml[375,13759+19]..[377,13864+20])
                        Pexp_construct "::" (plugins.ml[375,13759+24]..[375,13759+26])
                        Some
                          expression (plugins.ml[375,13759+20]..[377,13864+19]) ghost
                            Pexp_tuple
                            [
                              expression (plugins.ml[375,13759+20]..[375,13759+23])
                                Pexp_ident "pre" (plugins.ml[375,13759+20]..[375,13759+23])
                              expression (plugins.ml[376,13786+8]..[377,13864+19])
                                Pexp_apply
                                expression (plugins.ml[376,13786+75]..[376,13786+77])
                                  Pexp_ident "|>" (plugins.ml[376,13786+75]..[376,13786+77])
                                [
                                  <label> ""
                                    expression (plugins.ml[376,13786+9]..[376,13786+74])
                                      Pexp_apply
                                      expression (plugins.ml[376,13786+15]..[376,13786+17])
                                        Pexp_ident "|>" (plugins.ml[376,13786+15]..[376,13786+17])
                                      [
                                        <label> ""
                                          expression (plugins.ml[376,13786+10]..[376,13786+14])
                                            Pexp_ident "cols" (plugins.ml[376,13786+10]..[376,13786+14])
                                        <label> ""
                                          expression (plugins.ml[376,13786+18]..[376,13786+73])
                                            Pexp_apply
                                            expression (plugins.ml[376,13786+19]..[376,13786+27])
                                              Pexp_ident "List.map" (plugins.ml[376,13786+19]..[376,13786+27])
                                            [
                                              <label> ""
                                                expression (plugins.ml[376,13786+28]..[376,13786+72])
                                                  Pexp_function
                                                  [
                                                    <case>
                                                      pattern (plugins.ml[376,13786+40]..[376,13786+61])
                                                        Ppat_constraint
                                                        pattern (plugins.ml[376,13786+41]..[376,13786+42])
                                                          Ppat_var "x" (plugins.ml[376,13786+41]..[376,13786+42])
                                                        core_type (plugins.ml[376,13786+45]..[376,13786+60])
                                                          Ptyp_constr "Ctyp.record_col" (plugins.ml[376,13786+45]..[376,13786+60])
                                                          []
                                                      expression (plugins.ml[376,13786+65]..[376,13786+71])
                                                        Pexp_field
                                                        expression (plugins.ml[376,13786+65]..[376,13786+66])
                                                          Pexp_ident "x" (plugins.ml[376,13786+65]..[376,13786+66])
                                                        "info" (plugins.ml[376,13786+67]..[376,13786+71])
                                                  ]
                                            ]
                                      ]
                                  <label> ""
                                    expression (plugins.ml[377,13864+11]..[377,13864+18])
                                      Pexp_ident "extract" (plugins.ml[377,13864+11]..[377,13864+18])
                                ]
                            ]
                  ]
          ]
    ]
  structure_item (plugins.ml[378,13885+0]..[387,14289+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[378,13885+4]..[378,13885+13])
          Ppat_var "gen_print" (plugins.ml[378,13885+4]..[378,13885+13])
        expression (plugins.ml[379,13901+2]..[387,14289+6])
          Pexp_apply
          expression (plugins.ml[379,13901+2]..[379,13901+10])
            Pexp_ident "gen_stru" (plugins.ml[379,13901+2]..[379,13901+10])
          [
            <label> "id"
              expression (plugins.ml[379,13901+15]..[379,13901+33])
                Pexp_variant "Pre"
                Some
                  expression (plugins.ml[379,13901+21]..[379,13901+32])
                    Pexp_constant Const_string("pp_print_",None)
            <label> "names"
              expression (plugins.ml[379,13901+41]..[379,13901+48])
                Pexp_construct "::" (plugins.ml[379,13901+42]..[379,13901+48]) ghost
                Some
                  expression (plugins.ml[379,13901+42]..[379,13901+48]) ghost
                    Pexp_tuple
                    [
                      expression (plugins.ml[379,13901+42]..[379,13901+47])
                        Pexp_constant Const_string("fmt",None)
                      expression (plugins.ml[379,13901+47]..[379,13901+48]) ghost
                        Pexp_construct "[]" (plugins.ml[379,13901+47]..[379,13901+48]) ghost
                        None
                    ]
            <label> "mk_tuple"
              expression (plugins.ml[379,13901+59]..[379,13901+73])
                Pexp_ident "mk_tuple_print" (plugins.ml[379,13901+59]..[379,13901+73])
            <label> "mk_record"
              expression (plugins.ml[380,13975+15]..[380,13975+30])
                Pexp_ident "mk_record_print" (plugins.ml[380,13975+15]..[380,13975+30])
            <label> "annot"
              expression (plugins.ml[381,14006+11]..[386,14212+47])
                Pexp_function
                [
                  <case>
                    pattern (plugins.ml[382,14027+14]..[382,14027+15])
                      Ppat_var "s" (plugins.ml[382,14027+14]..[382,14027+15])
                    expression (plugins.ml[383,14046+16]..[386,14212+46])
                      Pexp_tuple
                      [
                        expression (plugins.ml[383,14046+17]..[385,14138+72]) ghost
                          Pexp_coerce
                          expression (plugins.ml[383,14046+18]..[385,14138+57])
                            Pexp_variant "Arrow"
                            Some
                              expression (plugins.ml[384,14071+20]..[385,14138+57])
                                Pexp_tuple
                                [
                                  expression (plugins.ml[384,14071+21]..[384,14071+65])
                                    Pexp_variant "Dot"
                                    Some
                                      expression (plugins.ml[384,14071+27]..[384,14071+64])
                                        Pexp_tuple
                                        [
                                          expression (plugins.ml[384,14071+28]..[384,14071+43])
                                            Pexp_variant "Uid"
                                            Some
                                              expression (plugins.ml[384,14071+34]..[384,14071+42])
                                                Pexp_constant Const_string("Format",None)
                                          expression (plugins.ml[384,14071+45]..[384,14071+63])
                                            Pexp_variant "Lid"
                                            Some
                                              expression (plugins.ml[384,14071+51]..[384,14071+62])
                                                Pexp_constant Const_string("formatter",None)
                                        ]
                                  expression (plugins.ml[385,14138+22]..[385,14138+56])
                                    Pexp_variant "Arrow"
                                    Some
                                      expression (plugins.ml[385,14138+30]..[385,14138+55])
                                        Pexp_tuple
                                        [
                                          expression (plugins.ml[385,14138+31]..[385,14138+39])
                                            Pexp_variant "Lid"
                                            Some
                                              expression (plugins.ml[385,14138+37]..[385,14138+38])
                                                Pexp_ident "s" (plugins.ml[385,14138+37]..[385,14138+38])
                                          expression (plugins.ml[385,14138+41]..[385,14138+54])
                                            Pexp_variant "Lid"
                                            Some
                                              expression (plugins.ml[385,14138+47]..[385,14138+53])
                                                Pexp_constant Const_string("unit",None)
                                        ]
                                ]
                          None
                          core_type (plugins.ml[385,14138+61]..[385,14138+71])
                            Ptyp_constr "Astfn.ctyp" (plugins.ml[385,14138+61]..[385,14138+71])
                            []
                        expression (plugins.ml[386,14212+18]..[386,14212+45]) ghost
                          Pexp_coerce
                          expression (plugins.ml[386,14212+19]..[386,14212+30])
                            Pexp_variant "Lid"
                            Some
                              expression (plugins.ml[386,14212+24]..[386,14212+30])
                                Pexp_constant Const_string("unit",None)
                          None
                          core_type (plugins.ml[386,14212+34]..[386,14212+44])
                            Ptyp_constr "Astfn.ctyp" (plugins.ml[386,14212+34]..[386,14212+44])
                            []
                      ]
                ]
            <label> "mk_variant"
              expression (plugins.ml[386,14212+60]..[386,14212+76])
                Pexp_ident "mk_variant_print" (plugins.ml[386,14212+60]..[386,14212+76])
            <label> ""
              expression (plugins.ml[387,14289+4]..[387,14289+6])
                Pexp_construct "()" (plugins.ml[387,14289+4]..[387,14289+6])
                None
          ]
    ]
  structure_item (plugins.ml[388,14296+0]..[391,14441+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[388,14296+4]..[388,14296+17])
          Ppat_var "gen_print_obj" (plugins.ml[388,14296+4]..[388,14296+17])
        expression (plugins.ml[389,14316+2]..[391,14441+77])
          Pexp_apply
          expression (plugins.ml[389,14316+2]..[389,14316+12])
            Pexp_ident "gen_object" (plugins.ml[389,14316+2]..[389,14316+12])
          [
            <label> "kind"
              expression (plugins.ml[389,14316+19]..[389,14316+57])
                Pexp_construct "Concrete" (plugins.ml[389,14316+20]..[389,14316+28])
                Some
                  expression (plugins.ml[389,14316+29]..[389,14316+56]) ghost
                    Pexp_coerce
                    expression (plugins.ml[389,14316+30]..[389,14316+41])
                      Pexp_variant "Lid"
                      Some
                        expression (plugins.ml[389,14316+35]..[389,14316+41])
                          Pexp_constant Const_string("unit",None)
                    None
                    core_type (plugins.ml[389,14316+45]..[389,14316+55])
                      Ptyp_constr "Astfn.ctyp" (plugins.ml[389,14316+45]..[389,14316+55])
                      []
            <label> "mk_tuple"
              expression (plugins.ml[390,14374+14]..[390,14374+28])
                Pexp_ident "mk_tuple_print" (plugins.ml[390,14374+14]..[390,14374+28])
            <label> "base"
              expression (plugins.ml[390,14374+35]..[390,14374+46])
                Pexp_constant Const_string("printbase",None)
            <label> "class_name"
              expression (plugins.ml[390,14374+59]..[390,14374+66])
                Pexp_constant Const_string("print",None)
            <label> "names"
              expression (plugins.ml[391,14441+11]..[391,14441+18])
                Pexp_construct "::" (plugins.ml[391,14441+12]..[391,14441+18]) ghost
                Some
                  expression (plugins.ml[391,14441+12]..[391,14441+18]) ghost
                    Pexp_tuple
                    [
                      expression (plugins.ml[391,14441+12]..[391,14441+17])
                        Pexp_constant Const_string("fmt",None)
                      expression (plugins.ml[391,14441+17]..[391,14441+18]) ghost
                        Pexp_construct "[]" (plugins.ml[391,14441+17]..[391,14441+18]) ghost
                        None
                    ]
            <label> "mk_record"
              expression (plugins.ml[391,14441+30]..[391,14441+45])
                Pexp_ident "mk_record_print" (plugins.ml[391,14441+30]..[391,14441+45])
            <label> "mk_variant"
              expression (plugins.ml[391,14441+58]..[391,14441+74])
                Pexp_ident "mk_variant_print" (plugins.ml[391,14441+58]..[391,14441+74])
            <label> ""
              expression (plugins.ml[391,14441+75]..[391,14441+77])
                Pexp_construct "()" (plugins.ml[391,14441+75]..[391,14441+77])
                None
          ]
    ]
  structure_item (plugins.ml[392,14519+0]..[394,14596+33])
    Pstr_eval
    expression (plugins.ml[393,14527+2]..[394,14596+33])
      Pexp_apply
      expression (plugins.ml[393,14527+66]..[393,14527+68])
        Pexp_ident "|>" (plugins.ml[393,14527+66]..[393,14527+68])
      [
        <label> ""
          expression (plugins.ml[393,14527+2]..[393,14527+65])
            Pexp_construct "::" (plugins.ml[393,14527+3]..[393,14527+65]) ghost
            Some
              expression (plugins.ml[393,14527+3]..[393,14527+65]) ghost
                Pexp_tuple
                [
                  expression (plugins.ml[393,14527+3]..[393,14527+30])
                    Pexp_tuple
                    [
                      expression (plugins.ml[393,14527+4]..[393,14527+11])
                        Pexp_constant Const_string("Print",None)
                      expression (plugins.ml[393,14527+13]..[393,14527+29])
                        Pexp_apply
                        expression (plugins.ml[393,14527+14]..[393,14527+18])
                          Pexp_ident "some" (plugins.ml[393,14527+14]..[393,14527+18])
                        [
                          <label> ""
                            expression (plugins.ml[393,14527+19]..[393,14527+28])
                              Pexp_ident "gen_print" (plugins.ml[393,14527+19]..[393,14527+28])
                        ]
                    ]
                  expression (plugins.ml[393,14527+32]..[393,14527+65]) ghost
                    Pexp_construct "::" (plugins.ml[393,14527+32]..[393,14527+65]) ghost
                    Some
                      expression (plugins.ml[393,14527+32]..[393,14527+65]) ghost
                        Pexp_tuple
                        [
                          expression (plugins.ml[393,14527+32]..[393,14527+64])
                            Pexp_tuple
                            [
                              expression (plugins.ml[393,14527+33]..[393,14527+41])
                                Pexp_constant Const_string("OPrint",None)
                              expression (plugins.ml[393,14527+43]..[393,14527+63])
                                Pexp_apply
                                expression (plugins.ml[393,14527+44]..[393,14527+48])
                                  Pexp_ident "some" (plugins.ml[393,14527+44]..[393,14527+48])
                                [
                                  <label> ""
                                    expression (plugins.ml[393,14527+49]..[393,14527+62])
                                      Pexp_ident "gen_print_obj" (plugins.ml[393,14527+49]..[393,14527+62])
                                ]
                            ]
                          expression (plugins.ml[393,14527+64]..[393,14527+65]) ghost
                            Pexp_construct "[]" (plugins.ml[393,14527+64]..[393,14527+65]) ghost
                            None
                        ]
                ]
        <label> ""
          expression (plugins.ml[394,14596+4]..[394,14596+33])
            Pexp_apply
            expression (plugins.ml[394,14596+5]..[394,14596+14])
              Pexp_ident "List.iter" (plugins.ml[394,14596+5]..[394,14596+14])
            [
              <label> ""
                expression (plugins.ml[394,14596+15]..[394,14596+32])
                  Pexp_ident "Typehook.register" (plugins.ml[394,14596+15]..[394,14596+32])
            ]
      ]
  structure_item (plugins.ml[395,14630+0]..[411,15139+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[395,14630+4]..[395,14630+19])
          Ppat_var "mk_variant_iter" (plugins.ml[395,14630+4]..[395,14630+19])
        expression (plugins.ml[396,14652+2]..[411,15139+37])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[397,14663+4]..[397,14663+9])
                Ppat_var "_cons" (plugins.ml[397,14663+4]..[397,14663+9])
              expression (plugins.ml[398,14676+6]..[411,15139+37])
                Pexp_function
                [
                  <case>
                    pattern (plugins.ml[399,14692+9]..[399,14692+15])
                      Ppat_var "params" (plugins.ml[399,14692+9]..[399,14692+15])
                    expression (plugins.ml[400,14711+11]..[411,15139+36]) ghost
                      Pexp_constraint
                      expression (plugins.ml[400,14711+12]..[411,15139+29])
                        Pexp_match
                        expression (plugins.ml[400,14711+19]..[400,14711+25])
                          Pexp_ident "params" (plugins.ml[400,14711+19]..[400,14711+25])
                        [
                          <case>
                            pattern (plugins.ml[401,14742+15]..[401,14742+17])
                              Ppat_construct "[]" (plugins.ml[401,14742+15]..[401,14742+17])
                              None
                            expression (plugins.ml[401,14742+21]..[401,14742+34]) ghost
                              Pexp_coerce
                              expression (plugins.ml[401,14742+22]..[401,14742+26])
                                Pexp_ident "unit" (plugins.ml[401,14742+22]..[401,14742+26])
                              None
                              core_type (plugins.ml[401,14742+30]..[401,14742+33])
                                Ptyp_constr "exp" (plugins.ml[401,14742+30]..[401,14742+33])
                                []
                          <case>
                            pattern (plugins.ml[402,14777+15]..[402,14777+16])
                              Ppat_any
                            expression (plugins.ml[403,14797+17]..[411,15139+28])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (plugins.ml[403,14797+21]..[403,14797+24])
                                    Ppat_var "lst" (plugins.ml[403,14797+21]..[403,14797+24])
                                  expression (plugins.ml[404,14824+19]..[410,15062+73])
                                    Pexp_apply
                                    expression (plugins.ml[404,14824+26]..[404,14824+28])
                                      Pexp_ident "|>" (plugins.ml[404,14824+26]..[404,14824+28])
                                    [
                                      <label> ""
                                        expression (plugins.ml[404,14824+19]..[404,14824+25])
                                          Pexp_ident "params" (plugins.ml[404,14824+19]..[404,14824+25])
                                      <label> ""
                                        expression (plugins.ml[405,14853+21]..[410,15062+73])
                                          Pexp_apply
                                          expression (plugins.ml[405,14853+22]..[405,14853+30])
                                            Pexp_ident "List.map" (plugins.ml[405,14853+22]..[405,14853+30])
                                          [
                                            <label> ""
                                              expression (plugins.ml[406,14884+24]..[410,15062+72])
                                                Pexp_function
                                                [
                                                  <case>
                                                    pattern (plugins.ml[407,14918+27]..[407,14918+45])
                                                      Ppat_constraint
                                                      pattern (plugins.ml[407,14918+28]..[407,14918+29])
                                                        Ppat_var "x" (plugins.ml[407,14918+28]..[407,14918+29])
                                                      core_type (plugins.ml[407,14918+32]..[407,14918+44])
                                                        Ptyp_constr "Ctyp.ty_info" (plugins.ml[407,14918+32]..[407,14918+44])
                                                        []
                                                    expression (plugins.ml[408,14967+29]..[410,15062+71]) ghost
                                                      Pexp_coerce
                                                      expression (plugins.ml[408,14967+30]..[410,15062+57])
                                                        Pexp_variant "App"
                                                        Some
                                                          expression (plugins.ml[409,15002+32]..[410,15062+57])
                                                            Pexp_tuple
                                                            [
                                                              expression (plugins.ml[409,15002+33]..[409,15002+58]) ghost
                                                                Pexp_coerce
                                                                expression (plugins.ml[409,15002+34]..[409,15002+44])
                                                                  Pexp_field
                                                                  expression (plugins.ml[409,15002+34]..[409,15002+35])
                                                                    Pexp_ident "x" (plugins.ml[409,15002+34]..[409,15002+35])
                                                                  "name_exp" (plugins.ml[409,15002+36]..[409,15002+44])
                                                                None
                                                                core_type (plugins.ml[409,15002+48]..[409,15002+57])
                                                                  Ptyp_constr "Astfn.exp" (plugins.ml[409,15002+48]..[409,15002+57])
                                                                  []
                                                              expression (plugins.ml[410,15062+34]..[410,15062+56]) ghost
                                                                Pexp_coerce
                                                                expression (plugins.ml[410,15062+35]..[410,15062+42])
                                                                  Pexp_field
                                                                  expression (plugins.ml[410,15062+35]..[410,15062+36])
                                                                    Pexp_ident "x" (plugins.ml[410,15062+35]..[410,15062+36])
                                                                  "id_ep" (plugins.ml[410,15062+37]..[410,15062+42])
                                                                None
                                                                core_type (plugins.ml[410,15062+46]..[410,15062+55])
                                                                  Ptyp_constr "Astfn.exp" (plugins.ml[410,15062+46]..[410,15062+55])
                                                                  []
                                                            ]
                                                      None
                                                      core_type (plugins.ml[410,15062+61]..[410,15062+70])
                                                        Ptyp_constr "Astfn.exp" (plugins.ml[410,15062+61]..[410,15062+70])
                                                        []
                                                ]
                                          ]
                                    ]
                              ]
                              expression (plugins.ml[411,15139+17]..[411,15139+28])
                                Pexp_apply
                                expression (plugins.ml[411,15139+17]..[411,15139+24])
                                  Pexp_ident "seq_sem" (plugins.ml[411,15139+17]..[411,15139+24])
                                [
                                  <label> ""
                                    expression (plugins.ml[411,15139+25]..[411,15139+28])
                                      Pexp_ident "lst" (plugins.ml[411,15139+25]..[411,15139+28])
                                ]
                        ]
                      core_type (plugins.ml[411,15139+32]..[411,15139+35])
                        Ptyp_constr "exp" (plugins.ml[411,15139+32]..[411,15139+35])
                        []
                ]
          ]
    ]
  structure_item (plugins.ml[412,15177+0]..[412,15177+74])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[412,15177+4]..[412,15177+17])
          Ppat_var "mk_tuple_iter" (plugins.ml[412,15177+4]..[412,15177+17])
        expression (plugins.ml[412,15177+20]..[412,15177+74])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[412,15177+31]..[412,15177+37])
                Ppat_var "params" (plugins.ml[412,15177+31]..[412,15177+37])
              expression (plugins.ml[412,15177+41]..[412,15177+74]) ghost
                Pexp_constraint
                expression (plugins.ml[412,15177+42]..[412,15177+67])
                  Pexp_apply
                  expression (plugins.ml[412,15177+42]..[412,15177+57])
                    Pexp_ident "mk_variant_iter" (plugins.ml[412,15177+42]..[412,15177+57])
                  [
                    <label> ""
                      expression (plugins.ml[412,15177+58]..[412,15177+60])
                        Pexp_constant Const_string("",None)
                    <label> ""
                      expression (plugins.ml[412,15177+61]..[412,15177+67])
                        Pexp_ident "params" (plugins.ml[412,15177+61]..[412,15177+67])
                  ]
                core_type (plugins.ml[412,15177+70]..[412,15177+73])
                  Ptyp_constr "exp" (plugins.ml[412,15177+70]..[412,15177+73])
                  []
          ]
    ]
  structure_item (plugins.ml[413,15252+0]..[423,15540+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[413,15252+4]..[413,15252+18])
          Ppat_var "mk_record_iter" (plugins.ml[413,15252+4]..[413,15252+18])
        expression (plugins.ml[414,15273+2]..[423,15540+18])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[415,15284+4]..[415,15284+8])
                Ppat_var "cols" (plugins.ml[415,15284+4]..[415,15284+8])
              expression (plugins.ml[416,15296+6]..[423,15540+18])
                Pexp_apply
                expression (plugins.ml[423,15540+8]..[423,15540+10])
                  Pexp_ident "|>" (plugins.ml[423,15540+8]..[423,15540+10])
                [
                  <label> ""
                    expression (plugins.ml[416,15296+6]..[422,15470+69])
                      Pexp_apply
                      expression (plugins.ml[416,15296+12]..[416,15296+14])
                        Pexp_ident "|>" (plugins.ml[416,15296+12]..[416,15296+14])
                      [
                        <label> ""
                          expression (plugins.ml[416,15296+7]..[416,15296+11])
                            Pexp_ident "cols" (plugins.ml[416,15296+7]..[416,15296+11])
                        <label> ""
                          expression (plugins.ml[417,15311+9]..[422,15470+68])
                            Pexp_apply
                            expression (plugins.ml[417,15311+10]..[417,15311+18])
                              Pexp_ident "List.map" (plugins.ml[417,15311+10]..[417,15311+18])
                            [
                              <label> ""
                                expression (plugins.ml[418,15330+12]..[422,15470+67])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (plugins.ml[419,15352+15]..[419,15352+36])
                                        Ppat_constraint
                                        pattern (plugins.ml[419,15352+16]..[419,15352+17])
                                          Ppat_var "x" (plugins.ml[419,15352+16]..[419,15352+17])
                                        core_type (plugins.ml[419,15352+20]..[419,15352+35])
                                          Ptyp_constr "Ctyp.record_col" (plugins.ml[419,15352+20]..[419,15352+35])
                                          []
                                      expression (plugins.ml[420,15392+17]..[422,15470+66]) ghost
                                        Pexp_coerce
                                        expression (plugins.ml[420,15392+18]..[422,15470+52])
                                          Pexp_variant "App"
                                          Some
                                            expression (plugins.ml[421,15415+20]..[422,15470+52])
                                              Pexp_tuple
                                              [
                                                expression (plugins.ml[421,15415+21]..[421,15415+53]) ghost
                                                  Pexp_coerce
                                                  expression (plugins.ml[421,15415+22]..[421,15415+39])
                                                    Pexp_field
                                                    expression (plugins.ml[421,15415+22]..[421,15415+30])
                                                      Pexp_field
                                                      expression (plugins.ml[421,15415+23]..[421,15415+24])
                                                        Pexp_ident "x" (plugins.ml[421,15415+23]..[421,15415+24])
                                                      "info" (plugins.ml[421,15415+25]..[421,15415+29])
                                                    "name_exp" (plugins.ml[421,15415+31]..[421,15415+39])
                                                  None
                                                  core_type (plugins.ml[421,15415+43]..[421,15415+52])
                                                    Ptyp_constr "Astfn.exp" (plugins.ml[421,15415+43]..[421,15415+52])
                                                    []
                                                expression (plugins.ml[422,15470+22]..[422,15470+51]) ghost
                                                  Pexp_coerce
                                                  expression (plugins.ml[422,15470+23]..[422,15470+37])
                                                    Pexp_field
                                                    expression (plugins.ml[422,15470+23]..[422,15470+31])
                                                      Pexp_field
                                                      expression (plugins.ml[422,15470+24]..[422,15470+25])
                                                        Pexp_ident "x" (plugins.ml[422,15470+24]..[422,15470+25])
                                                      "info" (plugins.ml[422,15470+26]..[422,15470+30])
                                                    "id_ep" (plugins.ml[422,15470+32]..[422,15470+37])
                                                  None
                                                  core_type (plugins.ml[422,15470+41]..[422,15470+50])
                                                    Ptyp_constr "Astfn.exp" (plugins.ml[422,15470+41]..[422,15470+50])
                                                    []
                                              ]
                                        None
                                        core_type (plugins.ml[422,15470+56]..[422,15470+65])
                                          Ptyp_constr "Astfn.exp" (plugins.ml[422,15470+56]..[422,15470+65])
                                          []
                                  ]
                            ]
                      ]
                  <label> ""
                    expression (plugins.ml[423,15540+11]..[423,15540+18])
                      Pexp_ident "seq_sem" (plugins.ml[423,15540+11]..[423,15540+18])
                ]
          ]
    ]
  structure_item (plugins.ml[424,15559+0]..[427,15698+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[424,15559+4]..[424,15559+12])
          Ppat_var "gen_iter" (plugins.ml[424,15559+4]..[424,15559+12])
        expression (plugins.ml[425,15574+2]..[427,15698+34])
          Pexp_apply
          expression (plugins.ml[425,15574+2]..[425,15574+12])
            Pexp_ident "gen_object" (plugins.ml[425,15574+2]..[425,15574+12])
          [
            <label> "kind"
              expression (plugins.ml[425,15574+19]..[425,15574+23])
                Pexp_construct "Iter" (plugins.ml[425,15574+19]..[425,15574+23])
                None
            <label> "base"
              expression (plugins.ml[425,15574+30]..[425,15574+40])
                Pexp_constant Const_string("iterbase",None)
            <label> "class_name"
              expression (plugins.ml[425,15574+53]..[425,15574+59])
                Pexp_constant Const_string("iter",None)
            <label> "names"
              expression (plugins.ml[425,15574+67]..[425,15574+69])
                Pexp_construct "[]" (plugins.ml[425,15574+67]..[425,15574+69])
                None
            <label> "mk_tuple"
              expression (plugins.ml[426,15644+14]..[426,15644+27])
                Pexp_ident "mk_tuple_iter" (plugins.ml[426,15644+14]..[426,15644+27])
            <label> "mk_record"
              expression (plugins.ml[426,15644+39]..[426,15644+53])
                Pexp_ident "mk_record_iter" (plugins.ml[426,15644+39]..[426,15644+53])
            <label> "mk_variant"
              expression (plugins.ml[427,15698+16]..[427,15698+31])
                Pexp_ident "mk_variant_iter" (plugins.ml[427,15698+16]..[427,15698+31])
            <label> ""
              expression (plugins.ml[427,15698+32]..[427,15698+34])
                Pexp_construct "()" (plugins.ml[427,15698+32]..[427,15698+34])
                None
          ]
    ]
  structure_item (plugins.ml[428,15733+0]..[428,15733+55])
    Pstr_eval
    expression (plugins.ml[428,15733+8]..[428,15733+55])
      Pexp_apply
      expression (plugins.ml[428,15733+35]..[428,15733+37])
        Pexp_ident "|>" (plugins.ml[428,15733+35]..[428,15733+37])
      [
        <label> ""
          expression (plugins.ml[428,15733+8]..[428,15733+34])
            Pexp_tuple
            [
              expression (plugins.ml[428,15733+9]..[428,15733+16])
                Pexp_constant Const_string("OIter",None)
              expression (plugins.ml[428,15733+18]..[428,15733+33])
                Pexp_apply
                expression (plugins.ml[428,15733+19]..[428,15733+23])
                  Pexp_ident "some" (plugins.ml[428,15733+19]..[428,15733+23])
                [
                  <label> ""
                    expression (plugins.ml[428,15733+24]..[428,15733+32])
                      Pexp_ident "gen_iter" (plugins.ml[428,15733+24]..[428,15733+32])
                ]
            ]
        <label> ""
          expression (plugins.ml[428,15733+38]..[428,15733+55])
            Pexp_ident "Typehook.register" (plugins.ml[428,15733+38]..[428,15733+55])
      ]
  structure_item (plugins.ml[429,15789+0]..[498,18722+67])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[429,15789+4]..[429,15789+12])
          Ppat_var "generate" (plugins.ml[429,15789+4]..[429,15789+12])
        expression (plugins.ml[430,15804+2]..[498,18722+67])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[431,15815+4]..[431,15815+19])
                Ppat_constraint
                pattern (plugins.ml[431,15815+5]..[431,15815+10])
                  Ppat_var "mtyps" (plugins.ml[431,15815+5]..[431,15815+10])
                core_type (plugins.ml[431,15815+13]..[431,15815+18])
                  Ptyp_constr "mtyps" (plugins.ml[431,15815+13]..[431,15815+18])
                  []
              expression (plugins.ml[432,15838+6]..[498,18722+67]) ghost
                Pexp_constraint
                expression (plugins.ml[432,15838+7]..[498,18722+59])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (plugins.ml[432,15838+11]..[432,15838+14])
                        Ppat_var "tbl" (plugins.ml[432,15838+11]..[432,15838+14])
                      expression (plugins.ml[432,15838+17]..[432,15838+34])
                        Pexp_apply
                        expression (plugins.ml[432,15838+17]..[432,15838+31])
                          Pexp_ident "Hashtbl.create" (plugins.ml[432,15838+17]..[432,15838+31])
                        [
                          <label> ""
                            expression (plugins.ml[432,15838+32]..[432,15838+34])
                              Pexp_constant Const_int 30
                        ]
                  ]
                  expression (plugins.ml[433,15876+7]..[498,18722+59])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (plugins.ml[433,15876+11]..[433,15876+14])
                          Ppat_var "aux" (plugins.ml[433,15876+11]..[433,15876+14])
                        expression (plugins.ml[434,15893+9]..[454,16750+76])
                          Pexp_function
                          [
                            <case>
                              pattern (plugins.ml[435,15911+11]..[435,15911+17])
                                Ppat_tuple
                                [
                                  pattern (plugins.ml[435,15911+12]..[435,15911+13])
                                    Ppat_any
                                  pattern (plugins.ml[435,15911+14]..[435,15911+16])
                                    Ppat_var "ty" (plugins.ml[435,15911+14]..[435,15911+16])
                                ]
                              expression (plugins.ml[436,15932+13]..[454,16750+76])
                                Pexp_match
                                expression (plugins.ml[436,15932+20]..[436,15932+35]) ghost
                                  Pexp_constraint
                                  expression (plugins.ml[436,15932+21]..[436,15932+23])
                                    Pexp_ident "ty" (plugins.ml[436,15932+21]..[436,15932+23])
                                  core_type (plugins.ml[436,15932+26]..[436,15932+34])
                                    Ptyp_constr "typedecl" (plugins.ml[436,15932+26]..[436,15932+34])
                                    []
                                [
                                  <case>
                                    pattern (plugins.ml[437,15973+16]..[437,15973+50])
                                      Ppat_variant "TyDcl"
                                      Some
                                        pattern (plugins.ml[437,15973+23]..[437,15973+50])
                                          Ppat_tuple
                                          [
                                            pattern (plugins.ml[437,15973+24]..[437,15973+25])
                                              Ppat_any
                                            pattern (plugins.ml[437,15973+26]..[437,15973+27])
                                              Ppat_any
                                            pattern (plugins.ml[437,15973+28]..[437,15973+47])
                                              Ppat_variant "TyEq"
                                              Some
                                                pattern (plugins.ml[437,15973+34]..[437,15973+47])
                                                  Ppat_tuple
                                                  [
                                                    pattern (plugins.ml[437,15973+35]..[437,15973+36])
                                                      Ppat_any
                                                    pattern (plugins.ml[437,15973+37]..[437,15973+46])
                                                      Ppat_variant "PolyEq"
                                                      Some
                                                        pattern (plugins.ml[437,15973+45]..[437,15973+46])
                                                          Ppat_var "t" (plugins.ml[437,15973+45]..[437,15973+46])
                                                  ]
                                            pattern (plugins.ml[437,15973+48]..[437,15973+49])
                                              Ppat_any
                                          ]
                                    expression (plugins.ml[438,16027+18]..[453,16709+40])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (plugins.ml[438,16027+22]..[438,16027+30])
                                            Ppat_var "branches" (plugins.ml[438,16027+22]..[438,16027+30])
                                          expression (plugins.ml[438,16027+33]..[438,16027+52])
                                            Pexp_apply
                                            expression (plugins.ml[438,16027+33]..[438,16027+50])
                                              Pexp_ident "Ctyp.view_variant" (plugins.ml[438,16027+33]..[438,16027+50])
                                            [
                                              <label> ""
                                                expression (plugins.ml[438,16027+51]..[438,16027+52])
                                                  Pexp_ident "t" (plugins.ml[438,16027+51]..[438,16027+52])
                                            ]
                                      ]
                                      expression (plugins.ml[439,16083+18]..[453,16709+40])
                                        Pexp_apply
                                        expression (plugins.ml[439,16083+18]..[439,16083+27])
                                          Pexp_ident "List.iter" (plugins.ml[439,16083+18]..[439,16083+27])
                                        [
                                          <label> ""
                                            expression (plugins.ml[440,16111+20]..[453,16709+31])
                                              Pexp_function
                                              [
                                                <case>
                                                  pattern (plugins.ml[441,16141+23]..[441,16141+38])
                                                    Ppat_variant "variant"
                                                    Some
                                                      pattern (plugins.ml[441,16141+32]..[441,16141+38])
                                                        Ppat_tuple
                                                        [
                                                          pattern (plugins.ml[441,16141+33]..[441,16141+34])
                                                            Ppat_var "s" (plugins.ml[441,16141+33]..[441,16141+34])
                                                          pattern (plugins.ml[441,16141+35]..[441,16141+37])
                                                            Ppat_var "ls" (plugins.ml[441,16141+35]..[441,16141+37])
                                                        ]
                                                  expression (plugins.ml[442,16183+25]..[452,16679+29])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (plugins.ml[442,16183+29]..[442,16183+34])
                                                          Ppat_var "arity" (plugins.ml[442,16183+29]..[442,16183+34])
                                                        expression (plugins.ml[442,16183+37]..[442,16183+51])
                                                          Pexp_apply
                                                          expression (plugins.ml[442,16183+37]..[442,16183+48])
                                                            Pexp_ident "List.length" (plugins.ml[442,16183+37]..[442,16183+48])
                                                          [
                                                            <label> ""
                                                              expression (plugins.ml[442,16183+49]..[442,16183+51])
                                                                Pexp_ident "ls" (plugins.ml[442,16183+49]..[442,16183+51])
                                                          ]
                                                    ]
                                                    expression (plugins.ml[443,16238+25]..[452,16679+29])
                                                      Pexp_apply
                                                      expression (plugins.ml[443,16238+25]..[451,16603+75])
                                                        Pexp_try
                                                        expression (plugins.ml[444,16269+29]..[448,16450+77])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (plugins.ml[444,16269+33]..[444,16269+34])
                                                                Ppat_var "v" (plugins.ml[444,16269+33]..[444,16269+34])
                                                              expression (plugins.ml[444,16269+37]..[444,16269+55])
                                                                Pexp_apply
                                                                expression (plugins.ml[444,16269+37]..[444,16269+49])
                                                                  Pexp_ident "Hashtbl.find" (plugins.ml[444,16269+37]..[444,16269+49])
                                                                [
                                                                  <label> ""
                                                                    expression (plugins.ml[444,16269+50]..[444,16269+53])
                                                                      Pexp_ident "tbl" (plugins.ml[444,16269+50]..[444,16269+53])
                                                                  <label> ""
                                                                    expression (plugins.ml[444,16269+54]..[444,16269+55])
                                                                      Pexp_ident "s" (plugins.ml[444,16269+54]..[444,16269+55])
                                                                ]
                                                          ]
                                                          expression (plugins.ml[445,16328+29]..[448,16450+77])
                                                            Pexp_function
                                                            [
                                                              <case>
                                                                pattern (plugins.ml[446,16366+31]..[446,16366+33])
                                                                  Ppat_construct "()" (plugins.ml[446,16366+31]..[446,16366+33])
                                                                  None
                                                                expression (plugins.ml[447,16403+33]..[448,16450+77])
                                                                  Pexp_ifthenelse
                                                                  expression (plugins.ml[447,16403+36]..[447,16403+46])
                                                                    Pexp_apply
                                                                    expression (plugins.ml[447,16403+38]..[447,16403+40])
                                                                      Pexp_ident "<>" (plugins.ml[447,16403+38]..[447,16403+40])
                                                                    [
                                                                      <label> ""
expression (plugins.ml[447,16403+36]..[447,16403+37])
  Pexp_ident "v" (plugins.ml[447,16403+36]..[447,16403+37])
                                                                      <label> ""
expression (plugins.ml[447,16403+41]..[447,16403+46])
  Pexp_ident "arity" (plugins.ml[447,16403+41]..[447,16403+46])
                                                                    ]
                                                                  expression (plugins.ml[448,16450+38]..[448,16450+77])
                                                                    Pexp_apply
                                                                    expression (plugins.ml[448,16450+38]..[448,16450+47])
                                                                      Pexp_ident "failwithf" (plugins.ml[448,16450+38]..[448,16450+47])
                                                                    [
                                                                      <label> ""
expression (plugins.ml[448,16450+48]..[448,16450+75])
  Pexp_constant Const_string("%s has diffireent arities",None)
                                                                      <label> ""
expression (plugins.ml[448,16450+76]..[448,16450+77])
  Pexp_ident "s" (plugins.ml[448,16450+76]..[448,16450+77])
                                                                    ]
                                                                  None
                                                            ]
                                                        [
                                                          <case>
                                                            pattern (plugins.ml[450,16560+29]..[450,16560+38])
                                                              Ppat_construct "Not_found" (plugins.ml[450,16560+29]..[450,16560+38])
                                                              None
                                                            expression (plugins.ml[451,16603+31]..[451,16603+73])
                                                              Pexp_function
                                                              [
                                                                <case>
                                                                  pattern (plugins.ml[451,16603+43]..[451,16603+45])
                                                                    Ppat_construct "()" (plugins.ml[451,16603+43]..[451,16603+45])
                                                                    None
                                                                  expression (plugins.ml[451,16603+49]..[451,16603+72])
                                                                    Pexp_apply
                                                                    expression (plugins.ml[451,16603+49]..[451,16603+60])
                                                                      Pexp_ident "Hashtbl.add" (plugins.ml[451,16603+49]..[451,16603+60])
                                                                    [
                                                                      <label> ""
expression (plugins.ml[451,16603+61]..[451,16603+64])
  Pexp_ident "tbl" (plugins.ml[451,16603+61]..[451,16603+64])
                                                                      <label> ""
expression (plugins.ml[451,16603+65]..[451,16603+66])
  Pexp_ident "s" (plugins.ml[451,16603+65]..[451,16603+66])
                                                                      <label> ""
expression (plugins.ml[451,16603+67]..[451,16603+72])
  Pexp_ident "arity" (plugins.ml[451,16603+67]..[451,16603+72])
                                                                    ]
                                                              ]
                                                        ]
                                                      [
                                                        <label> ""
                                                          expression (plugins.ml[452,16679+27]..[452,16679+29])
                                                            Pexp_construct "()" (plugins.ml[452,16679+27]..[452,16679+29])
                                                            None
                                                      ]
                                                <case>
                                                  pattern (plugins.ml[453,16709+23]..[453,16709+24])
                                                    Ppat_any
                                                  expression (plugins.ml[453,16709+28]..[453,16709+30])
                                                    Pexp_construct "()" (plugins.ml[453,16709+28]..[453,16709+30])
                                                    None
                                              ]
                                          <label> ""
                                            expression (plugins.ml[453,16709+32]..[453,16709+40])
                                              Pexp_ident "branches" (plugins.ml[453,16709+32]..[453,16709+40])
                                        ]
                                  <case>
                                    pattern (plugins.ml[454,16750+16]..[454,16750+17])
                                      Ppat_any
                                    expression (plugins.ml[454,16750+21]..[454,16750+75])
                                      Pexp_apply
                                      expression (plugins.ml[454,16750+21]..[454,16750+30])
                                        Pexp_ident "failwithf" (plugins.ml[454,16750+21]..[454,16750+30])
                                      [
                                        <label> ""
                                          expression (plugins.ml[454,16750+31]..[454,16750+50])
                                            Pexp_constant Const_string("generate mtyps %s",None)
                                        <label> ""
                                          expression (plugins.ml[454,16750+51]..[454,16750+75])
                                            Pexp_apply
                                            expression (plugins.ml[454,16750+52]..[454,16750+71])
                                              Pexp_ident "ObjsN.dump_typedecl" (plugins.ml[454,16750+52]..[454,16750+71])
                                            [
                                              <label> ""
                                                expression (plugins.ml[454,16750+72]..[454,16750+74])
                                                  Pexp_ident "ty" (plugins.ml[454,16750+72]..[454,16750+74])
                                            ]
                                      ]
                                ]
                          ]
                    ]
                    expression (plugins.ml[455,16830+7]..[498,18722+59])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (plugins.ml[455,16830+11]..[455,16830+12])
                            Ppat_any
                          expression (plugins.ml[456,16845+9]..[458,16942+16])
                            Pexp_apply
                            expression (plugins.ml[456,16845+9]..[456,16845+18])
                              Pexp_ident "List.iter" (plugins.ml[456,16845+9]..[456,16845+18])
                            [
                              <label> ""
                                expression (plugins.ml[457,16864+11]..[457,16864+77])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (plugins.ml[457,16864+23]..[457,16864+34])
                                        Ppat_variant "Mutual"
                                        Some
                                          pattern (plugins.ml[457,16864+31]..[457,16864+34])
                                            Ppat_var "tys" (plugins.ml[457,16864+31]..[457,16864+34])
                                      expression (plugins.ml[457,16864+38]..[457,16864+55])
                                        Pexp_apply
                                        expression (plugins.ml[457,16864+38]..[457,16864+47])
                                          Pexp_ident "List.iter" (plugins.ml[457,16864+38]..[457,16864+47])
                                        [
                                          <label> ""
                                            expression (plugins.ml[457,16864+48]..[457,16864+51])
                                              Pexp_ident "aux" (plugins.ml[457,16864+48]..[457,16864+51])
                                          <label> ""
                                            expression (plugins.ml[457,16864+52]..[457,16864+55])
                                              Pexp_ident "tys" (plugins.ml[457,16864+52]..[457,16864+55])
                                        ]
                                    <case>
                                      pattern (plugins.ml[457,16864+58]..[457,16864+67])
                                        Ppat_variant "Single"
                                        Some
                                          pattern (plugins.ml[457,16864+66]..[457,16864+67])
                                            Ppat_var "t" (plugins.ml[457,16864+66]..[457,16864+67])
                                      expression (plugins.ml[457,16864+71]..[457,16864+76])
                                        Pexp_apply
                                        expression (plugins.ml[457,16864+71]..[457,16864+74])
                                          Pexp_ident "aux" (plugins.ml[457,16864+71]..[457,16864+74])
                                        [
                                          <label> ""
                                            expression (plugins.ml[457,16864+75]..[457,16864+76])
                                              Pexp_ident "t" (plugins.ml[457,16864+75]..[457,16864+76])
                                        ]
                                  ]
                              <label> ""
                                expression (plugins.ml[458,16942+11]..[458,16942+16])
                                  Pexp_ident "mtyps" (plugins.ml[458,16942+11]..[458,16942+16])
                            ]
                      ]
                      expression (plugins.ml[459,16962+7]..[498,18722+59])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (plugins.ml[459,16962+11]..[459,16962+15])
                              Ppat_var "case" (plugins.ml[459,16962+11]..[459,16962+15])
                            expression (plugins.ml[460,16980+9]..[493,18496+75])
                              Pexp_apply
                              expression (plugins.ml[460,16980+9]..[460,16980+21])
                                Pexp_ident "Hashtbl.fold" (plugins.ml[460,16980+9]..[460,16980+21])
                              [
                                <label> ""
                                  expression (plugins.ml[461,17002+11]..[493,18496+66])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (plugins.ml[462,17023+14]..[462,17023+17])
                                          Ppat_var "key" (plugins.ml[462,17023+14]..[462,17023+17])
                                        expression (plugins.ml[463,17044+16]..[493,18496+65])
                                          Pexp_function
                                          [
                                            <case>
                                              pattern (plugins.ml[464,17070+19]..[464,17070+24])
                                                Ppat_var "arity" (plugins.ml[464,17070+19]..[464,17070+24])
                                              expression (plugins.ml[465,17098+21]..[493,18496+64])
                                                Pexp_function
                                                [
                                                  <case>
                                                    pattern (plugins.ml[466,17129+24]..[466,17129+27])
                                                      Ppat_var "acc" (plugins.ml[466,17129+24]..[466,17129+27])
                                                    expression (plugins.ml[467,17160+26]..[493,18496+63])
                                                      Pexp_ifthenelse
                                                      expression (plugins.ml[467,17160+29]..[467,17160+38])
                                                        Pexp_apply
                                                        expression (plugins.ml[467,17160+35]..[467,17160+36])
                                                          Pexp_ident "=" (plugins.ml[467,17160+35]..[467,17160+36])
                                                        [
                                                          <label> ""
                                                            expression (plugins.ml[467,17160+29]..[467,17160+34])
                                                              Pexp_ident "arity" (plugins.ml[467,17160+29]..[467,17160+34])
                                                          <label> ""
                                                            expression (plugins.ml[467,17160+37]..[467,17160+38])
                                                              Pexp_constant Const_int 1
                                                        ]
                                                      expression (plugins.ml[469,17230+28]..[476,17581+71])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (plugins.ml[469,17230+32]..[469,17230+36])
                                                              Ppat_var "case" (plugins.ml[469,17230+32]..[469,17230+36])
                                                            expression (plugins.ml[470,17269+30]..[472,17376+64]) ghost
                                                              Pexp_coerce
                                                              expression (plugins.ml[470,17269+31]..[472,17376+49])
                                                                Pexp_variant "Case"
                                                                Some
                                                                  expression (plugins.ml[471,17306+33]..[472,17376+49])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (plugins.ml[471,17306+34]..[471,17306+68])
Pexp_variant "App"
Some
  expression (plugins.ml[471,17306+40]..[471,17306+67])
    Pexp_tuple
    [
      expression (plugins.ml[471,17306+41]..[471,17306+51])
        Pexp_variant "Vrn"
        Some
          expression (plugins.ml[471,17306+47]..[471,17306+50])
            Pexp_ident "key" (plugins.ml[471,17306+47]..[471,17306+50])
      expression (plugins.ml[471,17306+53]..[471,17306+66])
        Pexp_variant "Lid"
        Some
          expression (plugins.ml[471,17306+59]..[471,17306+65])
            Pexp_constant Const_string("_loc",None)
    ]
                                                                      expression (plugins.ml[472,17376+35]..[472,17376+48])
Pexp_variant "Lid"
Some
  expression (plugins.ml[472,17376+41]..[472,17376+47])
    Pexp_constant Const_string("_loc",None)
                                                                    ]
                                                              None
                                                              core_type (plugins.ml[472,17376+53]..[472,17376+63])
                                                                Ptyp_constr "Astfn.case" (plugins.ml[472,17376+53]..[472,17376+63])
                                                                []
                                                        ]
                                                        expression (plugins.ml[473,17444+28]..[476,17581+71])
                                                          Pexp_match
                                                          expression (plugins.ml[473,17444+35]..[473,17444+38])
                                                            Pexp_ident "acc" (plugins.ml[473,17444+35]..[473,17444+38])
                                                          [
                                                            <case>
                                                              pattern (plugins.ml[474,17488+31]..[474,17488+35])
                                                                Ppat_construct "None" (plugins.ml[474,17488+31]..[474,17488+35])
                                                                None
                                                              expression (plugins.ml[474,17488+40]..[474,17488+49])
                                                                Pexp_construct "Some" (plugins.ml[474,17488+40]..[474,17488+44])
                                                                Some
                                                                  expression (plugins.ml[474,17488+45]..[474,17488+49])
                                                                    Pexp_ident "case" (plugins.ml[474,17488+45]..[474,17488+49])
                                                            <case>
                                                              pattern (plugins.ml[475,17538+31]..[475,17538+39])
                                                                Ppat_construct "Some" (plugins.ml[475,17538+31]..[475,17538+35])
                                                                Some
                                                                  pattern (plugins.ml[475,17538+36]..[475,17538+39])
                                                                    Ppat_var "acc" (plugins.ml[475,17538+36]..[475,17538+39])
                                                              expression (plugins.ml[476,17581+33]..[476,17581+70])
                                                                Pexp_construct "Some" (plugins.ml[476,17581+33]..[476,17581+37])
                                                                Some
                                                                  expression (plugins.ml[476,17581+38]..[476,17581+70]) ghost
                                                                    Pexp_coerce
                                                                    expression (plugins.ml[476,17581+39]..[476,17581+55])
                                                                      Pexp_variant "Bar"
                                                                      Some
expression (plugins.ml[476,17581+44]..[476,17581+55])
  Pexp_tuple
  [
    expression (plugins.ml[476,17581+45]..[476,17581+49])
      Pexp_ident "case" (plugins.ml[476,17581+45]..[476,17581+49])
    expression (plugins.ml[476,17581+51]..[476,17581+54])
      Pexp_ident "acc" (plugins.ml[476,17581+51]..[476,17581+54])
  ]
                                                                    None
                                                                    core_type (plugins.ml[476,17581+59]..[476,17581+69])
                                                                      Ptyp_constr "Astfn.case" (plugins.ml[476,17581+59]..[476,17581+69])
                                                                      []
                                                          ]
                                                      Some
                                                        expression (plugins.ml[478,17684+28]..[493,18496+63])
                                                          Pexp_ifthenelse
                                                          expression (plugins.ml[478,17684+31]..[478,17684+40])
                                                            Pexp_apply
                                                            expression (plugins.ml[478,17684+37]..[478,17684+38])
                                                              Pexp_ident ">" (plugins.ml[478,17684+37]..[478,17684+38])
                                                            [
                                                              <label> ""
                                                                expression (plugins.ml[478,17684+31]..[478,17684+36])
                                                                  Pexp_ident "arity" (plugins.ml[478,17684+31]..[478,17684+36])
                                                              <label> ""
                                                                expression (plugins.ml[478,17684+39]..[478,17684+40])
                                                                  Pexp_constant Const_int 1
                                                            ]
                                                          expression (plugins.ml[480,17758+30]..[492,18422+73])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (plugins.ml[480,17758+35]..[480,17758+39])
                                                                  Ppat_var "pats" (plugins.ml[480,17758+35]..[480,17758+39])
                                                                expression (plugins.ml[480,17758+42]..[482,17887+64])
                                                                  Pexp_construct "::" (plugins.ml[480,17758+69]..[480,17758+71])
                                                                  Some
                                                                    expression (plugins.ml[480,17758+42]..[482,17887+64]) ghost
                                                                      Pexp_tuple
                                                                      [
expression (plugins.ml[480,17758+42]..[480,17758+68]) ghost
  Pexp_coerce
  expression (plugins.ml[480,17758+43]..[480,17758+54])
    Pexp_variant "Lid"
    Some
      expression (plugins.ml[480,17758+48]..[480,17758+54])
        Pexp_constant Const_string("_loc",None)
  None
  core_type (plugins.ml[480,17758+58]..[480,17758+67])
    Ptyp_constr "Astfn.pat" (plugins.ml[480,17758+58]..[480,17758+67])
    []
expression (plugins.ml[481,17830+33]..[482,17887+64])
  Pexp_apply
  expression (plugins.ml[481,17830+34]..[481,17830+44])
    Pexp_ident "Listf.init" (plugins.ml[481,17830+34]..[481,17830+44])
  [
    <label> ""
      expression (plugins.ml[481,17830+45]..[481,17830+56])
        Pexp_apply
        expression (plugins.ml[481,17830+52]..[481,17830+53])
          Pexp_ident "-" (plugins.ml[481,17830+52]..[481,17830+53])
        [
          <label> ""
            expression (plugins.ml[481,17830+46]..[481,17830+51])
              Pexp_ident "arity" (plugins.ml[481,17830+46]..[481,17830+51])
          <label> ""
            expression (plugins.ml[481,17830+54]..[481,17830+55])
              Pexp_constant Const_int 1
        ]
    <label> ""
      expression (plugins.ml[482,17887+36]..[482,17887+63])
        Pexp_apply
        expression (plugins.ml[482,17887+37]..[482,17887+42])
          Pexp_ident "const" (plugins.ml[482,17887+37]..[482,17887+42])
        [
          <label> ""
            expression (plugins.ml[482,17887+43]..[482,17887+62]) ghost
              Pexp_coerce
              expression (plugins.ml[482,17887+44]..[482,17887+48])
                Pexp_variant "Any"
                None
              None
              core_type (plugins.ml[482,17887+52]..[482,17887+61])
                Ptyp_constr "Astfn.pat" (plugins.ml[482,17887+52]..[482,17887+61])
                []
        ]
  ]
                                                                      ]
                                                            ]
                                                            expression (plugins.ml[483,17955+31]..[492,18422+72])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (plugins.ml[483,17955+35]..[483,17955+39])
                                                                    Ppat_var "case" (plugins.ml[483,17955+35]..[483,17955+39])
                                                                  expression (plugins.ml[484,17997+33]..[488,18208+67]) ghost
                                                                    Pexp_coerce
                                                                    expression (plugins.ml[484,17997+34]..[488,18208+52])
                                                                      Pexp_variant "Case"
                                                                      Some
expression (plugins.ml[485,18037+36]..[488,18208+52])
  Pexp_tuple
  [
    expression (plugins.ml[485,18037+37]..[487,18133+73])
      Pexp_variant "App"
      Some
        expression (plugins.ml[486,18080+40]..[487,18133+72])
          Pexp_tuple
          [
            expression (plugins.ml[486,18080+41]..[486,18080+51])
              Pexp_variant "Vrn"
              Some
                expression (plugins.ml[486,18080+47]..[486,18080+50])
                  Pexp_ident "key" (plugins.ml[486,18080+47]..[486,18080+50])
            expression (plugins.ml[487,18133+42]..[487,18133+71]) ghost
              Pexp_coerce
              expression (plugins.ml[487,18133+43]..[487,18133+57])
                Pexp_apply
                expression (plugins.ml[487,18133+43]..[487,18133+52])
                  Pexp_ident "tuple_com" (plugins.ml[487,18133+43]..[487,18133+52])
                [
                  <label> ""
                    expression (plugins.ml[487,18133+53]..[487,18133+57])
                      Pexp_ident "pats" (plugins.ml[487,18133+53]..[487,18133+57])
                ]
              None
              core_type (plugins.ml[487,18133+61]..[487,18133+70])
                Ptyp_constr "Astfn.pat" (plugins.ml[487,18133+61]..[487,18133+70])
                []
          ]
    expression (plugins.ml[488,18208+38]..[488,18208+51])
      Pexp_variant "Lid"
      Some
        expression (plugins.ml[488,18208+44]..[488,18208+50])
          Pexp_constant Const_string("_loc",None)
  ]
                                                                    None
                                                                    core_type (plugins.ml[488,18208+56]..[488,18208+66])
                                                                      Ptyp_constr "Astfn.case" (plugins.ml[488,18208+56]..[488,18208+66])
                                                                      []
                                                              ]
                                                              expression (plugins.ml[489,18279+31]..[492,18422+72])
                                                                Pexp_match
                                                                expression (plugins.ml[489,18279+37]..[489,18279+40])
                                                                  Pexp_ident "acc" (plugins.ml[489,18279+37]..[489,18279+40])
                                                                [
                                                                  <case>
                                                                    pattern (plugins.ml[490,18325+33]..[490,18325+37])
                                                                      Ppat_construct "None" (plugins.ml[490,18325+33]..[490,18325+37])
                                                                      None
                                                                    expression (plugins.ml[490,18325+42]..[490,18325+51])
                                                                      Pexp_construct "Some" (plugins.ml[490,18325+42]..[490,18325+46])
                                                                      Some
expression (plugins.ml[490,18325+47]..[490,18325+51])
  Pexp_ident "case" (plugins.ml[490,18325+47]..[490,18325+51])
                                                                  <case>
                                                                    pattern (plugins.ml[491,18377+33]..[491,18377+41])
                                                                      Ppat_construct "Some" (plugins.ml[491,18377+33]..[491,18377+37])
                                                                      Some
pattern (plugins.ml[491,18377+38]..[491,18377+41])
  Ppat_var "acc" (plugins.ml[491,18377+38]..[491,18377+41])
                                                                    expression (plugins.ml[492,18422+35]..[492,18422+72])
                                                                      Pexp_construct "Some" (plugins.ml[492,18422+35]..[492,18422+39])
                                                                      Some
expression (plugins.ml[492,18422+40]..[492,18422+72]) ghost
  Pexp_coerce
  expression (plugins.ml[492,18422+41]..[492,18422+57])
    Pexp_variant "Bar"
    Some
      expression (plugins.ml[492,18422+46]..[492,18422+57])
        Pexp_tuple
        [
          expression (plugins.ml[492,18422+47]..[492,18422+51])
            Pexp_ident "case" (plugins.ml[492,18422+47]..[492,18422+51])
          expression (plugins.ml[492,18422+53]..[492,18422+56])
            Pexp_ident "acc" (plugins.ml[492,18422+53]..[492,18422+56])
        ]
  None
  core_type (plugins.ml[492,18422+61]..[492,18422+71])
    Ptyp_constr "Astfn.case" (plugins.ml[492,18422+61]..[492,18422+71])
    []
                                                                ]
                                                          Some
                                                            expression (plugins.ml[493,18496+33]..[493,18496+63])
                                                              Pexp_apply
                                                              expression (plugins.ml[493,18496+33]..[493,18496+42])
                                                                Pexp_ident "failwithf" (plugins.ml[493,18496+33]..[493,18496+42])
                                                              [
                                                                <label> ""
                                                                  expression (plugins.ml[493,18496+43]..[493,18496+59])
                                                                    Pexp_constant Const_string("arity=0 key:%s",None)
                                                                <label> ""
                                                                  expression (plugins.ml[493,18496+60]..[493,18496+63])
                                                                    Pexp_ident "key" (plugins.ml[493,18496+60]..[493,18496+63])
                                                              ]
                                                ]
                                          ]
                                    ]
                                <label> ""
                                  expression (plugins.ml[493,18496+67]..[493,18496+70])
                                    Pexp_ident "tbl" (plugins.ml[493,18496+67]..[493,18496+70])
                                <label> ""
                                  expression (plugins.ml[493,18496+71]..[493,18496+75])
                                    Pexp_construct "None" (plugins.ml[493,18496+71]..[493,18496+75])
                                    None
                              ]
                        ]
                        expression (plugins.ml[494,18575+7]..[498,18722+59])
                          Pexp_match
                          expression (plugins.ml[494,18575+14]..[494,18575+18])
                            Pexp_ident "case" (plugins.ml[494,18575+14]..[494,18575+18])
                          [
                            <case>
                              pattern (plugins.ml[495,18599+10]..[495,18599+19])
                                Ppat_construct "Some" (plugins.ml[495,18599+10]..[495,18599+14])
                                Some
                                  pattern (plugins.ml[495,18599+15]..[495,18599+19])
                                    Ppat_var "case" (plugins.ml[495,18599+15]..[495,18599+19])
                              expression (plugins.ml[496,18622+12]..[497,18698+23]) ghost
                                Pexp_coerce
                                expression (plugins.ml[496,18622+13]..[496,18622+71])
                                  Pexp_variant "Value"
                                  Some
                                    expression (plugins.ml[496,18622+20]..[496,18622+71])
                                      Pexp_tuple
                                      [
                                        expression (plugins.ml[496,18622+21]..[496,18622+30])
                                          Pexp_variant "Negative"
                                          None
                                        expression (plugins.ml[496,18622+32]..[496,18622+70])
                                          Pexp_variant "Bind"
                                          Some
                                            expression (plugins.ml[496,18622+39]..[496,18622+69])
                                              Pexp_tuple
                                              [
                                                expression (plugins.ml[496,18622+40]..[496,18622+55])
                                                  Pexp_variant "Lid"
                                                  Some
                                                    expression (plugins.ml[496,18622+46]..[496,18622+54])
                                                      Pexp_constant Const_string("loc_of",None)
                                                expression (plugins.ml[496,18622+57]..[496,18622+68])
                                                  Pexp_variant "Fun"
                                                  Some
                                                    expression (plugins.ml[496,18622+63]..[496,18622+67])
                                                      Pexp_ident "case" (plugins.ml[496,18622+63]..[496,18622+67])
                                              ]
                                      ]
                                None
                                core_type (plugins.ml[497,18698+12]..[497,18698+22])
                                  Ptyp_constr "Astfn.stru" (plugins.ml[497,18698+12]..[497,18698+22])
                                  []
                            <case>
                              pattern (plugins.ml[498,18722+10]..[498,18722+14])
                                Ppat_construct "None" (plugins.ml[498,18722+10]..[498,18722+14])
                                None
                              expression (plugins.ml[498,18722+19]..[498,18722+58])
                                Pexp_apply
                                expression (plugins.ml[498,18722+19]..[498,18722+28])
                                  Pexp_ident "failwithf" (plugins.ml[498,18722+19]..[498,18722+28])
                                [
                                  <label> ""
                                    expression (plugins.ml[498,18722+29]..[498,18722+58])
                                      Pexp_constant Const_string("PluginsN.generate null case",None)
                                ]
                          ]
                core_type (plugins.ml[498,18722+62]..[498,18722+66])
                  Ptyp_constr "stru" (plugins.ml[498,18722+62]..[498,18722+66])
                  []
          ]
    ]
  structure_item (plugins.ml[499,18790+0]..[501,18869+31])
    Pstr_eval
    expression (plugins.ml[500,18798+2]..[501,18869+31])
      Pexp_apply
      expression (plugins.ml[500,18798+2]..[500,18798+19])
        Pexp_ident "Typehook.register" (plugins.ml[500,18798+2]..[500,18798+19])
      [
        <label> "filter"
          expression (plugins.ml[500,18798+28]..[500,18798+70])
            Pexp_function
            [
              <case>
                pattern (plugins.ml[500,18798+40]..[500,18798+41])
                  Ppat_var "s" (plugins.ml[500,18798+40]..[500,18798+41])
                expression (plugins.ml[500,18798+45]..[500,18798+69])
                  Pexp_apply
                  expression (plugins.ml[500,18798+45]..[500,18798+48])
                    Pexp_ident "not" (plugins.ml[500,18798+45]..[500,18798+48])
                  [
                    <label> ""
                      expression (plugins.ml[500,18798+49]..[500,18798+69])
                        Pexp_apply
                        expression (plugins.ml[500,18798+50]..[500,18798+58])
                          Pexp_ident "List.mem" (plugins.ml[500,18798+50]..[500,18798+58])
                        [
                          <label> ""
                            expression (plugins.ml[500,18798+59]..[500,18798+60])
                              Pexp_ident "s" (plugins.ml[500,18798+59]..[500,18798+60])
                          <label> ""
                            expression (plugins.ml[500,18798+61]..[500,18798+68])
                              Pexp_construct "::" (plugins.ml[500,18798+62]..[500,18798+68]) ghost
                              Some
                                expression (plugins.ml[500,18798+62]..[500,18798+68]) ghost
                                  Pexp_tuple
                                  [
                                    expression (plugins.ml[500,18798+62]..[500,18798+67])
                                      Pexp_constant Const_string("loc",None)
                                    expression (plugins.ml[500,18798+67]..[500,18798+68]) ghost
                                      Pexp_construct "[]" (plugins.ml[500,18798+67]..[500,18798+68]) ghost
                                      None
                                  ]
                        ]
                  ]
            ]
        <label> ""
          expression (plugins.ml[501,18869+4]..[501,18869+31])
            Pexp_tuple
            [
              expression (plugins.ml[501,18869+5]..[501,18869+13])
                Pexp_constant Const_string("GenLoc",None)
              expression (plugins.ml[501,18869+15]..[501,18869+30])
                Pexp_apply
                expression (plugins.ml[501,18869+16]..[501,18869+20])
                  Pexp_ident "some" (plugins.ml[501,18869+16]..[501,18869+20])
                [
                  <label> ""
                    expression (plugins.ml[501,18869+21]..[501,18869+29])
                      Pexp_ident "generate" (plugins.ml[501,18869+21]..[501,18869+29])
                ]
            ]
      ]
  structure_item (plugins.ml[502,18901+0]..[571,21401+71])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[502,18901+4]..[502,18901+12])
          Ppat_var "generate" (plugins.ml[502,18901+4]..[502,18901+12])
        expression (plugins.ml[503,18916+2]..[571,21401+71])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[504,18927+4]..[504,18927+19])
                Ppat_constraint
                pattern (plugins.ml[504,18927+5]..[504,18927+10])
                  Ppat_var "mtyps" (plugins.ml[504,18927+5]..[504,18927+10])
                core_type (plugins.ml[504,18927+13]..[504,18927+18])
                  Ptyp_constr "mtyps" (plugins.ml[504,18927+13]..[504,18927+18])
                  []
              expression (plugins.ml[505,18950+6]..[571,21401+71]) ghost
                Pexp_constraint
                expression (plugins.ml[505,18950+7]..[571,21401+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (plugins.ml[505,18950+11]..[505,18950+14])
                        Ppat_var "tys" (plugins.ml[505,18950+11]..[505,18950+14])
                      expression (plugins.ml[505,18950+14]..[512,19183+47]) ghost
                        Pexp_constraint
                        expression (plugins.ml[506,18980+9]..[512,19183+47])
                          Pexp_apply
                          expression (plugins.ml[506,18980+9]..[506,18980+25])
                            Pexp_ident "Listf.concat_map" (plugins.ml[506,18980+9]..[506,18980+25])
                          [
                            <label> ""
                              expression (plugins.ml[507,19006+11]..[512,19183+41])
                                Pexp_function
                                [
                                  <case>
                                    pattern (plugins.ml[508,19027+14]..[508,19027+15])
                                      Ppat_var "x" (plugins.ml[508,19027+14]..[508,19027+15])
                                    expression (plugins.ml[509,19046+16]..[512,19183+40])
                                      Pexp_match
                                      expression (plugins.ml[509,19046+23]..[509,19046+24])
                                        Pexp_ident "x" (plugins.ml[509,19046+23]..[509,19046+24])
                                      [
                                        <case>
                                          pattern (plugins.ml[510,19076+19]..[510,19076+30])
                                            Ppat_variant "Mutual"
                                            Some
                                              pattern (plugins.ml[510,19076+27]..[510,19076+30])
                                                Ppat_var "tys" (plugins.ml[510,19076+27]..[510,19076+30])
                                          expression (plugins.ml[511,19110+21]..[511,19110+72])
                                            Pexp_apply
                                            expression (plugins.ml[511,19110+21]..[511,19110+29])
                                              Pexp_ident "List.map" (plugins.ml[511,19110+21]..[511,19110+29])
                                            [
                                              <label> ""
                                                expression (plugins.ml[511,19110+30]..[511,19110+68])
                                                  Pexp_function
                                                  [
                                                    <case>
                                                      pattern (plugins.ml[511,19110+42]..[511,19110+62])
                                                        Ppat_constraint
                                                        pattern (plugins.ml[511,19110+43]..[511,19110+48])
                                                          Ppat_tuple
                                                          [
                                                            pattern (plugins.ml[511,19110+44]..[511,19110+45])
                                                              Ppat_var "x" (plugins.ml[511,19110+44]..[511,19110+45])
                                                            pattern (plugins.ml[511,19110+46]..[511,19110+47])
                                                              Ppat_any
                                                          ]
                                                        core_type (plugins.ml[511,19110+51]..[511,19110+61])
                                                          Ptyp_constr "named_type" (plugins.ml[511,19110+51]..[511,19110+61])
                                                          []
                                                      expression (plugins.ml[511,19110+66]..[511,19110+67])
                                                        Pexp_ident "x" (plugins.ml[511,19110+66]..[511,19110+67])
                                                  ]
                                              <label> ""
                                                expression (plugins.ml[511,19110+69]..[511,19110+72])
                                                  Pexp_ident "tys" (plugins.ml[511,19110+69]..[511,19110+72])
                                            ]
                                        <case>
                                          pattern (plugins.ml[512,19183+19]..[512,19183+32])
                                            Ppat_variant "Single"
                                            Some
                                              pattern (plugins.ml[512,19183+27]..[512,19183+32])
                                                Ppat_tuple
                                                [
                                                  pattern (plugins.ml[512,19183+28]..[512,19183+29])
                                                    Ppat_var "x" (plugins.ml[512,19183+28]..[512,19183+29])
                                                  pattern (plugins.ml[512,19183+30]..[512,19183+31])
                                                    Ppat_any
                                                ]
                                          expression (plugins.ml[512,19183+36]..[512,19183+39])
                                            Pexp_construct "::" (plugins.ml[512,19183+37]..[512,19183+39]) ghost
                                            Some
                                              expression (plugins.ml[512,19183+37]..[512,19183+39]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (plugins.ml[512,19183+37]..[512,19183+38])
                                                    Pexp_ident "x" (plugins.ml[512,19183+37]..[512,19183+38])
                                                  expression (plugins.ml[512,19183+38]..[512,19183+39]) ghost
                                                    Pexp_construct "[]" (plugins.ml[512,19183+38]..[512,19183+39]) ghost
                                                    None
                                                ]
                                      ]
                                ]
                            <label> ""
                              expression (plugins.ml[512,19183+42]..[512,19183+47])
                                Pexp_ident "mtyps" (plugins.ml[512,19183+42]..[512,19183+47])
                          ]
                        core_type (plugins.ml[505,18950+16]..[505,18950+27])
                          Ptyp_constr "list" (plugins.ml[505,18950+23]..[505,18950+27])
                          [
                            core_type (plugins.ml[505,18950+16]..[505,18950+22])
                              Ptyp_constr "string" (plugins.ml[505,18950+16]..[505,18950+22])
                              []
                          ]
                  ]
                  expression (plugins.ml[513,19234+7]..[571,21401+63])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (plugins.ml[513,19234+11]..[513,19234+19])
                          Ppat_var "typedecl" (plugins.ml[513,19234+11]..[513,19234+19])
                        expression (plugins.ml[514,19256+9]..[521,19567+22])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (plugins.ml[514,19256+13]..[514,19256+14])
                                Ppat_var "x" (plugins.ml[514,19256+13]..[514,19256+14])
                              expression (plugins.ml[515,19273+11]..[516,19351+27])
                                Pexp_apply
                                expression (plugins.ml[516,19351+13]..[516,19351+15])
                                  Pexp_ident "|>" (plugins.ml[516,19351+13]..[516,19351+15])
                                [
                                  <label> ""
                                    expression (plugins.ml[515,19273+11]..[515,19273+77])
                                      Pexp_apply
                                      expression (plugins.ml[515,19273+16]..[515,19273+18])
                                        Pexp_ident "|>" (plugins.ml[515,19273+16]..[515,19273+18])
                                      [
                                        <label> ""
                                          expression (plugins.ml[515,19273+12]..[515,19273+15])
                                            Pexp_ident "tys" (plugins.ml[515,19273+12]..[515,19273+15])
                                        <label> ""
                                          expression (plugins.ml[515,19273+19]..[515,19273+76])
                                            Pexp_apply
                                            expression (plugins.ml[515,19273+20]..[515,19273+28])
                                              Pexp_ident "List.map" (plugins.ml[515,19273+20]..[515,19273+28])
                                            [
                                              <label> ""
                                                expression (plugins.ml[515,19273+29]..[515,19273+75])
                                                  Pexp_function
                                                  [
                                                    <case>
                                                      pattern (plugins.ml[515,19273+41]..[515,19273+42])
                                                        Ppat_var "x" (plugins.ml[515,19273+41]..[515,19273+42])
                                                      expression (plugins.ml[515,19273+46]..[515,19273+74])
                                                        Pexp_apply
                                                        expression (plugins.ml[515,19273+50]..[515,19273+52])
                                                          Pexp_ident "@@" (plugins.ml[515,19273+50]..[515,19273+52])
                                                        [
                                                          <label> ""
                                                            expression (plugins.ml[515,19273+46]..[515,19273+49])
                                                              Pexp_ident "uid" (plugins.ml[515,19273+46]..[515,19273+49])
                                                          <label> ""
                                                            expression (plugins.ml[515,19273+53]..[515,19273+74])
                                                              Pexp_apply
                                                              expression (plugins.ml[515,19273+54]..[515,19273+71])
                                                                Pexp_ident "String.capitalize" (plugins.ml[515,19273+54]..[515,19273+71])
                                                              [
                                                                <label> ""
                                                                  expression (plugins.ml[515,19273+72]..[515,19273+73])
                                                                    Pexp_ident "x" (plugins.ml[515,19273+72]..[515,19273+73])
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                      ]
                                  <label> ""
                                    expression (plugins.ml[516,19351+16]..[516,19351+27])
                                      Pexp_ident "bar_of_list" (plugins.ml[516,19351+16]..[516,19351+27])
                                ]
                          ]
                          expression (plugins.ml[517,19382+9]..[521,19567+22]) ghost
                            Pexp_coerce
                            expression (plugins.ml[517,19382+10]..[520,19486+76])
                              Pexp_variant "Type"
                              Some
                                expression (plugins.ml[518,19398+12]..[520,19486+76])
                                  Pexp_variant "TyDcl"
                                  Some
                                    expression (plugins.ml[519,19418+15]..[520,19486+75])
                                      Pexp_tuple
                                      [
                                        expression (plugins.ml[519,19418+16]..[519,19418+26])
                                          Pexp_variant "Lid"
                                          Some
                                            expression (plugins.ml[519,19418+22]..[519,19418+25])
                                              Pexp_constant Const_string("t",None)
                                        expression (plugins.ml[519,19418+28]..[519,19418+66])
                                          Pexp_variant "Some"
                                          Some
                                            expression (plugins.ml[519,19418+35]..[519,19418+65])
                                              Pexp_variant "Quote"
                                              Some
                                                expression (plugins.ml[519,19418+43]..[519,19418+64])
                                                  Pexp_tuple
                                                  [
                                                    expression (plugins.ml[519,19418+44]..[519,19418+51])
                                                      Pexp_variant "Normal"
                                                      None
                                                    expression (plugins.ml[519,19418+53]..[519,19418+63])
                                                      Pexp_variant "Lid"
                                                      Some
                                                        expression (plugins.ml[519,19418+59]..[519,19418+62])
                                                          Pexp_constant Const_string("a",None)
                                                  ]
                                        expression (plugins.ml[520,19486+17]..[520,19486+67])
                                          Pexp_variant "TyRepr"
                                          Some
                                            expression (plugins.ml[520,19486+26]..[520,19486+66])
                                              Pexp_tuple
                                              [
                                                expression (plugins.ml[520,19486+27]..[520,19486+36])
                                                  Pexp_variant "Negative"
                                                  None
                                                expression (plugins.ml[520,19486+38]..[520,19486+65])
                                                  Pexp_variant "Sum"
                                                  Some
                                                    expression (plugins.ml[520,19486+44]..[520,19486+64]) ghost
                                                      Pexp_coerce
                                                      expression (plugins.ml[520,19486+45]..[520,19486+46])
                                                        Pexp_ident "x" (plugins.ml[520,19486+45]..[520,19486+46])
                                                      None
                                                      core_type (plugins.ml[520,19486+50]..[520,19486+63])
                                                        Ptyp_constr "Astfn.or_ctyp" (plugins.ml[520,19486+50]..[520,19486+63])
                                                        []
                                              ]
                                        expression (plugins.ml[520,19486+69]..[520,19486+74])
                                          Pexp_variant "None"
                                          None
                                      ]
                            None
                            core_type (plugins.ml[521,19567+11]..[521,19567+21])
                              Ptyp_constr "Astfn.stru" (plugins.ml[521,19567+11]..[521,19567+21])
                              []
                    ]
                    expression (plugins.ml[522,19593+7]..[571,21401+63])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (plugins.ml[522,19593+11]..[522,19593+20])
                            Ppat_var "to_string" (plugins.ml[522,19593+11]..[522,19593+20])
                          expression (plugins.ml[523,19616+9]..[531,19933+22])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (plugins.ml[523,19616+13]..[523,19616+17])
                                  Ppat_var "case" (plugins.ml[523,19616+13]..[523,19616+17])
                                expression (plugins.ml[524,19636+11]..[529,19784+69])
                                  Pexp_apply
                                  expression (plugins.ml[524,19636+11]..[524,19636+22])
                                    Pexp_ident "bar_of_list" (plugins.ml[524,19636+11]..[524,19636+22])
                                  [
                                    <label> ""
                                      expression (plugins.ml[525,19659+13]..[529,19784+69])
                                        Pexp_apply
                                        expression (plugins.ml[525,19659+14]..[525,19659+22])
                                          Pexp_ident "List.map" (plugins.ml[525,19659+14]..[525,19659+22])
                                        [
                                          <label> ""
                                            expression (plugins.ml[526,19682+16]..[529,19784+64])
                                              Pexp_function
                                              [
                                                <case>
                                                  pattern (plugins.ml[527,19708+19]..[527,19708+20])
                                                    Ppat_var "x" (plugins.ml[527,19708+19]..[527,19708+20])
                                                  expression (plugins.ml[528,19732+21]..[529,19784+63])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (plugins.ml[528,19732+25]..[528,19732+26])
                                                          Ppat_var "u" (plugins.ml[528,19732+25]..[528,19732+26])
                                                        expression (plugins.ml[528,19732+29]..[528,19732+48])
                                                          Pexp_apply
                                                          expression (plugins.ml[528,19732+29]..[528,19732+46])
                                                            Pexp_ident "String.capitalize" (plugins.ml[528,19732+29]..[528,19732+46])
                                                          [
                                                            <label> ""
                                                              expression (plugins.ml[528,19732+47]..[528,19732+48])
                                                                Pexp_ident "x" (plugins.ml[528,19732+47]..[528,19732+48])
                                                          ]
                                                    ]
                                                    expression (plugins.ml[529,19784+21]..[529,19784+63]) ghost
                                                      Pexp_coerce
                                                      expression (plugins.ml[529,19784+22]..[529,19784+48])
                                                        Pexp_variant "Case"
                                                        Some
                                                          expression (plugins.ml[529,19784+28]..[529,19784+48])
                                                            Pexp_tuple
                                                            [
                                                              expression (plugins.ml[529,19784+29]..[529,19784+37])
                                                                Pexp_variant "Uid"
                                                                Some
                                                                  expression (plugins.ml[529,19784+35]..[529,19784+36])
                                                                    Pexp_ident "u" (plugins.ml[529,19784+35]..[529,19784+36])
                                                              expression (plugins.ml[529,19784+39]..[529,19784+47])
                                                                Pexp_variant "Str"
                                                                Some
                                                                  expression (plugins.ml[529,19784+45]..[529,19784+46])
                                                                    Pexp_ident "x" (plugins.ml[529,19784+45]..[529,19784+46])
                                                            ]
                                                      None
                                                      core_type (plugins.ml[529,19784+52]..[529,19784+62])
                                                        Ptyp_constr "Astfn.case" (plugins.ml[529,19784+52]..[529,19784+62])
                                                        []
                                              ]
                                          <label> ""
                                            expression (plugins.ml[529,19784+65]..[529,19784+68])
                                              Pexp_ident "tys" (plugins.ml[529,19784+65]..[529,19784+68])
                                        ]
                                  ]
                            ]
                            expression (plugins.ml[530,19857+9]..[531,19933+22]) ghost
                              Pexp_coerce
                              expression (plugins.ml[530,19857+10]..[530,19857+71])
                                Pexp_variant "Value"
                                Some
                                  expression (plugins.ml[530,19857+17]..[530,19857+71])
                                    Pexp_tuple
                                    [
                                      expression (plugins.ml[530,19857+18]..[530,19857+27])
                                        Pexp_variant "Negative"
                                        None
                                      expression (plugins.ml[530,19857+29]..[530,19857+70])
                                        Pexp_variant "Bind"
                                        Some
                                          expression (plugins.ml[530,19857+36]..[530,19857+69])
                                            Pexp_tuple
                                            [
                                              expression (plugins.ml[530,19857+37]..[530,19857+55])
                                                Pexp_variant "Lid"
                                                Some
                                                  expression (plugins.ml[530,19857+43]..[530,19857+54])
                                                    Pexp_constant Const_string("to_string",None)
                                              expression (plugins.ml[530,19857+57]..[530,19857+68])
                                                Pexp_variant "Fun"
                                                Some
                                                  expression (plugins.ml[530,19857+63]..[530,19857+67])
                                                    Pexp_ident "case" (plugins.ml[530,19857+63]..[530,19857+67])
                                            ]
                                    ]
                              None
                              core_type (plugins.ml[531,19933+11]..[531,19933+21])
                                Ptyp_constr "Astfn.stru" (plugins.ml[531,19933+11]..[531,19933+21])
                                []
                      ]
                      expression (plugins.ml[532,19959+7]..[571,21401+63])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (plugins.ml[532,19959+11]..[532,19959+20])
                              Ppat_var "of_string" (plugins.ml[532,19959+11]..[532,19959+20])
                            expression (plugins.ml[533,19982+9]..[558,20978+22])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (plugins.ml[533,19982+13]..[533,19982+17])
                                    Ppat_var "case" (plugins.ml[533,19982+13]..[533,19982+17])
                                  expression (plugins.ml[534,20002+11]..[540,20218+27])
                                    Pexp_apply
                                    expression (plugins.ml[540,20218+13]..[540,20218+15])
                                      Pexp_ident "|>" (plugins.ml[540,20218+13]..[540,20218+15])
                                    [
                                      <label> ""
                                        expression (plugins.ml[534,20002+11]..[539,20150+67])
                                          Pexp_apply
                                          expression (plugins.ml[534,20002+16]..[534,20002+18])
                                            Pexp_ident "|>" (plugins.ml[534,20002+16]..[534,20002+18])
                                          [
                                            <label> ""
                                              expression (plugins.ml[534,20002+12]..[534,20002+15])
                                                Pexp_ident "tys" (plugins.ml[534,20002+12]..[534,20002+15])
                                            <label> ""
                                              expression (plugins.ml[535,20021+14]..[539,20150+66])
                                                Pexp_apply
                                                expression (plugins.ml[535,20021+15]..[535,20021+23])
                                                  Pexp_ident "List.map" (plugins.ml[535,20021+15]..[535,20021+23])
                                                [
                                                  <label> ""
                                                    expression (plugins.ml[536,20045+17]..[539,20150+65])
                                                      Pexp_function
                                                      [
                                                        <case>
                                                          pattern (plugins.ml[537,20072+20]..[537,20072+21])
                                                            Ppat_var "x" (plugins.ml[537,20072+20]..[537,20072+21])
                                                          expression (plugins.ml[538,20097+22]..[539,20150+64])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (plugins.ml[538,20097+26]..[538,20097+27])
                                                                  Ppat_var "u" (plugins.ml[538,20097+26]..[538,20097+27])
                                                                expression (plugins.ml[538,20097+30]..[538,20097+49])
                                                                  Pexp_apply
                                                                  expression (plugins.ml[538,20097+30]..[538,20097+47])
                                                                    Pexp_ident "String.capitalize" (plugins.ml[538,20097+30]..[538,20097+47])
                                                                  [
                                                                    <label> ""
                                                                      expression (plugins.ml[538,20097+48]..[538,20097+49])
Pexp_ident "x" (plugins.ml[538,20097+48]..[538,20097+49])
                                                                  ]
                                                            ]
                                                            expression (plugins.ml[539,20150+22]..[539,20150+64]) ghost
                                                              Pexp_coerce
                                                              expression (plugins.ml[539,20150+23]..[539,20150+49])
                                                                Pexp_variant "Case"
                                                                Some
                                                                  expression (plugins.ml[539,20150+29]..[539,20150+49])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (plugins.ml[539,20150+30]..[539,20150+38])
Pexp_variant "Str"
Some
  expression (plugins.ml[539,20150+36]..[539,20150+37])
    Pexp_ident "x" (plugins.ml[539,20150+36]..[539,20150+37])
                                                                      expression (plugins.ml[539,20150+40]..[539,20150+48])
Pexp_variant "Uid"
Some
  expression (plugins.ml[539,20150+46]..[539,20150+47])
    Pexp_ident "u" (plugins.ml[539,20150+46]..[539,20150+47])
                                                                    ]
                                                              None
                                                              core_type (plugins.ml[539,20150+53]..[539,20150+63])
                                                                Ptyp_constr "Astfn.case" (plugins.ml[539,20150+53]..[539,20150+63])
                                                                []
                                                      ]
                                                ]
                                          ]
                                      <label> ""
                                        expression (plugins.ml[540,20218+16]..[540,20218+27])
                                          Pexp_ident "bar_of_list" (plugins.ml[540,20218+16]..[540,20218+27])
                                    ]
                              ]
                              expression (plugins.ml[541,20249+9]..[558,20978+22]) ghost
                                Pexp_coerce
                                expression (plugins.ml[541,20249+10]..[557,20895+78])
                                  Pexp_variant "Value"
                                  Some
                                    expression (plugins.ml[542,20266+12]..[557,20895+78])
                                      Pexp_tuple
                                      [
                                        expression (plugins.ml[542,20266+13]..[542,20266+22])
                                          Pexp_variant "Negative"
                                          None
                                        expression (plugins.ml[543,20290+14]..[557,20895+77])
                                          Pexp_variant "Bind"
                                          Some
                                            expression (plugins.ml[544,20311+17]..[557,20895+76])
                                              Pexp_tuple
                                              [
                                                expression (plugins.ml[544,20311+18]..[544,20311+36])
                                                  Pexp_variant "Lid"
                                                  Some
                                                    expression (plugins.ml[544,20311+24]..[544,20311+35])
                                                      Pexp_constant Const_string("of_string",None)
                                                expression (plugins.ml[545,20349+19]..[557,20895+75])
                                                  Pexp_variant "Fun"
                                                  Some
                                                    expression (plugins.ml[546,20374+22]..[557,20895+74])
                                                      Pexp_variant "Bar"
                                                      Some
                                                        expression (plugins.ml[547,20402+25]..[557,20895+73])
                                                          Pexp_tuple
                                                          [
                                                            expression (plugins.ml[547,20402+26]..[547,20402+30])
                                                              Pexp_ident "case" (plugins.ml[547,20402+26]..[547,20402+30])
                                                            expression (plugins.ml[548,20434+27]..[557,20895+72])
                                                              Pexp_variant "Case"
                                                              Some
                                                                expression (plugins.ml[549,20468+30]..[557,20895+71])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (plugins.ml[549,20468+31]..[549,20468+35])
                                                                      Pexp_variant "Any"
                                                                      None
                                                                    expression (plugins.ml[550,20505+32]..[557,20895+70])
                                                                      Pexp_variant "App"
                                                                      Some
expression (plugins.ml[551,20543+35]..[557,20895+69])
  Pexp_tuple
  [
    expression (plugins.ml[551,20543+36]..[551,20543+53])
      Pexp_variant "Lid"
      Some
        expression (plugins.ml[551,20543+42]..[551,20543+52])
          Pexp_constant Const_string("failwith",None)
    expression (plugins.ml[552,20598+37]..[557,20895+68])
      Pexp_variant "App"
      Some
        expression (plugins.ml[553,20641+40]..[557,20895+67])
          Pexp_tuple
          [
            expression (plugins.ml[553,20641+41]..[554,20688+78])
              Pexp_variant "App"
              Some
                expression (plugins.ml[554,20688+44]..[554,20688+77])
                  Pexp_tuple
                  [
                    expression (plugins.ml[554,20688+45]..[554,20688+55])
                      Pexp_variant "Lid"
                      Some
                        expression (plugins.ml[554,20688+51]..[554,20688+54])
                          Pexp_constant Const_string("^",None)
                    expression (plugins.ml[554,20688+57]..[554,20688+76])
                      Pexp_variant "Lid"
                      Some
                        expression (plugins.ml[554,20688+63]..[554,20688+75])
                          Pexp_constant Const_string("__MODULE__",None)
                  ]
            expression (plugins.ml[555,20768+42]..[557,20895+66])
              Pexp_variant "App"
              Some
                expression (plugins.ml[556,20816+45]..[557,20895+65])
                  Pexp_tuple
                  [
                    expression (plugins.ml[556,20816+46]..[556,20816+77])
                      Pexp_variant "App"
                      Some
                        expression (plugins.ml[556,20816+52]..[556,20816+76])
                          Pexp_tuple
                          [
                            expression (plugins.ml[556,20816+53]..[556,20816+63])
                              Pexp_variant "Lid"
                              Some
                                expression (plugins.ml[556,20816+59]..[556,20816+62])
                                  Pexp_constant Const_string("^",None)
                            expression (plugins.ml[556,20816+65]..[556,20816+75])
                              Pexp_variant "Str"
                              Some
                                expression (plugins.ml[556,20816+71]..[556,20816+74])
                                  Pexp_constant Const_string(".",None)
                          ]
                    expression (plugins.ml[557,20895+47]..[557,20895+64])
                      Pexp_variant "Lid"
                      Some
                        expression (plugins.ml[557,20895+53]..[557,20895+63])
                          Pexp_constant Const_string("__BIND__",None)
                  ]
          ]
  ]
                                                                  ]
                                                          ]
                                              ]
                                      ]
                                None
                                core_type (plugins.ml[558,20978+11]..[558,20978+21])
                                  Ptyp_constr "Astfn.stru" (plugins.ml[558,20978+11]..[558,20978+21])
                                  []
                        ]
                        expression (plugins.ml[559,21004+7]..[571,21401+63])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (plugins.ml[559,21004+11]..[559,21004+15])
                                Ppat_var "tags" (plugins.ml[559,21004+11]..[559,21004+15])
                              expression (plugins.ml[560,21022+9]..[570,21363+34])
                                Pexp_apply
                                expression (plugins.ml[560,21022+9]..[560,21022+17])
                                  Pexp_ident "List.map" (plugins.ml[560,21022+9]..[560,21022+17])
                                [
                                  <label> ""
                                    expression (plugins.ml[561,21040+11]..[570,21363+30])
                                      Pexp_function
                                      [
                                        <case>
                                          pattern (plugins.ml[562,21061+14]..[562,21061+15])
                                            Ppat_var "x" (plugins.ml[562,21061+14]..[562,21061+15])
                                          expression (plugins.ml[563,21080+16]..[570,21363+29])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (plugins.ml[563,21080+20]..[563,21080+21])
                                                  Ppat_var "u" (plugins.ml[563,21080+20]..[563,21080+21])
                                                expression (plugins.ml[563,21080+24]..[563,21080+43])
                                                  Pexp_apply
                                                  expression (plugins.ml[563,21080+24]..[563,21080+41])
                                                    Pexp_ident "String.capitalize" (plugins.ml[563,21080+24]..[563,21080+41])
                                                  [
                                                    <label> ""
                                                      expression (plugins.ml[563,21080+42]..[563,21080+43])
                                                        Pexp_ident "x" (plugins.ml[563,21080+42]..[563,21080+43])
                                                  ]
                                            ]
                                            expression (plugins.ml[564,21127+16]..[570,21363+29]) ghost
                                              Pexp_coerce
                                              expression (plugins.ml[564,21127+17]..[569,21284+74])
                                                Pexp_variant "Value"
                                                Some
                                                  expression (plugins.ml[565,21151+19]..[569,21284+74])
                                                    Pexp_tuple
                                                    [
                                                      expression (plugins.ml[565,21151+20]..[565,21151+29])
                                                        Pexp_variant "Negative"
                                                        None
                                                      expression (plugins.ml[566,21182+21]..[569,21284+73])
                                                        Pexp_variant "Bind"
                                                        Some
                                                          expression (plugins.ml[567,21210+24]..[569,21284+72])
                                                            Pexp_tuple
                                                            [
                                                              expression (plugins.ml[567,21210+25]..[567,21210+33])
                                                                Pexp_variant "Lid"
                                                                Some
                                                                  expression (plugins.ml[567,21210+31]..[567,21210+32])
                                                                    Pexp_ident "x" (plugins.ml[567,21210+31]..[567,21210+32])
                                                              expression (plugins.ml[568,21245+26]..[569,21284+71])
                                                                Pexp_variant "Constraint"
                                                                Some
                                                                  expression (plugins.ml[569,21284+29]..[569,21284+70])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (plugins.ml[569,21284+30]..[569,21284+38])
Pexp_variant "Uid"
Some
  expression (plugins.ml[569,21284+36]..[569,21284+37])
    Pexp_ident "u" (plugins.ml[569,21284+36]..[569,21284+37])
                                                                      expression (plugins.ml[569,21284+40]..[569,21284+69])
Pexp_variant "App"
Some
  expression (plugins.ml[569,21284+46]..[569,21284+68])
    Pexp_tuple
    [
      expression (plugins.ml[569,21284+47]..[569,21284+57])
        Pexp_variant "Lid"
        Some
          expression (plugins.ml[569,21284+53]..[569,21284+56])
            Pexp_constant Const_string("t",None)
      expression (plugins.ml[569,21284+59]..[569,21284+67])
        Pexp_variant "Lid"
        Some
          expression (plugins.ml[569,21284+65]..[569,21284+66])
            Pexp_ident "x" (plugins.ml[569,21284+65]..[569,21284+66])
    ]
                                                                    ]
                                                            ]
                                                    ]
                                              None
                                              core_type (plugins.ml[570,21363+18]..[570,21363+28])
                                                Ptyp_constr "Astfn.stru" (plugins.ml[570,21363+18]..[570,21363+28])
                                                []
                                      ]
                                  <label> ""
                                    expression (plugins.ml[570,21363+31]..[570,21363+34])
                                      Pexp_ident "tys" (plugins.ml[570,21363+31]..[570,21363+34])
                                ]
                          ]
                          expression (plugins.ml[571,21401+7]..[571,21401+63])
                            Pexp_apply
                            expression (plugins.ml[571,21401+7]..[571,21401+18])
                              Pexp_ident "sem_of_list" (plugins.ml[571,21401+7]..[571,21401+18])
                            [
                              <label> ""
                                expression (plugins.ml[571,21401+19]..[571,21401+63])
                                  Pexp_construct "::" (plugins.ml[571,21401+29]..[571,21401+31])
                                  Some
                                    expression (plugins.ml[571,21401+20]..[571,21401+62]) ghost
                                      Pexp_tuple
                                      [
                                        expression (plugins.ml[571,21401+20]..[571,21401+28])
                                          Pexp_ident "typedecl" (plugins.ml[571,21401+20]..[571,21401+28])
                                        expression (plugins.ml[571,21401+32]..[571,21401+62])
                                          Pexp_construct "::" (plugins.ml[571,21401+42]..[571,21401+44])
                                          Some
                                            expression (plugins.ml[571,21401+32]..[571,21401+62]) ghost
                                              Pexp_tuple
                                              [
                                                expression (plugins.ml[571,21401+32]..[571,21401+41])
                                                  Pexp_ident "to_string" (plugins.ml[571,21401+32]..[571,21401+41])
                                                expression (plugins.ml[571,21401+45]..[571,21401+62])
                                                  Pexp_construct "::" (plugins.ml[571,21401+55]..[571,21401+57])
                                                  Some
                                                    expression (plugins.ml[571,21401+45]..[571,21401+62]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (plugins.ml[571,21401+45]..[571,21401+54])
                                                          Pexp_ident "of_string" (plugins.ml[571,21401+45]..[571,21401+54])
                                                        expression (plugins.ml[571,21401+58]..[571,21401+62])
                                                          Pexp_ident "tags" (plugins.ml[571,21401+58]..[571,21401+62])
                                                      ]
                                              ]
                                      ]
                            ]
                core_type (plugins.ml[571,21401+66]..[571,21401+70])
                  Ptyp_constr "stru" (plugins.ml[571,21401+66]..[571,21401+70])
                  []
          ]
    ]
  structure_item (plugins.ml[572,21473+0]..[575,21574+31])
    Pstr_eval
    expression (plugins.ml[573,21481+2]..[575,21574+31])
      Pexp_apply
      expression (plugins.ml[573,21481+2]..[573,21481+19])
        Pexp_ident "Typehook.register" (plugins.ml[573,21481+2]..[573,21481+19])
      [
        <label> "filter"
          expression (plugins.ml[574,21501+12]..[574,21501+72])
            Pexp_function
            [
              <case>
                pattern (plugins.ml[574,21501+24]..[574,21501+25])
                  Ppat_var "s" (plugins.ml[574,21501+24]..[574,21501+25])
                expression (plugins.ml[574,21501+29]..[574,21501+71])
                  Pexp_apply
                  expression (plugins.ml[574,21501+33]..[574,21501+35])
                    Pexp_ident "@@" (plugins.ml[574,21501+33]..[574,21501+35])
                  [
                    <label> ""
                      expression (plugins.ml[574,21501+29]..[574,21501+32])
                        Pexp_ident "not" (plugins.ml[574,21501+29]..[574,21501+32])
                    <label> ""
                      expression (plugins.ml[574,21501+36]..[574,21501+71])
                        Pexp_apply
                        expression (plugins.ml[574,21501+37]..[574,21501+45])
                          Pexp_ident "List.mem" (plugins.ml[574,21501+37]..[574,21501+45])
                        [
                          <label> ""
                            expression (plugins.ml[574,21501+46]..[574,21501+47])
                              Pexp_ident "s" (plugins.ml[574,21501+46]..[574,21501+47])
                          <label> ""
                            expression (plugins.ml[574,21501+48]..[574,21501+70])
                              Pexp_construct "::" (plugins.ml[574,21501+49]..[574,21501+70]) ghost
                              Some
                                expression (plugins.ml[574,21501+49]..[574,21501+70]) ghost
                                  Pexp_tuple
                                  [
                                    expression (plugins.ml[574,21501+49]..[574,21501+54])
                                      Pexp_constant Const_string("loc",None)
                                    expression (plugins.ml[574,21501+56]..[574,21501+70]) ghost
                                      Pexp_construct "::" (plugins.ml[574,21501+56]..[574,21501+70]) ghost
                                      Some
                                        expression (plugins.ml[574,21501+56]..[574,21501+70]) ghost
                                          Pexp_tuple
                                          [
                                            expression (plugins.ml[574,21501+56]..[574,21501+61])
                                              Pexp_constant Const_string("ant",None)
                                            expression (plugins.ml[574,21501+63]..[574,21501+70]) ghost
                                              Pexp_construct "::" (plugins.ml[574,21501+63]..[574,21501+70]) ghost
                                              Some
                                                expression (plugins.ml[574,21501+63]..[574,21501+70]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (plugins.ml[574,21501+63]..[574,21501+69])
                                                      Pexp_constant Const_string("quot",None)
                                                    expression (plugins.ml[574,21501+69]..[574,21501+70]) ghost
                                                      Pexp_construct "[]" (plugins.ml[574,21501+69]..[574,21501+70]) ghost
                                                      None
                                                  ]
                                          ]
                                  ]
                        ]
                  ]
            ]
        <label> ""
          expression (plugins.ml[575,21574+4]..[575,21574+31])
            Pexp_tuple
            [
              expression (plugins.ml[575,21574+5]..[575,21574+13])
                Pexp_constant Const_string("DynAst",None)
              expression (plugins.ml[575,21574+15]..[575,21574+30])
                Pexp_apply
                expression (plugins.ml[575,21574+16]..[575,21574+20])
                  Pexp_ident "some" (plugins.ml[575,21574+16]..[575,21574+20])
                [
                  <label> ""
                    expression (plugins.ml[575,21574+21]..[575,21574+29])
                      Pexp_ident "generate" (plugins.ml[575,21574+21]..[575,21574+29])
                ]
            ]
      ]
  structure_item (plugins.ml[576,21606+0]..[608,23122+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[576,21606+4]..[576,21606+12])
          Ppat_var "generate" (plugins.ml[576,21606+4]..[576,21606+12])
        expression (plugins.ml[577,21621+2]..[608,23122+40])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[578,21632+4]..[578,21632+19])
                Ppat_constraint
                pattern (plugins.ml[578,21632+5]..[578,21632+10])
                  Ppat_var "mtyps" (plugins.ml[578,21632+5]..[578,21632+10])
                core_type (plugins.ml[578,21632+13]..[578,21632+18])
                  Ptyp_constr "mtyps" (plugins.ml[578,21632+13]..[578,21632+18])
                  []
              expression (plugins.ml[579,21655+6]..[608,23122+40]) ghost
                Pexp_constraint
                expression (plugins.ml[579,21655+7]..[608,23122+32])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (plugins.ml[579,21655+11]..[579,21655+14])
                        Ppat_var "aux" (plugins.ml[579,21655+11]..[579,21655+14])
                      expression (plugins.ml[580,21672+9]..[607,23086+32])
                        Pexp_function
                        [
                          <case>
                            pattern (plugins.ml[581,21690+11]..[581,21690+23])
                              Ppat_constraint
                              pattern (plugins.ml[581,21690+12]..[581,21690+13])
                                Ppat_var "f" (plugins.ml[581,21690+12]..[581,21690+13])
                              core_type (plugins.ml[581,21690+16]..[581,21690+22])
                                Ptyp_constr "string" (plugins.ml[581,21690+16]..[581,21690+22])
                                []
                            expression (plugins.ml[582,21717+13]..[607,23086+32]) ghost
                              Pexp_constraint
                              expression (plugins.ml[582,21717+14]..[607,23086+24]) ghost
                                Pexp_coerce
                                expression (plugins.ml[582,21717+15]..[606,22990+91])
                                  Pexp_variant "Value"
                                  Some
                                    expression (plugins.ml[583,21739+17]..[606,22990+91])
                                      Pexp_tuple
                                      [
                                        expression (plugins.ml[583,21739+18]..[583,21739+27])
                                          Pexp_variant "Negative"
                                          None
                                        expression (plugins.ml[584,21768+19]..[606,22990+90])
                                          Pexp_variant "Bind"
                                          Some
                                            expression (plugins.ml[585,21794+22]..[606,22990+89])
                                              Pexp_tuple
                                              [
                                                expression (plugins.ml[585,21794+23]..[585,21794+42])
                                                  Pexp_variant "Lid"
                                                  Some
                                                    expression (plugins.ml[585,21794+29]..[585,21794+41])
                                                      Pexp_apply
                                                      expression (plugins.ml[585,21794+37]..[585,21794+38])
                                                        Pexp_ident "^" (plugins.ml[585,21794+37]..[585,21794+38])
                                                      [
                                                        <label> ""
                                                          expression (plugins.ml[585,21794+30]..[585,21794+36])
                                                            Pexp_constant Const_string("map_",None)
                                                        <label> ""
                                                          expression (plugins.ml[585,21794+39]..[585,21794+40])
                                                            Pexp_ident "f" (plugins.ml[585,21794+39]..[585,21794+40])
                                                      ]
                                                expression (plugins.ml[586,21838+24]..[606,22990+88])
                                                  Pexp_variant "Fun"
                                                  Some
                                                    expression (plugins.ml[587,21868+27]..[606,22990+87])
                                                      Pexp_variant "Case"
                                                      Some
                                                        expression (plugins.ml[588,21902+30]..[606,22990+86])
                                                          Pexp_tuple
                                                          [
                                                            expression (plugins.ml[588,21902+31]..[588,21902+41])
                                                              Pexp_variant "Lid"
                                                              Some
                                                                expression (plugins.ml[588,21902+37]..[588,21902+40])
                                                                  Pexp_constant Const_string("f",None)
                                                            expression (plugins.ml[589,21945+32]..[606,22990+85])
                                                              Pexp_variant "Obj"
                                                              Some
                                                                expression (plugins.ml[590,21983+35]..[606,22990+84])
                                                                  Pexp_variant "Sem"
                                                                  Some
                                                                    expression (plugins.ml[591,22024+38]..[606,22990+83])
                                                                      Pexp_tuple
                                                                      [
expression (plugins.ml[591,22024+39]..[593,22143+60])
  Pexp_variant "InheritAs"
  Some
    expression (plugins.ml[592,22075+42]..[593,22143+59])
      Pexp_tuple
      [
        expression (plugins.ml[592,22075+43]..[592,22075+52])
          Pexp_variant "Negative"
          None
        expression (plugins.ml[592,22075+54]..[592,22075+66])
          Pexp_variant "Lid"
          Some
            expression (plugins.ml[592,22075+60]..[592,22075+65])
              Pexp_constant Const_string("map",None)
        expression (plugins.ml[593,22143+44]..[593,22143+58])
          Pexp_variant "Lid"
          Some
            expression (plugins.ml[593,22143+50]..[593,22143+57])
              Pexp_constant Const_string("super",None)
      ]
expression (plugins.ml[594,22205+40]..[606,22990+82])
  Pexp_variant "CrMthS"
  Some
    expression (plugins.ml[595,22254+43]..[606,22990+81])
      Pexp_tuple
      [
        expression (plugins.ml[595,22254+44]..[595,22254+52])
          Pexp_variant "Lid"
          Some
            expression (plugins.ml[595,22254+50]..[595,22254+51])
              Pexp_ident "f" (plugins.ml[595,22254+50]..[595,22254+51])
        expression (plugins.ml[595,22254+54]..[595,22254+63])
          Pexp_variant "Positive"
          None
        expression (plugins.ml[595,22254+65]..[595,22254+74])
          Pexp_variant "Negative"
          None
        expression (plugins.ml[596,22330+45]..[606,22990+80])
          Pexp_variant "Fun"
          Some
            expression (plugins.ml[597,22381+48]..[606,22990+79])
              Pexp_variant "Case"
              Some
                expression (plugins.ml[598,22436+51]..[606,22990+78])
                  Pexp_tuple
                  [
                    expression (plugins.ml[598,22436+52]..[598,22436+62])
                      Pexp_variant "Lid"
                      Some
                        expression (plugins.ml[598,22436+58]..[598,22436+61])
                          Pexp_constant Const_string("x",None)
                    expression (plugins.ml[599,22500+53]..[606,22990+77])
                      Pexp_variant "App"
                      Some
                        expression (plugins.ml[600,22559+56]..[606,22990+76])
                          Pexp_tuple
                          [
                            expression (plugins.ml[600,22559+57]..[600,22559+67])
                              Pexp_variant "Lid"
                              Some
                                expression (plugins.ml[600,22559+63]..[600,22559+66])
                                  Pexp_constant Const_string("f",None)
                            expression (plugins.ml[601,22628+58]..[606,22990+75])
                              Pexp_variant "App"
                              Some
                                expression (plugins.ml[602,22692+61]..[606,22990+74])
                                  Pexp_tuple
                                  [
                                    expression (plugins.ml[602,22692+62]..[605,22911+77])
                                      Pexp_variant "Send"
                                      Some
                                        expression (plugins.ml[603,22761+65]..[605,22911+76])
                                          Pexp_tuple
                                          [
                                            expression (plugins.ml[603,22761+66]..[604,22833+76])
                                              Pexp_variant "Lid"
                                              Some
                                                expression (plugins.ml[604,22833+68]..[604,22833+75])
                                                  Pexp_constant Const_string("super",None)
                                            expression (plugins.ml[605,22911+67]..[605,22911+75])
                                              Pexp_variant "Lid"
                                              Some
                                                expression (plugins.ml[605,22911+73]..[605,22911+74])
                                                  Pexp_ident "f" (plugins.ml[605,22911+73]..[605,22911+74])
                                          ]
                                    expression (plugins.ml[606,22990+63]..[606,22990+73])
                                      Pexp_variant "Lid"
                                      Some
                                        expression (plugins.ml[606,22990+69]..[606,22990+72])
                                          Pexp_constant Const_string("x",None)
                                  ]
                          ]
                  ]
      ]
                                                                      ]
                                                          ]
                                              ]
                                      ]
                                None
                                core_type (plugins.ml[607,23086+13]..[607,23086+23])
                                  Ptyp_constr "Astfn.stru" (plugins.ml[607,23086+13]..[607,23086+23])
                                  []
                              core_type (plugins.ml[607,23086+27]..[607,23086+31])
                                Ptyp_constr "stru" (plugins.ml[607,23086+27]..[607,23086+31])
                                []
                        ]
                  ]
                  expression (plugins.ml[608,23122+7]..[608,23122+32])
                    Pexp_apply
                    expression (plugins.ml[608,23122+7]..[608,23122+19])
                      Pexp_ident "stru_from_ty" (plugins.ml[608,23122+7]..[608,23122+19])
                    [
                      <label> "f"
                        expression (plugins.ml[608,23122+23]..[608,23122+26])
                          Pexp_ident "aux" (plugins.ml[608,23122+23]..[608,23122+26])
                      <label> ""
                        expression (plugins.ml[608,23122+27]..[608,23122+32])
                          Pexp_ident "mtyps" (plugins.ml[608,23122+27]..[608,23122+32])
                    ]
                core_type (plugins.ml[608,23122+35]..[608,23122+39])
                  Ptyp_constr "stru" (plugins.ml[608,23122+35]..[608,23122+39])
                  []
          ]
    ]
  structure_item (plugins.ml[609,23163+0]..[611,23222+35])
    Pstr_eval
    expression (plugins.ml[610,23171+2]..[611,23222+35])
      Pexp_apply
      expression (plugins.ml[610,23171+2]..[610,23171+19])
        Pexp_ident "Typehook.register" (plugins.ml[610,23171+2]..[610,23171+19])
      [
        <label> "filter"
          expression (plugins.ml[610,23171+28]..[610,23171+50])
            Pexp_function
            [
              <case>
                pattern (plugins.ml[610,23171+40]..[610,23171+41])
                  Ppat_any
                expression (plugins.ml[610,23171+45]..[610,23171+49])
                  Pexp_construct "true" (plugins.ml[610,23171+45]..[610,23171+49])
                  None
            ]
        <label> ""
          expression (plugins.ml[611,23222+4]..[611,23222+35])
            Pexp_tuple
            [
              expression (plugins.ml[611,23222+5]..[611,23222+17])
                Pexp_constant Const_string("MapWrapper",None)
              expression (plugins.ml[611,23222+19]..[611,23222+34])
                Pexp_apply
                expression (plugins.ml[611,23222+20]..[611,23222+24])
                  Pexp_ident "some" (plugins.ml[611,23222+20]..[611,23222+24])
                [
                  <label> ""
                    expression (plugins.ml[611,23222+25]..[611,23222+33])
                      Pexp_ident "generate" (plugins.ml[611,23222+25]..[611,23222+33])
                ]
            ]
      ]
  structure_item (plugins.ml[612,23258+0]..[628,23796+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[612,23258+4]..[612,23258+12])
          Ppat_var "generate" (plugins.ml[612,23258+4]..[612,23258+12])
        expression (plugins.ml[613,23273+2]..[628,23796+56])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[614,23284+4]..[614,23284+19])
                Ppat_constraint
                pattern (plugins.ml[614,23284+5]..[614,23284+10])
                  Ppat_var "mtyps" (plugins.ml[614,23284+5]..[614,23284+10])
                core_type (plugins.ml[614,23284+13]..[614,23284+18])
                  Ptyp_constr "mtyps" (plugins.ml[614,23284+13]..[614,23284+18])
                  []
              expression (plugins.ml[615,23307+6]..[628,23796+56]) ghost
                Pexp_constraint
                expression (plugins.ml[615,23307+7]..[628,23796+48])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (plugins.ml[615,23307+11]..[615,23307+14])
                        Ppat_var "aux" (plugins.ml[615,23307+11]..[615,23307+14])
                      expression (plugins.ml[616,23324+9]..[625,23668+32])
                        Pexp_function
                        [
                          <case>
                            pattern (plugins.ml[617,23342+11]..[617,23342+23])
                              Ppat_constraint
                              pattern (plugins.ml[617,23342+12]..[617,23342+13])
                                Ppat_var "f" (plugins.ml[617,23342+12]..[617,23342+13])
                              core_type (plugins.ml[617,23342+16]..[617,23342+22])
                                Ptyp_constr "string" (plugins.ml[617,23342+16]..[617,23342+22])
                                []
                            expression (plugins.ml[618,23369+13]..[625,23668+32]) ghost
                              Pexp_constraint
                              expression (plugins.ml[618,23369+14]..[625,23668+24]) ghost
                                Pexp_coerce
                                expression (plugins.ml[618,23369+15]..[624,23596+67])
                                  Pexp_variant "Value"
                                  Some
                                    expression (plugins.ml[619,23391+17]..[624,23596+67])
                                      Pexp_tuple
                                      [
                                        expression (plugins.ml[619,23391+18]..[619,23391+27])
                                          Pexp_variant "Negative"
                                          None
                                        expression (plugins.ml[620,23420+19]..[624,23596+66])
                                          Pexp_variant "Bind"
                                          Some
                                            expression (plugins.ml[621,23446+22]..[624,23596+65])
                                              Pexp_tuple
                                              [
                                                expression (plugins.ml[621,23446+23]..[621,23446+43])
                                                  Pexp_variant "Lid"
                                                  Some
                                                    expression (plugins.ml[621,23446+29]..[621,23446+42])
                                                      Pexp_apply
                                                      expression (plugins.ml[621,23446+38]..[621,23446+39])
                                                        Pexp_ident "^" (plugins.ml[621,23446+38]..[621,23446+39])
                                                      [
                                                        <label> ""
                                                          expression (plugins.ml[621,23446+30]..[621,23446+37])
                                                            Pexp_constant Const_string("dump_",None)
                                                        <label> ""
                                                          expression (plugins.ml[621,23446+40]..[621,23446+41])
                                                            Pexp_ident "f" (plugins.ml[621,23446+40]..[621,23446+41])
                                                      ]
                                                expression (plugins.ml[622,23491+24]..[624,23596+64])
                                                  Pexp_variant "App"
                                                  Some
                                                    expression (plugins.ml[623,23521+27]..[624,23596+63])
                                                      Pexp_tuple
                                                      [
                                                        expression (plugins.ml[623,23521+28]..[623,23521+73])
                                                          Pexp_variant "Dot"
                                                          Some
                                                            expression (plugins.ml[623,23521+34]..[623,23521+72])
                                                              Pexp_tuple
                                                              [
                                                                expression (plugins.ml[623,23521+35]..[623,23521+51])
                                                                  Pexp_variant "Uid"
                                                                  Some
                                                                    expression (plugins.ml[623,23521+41]..[623,23521+50])
                                                                      Pexp_constant Const_string("Formatf",None)
                                                                expression (plugins.ml[623,23521+53]..[623,23521+71])
                                                                  Pexp_variant "Lid"
                                                                  Some
                                                                    expression (plugins.ml[623,23521+59]..[623,23521+70])
                                                                      Pexp_constant Const_string("to_string",None)
                                                              ]
                                                        expression (plugins.ml[624,23596+29]..[624,23596+62])
                                                          Pexp_variant "Send"
                                                          Some
                                                            expression (plugins.ml[624,23596+36]..[624,23596+61])
                                                              Pexp_tuple
                                                              [
                                                                expression (plugins.ml[624,23596+37]..[624,23596+50])
                                                                  Pexp_variant "Lid"
                                                                  Some
                                                                    expression (plugins.ml[624,23596+43]..[624,23596+49])
                                                                      Pexp_constant Const_string("dump",None)
                                                                expression (plugins.ml[624,23596+52]..[624,23596+60])
                                                                  Pexp_variant "Lid"
                                                                  Some
                                                                    expression (plugins.ml[624,23596+58]..[624,23596+59])
                                                                      Pexp_ident "f" (plugins.ml[624,23596+58]..[624,23596+59])
                                                              ]
                                                      ]
                                              ]
                                      ]
                                None
                                core_type (plugins.ml[625,23668+13]..[625,23668+23])
                                  Ptyp_constr "Astfn.stru" (plugins.ml[625,23668+13]..[625,23668+23])
                                  []
                              core_type (plugins.ml[625,23668+27]..[625,23668+31])
                                Ptyp_constr "stru" (plugins.ml[625,23668+27]..[625,23668+31])
                                []
                        ]
                  ]
                  expression (plugins.ml[626,23704+7]..[628,23796+48])
                    Pexp_apply
                    expression (plugins.ml[626,23704+7]..[626,23704+10])
                      Pexp_ident "sem" (plugins.ml[626,23704+7]..[626,23704+10])
                    [
                      <label> ""
                        expression (plugins.ml[627,23715+9]..[628,23796+20]) ghost
                          Pexp_coerce
                          expression (plugins.ml[627,23715+10]..[627,23715+76])
                            Pexp_variant "Value"
                            Some
                              expression (plugins.ml[627,23715+17]..[627,23715+76])
                                Pexp_tuple
                                [
                                  expression (plugins.ml[627,23715+18]..[627,23715+27])
                                    Pexp_variant "Negative"
                                    None
                                  expression (plugins.ml[627,23715+29]..[627,23715+75])
                                    Pexp_variant "Bind"
                                    Some
                                      expression (plugins.ml[627,23715+36]..[627,23715+74])
                                        Pexp_tuple
                                        [
                                          expression (plugins.ml[627,23715+37]..[627,23715+50])
                                            Pexp_variant "Lid"
                                            Some
                                              expression (plugins.ml[627,23715+43]..[627,23715+49])
                                                Pexp_constant Const_string("dump",None)
                                          expression (plugins.ml[627,23715+52]..[627,23715+73])
                                            Pexp_variant "New"
                                            Some
                                              expression (plugins.ml[627,23715+58]..[627,23715+72])
                                                Pexp_variant "Lid"
                                                Some
                                                  expression (plugins.ml[627,23715+64]..[627,23715+71])
                                                    Pexp_constant Const_string("print",None)
                                        ]
                                ]
                          None
                          core_type (plugins.ml[628,23796+9]..[628,23796+19])
                            Ptyp_constr "Astfn.stru" (plugins.ml[628,23796+9]..[628,23796+19])
                            []
                      <label> ""
                        expression (plugins.ml[628,23796+21]..[628,23796+48])
                          Pexp_apply
                          expression (plugins.ml[628,23796+22]..[628,23796+34])
                            Pexp_ident "stru_from_ty" (plugins.ml[628,23796+22]..[628,23796+34])
                          [
                            <label> "f"
                              expression (plugins.ml[628,23796+38]..[628,23796+41])
                                Pexp_ident "aux" (plugins.ml[628,23796+38]..[628,23796+41])
                            <label> ""
                              expression (plugins.ml[628,23796+42]..[628,23796+47])
                                Pexp_ident "mtyps" (plugins.ml[628,23796+42]..[628,23796+47])
                          ]
                    ]
                core_type (plugins.ml[628,23796+51]..[628,23796+55])
                  Ptyp_constr "stru" (plugins.ml[628,23796+51]..[628,23796+55])
                  []
          ]
    ]
  structure_item (plugins.ml[629,23853+0]..[632,23951+37])
    Pstr_eval
    expression (plugins.ml[630,23861+2]..[632,23951+37])
      Pexp_apply
      expression (plugins.ml[630,23861+2]..[630,23861+19])
        Pexp_ident "Typehook.register" (plugins.ml[630,23861+2]..[630,23861+19])
      [
        <label> "filter"
          expression (plugins.ml[631,23881+12]..[631,23881+69])
            Pexp_function
            [
              <case>
                pattern (plugins.ml[631,23881+24]..[631,23881+25])
                  Ppat_var "s" (plugins.ml[631,23881+24]..[631,23881+25])
                expression (plugins.ml[631,23881+29]..[631,23881+68])
                  Pexp_apply
                  expression (plugins.ml[631,23881+29]..[631,23881+32])
                    Pexp_ident "not" (plugins.ml[631,23881+29]..[631,23881+32])
                  [
                    <label> ""
                      expression (plugins.ml[631,23881+33]..[631,23881+68])
                        Pexp_apply
                        expression (plugins.ml[631,23881+34]..[631,23881+42])
                          Pexp_ident "List.mem" (plugins.ml[631,23881+34]..[631,23881+42])
                        [
                          <label> ""
                            expression (plugins.ml[631,23881+43]..[631,23881+44])
                              Pexp_ident "s" (plugins.ml[631,23881+43]..[631,23881+44])
                          <label> ""
                            expression (plugins.ml[631,23881+45]..[631,23881+67])
                              Pexp_construct "::" (plugins.ml[631,23881+46]..[631,23881+67]) ghost
                              Some
                                expression (plugins.ml[631,23881+46]..[631,23881+67]) ghost
                                  Pexp_tuple
                                  [
                                    expression (plugins.ml[631,23881+46]..[631,23881+51])
                                      Pexp_constant Const_string("loc",None)
                                    expression (plugins.ml[631,23881+53]..[631,23881+67]) ghost
                                      Pexp_construct "::" (plugins.ml[631,23881+53]..[631,23881+67]) ghost
                                      Some
                                        expression (plugins.ml[631,23881+53]..[631,23881+67]) ghost
                                          Pexp_tuple
                                          [
                                            expression (plugins.ml[631,23881+53]..[631,23881+58])
                                              Pexp_constant Const_string("ant",None)
                                            expression (plugins.ml[631,23881+60]..[631,23881+67]) ghost
                                              Pexp_construct "::" (plugins.ml[631,23881+60]..[631,23881+67]) ghost
                                              Some
                                                expression (plugins.ml[631,23881+60]..[631,23881+67]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (plugins.ml[631,23881+60]..[631,23881+66])
                                                      Pexp_constant Const_string("quot",None)
                                                    expression (plugins.ml[631,23881+66]..[631,23881+67]) ghost
                                                      Pexp_construct "[]" (plugins.ml[631,23881+66]..[631,23881+67]) ghost
                                                      None
                                                  ]
                                          ]
                                  ]
                        ]
                  ]
            ]
        <label> ""
          expression (plugins.ml[632,23951+4]..[632,23951+37])
            Pexp_tuple
            [
              expression (plugins.ml[632,23951+5]..[632,23951+19])
                Pexp_constant Const_string("PrintWrapper",None)
              expression (plugins.ml[632,23951+21]..[632,23951+36])
                Pexp_apply
                expression (plugins.ml[632,23951+22]..[632,23951+26])
                  Pexp_ident "some" (plugins.ml[632,23951+22]..[632,23951+26])
                [
                  <label> ""
                    expression (plugins.ml[632,23951+27]..[632,23951+35])
                      Pexp_ident "generate" (plugins.ml[632,23951+27]..[632,23951+35])
                ]
            ]
      ]
  structure_item (plugins.ml[633,23989+0]..[659,24991+68])
    Pstr_value Nonrec
    [
      <def>
        pattern (plugins.ml[633,23989+4]..[633,23989+12])
          Ppat_var "generate" (plugins.ml[633,23989+4]..[633,23989+12])
        expression (plugins.ml[634,24004+2]..[659,24991+68])
          Pexp_function
          [
            <case>
              pattern (plugins.ml[635,24015+4]..[635,24015+19])
                Ppat_constraint
                pattern (plugins.ml[635,24015+5]..[635,24015+10])
                  Ppat_var "mtyps" (plugins.ml[635,24015+5]..[635,24015+10])
                core_type (plugins.ml[635,24015+13]..[635,24015+18])
                  Ptyp_constr "mtyps" (plugins.ml[635,24015+13]..[635,24015+18])
                  []
              expression (plugins.ml[636,24038+6]..[659,24991+68]) ghost
                Pexp_constraint
                expression (plugins.ml[636,24038+7]..[659,24991+53])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (plugins.ml[636,24038+11]..[636,24038+12])
                        Ppat_var "f" (plugins.ml[636,24038+11]..[636,24038+12])
                      expression (plugins.ml[637,24053+9]..[658,24967+20])
                        Pexp_function
                        [
                          <case>
                            pattern (plugins.ml[638,24071+11]..[638,24071+20])
                              Ppat_tuple
                              [
                                pattern (plugins.ml[638,24071+12]..[638,24071+16])
                                  Ppat_var "name" (plugins.ml[638,24071+12]..[638,24071+16])
                                pattern (plugins.ml[638,24071+17]..[638,24071+19])
                                  Ppat_var "ty" (plugins.ml[638,24071+17]..[638,24071+19])
                              ]
                            expression (plugins.ml[639,24095+13]..[658,24967+20])
                              Pexp_ifthenelse
                              expression (plugins.ml[639,24095+16]..[639,24095+29])
                                Pexp_apply
                                expression (plugins.ml[639,24095+21]..[639,24095+23])
                                  Pexp_ident "<>" (plugins.ml[639,24095+21]..[639,24095+23])
                                [
                                  <label> ""
                                    expression (plugins.ml[639,24095+16]..[639,24095+20])
                                      Pexp_ident "name" (plugins.ml[639,24095+16]..[639,24095+20])
                                  <label> ""
                                    expression (plugins.ml[639,24095+24]..[639,24095+29])
                                      Pexp_constant Const_string("ant",None)
                                ]
                              expression (plugins.ml[641,24143+15]..[657,24936+30])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (plugins.ml[641,24143+19]..[641,24143+22])
                                      Ppat_var "obj" (plugins.ml[641,24143+19]..[641,24143+22])
                                    expression (plugins.ml[642,24168+17]..[656,24903+29])
                                      Pexp_apply
                                      expression (plugins.ml[642,24168+37]..[642,24168+39])
                                        Pexp_ident "@@" (plugins.ml[642,24168+37]..[642,24168+39])
                                      [
                                        <label> ""
                                          expression (plugins.ml[642,24168+17]..[642,24168+36])
                                            Pexp_ident "ObjsN.map_row_field" (plugins.ml[642,24168+17]..[642,24168+36])
                                        <label> ""
                                          expression (plugins.ml[643,24208+19]..[656,24903+29])
                                            Pexp_function
                                            [
                                              <case>
                                                pattern (plugins.ml[644,24237+22]..[644,24237+65])
                                                  Ppat_constraint
                                                  pattern (plugins.ml[644,24237+23]..[644,24237+46])
                                                    Ppat_variant "TyVrnOf"
                                                    Some
                                                      pattern (plugins.ml[644,24237+32]..[644,24237+46])
                                                        Ppat_tuple
                                                        [
                                                          pattern (plugins.ml[644,24237+33]..[644,24237+34])
                                                            Ppat_var "x" (plugins.ml[644,24237+33]..[644,24237+34])
                                                          pattern (plugins.ml[644,24237+35]..[644,24237+45])
                                                            Ppat_variant "Lid"
                                                            Some
                                                              pattern (plugins.ml[644,24237+40]..[644,24237+45])
                                                                Ppat_constant Const_string("loc",None)
                                                        ]
                                                  core_type (plugins.ml[644,24237+49]..[644,24237+64])
                                                    Ptyp_constr "Astfn.row_field" (plugins.ml[644,24237+49]..[644,24237+64])
                                                    []
                                                expression (plugins.ml[645,24306+24]..[645,24306+72]) ghost
                                                  Pexp_coerce
                                                  expression (plugins.ml[645,24306+25]..[645,24306+52])
                                                    Pexp_variant "TyVrn"
                                                    Some
                                                      expression (plugins.ml[645,24306+32]..[645,24306+52]) ghost
                                                        Pexp_coerce
                                                        expression (plugins.ml[645,24306+33]..[645,24306+34])
                                                          Pexp_ident "x" (plugins.ml[645,24306+33]..[645,24306+34])
                                                        None
                                                        core_type (plugins.ml[645,24306+38]..[645,24306+51])
                                                          Ptyp_constr "Astfn.astring" (plugins.ml[645,24306+38]..[645,24306+51])
                                                          []
                                                  None
                                                  core_type (plugins.ml[645,24306+56]..[645,24306+71])
                                                    Ptyp_constr "Astfn.row_field" (plugins.ml[645,24306+56]..[645,24306+71])
                                                    []
                                              <case>
                                                pattern (plugins.ml[646,24379+22]..[647,24444+40])
                                                  Ppat_constraint
                                                  pattern (plugins.ml[646,24379+23]..[646,24379+62])
                                                    Ppat_variant "TyVrnOf"
                                                    Some
                                                      pattern (plugins.ml[646,24379+32]..[646,24379+62])
                                                        Ppat_tuple
                                                        [
                                                          pattern (plugins.ml[646,24379+33]..[646,24379+34])
                                                            Ppat_var "x" (plugins.ml[646,24379+33]..[646,24379+34])
                                                          pattern (plugins.ml[646,24379+35]..[646,24379+61])
                                                            Ppat_variant "Par"
                                                            Some
                                                              pattern (plugins.ml[646,24379+40]..[646,24379+61])
                                                                Ppat_variant "Sta"
                                                                Some
                                                                  pattern (plugins.ml[646,24379+46]..[646,24379+60])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (plugins.ml[646,24379+47]..[646,24379+57])
Ppat_variant "Lid"
Some
  pattern (plugins.ml[646,24379+52]..[646,24379+57])
    Ppat_constant Const_string("loc",None)
                                                                      pattern (plugins.ml[646,24379+58]..[646,24379+59])
Ppat_var "y" (plugins.ml[646,24379+58]..[646,24379+59])
                                                                    ]
                                                        ]
                                                  core_type (plugins.ml[647,24444+24]..[647,24444+39])
                                                    Ptyp_constr "Astfn.row_field" (plugins.ml[647,24444+24]..[647,24444+39])
                                                    []
                                                expression (plugins.ml[648,24488+24]..[655,24856+46])
                                                  Pexp_match
                                                  expression (plugins.ml[648,24488+31]..[648,24488+32])
                                                    Pexp_ident "y" (plugins.ml[648,24488+31]..[648,24488+32])
                                                  [
                                                    <case>
                                                      pattern (plugins.ml[649,24526+27]..[649,24526+55])
                                                        Ppat_constraint
                                                        pattern (plugins.ml[649,24526+28]..[649,24526+41])
                                                          Ppat_variant "Sta"
                                                          Some
                                                            pattern (plugins.ml[649,24526+33]..[649,24526+41])
                                                              Ppat_tuple
                                                              [
                                                                pattern (plugins.ml[649,24526+34]..[649,24526+38])
                                                                  Ppat_var "_loc" (plugins.ml[649,24526+34]..[649,24526+38])
                                                                pattern (plugins.ml[649,24526+39]..[649,24526+40])
                                                                  Ppat_any
                                                              ]
                                                        core_type (plugins.ml[649,24526+44]..[649,24526+54])
                                                          Ptyp_constr "Astfn.ctyp" (plugins.ml[649,24526+44]..[649,24526+54])
                                                          []
                                                      expression (plugins.ml[650,24585+29]..[651,24661+45]) ghost
                                                        Pexp_coerce
                                                        expression (plugins.ml[650,24585+30]..[650,24585+71])
                                                          Pexp_variant "TyVrnOf"
                                                          Some
                                                            expression (plugins.ml[650,24585+39]..[650,24585+71])
                                                              Pexp_tuple
                                                              [
                                                                expression (plugins.ml[650,24585+40]..[650,24585+60]) ghost
                                                                  Pexp_coerce
                                                                  expression (plugins.ml[650,24585+41]..[650,24585+42])
                                                                    Pexp_ident "x" (plugins.ml[650,24585+41]..[650,24585+42])
                                                                  None
                                                                  core_type (plugins.ml[650,24585+46]..[650,24585+59])
                                                                    Ptyp_constr "Astfn.astring" (plugins.ml[650,24585+46]..[650,24585+59])
                                                                    []
                                                                expression (plugins.ml[650,24585+62]..[650,24585+70])
                                                                  Pexp_variant "Par"
                                                                  Some
                                                                    expression (plugins.ml[650,24585+68]..[650,24585+69])
                                                                      Pexp_ident "y" (plugins.ml[650,24585+68]..[650,24585+69])
                                                              ]
                                                        None
                                                        core_type (plugins.ml[651,24661+29]..[651,24661+44])
                                                          Ptyp_constr "Astfn.row_field" (plugins.ml[651,24661+29]..[651,24661+44])
                                                          []
                                                    <case>
                                                      pattern (plugins.ml[652,24707+27]..[652,24707+28])
                                                        Ppat_any
                                                      expression (plugins.ml[653,24739+29]..[655,24856+45]) ghost
                                                        Pexp_coerce
                                                        expression (plugins.ml[653,24739+30]..[654,24778+73])
                                                          Pexp_variant "TyVrnOf"
                                                          Some
                                                            expression (plugins.ml[654,24778+32]..[654,24778+73])
                                                              Pexp_tuple
                                                              [
                                                                expression (plugins.ml[654,24778+33]..[654,24778+53]) ghost
                                                                  Pexp_coerce
                                                                  expression (plugins.ml[654,24778+34]..[654,24778+35])
                                                                    Pexp_ident "x" (plugins.ml[654,24778+34]..[654,24778+35])
                                                                  None
                                                                  core_type (plugins.ml[654,24778+39]..[654,24778+52])
                                                                    Ptyp_constr "Astfn.astring" (plugins.ml[654,24778+39]..[654,24778+52])
                                                                    []
                                                                expression (plugins.ml[654,24778+55]..[654,24778+72]) ghost
                                                                  Pexp_coerce
                                                                  expression (plugins.ml[654,24778+56]..[654,24778+57])
                                                                    Pexp_ident "y" (plugins.ml[654,24778+56]..[654,24778+57])
                                                                  None
                                                                  core_type (plugins.ml[654,24778+61]..[654,24778+71])
                                                                    Ptyp_constr "Astfn.ctyp" (plugins.ml[654,24778+61]..[654,24778+71])
                                                                    []
                                                              ]
                                                        None
                                                        core_type (plugins.ml[655,24856+29]..[655,24856+44])
                                                          Ptyp_constr "Astfn.row_field" (plugins.ml[655,24856+29]..[655,24856+44])
                                                          []
                                                  ]
                                              <case>
                                                pattern (plugins.ml[656,24903+22]..[656,24903+23])
                                                  Ppat_var "x" (plugins.ml[656,24903+22]..[656,24903+23])
                                                expression (plugins.ml[656,24903+27]..[656,24903+28])
                                                  Pexp_ident "x" (plugins.ml[656,24903+27]..[656,24903+28])
                                            ]
                                      ]
                                ]
                                expression (plugins.ml[657,24936+15]..[657,24936+30])
                                  Pexp_apply
                                  expression (plugins.ml[657,24936+15]..[657,24936+27])
                                    Pexp_send "typedecl"
                                    expression (plugins.ml[657,24936+15]..[657,24936+18])
                                      Pexp_ident "obj" (plugins.ml[657,24936+15]..[657,24936+18])
                                  [
                                    <label> ""
                                      expression (plugins.ml[657,24936+28]..[657,24936+30])
                                        Pexp_ident "ty" (plugins.ml[657,24936+28]..[657,24936+30])
                                  ]
                              Some
                                expression (plugins.ml[658,24967+18]..[658,24967+20])
                                  Pexp_ident "ty" (plugins.ml[658,24967+18]..[658,24967+20])
                        ]
                  ]
                  expression (plugins.ml[659,24991+7]..[659,24991+53])
                    Pexp_apply
                    expression (plugins.ml[659,24991+7]..[659,24991+47])
                      Pexp_function
                      [
                        <case>
                          pattern (plugins.ml[659,24991+20]..[659,24991+21])
                            Ppat_var "x" (plugins.ml[659,24991+20]..[659,24991+21])
                          expression (plugins.ml[659,24991+25]..[659,24991+45])
                            Pexp_apply
                            expression (plugins.ml[659,24991+25]..[659,24991+40])
                              Pexp_ident "stru_from_mtyps" (plugins.ml[659,24991+25]..[659,24991+40])
                            [
                              <label> "f"
                                expression (plugins.ml[659,24991+42]..[659,24991+43])
                                  Pexp_ident "f" (plugins.ml[659,24991+42]..[659,24991+43])
                              <label> ""
                                expression (plugins.ml[659,24991+44]..[659,24991+45])
                                  Pexp_ident "x" (plugins.ml[659,24991+44]..[659,24991+45])
                            ]
                      ]
                    [
                      <label> ""
                        expression (plugins.ml[659,24991+48]..[659,24991+53])
                          Pexp_ident "mtyps" (plugins.ml[659,24991+48]..[659,24991+53])
                    ]
                core_type (plugins.ml[659,24991+56]..[659,24991+67])
                  Ptyp_constr "option" (plugins.ml[659,24991+61]..[659,24991+67])
                  [
                    core_type (plugins.ml[659,24991+56]..[659,24991+60])
                      Ptyp_constr "stru" (plugins.ml[659,24991+56]..[659,24991+60])
                      []
                  ]
          ]
    ]
  structure_item (plugins.ml[660,25060+0]..[661,25068+72])
    Pstr_eval
    expression (plugins.ml[661,25068+2]..[661,25068+72])
      Pexp_apply
      expression (plugins.ml[661,25068+2]..[661,25068+19])
        Pexp_ident "Typehook.register" (plugins.ml[661,25068+2]..[661,25068+19])
      [
        <label> "filter"
          expression (plugins.ml[661,25068+28]..[661,25068+50])
            Pexp_function
            [
              <case>
                pattern (plugins.ml[661,25068+40]..[661,25068+41])
                  Ppat_any
                expression (plugins.ml[661,25068+45]..[661,25068+49])
                  Pexp_construct "true" (plugins.ml[661,25068+45]..[661,25068+49])
                  None
            ]
        <label> ""
          expression (plugins.ml[661,25068+51]..[661,25068+72])
            Pexp_tuple
            [
              expression (plugins.ml[661,25068+52]..[661,25068+61])
                Pexp_constant Const_string("LocType",None)
              expression (plugins.ml[661,25068+63]..[661,25068+71])
                Pexp_ident "generate" (plugins.ml[661,25068+63]..[661,25068+71])
            ]
      ]
]
