[
  structure_item (fan_ops.ml[1,0+0]..[1,0+9])
    Pstr_open Fresh "Util" (fan_ops.ml[1,0+5]..[1,0+9])
  structure_item (fan_ops.ml[2,10+0]..[2,10+9])
    Pstr_open Fresh "Astf" (fan_ops.ml[2,10+5]..[2,10+9])
  structure_item (fan_ops.ml[3,20+0]..[3,20+12])
    Pstr_open Fresh "Ast_gen" (fan_ops.ml[3,20+5]..[3,20+12])
  structure_item (fan_ops.ml[4,33+0]..[14,384+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[4,33+4]..[4,33+16])
          Ppat_var "list_of_list" (fan_ops.ml[4,33+4]..[4,33+16])
        expression (fan_ops.ml[5,52+2]..[14,384+6])
          Pexp_let Rec
          [
            <def>
              pattern (fan_ops.ml[5,52+10]..[5,52+14])
                Ppat_var "loop" (fan_ops.ml[5,52+10]..[5,52+14])
              expression (fan_ops.ml[6,69+4]..[13,338+42])
                Pexp_function
                [
                  <case>
                    pattern (fan_ops.ml[7,82+6]..[7,82+8])
                      Ppat_construct "[]" (fan_ops.ml[7,82+6]..[7,82+8])
                      None
                    expression (fan_ops.ml[7,82+12]..[7,82+70])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (fan_ops.ml[7,82+16]..[7,82+21])
                            Ppat_var "ghost" (fan_ops.ml[7,82+16]..[7,82+21])
                          expression (fan_ops.ml[7,82+24]..[7,82+34])
                            Pexp_ident "Locf.ghost" (fan_ops.ml[7,82+24]..[7,82+34])
                      ]
                      expression (fan_ops.ml[7,82+38]..[7,82+70])
                        Pexp_coerce
                        expression (fan_ops.ml[7,82+39]..[7,82+57])
                          Pexp_variant "Uid"
                          Some
                            expression (fan_ops.ml[7,82+44]..[7,82+57])
                              Pexp_tuple
                              [
                                expression (fan_ops.ml[7,82+45]..[7,82+50])
                                  Pexp_ident "ghost" (fan_ops.ml[7,82+45]..[7,82+50])
                                expression (fan_ops.ml[7,82+52]..[7,82+56])
                                  Pexp_constant Const_string("[]",None)
                              ]
                        None
                        core_type (fan_ops.ml[7,82+61]..[7,82+69])
                          Ptyp_constr "Astf.exp" (fan_ops.ml[7,82+61]..[7,82+69])
                          []
                  <case>
                    pattern (fan_ops.ml[8,153+6]..[8,153+12])
                      Ppat_construct "::" (fan_ops.ml[8,153+6]..[8,153+12])
                      Some
                        pattern (fan_ops.ml[8,153+6]..[8,153+12])
                          Ppat_tuple
                          [
                            pattern (fan_ops.ml[8,153+6]..[8,153+8])
                              Ppat_var "e1" (fan_ops.ml[8,153+6]..[8,153+8])
                            pattern (fan_ops.ml[8,153+10]..[8,153+12])
                              Ppat_var "el" (fan_ops.ml[8,153+10]..[8,153+12])
                          ]
                    expression (fan_ops.ml[9,169+8]..[13,338+42])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (fan_ops.ml[9,169+12]..[9,169+13])
                            Ppat_var "v" (fan_ops.ml[9,169+12]..[9,169+13])
                          expression (fan_ops.ml[9,169+16]..[9,169+23])
                            Pexp_apply
                            expression (fan_ops.ml[9,169+16]..[9,169+20])
                              Pexp_ident "loop" (fan_ops.ml[9,169+16]..[9,169+20])
                            [
                              <label> ""
                                expression (fan_ops.ml[9,169+21]..[9,169+23])
                                  Pexp_ident "el" (fan_ops.ml[9,169+21]..[9,169+23])
                            ]
                      ]
                      expression (fan_ops.ml[10,196+8]..[13,338+42])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (fan_ops.ml[10,196+12]..[10,196+16])
                              Ppat_var "_loc" (fan_ops.ml[10,196+12]..[10,196+16])
                            expression (fan_ops.ml[10,196+19]..[10,196+52])
                              Pexp_apply
                              expression (fan_ops.ml[10,196+19]..[10,196+29])
                                Pexp_ident "Locf.merge" (fan_ops.ml[10,196+19]..[10,196+29])
                              [
                                <label> ""
                                  expression (fan_ops.ml[10,196+31]..[10,196+40])
                                    Pexp_apply
                                    expression (fan_ops.ml[10,196+31]..[10,196+37])
                                      Pexp_ident "loc_of" (fan_ops.ml[10,196+31]..[10,196+37])
                                    [
                                      <label> ""
                                        expression (fan_ops.ml[10,196+38]..[10,196+40])
                                          Pexp_ident "e1" (fan_ops.ml[10,196+38]..[10,196+40])
                                    ]
                                <label> ""
                                  expression (fan_ops.ml[10,196+43]..[10,196+51])
                                    Pexp_apply
                                    expression (fan_ops.ml[10,196+43]..[10,196+49])
                                      Pexp_ident "loc_of" (fan_ops.ml[10,196+43]..[10,196+49])
                                    [
                                      <label> ""
                                        expression (fan_ops.ml[10,196+50]..[10,196+51])
                                          Pexp_ident "v" (fan_ops.ml[10,196+50]..[10,196+51])
                                    ]
                              ]
                        ]
                        expression (fan_ops.ml[11,252+8]..[13,338+42])
                          Pexp_coerce
                          expression (fan_ops.ml[11,252+9]..[13,338+29])
                            Pexp_variant "App"
                            Some
                              expression (fan_ops.ml[12,266+11]..[13,338+29])
                                Pexp_tuple
                                [
                                  expression (fan_ops.ml[12,266+12]..[12,266+16])
                                    Pexp_ident "_loc" (fan_ops.ml[12,266+12]..[12,266+16])
                                  expression (fan_ops.ml[12,266+19]..[12,266+69])
                                    Pexp_variant "App"
                                    Some
                                      expression (fan_ops.ml[12,266+24]..[12,266+69])
                                        Pexp_tuple
                                        [
                                          expression (fan_ops.ml[12,266+25]..[12,266+29])
                                            Pexp_ident "_loc" (fan_ops.ml[12,266+25]..[12,266+29])
                                          expression (fan_ops.ml[12,266+32]..[12,266+49])
                                            Pexp_variant "Uid"
                                            Some
                                              expression (fan_ops.ml[12,266+37]..[12,266+49])
                                                Pexp_tuple
                                                [
                                                  expression (fan_ops.ml[12,266+38]..[12,266+42])
                                                    Pexp_ident "_loc" (fan_ops.ml[12,266+38]..[12,266+42])
                                                  expression (fan_ops.ml[12,266+44]..[12,266+48])
                                                    Pexp_constant Const_string("::",None)
                                                ]
                                          expression (fan_ops.ml[12,266+52]..[12,266+68])
                                            Pexp_coerce
                                            expression (fan_ops.ml[12,266+53]..[12,266+55])
                                              Pexp_ident "e1" (fan_ops.ml[12,266+53]..[12,266+55])
                                            None
                                            core_type (fan_ops.ml[12,266+59]..[12,266+67])
                                              Ptyp_constr "Astf.exp" (fan_ops.ml[12,266+59]..[12,266+67])
                                              []
                                        ]
                                  expression (fan_ops.ml[13,338+13]..[13,338+28])
                                    Pexp_coerce
                                    expression (fan_ops.ml[13,338+14]..[13,338+15])
                                      Pexp_ident "v" (fan_ops.ml[13,338+14]..[13,338+15])
                                    None
                                    core_type (fan_ops.ml[13,338+19]..[13,338+27])
                                      Ptyp_constr "Astf.exp" (fan_ops.ml[13,338+19]..[13,338+27])
                                      []
                                ]
                          None
                          core_type (fan_ops.ml[13,338+33]..[13,338+41])
                            Ptyp_constr "Astf.exp" (fan_ops.ml[13,338+33]..[13,338+41])
                            []
                ]
          ]
          expression (fan_ops.ml[14,384+2]..[14,384+6])
            Pexp_ident "loop" (fan_ops.ml[14,384+2]..[14,384+6])
    ]
  structure_item (fan_ops.ml[15,391+0]..[16,406+76])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[15,391+4]..[15,391+12])
          Ppat_var "meta_int" (fan_ops.ml[15,391+4]..[15,391+12])
        expression (fan_ops.ml[16,406+2]..[16,406+76])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[16,406+13]..[16,406+17])
                Ppat_var "_loc" (fan_ops.ml[16,406+13]..[16,406+17])
              expression (fan_ops.ml[16,406+22]..[16,406+75])
                Pexp_function
                [
                  <case>
                    pattern (fan_ops.ml[16,406+33]..[16,406+34])
                      Ppat_var "i" (fan_ops.ml[16,406+33]..[16,406+34])
                    expression (fan_ops.ml[16,406+38]..[16,406+75])
                      Pexp_coerce
                      expression (fan_ops.ml[16,406+39]..[16,406+61])
                        Pexp_variant "Int"
                        Some
                          expression (fan_ops.ml[16,406+45]..[16,406+60])
                            Pexp_apply
                            expression (fan_ops.ml[16,406+45]..[16,406+58])
                              Pexp_ident "string_of_int" (fan_ops.ml[16,406+45]..[16,406+58])
                            [
                              <label> ""
                                expression (fan_ops.ml[16,406+59]..[16,406+60])
                                  Pexp_ident "i" (fan_ops.ml[16,406+59]..[16,406+60])
                            ]
                      None
                      core_type (fan_ops.ml[16,406+65]..[16,406+74])
                        Ptyp_constr "Astfn.exp" (fan_ops.ml[16,406+65]..[16,406+74])
                        []
                ]
          ]
    ]
  structure_item (fan_ops.ml[17,483+0]..[19,511+71])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[17,483+4]..[17,483+14])
          Ppat_var "meta_int32" (fan_ops.ml[17,483+4]..[17,483+14])
        expression (fan_ops.ml[18,500+2]..[19,511+71])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[19,511+4]..[19,511+8])
                Ppat_var "_loc" (fan_ops.ml[19,511+4]..[19,511+8])
              expression (fan_ops.ml[19,511+13]..[19,511+70])
                Pexp_function
                [
                  <case>
                    pattern (fan_ops.ml[19,511+24]..[19,511+25])
                      Ppat_var "i" (fan_ops.ml[19,511+24]..[19,511+25])
                    expression (fan_ops.ml[19,511+29]..[19,511+70])
                      Pexp_coerce
                      expression (fan_ops.ml[19,511+30]..[19,511+56])
                        Pexp_variant "Int32"
                        Some
                          expression (fan_ops.ml[19,511+38]..[19,511+55])
                            Pexp_apply
                            expression (fan_ops.ml[19,511+38]..[19,511+53])
                              Pexp_ident "Int32.to_string" (fan_ops.ml[19,511+38]..[19,511+53])
                            [
                              <label> ""
                                expression (fan_ops.ml[19,511+54]..[19,511+55])
                                  Pexp_ident "i" (fan_ops.ml[19,511+54]..[19,511+55])
                            ]
                      None
                      core_type (fan_ops.ml[19,511+60]..[19,511+69])
                        Ptyp_constr "Astfn.exp" (fan_ops.ml[19,511+60]..[19,511+69])
                        []
                ]
          ]
    ]
  structure_item (fan_ops.ml[20,583+0]..[22,611+71])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[20,583+4]..[20,583+14])
          Ppat_var "meta_int64" (fan_ops.ml[20,583+4]..[20,583+14])
        expression (fan_ops.ml[21,600+2]..[22,611+71])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[22,611+4]..[22,611+8])
                Ppat_var "_loc" (fan_ops.ml[22,611+4]..[22,611+8])
              expression (fan_ops.ml[22,611+13]..[22,611+70])
                Pexp_function
                [
                  <case>
                    pattern (fan_ops.ml[22,611+24]..[22,611+25])
                      Ppat_var "i" (fan_ops.ml[22,611+24]..[22,611+25])
                    expression (fan_ops.ml[22,611+29]..[22,611+70])
                      Pexp_coerce
                      expression (fan_ops.ml[22,611+30]..[22,611+56])
                        Pexp_variant "Int64"
                        Some
                          expression (fan_ops.ml[22,611+38]..[22,611+55])
                            Pexp_apply
                            expression (fan_ops.ml[22,611+38]..[22,611+53])
                              Pexp_ident "Int64.to_string" (fan_ops.ml[22,611+38]..[22,611+53])
                            [
                              <label> ""
                                expression (fan_ops.ml[22,611+54]..[22,611+55])
                                  Pexp_ident "i" (fan_ops.ml[22,611+54]..[22,611+55])
                            ]
                      None
                      core_type (fan_ops.ml[22,611+60]..[22,611+69])
                        Ptyp_constr "Astfn.exp" (fan_ops.ml[22,611+60]..[22,611+69])
                        []
                ]
          ]
    ]
  structure_item (fan_ops.ml[23,683+0]..[26,727+73])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[23,683+4]..[23,683+18])
          Ppat_var "meta_nativeint" (fan_ops.ml[23,683+4]..[23,683+18])
        expression (fan_ops.ml[24,704+2]..[26,727+73])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[25,715+4]..[25,715+8])
                Ppat_var "_loc" (fan_ops.ml[25,715+4]..[25,715+8])
              expression (fan_ops.ml[26,727+7]..[26,727+72])
                Pexp_function
                [
                  <case>
                    pattern (fan_ops.ml[26,727+18]..[26,727+19])
                      Ppat_var "i" (fan_ops.ml[26,727+18]..[26,727+19])
                    expression (fan_ops.ml[26,727+23]..[26,727+72])
                      Pexp_coerce
                      expression (fan_ops.ml[26,727+24]..[26,727+58])
                        Pexp_variant "Nativeint"
                        Some
                          expression (fan_ops.ml[26,727+36]..[26,727+57])
                            Pexp_apply
                            expression (fan_ops.ml[26,727+36]..[26,727+55])
                              Pexp_ident "Nativeint.to_string" (fan_ops.ml[26,727+36]..[26,727+55])
                            [
                              <label> ""
                                expression (fan_ops.ml[26,727+56]..[26,727+57])
                                  Pexp_ident "i" (fan_ops.ml[26,727+56]..[26,727+57])
                            ]
                      None
                      core_type (fan_ops.ml[26,727+62]..[26,727+71])
                        Ptyp_constr "Astfn.exp" (fan_ops.ml[26,727+62]..[26,727+71])
                        []
                ]
          ]
    ]
  structure_item (fan_ops.ml[27,801+0]..[29,829+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[27,801+4]..[27,801+14])
          Ppat_var "meta_float" (fan_ops.ml[27,801+4]..[27,801+14])
        expression (fan_ops.ml[28,818+2]..[29,829+69])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[29,829+4]..[29,829+8])
                Ppat_var "_loc" (fan_ops.ml[29,829+4]..[29,829+8])
              expression (fan_ops.ml[29,829+13]..[29,829+68])
                Pexp_function
                [
                  <case>
                    pattern (fan_ops.ml[29,829+24]..[29,829+25])
                      Ppat_var "i" (fan_ops.ml[29,829+24]..[29,829+25])
                    expression (fan_ops.ml[29,829+29]..[29,829+68])
                      Pexp_coerce
                      expression (fan_ops.ml[29,829+30]..[29,829+54])
                        Pexp_variant "Flo"
                        Some
                          expression (fan_ops.ml[29,829+36]..[29,829+53])
                            Pexp_apply
                            expression (fan_ops.ml[29,829+36]..[29,829+51])
                              Pexp_ident "string_of_float" (fan_ops.ml[29,829+36]..[29,829+51])
                            [
                              <label> ""
                                expression (fan_ops.ml[29,829+52]..[29,829+53])
                                  Pexp_ident "i" (fan_ops.ml[29,829+52]..[29,829+53])
                            ]
                      None
                      core_type (fan_ops.ml[29,829+58]..[29,829+67])
                        Ptyp_constr "Astfn.exp" (fan_ops.ml[29,829+58]..[29,829+67])
                        []
                ]
          ]
    ]
  structure_item (fan_ops.ml[30,899+0]..[31,917+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[30,899+4]..[30,899+15])
          Ppat_var "meta_string" (fan_ops.ml[30,899+4]..[30,899+15])
        expression (fan_ops.ml[31,917+2]..[31,917+77])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[31,917+13]..[31,917+17])
                Ppat_var "_loc" (fan_ops.ml[31,917+13]..[31,917+17])
              expression (fan_ops.ml[31,917+22]..[31,917+76])
                Pexp_function
                [
                  <case>
                    pattern (fan_ops.ml[31,917+33]..[31,917+34])
                      Ppat_var "i" (fan_ops.ml[31,917+33]..[31,917+34])
                    expression (fan_ops.ml[31,917+38]..[31,917+76])
                      Pexp_coerce
                      expression (fan_ops.ml[31,917+39]..[31,917+62])
                        Pexp_variant "Str"
                        Some
                          expression (fan_ops.ml[31,917+45]..[31,917+61])
                            Pexp_apply
                            expression (fan_ops.ml[31,917+45]..[31,917+59])
                              Pexp_ident "String.escaped" (fan_ops.ml[31,917+45]..[31,917+59])
                            [
                              <label> ""
                                expression (fan_ops.ml[31,917+60]..[31,917+61])
                                  Pexp_ident "i" (fan_ops.ml[31,917+60]..[31,917+61])
                            ]
                      None
                      core_type (fan_ops.ml[31,917+66]..[31,917+75])
                        Ptyp_constr "Astfn.exp" (fan_ops.ml[31,917+66]..[31,917+75])
                        []
                ]
          ]
    ]
  structure_item (fan_ops.ml[32,995+0]..[33,1011+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[32,995+4]..[32,995+13])
          Ppat_var "meta_char" (fan_ops.ml[32,995+4]..[32,995+13])
        expression (fan_ops.ml[33,1011+2]..[33,1011+75])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[33,1011+13]..[33,1011+17])
                Ppat_var "_loc" (fan_ops.ml[33,1011+13]..[33,1011+17])
              expression (fan_ops.ml[33,1011+22]..[33,1011+74])
                Pexp_function
                [
                  <case>
                    pattern (fan_ops.ml[33,1011+33]..[33,1011+34])
                      Ppat_var "i" (fan_ops.ml[33,1011+33]..[33,1011+34])
                    expression (fan_ops.ml[33,1011+38]..[33,1011+74])
                      Pexp_coerce
                      expression (fan_ops.ml[33,1011+39]..[33,1011+60])
                        Pexp_variant "Chr"
                        Some
                          expression (fan_ops.ml[33,1011+45]..[33,1011+59])
                            Pexp_apply
                            expression (fan_ops.ml[33,1011+45]..[33,1011+57])
                              Pexp_ident "Char.escaped" (fan_ops.ml[33,1011+45]..[33,1011+57])
                            [
                              <label> ""
                                expression (fan_ops.ml[33,1011+58]..[33,1011+59])
                                  Pexp_ident "i" (fan_ops.ml[33,1011+58]..[33,1011+59])
                            ]
                      None
                      core_type (fan_ops.ml[33,1011+64]..[33,1011+73])
                        Ptyp_constr "Astfn.exp" (fan_ops.ml[33,1011+64]..[33,1011+73])
                        []
                ]
          ]
    ]
  structure_item (fan_ops.ml[34,1087+0]..[34,1087+58])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[34,1087+4]..[34,1087+13])
          Ppat_var "meta_unit" (fan_ops.ml[34,1087+4]..[34,1087+13])
        expression (fan_ops.ml[34,1087+16]..[34,1087+58])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[34,1087+27]..[34,1087+31])
                Ppat_var "_loc" (fan_ops.ml[34,1087+27]..[34,1087+31])
              expression (fan_ops.ml[34,1087+36]..[34,1087+57])
                Pexp_function
                [
                  <case>
                    pattern (fan_ops.ml[34,1087+47]..[34,1087+48])
                      Ppat_any
                    expression (fan_ops.ml[34,1087+52]..[34,1087+57])
                      Pexp_variant "Unit"
                      None
                ]
          ]
    ]
  structure_item (fan_ops.ml[35,1146+0]..[35,1146+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[35,1146+4]..[35,1146+13])
          Ppat_var "meta_bool" (fan_ops.ml[35,1146+4]..[35,1146+13])
        expression (fan_ops.ml[35,1146+16]..[35,1146+60])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[35,1146+27]..[35,1146+31])
                Ppat_var "_loc" (fan_ops.ml[35,1146+27]..[35,1146+31])
              expression (fan_ops.ml[35,1146+36]..[35,1146+59])
                Pexp_function
                [
                  <case>
                    pattern (fan_ops.ml[35,1146+47]..[35,1146+48])
                      Ppat_var "b" (fan_ops.ml[35,1146+47]..[35,1146+48])
                    expression (fan_ops.ml[35,1146+52]..[35,1146+59])
                      Pexp_variant "Bool"
                      Some
                        expression (fan_ops.ml[35,1146+58]..[35,1146+59])
                          Pexp_ident "b" (fan_ops.ml[35,1146+58]..[35,1146+59])
                ]
          ]
    ]
  structure_item (fan_ops.ml[36,1207+0]..[46,1450+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[36,1207+4]..[36,1207+12])
          Ppat_var "meta_ref" (fan_ops.ml[36,1207+4]..[36,1207+12])
        expression (fan_ops.ml[37,1222+2]..[46,1450+28])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[38,1233+4]..[38,1233+8])
                Ppat_var "mf_a" (fan_ops.ml[38,1233+4]..[38,1233+8])
              expression (fan_ops.ml[39,1245+7]..[46,1450+27])
                Pexp_function
                [
                  <case>
                    pattern (fan_ops.ml[40,1261+9]..[40,1261+13])
                      Ppat_var "_loc" (fan_ops.ml[40,1261+9]..[40,1261+13])
                    expression (fan_ops.ml[41,1278+12]..[46,1450+26])
                      Pexp_function
                      [
                        <case>
                          pattern (fan_ops.ml[42,1299+14]..[42,1299+15])
                            Ppat_var "i" (fan_ops.ml[42,1299+14]..[42,1299+15])
                          expression (fan_ops.ml[43,1318+16]..[46,1450+26])
                            Pexp_coerce
                            expression (fan_ops.ml[43,1318+17]..[45,1372+73])
                              Pexp_variant "Record"
                              Some
                                expression (fan_ops.ml[44,1343+20]..[45,1372+72])
                                  Pexp_variant "RecBind"
                                  Some
                                    expression (fan_ops.ml[45,1372+22]..[45,1372+72])
                                      Pexp_tuple
                                      [
                                        expression (fan_ops.ml[45,1372+24]..[45,1372+39])
                                          Pexp_variant "Lid"
                                          Some
                                            expression (fan_ops.ml[45,1372+29]..[45,1372+39])
                                              Pexp_constant Const_string("contents",None)
                                        expression (fan_ops.ml[45,1372+42]..[45,1372+71])
                                          Pexp_coerce
                                          expression (fan_ops.ml[45,1372+43]..[45,1372+57])
                                            Pexp_apply
                                            expression (fan_ops.ml[45,1372+43]..[45,1372+47])
                                              Pexp_ident "mf_a" (fan_ops.ml[45,1372+43]..[45,1372+47])
                                            [
                                              <label> ""
                                                expression (fan_ops.ml[45,1372+48]..[45,1372+52])
                                                  Pexp_ident "_loc" (fan_ops.ml[45,1372+48]..[45,1372+52])
                                              <label> ""
                                                expression (fan_ops.ml[45,1372+54]..[45,1372+56])
                                                  Pexp_apply
                                                  expression (fan_ops.ml[45,1372+54]..[45,1372+55])
                                                    Pexp_ident "!" (fan_ops.ml[45,1372+54]..[45,1372+55])
                                                  [
                                                    <label> ""
                                                      expression (fan_ops.ml[45,1372+55]..[45,1372+56])
                                                        Pexp_ident "i" (fan_ops.ml[45,1372+55]..[45,1372+56])
                                                  ]
                                            ]
                                          None
                                          core_type (fan_ops.ml[45,1372+61]..[45,1372+70])
                                            Ptyp_constr "Astfn.exp" (fan_ops.ml[45,1372+61]..[45,1372+70])
                                            []
                                      ]
                            None
                            core_type (fan_ops.ml[46,1450+16]..[46,1450+25])
                              Ptyp_constr "Astfn.exp" (fan_ops.ml[46,1450+16]..[46,1450+25])
                              []
                      ]
                ]
          ]
    ]
  structure_item (fan_ops.ml[47,1479+0]..[60,1863+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[47,1479+4]..[47,1479+10])
          Ppat_var "mklist" (fan_ops.ml[47,1479+4]..[47,1479+10])
        expression (fan_ops.ml[48,1492+2]..[60,1863+15])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[49,1503+4]..[49,1503+7])
                Ppat_var "loc" (fan_ops.ml[49,1503+4]..[49,1503+7])
              expression (fan_ops.ml[50,1514+6]..[60,1863+15])
                Pexp_let Rec
                [
                  <def>
                    pattern (fan_ops.ml[50,1514+14]..[50,1514+18])
                      Ppat_var "loop" (fan_ops.ml[50,1514+14]..[50,1514+18])
                    expression (fan_ops.ml[51,1535+8]..[59,1821+38])
                      Pexp_function
                      [
                        <case>
                          pattern (fan_ops.ml[52,1552+10]..[52,1552+13])
                            Ppat_var "top" (fan_ops.ml[52,1552+10]..[52,1552+13])
                          expression (fan_ops.ml[53,1569+13]..[59,1821+37])
                            Pexp_function
                            [
                              <case>
                                pattern (fan_ops.ml[54,1591+15]..[54,1591+17])
                                  Ppat_construct "[]" (fan_ops.ml[54,1591+15]..[54,1591+17])
                                  None
                                expression (fan_ops.ml[54,1591+21]..[54,1591+37])
                                  Pexp_variant "Uid"
                                  Some
                                    expression (fan_ops.ml[54,1591+26]..[54,1591+37])
                                      Pexp_tuple
                                      [
                                        expression (fan_ops.ml[54,1591+27]..[54,1591+30])
                                          Pexp_ident "loc" (fan_ops.ml[54,1591+27]..[54,1591+30])
                                        expression (fan_ops.ml[54,1591+32]..[54,1591+36])
                                          Pexp_constant Const_string("[]",None)
                                      ]
                              <case>
                                pattern (fan_ops.ml[55,1629+15]..[55,1629+21])
                                  Ppat_construct "::" (fan_ops.ml[55,1629+15]..[55,1629+21])
                                  Some
                                    pattern (fan_ops.ml[55,1629+15]..[55,1629+21])
                                      Ppat_tuple
                                      [
                                        pattern (fan_ops.ml[55,1629+15]..[55,1629+17])
                                          Ppat_var "e1" (fan_ops.ml[55,1629+15]..[55,1629+17])
                                        pattern (fan_ops.ml[55,1629+19]..[55,1629+21])
                                          Ppat_var "el" (fan_ops.ml[55,1629+19]..[55,1629+21])
                                      ]
                                expression (fan_ops.ml[56,1654+17]..[59,1821+37])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (fan_ops.ml[56,1654+21]..[56,1654+25])
                                        Ppat_var "_loc" (fan_ops.ml[56,1654+21]..[56,1654+25])
                                      expression (fan_ops.ml[56,1654+28]..[56,1654+75])
                                        Pexp_ifthenelse
                                        expression (fan_ops.ml[56,1654+31]..[56,1654+34])
                                          Pexp_ident "top" (fan_ops.ml[56,1654+31]..[56,1654+34])
                                        expression (fan_ops.ml[56,1654+40]..[56,1654+43])
                                          Pexp_ident "loc" (fan_ops.ml[56,1654+40]..[56,1654+43])
                                        Some
                                          expression (fan_ops.ml[56,1654+49]..[56,1654+75])
                                            Pexp_apply
                                            expression (fan_ops.ml[56,1654+49]..[56,1654+59])
                                              Pexp_ident "Locf.merge" (fan_ops.ml[56,1654+49]..[56,1654+59])
                                            [
                                              <label> ""
                                                expression (fan_ops.ml[56,1654+61]..[56,1654+70])
                                                  Pexp_apply
                                                  expression (fan_ops.ml[56,1654+61]..[56,1654+67])
                                                    Pexp_ident "loc_of" (fan_ops.ml[56,1654+61]..[56,1654+67])
                                                  [
                                                    <label> ""
                                                      expression (fan_ops.ml[56,1654+68]..[56,1654+70])
                                                        Pexp_ident "e1" (fan_ops.ml[56,1654+68]..[56,1654+70])
                                                  ]
                                              <label> ""
                                                expression (fan_ops.ml[56,1654+72]..[56,1654+75])
                                                  Pexp_ident "loc" (fan_ops.ml[56,1654+72]..[56,1654+75])
                                            ]
                                  ]
                                  expression (fan_ops.ml[57,1733+17]..[59,1821+37])
                                    Pexp_variant "App"
                                    Some
                                      expression (fan_ops.ml[58,1755+19]..[59,1821+37])
                                        Pexp_tuple
                                        [
                                          expression (fan_ops.ml[58,1755+20]..[58,1755+24])
                                            Pexp_ident "_loc" (fan_ops.ml[58,1755+20]..[58,1755+24])
                                          expression (fan_ops.ml[58,1755+27]..[58,1755+63])
                                            Pexp_variant "App"
                                            Some
                                              expression (fan_ops.ml[58,1755+32]..[58,1755+63])
                                                Pexp_tuple
                                                [
                                                  expression (fan_ops.ml[58,1755+33]..[58,1755+37])
                                                    Pexp_ident "_loc" (fan_ops.ml[58,1755+33]..[58,1755+37])
                                                  expression (fan_ops.ml[58,1755+40]..[58,1755+57])
                                                    Pexp_variant "Uid"
                                                    Some
                                                      expression (fan_ops.ml[58,1755+45]..[58,1755+57])
                                                        Pexp_tuple
                                                        [
                                                          expression (fan_ops.ml[58,1755+46]..[58,1755+50])
                                                            Pexp_ident "_loc" (fan_ops.ml[58,1755+46]..[58,1755+50])
                                                          expression (fan_ops.ml[58,1755+52]..[58,1755+56])
                                                            Pexp_constant Const_string("::",None)
                                                        ]
                                                  expression (fan_ops.ml[58,1755+60]..[58,1755+62])
                                                    Pexp_ident "e1" (fan_ops.ml[58,1755+60]..[58,1755+62])
                                                ]
                                          expression (fan_ops.ml[59,1821+22]..[59,1821+35])
                                            Pexp_apply
                                            expression (fan_ops.ml[59,1821+22]..[59,1821+26])
                                              Pexp_ident "loop" (fan_ops.ml[59,1821+22]..[59,1821+26])
                                            [
                                              <label> ""
                                                expression (fan_ops.ml[59,1821+27]..[59,1821+32])
                                                  Pexp_construct "false" (fan_ops.ml[59,1821+27]..[59,1821+32])
                                                  None
                                              <label> ""
                                                expression (fan_ops.ml[59,1821+33]..[59,1821+35])
                                                  Pexp_ident "el" (fan_ops.ml[59,1821+33]..[59,1821+35])
                                            ]
                                        ]
                            ]
                      ]
                ]
                expression (fan_ops.ml[60,1863+6]..[60,1863+15])
                  Pexp_apply
                  expression (fan_ops.ml[60,1863+6]..[60,1863+10])
                    Pexp_ident "loop" (fan_ops.ml[60,1863+6]..[60,1863+10])
                  [
                    <label> ""
                      expression (fan_ops.ml[60,1863+11]..[60,1863+15])
                        Pexp_construct "true" (fan_ops.ml[60,1863+11]..[60,1863+15])
                        None
                  ]
          ]
    ]
  structure_item (fan_ops.ml[61,1879+0]..[67,1972+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[61,1879+4]..[61,1879+13])
          Ppat_var "meta_list" (fan_ops.ml[61,1879+4]..[61,1879+13])
        expression (fan_ops.ml[62,1895+2]..[67,1972+77])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[63,1906+4]..[63,1906+8])
                Ppat_var "mf_a" (fan_ops.ml[63,1906+4]..[63,1906+8])
              expression (fan_ops.ml[64,1918+7]..[67,1972+76])
                Pexp_function
                [
                  <case>
                    pattern (fan_ops.ml[65,1934+9]..[65,1934+13])
                      Ppat_var "_loc" (fan_ops.ml[65,1934+9]..[65,1934+13])
                    expression (fan_ops.ml[66,1951+12]..[67,1972+75])
                      Pexp_function
                      [
                        <case>
                          pattern (fan_ops.ml[67,1972+14]..[67,1972+16])
                            Ppat_var "ls" (fan_ops.ml[67,1972+14]..[67,1972+16])
                          expression (fan_ops.ml[67,1972+20]..[67,1972+75])
                            Pexp_apply
                            expression (fan_ops.ml[67,1972+20]..[67,1972+26])
                              Pexp_ident "mklist" (fan_ops.ml[67,1972+20]..[67,1972+26])
                            [
                              <label> ""
                                expression (fan_ops.ml[67,1972+27]..[67,1972+31])
                                  Pexp_ident "_loc" (fan_ops.ml[67,1972+27]..[67,1972+31])
                              <label> ""
                                expression (fan_ops.ml[67,1972+33]..[67,1972+74])
                                  Pexp_apply
                                  expression (fan_ops.ml[67,1972+33]..[67,1972+41])
                                    Pexp_ident "List.map" (fan_ops.ml[67,1972+33]..[67,1972+41])
                                  [
                                    <label> ""
                                      expression (fan_ops.ml[67,1972+43]..[67,1972+70])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (fan_ops.ml[67,1972+54]..[67,1972+55])
                                              Ppat_var "x" (fan_ops.ml[67,1972+54]..[67,1972+55])
                                            expression (fan_ops.ml[67,1972+59]..[67,1972+70])
                                              Pexp_apply
                                              expression (fan_ops.ml[67,1972+59]..[67,1972+63])
                                                Pexp_ident "mf_a" (fan_ops.ml[67,1972+59]..[67,1972+63])
                                              [
                                                <label> ""
                                                  expression (fan_ops.ml[67,1972+64]..[67,1972+68])
                                                    Pexp_ident "_loc" (fan_ops.ml[67,1972+64]..[67,1972+68])
                                                <label> ""
                                                  expression (fan_ops.ml[67,1972+69]..[67,1972+70])
                                                    Pexp_ident "x" (fan_ops.ml[67,1972+69]..[67,1972+70])
                                              ]
                                        ]
                                    <label> ""
                                      expression (fan_ops.ml[67,1972+72]..[67,1972+74])
                                        Pexp_ident "ls" (fan_ops.ml[67,1972+72]..[67,1972+74])
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (fan_ops.ml[68,2050+0]..[77,2289+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[68,2050+4]..[68,2050+15])
          Ppat_var "meta_option" (fan_ops.ml[68,2050+4]..[68,2050+15])
        expression (fan_ops.ml[69,2068+2]..[77,2289+28])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[70,2079+4]..[70,2079+8])
                Ppat_var "mf_a" (fan_ops.ml[70,2079+4]..[70,2079+8])
              expression (fan_ops.ml[71,2091+7]..[77,2289+27])
                Pexp_function
                [
                  <case>
                    pattern (fan_ops.ml[72,2107+9]..[72,2107+13])
                      Ppat_var "_loc" (fan_ops.ml[72,2107+9]..[72,2107+13])
                    expression (fan_ops.ml[73,2124+12]..[77,2289+26])
                      Pexp_function
                      [
                        <case>
                          pattern (fan_ops.ml[74,2145+14]..[74,2145+18])
                            Ppat_construct "None" (fan_ops.ml[74,2145+14]..[74,2145+18])
                            None
                          expression (fan_ops.ml[74,2145+23]..[74,2145+49])
                            Pexp_coerce
                            expression (fan_ops.ml[74,2145+24]..[74,2145+35])
                              Pexp_variant "Uid"
                              Some
                                expression (fan_ops.ml[74,2145+29]..[74,2145+35])
                                  Pexp_constant Const_string("None",None)
                            None
                            core_type (fan_ops.ml[74,2145+39]..[74,2145+48])
                              Ptyp_constr "Astfn.exp" (fan_ops.ml[74,2145+39]..[74,2145+48])
                              []
                        <case>
                          pattern (fan_ops.ml[75,2195+14]..[75,2195+20])
                            Ppat_construct "Some" (fan_ops.ml[75,2195+14]..[75,2195+18])
                            Some
                              pattern (fan_ops.ml[75,2195+19]..[75,2195+20])
                                Ppat_var "x" (fan_ops.ml[75,2195+19]..[75,2195+20])
                          expression (fan_ops.ml[76,2219+16]..[77,2289+26])
                            Pexp_coerce
                            expression (fan_ops.ml[76,2219+17]..[76,2219+65])
                              Pexp_variant "App"
                              Some
                                expression (fan_ops.ml[76,2219+22]..[76,2219+65])
                                  Pexp_tuple
                                  [
                                    expression (fan_ops.ml[76,2219+24]..[76,2219+35])
                                      Pexp_variant "Uid"
                                      Some
                                        expression (fan_ops.ml[76,2219+29]..[76,2219+35])
                                          Pexp_constant Const_string("Some",None)
                                    expression (fan_ops.ml[76,2219+38]..[76,2219+64])
                                      Pexp_coerce
                                      expression (fan_ops.ml[76,2219+39]..[76,2219+50])
                                        Pexp_apply
                                        expression (fan_ops.ml[76,2219+39]..[76,2219+43])
                                          Pexp_ident "mf_a" (fan_ops.ml[76,2219+39]..[76,2219+43])
                                        [
                                          <label> ""
                                            expression (fan_ops.ml[76,2219+44]..[76,2219+48])
                                              Pexp_ident "_loc" (fan_ops.ml[76,2219+44]..[76,2219+48])
                                          <label> ""
                                            expression (fan_ops.ml[76,2219+49]..[76,2219+50])
                                              Pexp_ident "x" (fan_ops.ml[76,2219+49]..[76,2219+50])
                                        ]
                                      None
                                      core_type (fan_ops.ml[76,2219+54]..[76,2219+63])
                                        Ptyp_constr "Astfn.exp" (fan_ops.ml[76,2219+54]..[76,2219+63])
                                        []
                                  ]
                            None
                            core_type (fan_ops.ml[77,2289+16]..[77,2289+25])
                              Ptyp_constr "Astfn.exp" (fan_ops.ml[77,2289+16]..[77,2289+25])
                              []
                      ]
                ]
          ]
    ]
  structure_item (fan_ops.ml[78,2318+0]..[87,2564+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[78,2318+4]..[78,2318+14])
          Ppat_var "meta_arrow" (fan_ops.ml[78,2318+4]..[78,2318+14])
        expression (fan_ops.ml[78,2318+15]..[87,2564+70])
          Pexp_newtype "t"
          expression (fan_ops.ml[79,2344+2]..[87,2564+70])
            Pexp_function
            [
              <case>
                pattern (fan_ops.ml[80,2355+4]..[80,2355+31])
                  Ppat_constraint
                  pattern (fan_ops.ml[80,2355+5]..[80,2355+10])
                    Ppat_var "_mf_a" (fan_ops.ml[80,2355+5]..[80,2355+10])
                  core_type (fan_ops.ml[80,2355+13]..[80,2355+30])
                    Ptyp_arrow
                    ""
                    core_type (fan_ops.ml[80,2355+13]..[80,2355+19])
                      Ptyp_constr "Locf.t" (fan_ops.ml[80,2355+13]..[80,2355+19])
                      []
                    core_type (fan_ops.ml[80,2355+23]..[80,2355+30])
                      Ptyp_arrow
                      ""
                      core_type (fan_ops.ml[80,2355+23]..[80,2355+25])
                        Ptyp_var a
                      core_type (fan_ops.ml[80,2355+29]..[80,2355+30])
                        Ptyp_constr "t" (fan_ops.ml[80,2355+29]..[80,2355+30])
                        []
                expression (fan_ops.ml[81,2390+7]..[87,2564+69])
                  Pexp_function
                  [
                    <case>
                      pattern (fan_ops.ml[82,2406+9]..[82,2406+36])
                        Ppat_constraint
                        pattern (fan_ops.ml[82,2406+10]..[82,2406+15])
                          Ppat_var "_mf_b" (fan_ops.ml[82,2406+10]..[82,2406+15])
                        core_type (fan_ops.ml[82,2406+18]..[82,2406+35])
                          Ptyp_arrow
                          ""
                          core_type (fan_ops.ml[82,2406+18]..[82,2406+24])
                            Ptyp_constr "Locf.t" (fan_ops.ml[82,2406+18]..[82,2406+24])
                            []
                          core_type (fan_ops.ml[82,2406+28]..[82,2406+35])
                            Ptyp_arrow
                            ""
                            core_type (fan_ops.ml[82,2406+28]..[82,2406+30])
                              Ptyp_var b
                            core_type (fan_ops.ml[82,2406+34]..[82,2406+35])
                              Ptyp_constr "t" (fan_ops.ml[82,2406+34]..[82,2406+35])
                              []
                      expression (fan_ops.ml[83,2446+12]..[87,2564+68])
                        Pexp_function
                        [
                          <case>
                            pattern (fan_ops.ml[84,2467+14]..[84,2467+29])
                              Ppat_constraint
                              pattern (fan_ops.ml[84,2467+15]..[84,2467+19])
                                Ppat_var "_loc" (fan_ops.ml[84,2467+15]..[84,2467+19])
                              core_type (fan_ops.ml[84,2467+22]..[84,2467+28])
                                Ptyp_constr "Locf.t" (fan_ops.ml[84,2467+22]..[84,2467+28])
                                []
                            expression (fan_ops.ml[85,2500+17]..[87,2564+67])
                              Pexp_function
                              [
                                <case>
                                  pattern (fan_ops.ml[86,2526+19]..[86,2526+34])
                                    Ppat_constraint
                                    pattern (fan_ops.ml[86,2526+20]..[86,2526+22])
                                      Ppat_var "_x" (fan_ops.ml[86,2526+20]..[86,2526+22])
                                    core_type (fan_ops.ml[86,2526+25]..[86,2526+33])
                                      Ptyp_arrow
                                      ""
                                      core_type (fan_ops.ml[86,2526+25]..[86,2526+27])
                                        Ptyp_var a
                                      core_type (fan_ops.ml[86,2526+31]..[86,2526+33])
                                        Ptyp_var b
                                  expression (fan_ops.ml[87,2564+21]..[87,2564+67])
                                    Pexp_apply
                                    expression (fan_ops.ml[87,2564+21]..[87,2564+33])
                                      Pexp_ident "invalid_argf" (fan_ops.ml[87,2564+21]..[87,2564+33])
                                    [
                                      <label> ""
                                        expression (fan_ops.ml[87,2564+34]..[87,2564+54])
                                          Pexp_constant Const_string("%s not implemented",None)
                                      <label> ""
                                        expression (fan_ops.ml[87,2564+55]..[87,2564+67])
                                          Pexp_constant Const_string("meta_arrow",None)
                                    ]
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (fan_ops.ml[88,2635+0]..[96,2879+20])
    Pstr_value Rec
    [
      <def>
        pattern (fan_ops.ml[88,2635+8]..[88,2635+27])
          Ppat_var "is_module_longident" (fan_ops.ml[88,2635+8]..[88,2635+27])
        expression (fan_ops.ml[89,2665+2]..[96,2879+20])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[90,2676+4]..[90,2676+15])
                Ppat_constraint
                pattern (fan_ops.ml[90,2676+5]..[90,2676+6])
                  Ppat_var "x" (fan_ops.ml[90,2676+5]..[90,2676+6])
                core_type (fan_ops.ml[90,2676+9]..[90,2676+14])
                  Ptyp_constr "ident" (fan_ops.ml[90,2676+9]..[90,2676+14])
                  []
              expression (fan_ops.ml[91,2695+7]..[96,2879+19])
                Pexp_match
                expression (fan_ops.ml[91,2695+13]..[91,2695+14])
                  Pexp_ident "x" (fan_ops.ml[91,2695+13]..[91,2695+14])
                [
                  <case>
                    pattern (fan_ops.ml[92,2715+9]..[92,2715+21])
                      Ppat_variant "Dot"
                      Some
                        pattern (fan_ops.ml[92,2715+9]..[92,2715+21])
                          Ppat_tuple
                          [
                            pattern (fan_ops.ml[92,2715+15]..[92,2715+16])
                              Ppat_any
                            pattern (fan_ops.ml[92,2715+17]..[92,2715+18])
                              Ppat_any
                            pattern (fan_ops.ml[92,2715+19]..[92,2715+20])
                              Ppat_var "i" (fan_ops.ml[92,2715+19]..[92,2715+20])
                          ]
                    expression (fan_ops.ml[92,2715+25]..[92,2715+46])
                      Pexp_apply
                      expression (fan_ops.ml[92,2715+25]..[92,2715+44])
                        Pexp_ident "is_module_longident" (fan_ops.ml[92,2715+25]..[92,2715+44])
                      [
                        <label> ""
                          expression (fan_ops.ml[92,2715+45]..[92,2715+46])
                            Pexp_ident "i" (fan_ops.ml[92,2715+45]..[92,2715+46])
                      ]
                  <case>
                    pattern (fan_ops.ml[93,2762+9]..[93,2762+25])
                      Ppat_variant "Apply"
                      Some
                        pattern (fan_ops.ml[93,2762+9]..[93,2762+25])
                          Ppat_tuple
                          [
                            pattern (fan_ops.ml[93,2762+17]..[93,2762+18])
                              Ppat_any
                            pattern (fan_ops.ml[93,2762+19]..[93,2762+21])
                              Ppat_var "i1" (fan_ops.ml[93,2762+19]..[93,2762+21])
                            pattern (fan_ops.ml[93,2762+22]..[93,2762+24])
                              Ppat_var "i2" (fan_ops.ml[93,2762+22]..[93,2762+24])
                          ]
                    expression (fan_ops.ml[94,2791+11]..[94,2791+63])
                      Pexp_apply
                      expression (fan_ops.ml[94,2791+36]..[94,2791+38])
                        Pexp_ident "&&" (fan_ops.ml[94,2791+36]..[94,2791+38])
                      [
                        <label> ""
                          expression (fan_ops.ml[94,2791+12]..[94,2791+34])
                            Pexp_apply
                            expression (fan_ops.ml[94,2791+12]..[94,2791+31])
                              Pexp_ident "is_module_longident" (fan_ops.ml[94,2791+12]..[94,2791+31])
                            [
                              <label> ""
                                expression (fan_ops.ml[94,2791+32]..[94,2791+34])
                                  Pexp_ident "i1" (fan_ops.ml[94,2791+32]..[94,2791+34])
                            ]
                        <label> ""
                          expression (fan_ops.ml[94,2791+40]..[94,2791+62])
                            Pexp_apply
                            expression (fan_ops.ml[94,2791+40]..[94,2791+59])
                              Pexp_ident "is_module_longident" (fan_ops.ml[94,2791+40]..[94,2791+59])
                            [
                              <label> ""
                                expression (fan_ops.ml[94,2791+60]..[94,2791+62])
                                  Pexp_ident "i2" (fan_ops.ml[94,2791+60]..[94,2791+62])
                            ]
                      ]
                  <case>
                    pattern (fan_ops.ml[95,2855+9]..[95,2855+15])
                      Ppat_variant "Uid"
                      Some
                        pattern (fan_ops.ml[95,2855+14]..[95,2855+15])
                          Ppat_any
                    expression (fan_ops.ml[95,2855+19]..[95,2855+23])
                      Pexp_construct "true" (fan_ops.ml[95,2855+19]..[95,2855+23])
                      None
                  <case>
                    pattern (fan_ops.ml[96,2879+9]..[96,2879+10])
                      Ppat_any
                    expression (fan_ops.ml[96,2879+14]..[96,2879+19])
                      Pexp_construct "false" (fan_ops.ml[96,2879+14]..[96,2879+19])
                      None
                ]
          ]
    ]
  structure_item (fan_ops.ml[97,2900+0]..[112,3381+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[97,2900+4]..[97,2900+17])
          Ppat_var "ident_of_ctyp" (fan_ops.ml[97,2900+4]..[97,2900+17])
        expression (fan_ops.ml[97,2900+17]..[112,3381+43])
          Pexp_constraint
          expression (fan_ops.ml[98,2935+2]..[112,3381+43])
            Pexp_let Nonrec
            [
              <def>
                pattern (fan_ops.ml[98,2935+6]..[98,2935+11])
                  Ppat_var "error" (fan_ops.ml[98,2935+6]..[98,2935+11])
                expression (fan_ops.ml[99,2949+4]..[102,3045+28])
                  Pexp_function
                  [
                    <case>
                      pattern (fan_ops.ml[100,2962+6]..[100,2962+7])
                        Ppat_var "x" (fan_ops.ml[100,2962+6]..[100,2962+7])
                      expression (fan_ops.ml[101,2973+8]..[102,3045+28])
                        Pexp_apply
                        expression (fan_ops.ml[101,2973+8]..[101,2973+20])
                          Pexp_ident "invalid_argf" (fan_ops.ml[101,2973+8]..[101,2973+20])
                        [
                          <label> ""
                            expression (fan_ops.ml[101,2973+21]..[101,2973+71])
                              Pexp_constant Const_string("ident_of_ctyp: this type %s is not an identifier",None)
                          <label> ""
                            expression (fan_ops.ml[102,3045+11]..[102,3045+27])
                              Pexp_apply
                              expression (fan_ops.ml[102,3045+11]..[102,3045+25])
                                Pexp_ident "Objs.dump_ctyp" (fan_ops.ml[102,3045+11]..[102,3045+25])
                              [
                                <label> ""
                                  expression (fan_ops.ml[102,3045+26]..[102,3045+27])
                                    Pexp_ident "x" (fan_ops.ml[102,3045+26]..[102,3045+27])
                              ]
                        ]
                  ]
            ]
            expression (fan_ops.ml[103,3077+2]..[112,3381+43])
              Pexp_let Rec
              [
                <def>
                  pattern (fan_ops.ml[103,3077+10]..[103,3077+14])
                    Ppat_var "self" (fan_ops.ml[103,3077+10]..[103,3077+14])
                  expression (fan_ops.ml[104,3094+4]..[111,3353+24])
                    Pexp_function
                    [
                      <case>
                        pattern (fan_ops.ml[105,3107+6]..[105,3107+16])
                          Ppat_constraint
                          pattern (fan_ops.ml[105,3107+7]..[105,3107+8])
                            Ppat_var "x" (fan_ops.ml[105,3107+7]..[105,3107+8])
                          core_type (fan_ops.ml[105,3107+11]..[105,3107+15])
                            Ptyp_constr "ctyp" (fan_ops.ml[105,3107+11]..[105,3107+15])
                            []
                        expression (fan_ops.ml[106,3127+9]..[111,3353+23])
                          Pexp_match
                          expression (fan_ops.ml[106,3127+15]..[106,3127+16])
                            Pexp_ident "x" (fan_ops.ml[106,3127+15]..[106,3127+16])
                          [
                            <case>
                              pattern (fan_ops.ml[107,3149+11]..[107,3149+30])
                                Ppat_variant "Apply"
                                Some
                                  pattern (fan_ops.ml[107,3149+11]..[107,3149+30])
                                    Ppat_tuple
                                    [
                                      pattern (fan_ops.ml[107,3149+19]..[107,3149+23])
                                        Ppat_var "_loc" (fan_ops.ml[107,3149+19]..[107,3149+23])
                                      pattern (fan_ops.ml[107,3149+24]..[107,3149+26])
                                        Ppat_var "t1" (fan_ops.ml[107,3149+24]..[107,3149+26])
                                      pattern (fan_ops.ml[107,3149+27]..[107,3149+29])
                                        Ppat_var "t2" (fan_ops.ml[107,3149+27]..[107,3149+29])
                                    ]
                              expression (fan_ops.ml[108,3183+13]..[108,3183+68])
                                Pexp_variant "Apply"
                                Some
                                  expression (fan_ops.ml[108,3183+20]..[108,3183+68])
                                    Pexp_tuple
                                    [
                                      expression (fan_ops.ml[108,3183+21]..[108,3183+25])
                                        Pexp_ident "_loc" (fan_ops.ml[108,3183+21]..[108,3183+25])
                                      expression (fan_ops.ml[108,3183+28]..[108,3183+45])
                                        Pexp_apply
                                        expression (fan_ops.ml[108,3183+28]..[108,3183+32])
                                          Pexp_ident "self" (fan_ops.ml[108,3183+28]..[108,3183+32])
                                        [
                                          <label> ""
                                            expression (fan_ops.ml[108,3183+33]..[108,3183+45])
                                              Pexp_coerce
                                              expression (fan_ops.ml[108,3183+34]..[108,3183+36])
                                                Pexp_ident "t1" (fan_ops.ml[108,3183+34]..[108,3183+36])
                                              None
                                              core_type (fan_ops.ml[108,3183+40]..[108,3183+44])
                                                Ptyp_constr "ctyp" (fan_ops.ml[108,3183+40]..[108,3183+44])
                                                []
                                        ]
                                      expression (fan_ops.ml[108,3183+49]..[108,3183+66])
                                        Pexp_apply
                                        expression (fan_ops.ml[108,3183+49]..[108,3183+53])
                                          Pexp_ident "self" (fan_ops.ml[108,3183+49]..[108,3183+53])
                                        [
                                          <label> ""
                                            expression (fan_ops.ml[108,3183+54]..[108,3183+66])
                                              Pexp_coerce
                                              expression (fan_ops.ml[108,3183+55]..[108,3183+57])
                                                Pexp_ident "t2" (fan_ops.ml[108,3183+55]..[108,3183+57])
                                              None
                                              core_type (fan_ops.ml[108,3183+61]..[108,3183+65])
                                                Ptyp_constr "ctyp" (fan_ops.ml[108,3183+61]..[108,3183+65])
                                                []
                                        ]
                                    ]
                            <case>
                              pattern (fan_ops.ml[109,3252+11]..[109,3252+17])
                                Ppat_variant "Lid"
                                Some
                                  pattern (fan_ops.ml[109,3252+16]..[109,3252+17])
                                    Ppat_any
                              expression (fan_ops.ml[109,3252+21]..[109,3252+28])
                                Pexp_apply
                                expression (fan_ops.ml[109,3252+21]..[109,3252+26])
                                  Pexp_ident "error" (fan_ops.ml[109,3252+21]..[109,3252+26])
                                [
                                  <label> ""
                                    expression (fan_ops.ml[109,3252+27]..[109,3252+28])
                                      Pexp_ident "x" (fan_ops.ml[109,3252+27]..[109,3252+28])
                                ]
                            <case>
                              pattern (fan_ops.ml[110,3281+11]..[110,3281+23])
                                Ppat_alias "i" (fan_ops.ml[110,3281+22]..[110,3281+23])
                                pattern (fan_ops.ml[110,3281+11]..[110,3281+18])
                                  Ppat_type
                                  "ident'" (fan_ops.ml[110,3281+12]..[110,3281+18])
                              expression (fan_ops.ml[110,3281+27]..[110,3281+71])
                                Pexp_ifthenelse
                                expression (fan_ops.ml[110,3281+30]..[110,3281+51])
                                  Pexp_apply
                                  expression (fan_ops.ml[110,3281+30]..[110,3281+49])
                                    Pexp_ident "is_module_longident" (fan_ops.ml[110,3281+30]..[110,3281+49])
                                  [
                                    <label> ""
                                      expression (fan_ops.ml[110,3281+50]..[110,3281+51])
                                        Pexp_ident "i" (fan_ops.ml[110,3281+50]..[110,3281+51])
                                  ]
                                expression (fan_ops.ml[110,3281+57]..[110,3281+58])
                                  Pexp_ident "i" (fan_ops.ml[110,3281+57]..[110,3281+58])
                                Some
                                  expression (fan_ops.ml[110,3281+64]..[110,3281+71])
                                    Pexp_apply
                                    expression (fan_ops.ml[110,3281+64]..[110,3281+69])
                                      Pexp_ident "error" (fan_ops.ml[110,3281+64]..[110,3281+69])
                                    [
                                      <label> ""
                                        expression (fan_ops.ml[110,3281+70]..[110,3281+71])
                                          Pexp_ident "x" (fan_ops.ml[110,3281+70]..[110,3281+71])
                                    ]
                            <case>
                              pattern (fan_ops.ml[111,3353+11]..[111,3353+12])
                                Ppat_any
                              expression (fan_ops.ml[111,3353+16]..[111,3353+23])
                                Pexp_apply
                                expression (fan_ops.ml[111,3353+16]..[111,3353+21])
                                  Pexp_ident "error" (fan_ops.ml[111,3353+16]..[111,3353+21])
                                [
                                  <label> ""
                                    expression (fan_ops.ml[111,3353+22]..[111,3353+23])
                                      Pexp_ident "x" (fan_ops.ml[111,3353+22]..[111,3353+23])
                                ]
                          ]
                    ]
              ]
              expression (fan_ops.ml[112,3381+2]..[112,3381+43])
                Pexp_function
                [
                  <case>
                    pattern (fan_ops.ml[112,3381+13]..[112,3381+24])
                      Ppat_alias "i" (fan_ops.ml[112,3381+23]..[112,3381+24])
                      pattern (fan_ops.ml[112,3381+13]..[112,3381+19])
                        Ppat_type
                        "ident" (fan_ops.ml[112,3381+14]..[112,3381+19])
                    expression (fan_ops.ml[112,3381+28]..[112,3381+29])
                      Pexp_ident "i" (fan_ops.ml[112,3381+28]..[112,3381+29])
                  <case>
                    pattern (fan_ops.ml[112,3381+32]..[112,3381+33])
                      Ppat_var "t" (fan_ops.ml[112,3381+32]..[112,3381+33])
                    expression (fan_ops.ml[112,3381+37]..[112,3381+43])
                      Pexp_apply
                      expression (fan_ops.ml[112,3381+37]..[112,3381+41])
                        Pexp_ident "self" (fan_ops.ml[112,3381+37]..[112,3381+41])
                      [
                        <label> ""
                          expression (fan_ops.ml[112,3381+42]..[112,3381+43])
                            Pexp_ident "t" (fan_ops.ml[112,3381+42]..[112,3381+43])
                      ]
                ]
          core_type (fan_ops.ml[97,2900+19]..[97,2900+32])
            Ptyp_arrow
            ""
            core_type (fan_ops.ml[97,2900+19]..[97,2900+23])
              Ptyp_constr "ctyp" (fan_ops.ml[97,2900+19]..[97,2900+23])
              []
            core_type (fan_ops.ml[97,2900+27]..[97,2900+32])
              Ptyp_constr "ident" (fan_ops.ml[97,2900+27]..[97,2900+32])
              []
    ]
  structure_item (fan_ops.ml[113,3425+0]..[144,4887+48])
    Pstr_value Rec
    [
      <def>
        pattern (fan_ops.ml[113,3425+8]..[113,3425+22])
          Ppat_var "is_irrefut_pat" (fan_ops.ml[113,3425+8]..[113,3425+22])
        expression (fan_ops.ml[114,3450+2]..[144,4887+48])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[115,3461+4]..[115,3461+13])
                Ppat_constraint
                pattern (fan_ops.ml[115,3461+5]..[115,3461+6])
                  Ppat_var "x" (fan_ops.ml[115,3461+5]..[115,3461+6])
                core_type (fan_ops.ml[115,3461+9]..[115,3461+12])
                  Ptyp_constr "pat" (fan_ops.ml[115,3461+9]..[115,3461+12])
                  []
              expression (fan_ops.ml[116,3478+7]..[144,4887+47])
                Pexp_match
                expression (fan_ops.ml[116,3478+13]..[116,3478+14])
                  Pexp_ident "x" (fan_ops.ml[116,3478+13]..[116,3478+14])
                [
                  <case>
                    pattern (fan_ops.ml[117,3498+9]..[117,3498+15])
                      Ppat_variant "Lid"
                      Some
                        pattern (fan_ops.ml[117,3498+14]..[117,3498+15])
                          Ppat_any
                    expression (fan_ops.ml[117,3498+19]..[117,3498+23])
                      Pexp_construct "true" (fan_ops.ml[117,3498+19]..[117,3498+23])
                      None
                  <case>
                    pattern (fan_ops.ml[118,3522+9]..[118,3522+16])
                      Ppat_variant "Bool"
                      Some
                        pattern (fan_ops.ml[118,3522+15]..[118,3522+16])
                          Ppat_any
                    expression (fan_ops.ml[118,3522+20]..[118,3522+25])
                      Pexp_construct "false" (fan_ops.ml[118,3522+20]..[118,3522+25])
                      None
                  <case>
                    pattern (fan_ops.ml[119,3548+9]..[119,3548+16])
                      Ppat_variant "Unit"
                      Some
                        pattern (fan_ops.ml[119,3548+15]..[119,3548+16])
                          Ppat_any
                    expression (fan_ops.ml[119,3548+20]..[119,3548+24])
                      Pexp_construct "true" (fan_ops.ml[119,3548+20]..[119,3548+24])
                      None
                  <case>
                    pattern (fan_ops.ml[120,3573+9]..[120,3573+52])
                      Ppat_or
                      pattern (fan_ops.ml[120,3573+9]..[120,3573+42])
                        Ppat_or
                        pattern (fan_ops.ml[120,3573+9]..[120,3573+25])
                          Ppat_variant "ArrayEmpty"
                          Some
                            pattern (fan_ops.ml[120,3573+21]..[120,3573+25])
                              Ppat_var "_loc" (fan_ops.ml[120,3573+21]..[120,3573+25])
                        pattern (fan_ops.ml[120,3573+26]..[120,3573+42])
                          Ppat_variant "LabelS"
                          Some
                            pattern (fan_ops.ml[120,3573+26]..[120,3573+42])
                              Ppat_tuple
                              [
                                pattern (fan_ops.ml[120,3573+35]..[120,3573+39])
                                  Ppat_var "_loc" (fan_ops.ml[120,3573+35]..[120,3573+39])
                                pattern (fan_ops.ml[120,3573+40]..[120,3573+41])
                                  Ppat_any
                              ]
                      pattern (fan_ops.ml[120,3573+43]..[120,3573+52])
                        Ppat_variant "Any"
                        Some
                          pattern (fan_ops.ml[120,3573+48]..[120,3573+52])
                            Ppat_var "_loc" (fan_ops.ml[120,3573+48]..[120,3573+52])
                    expression (fan_ops.ml[120,3573+56]..[120,3573+60])
                      Pexp_construct "true" (fan_ops.ml[120,3573+56]..[120,3573+60])
                      None
                  <case>
                    pattern (fan_ops.ml[121,3634+9]..[121,3634+21])
                      Ppat_variant "Dot"
                      Some
                        pattern (fan_ops.ml[121,3634+9]..[121,3634+21])
                          Ppat_tuple
                          [
                            pattern (fan_ops.ml[121,3634+15]..[121,3634+16])
                              Ppat_any
                            pattern (fan_ops.ml[121,3634+17]..[121,3634+18])
                              Ppat_any
                            pattern (fan_ops.ml[121,3634+19]..[121,3634+20])
                              Ppat_var "y" (fan_ops.ml[121,3634+19]..[121,3634+20])
                          ]
                    expression (fan_ops.ml[121,3634+25]..[121,3634+57])
                      Pexp_apply
                      expression (fan_ops.ml[121,3634+25]..[121,3634+39])
                        Pexp_ident "is_irrefut_pat" (fan_ops.ml[121,3634+25]..[121,3634+39])
                      [
                        <label> ""
                          expression (fan_ops.ml[121,3634+40]..[121,3634+57])
                            Pexp_coerce
                            expression (fan_ops.ml[121,3634+41]..[121,3634+42])
                              Pexp_ident "y" (fan_ops.ml[121,3634+41]..[121,3634+42])
                            Some
                              core_type (fan_ops.ml[121,3634+45]..[121,3634+48])
                                Ptyp_constr "vid" (fan_ops.ml[121,3634+45]..[121,3634+48])
                                []
                            core_type (fan_ops.ml[121,3634+53]..[121,3634+56])
                              Ptyp_constr "pat" (fan_ops.ml[121,3634+53]..[121,3634+56])
                              []
                      ]
                  <case>
                    pattern (fan_ops.ml[122,3692+9]..[122,3692+39])
                      Ppat_constraint
                      pattern (fan_ops.ml[122,3692+10]..[122,3692+27])
                        Ppat_variant "Alias"
                        Some
                          pattern (fan_ops.ml[122,3692+10]..[122,3692+27])
                            Ppat_tuple
                            [
                              pattern (fan_ops.ml[122,3692+18]..[122,3692+22])
                                Ppat_var "_loc" (fan_ops.ml[122,3692+18]..[122,3692+22])
                              pattern (fan_ops.ml[122,3692+23]..[122,3692+24])
                                Ppat_var "x" (fan_ops.ml[122,3692+23]..[122,3692+24])
                              pattern (fan_ops.ml[122,3692+25]..[122,3692+26])
                                Ppat_any
                            ]
                      core_type (fan_ops.ml[122,3692+30]..[122,3692+38])
                        Ptyp_constr "Astf.pat" (fan_ops.ml[122,3692+30]..[122,3692+38])
                        []
                    expression (fan_ops.ml[122,3692+43]..[122,3692+59])
                      Pexp_apply
                      expression (fan_ops.ml[122,3692+43]..[122,3692+57])
                        Pexp_ident "is_irrefut_pat" (fan_ops.ml[122,3692+43]..[122,3692+57])
                      [
                        <label> ""
                          expression (fan_ops.ml[122,3692+58]..[122,3692+59])
                            Pexp_ident "x" (fan_ops.ml[122,3692+58]..[122,3692+59])
                      ]
                  <case>
                    pattern (fan_ops.ml[123,3752+9]..[123,3752+38])
                      Ppat_constraint
                      pattern (fan_ops.ml[123,3752+10]..[123,3752+26])
                        Ppat_variant "Record"
                        Some
                          pattern (fan_ops.ml[123,3752+10]..[123,3752+26])
                            Ppat_tuple
                            [
                              pattern (fan_ops.ml[123,3752+19]..[123,3752+23])
                                Ppat_var "_loc" (fan_ops.ml[123,3752+19]..[123,3752+23])
                              pattern (fan_ops.ml[123,3752+24]..[123,3752+25])
                                Ppat_var "p" (fan_ops.ml[123,3752+24]..[123,3752+25])
                            ]
                      core_type (fan_ops.ml[123,3752+29]..[123,3752+37])
                        Ptyp_constr "Astf.pat" (fan_ops.ml[123,3752+29]..[123,3752+37])
                        []
                    expression (fan_ops.ml[124,3794+11]..[126,3893+41])
                      Pexp_apply
                      expression (fan_ops.ml[124,3794+11]..[124,3794+23])
                        Pexp_ident "List.for_all" (fan_ops.ml[124,3794+11]..[124,3794+23])
                      [
                        <label> ""
                          expression (fan_ops.ml[125,3818+14]..[125,3818+73])
                            Pexp_function
                            [
                              <case>
                                pattern (fan_ops.ml[125,3818+25]..[125,3818+41])
                                  Ppat_variant "RecBind"
                                  Some
                                    pattern (fan_ops.ml[125,3818+25]..[125,3818+41])
                                      Ppat_tuple
                                      [
                                        pattern (fan_ops.ml[125,3818+35]..[125,3818+36])
                                          Ppat_any
                                        pattern (fan_ops.ml[125,3818+37]..[125,3818+38])
                                          Ppat_any
                                        pattern (fan_ops.ml[125,3818+39]..[125,3818+40])
                                          Ppat_var "p" (fan_ops.ml[125,3818+39]..[125,3818+40])
                                      ]
                                expression (fan_ops.ml[125,3818+45]..[125,3818+61])
                                  Pexp_apply
                                  expression (fan_ops.ml[125,3818+45]..[125,3818+59])
                                    Pexp_ident "is_irrefut_pat" (fan_ops.ml[125,3818+45]..[125,3818+59])
                                  [
                                    <label> ""
                                      expression (fan_ops.ml[125,3818+60]..[125,3818+61])
                                        Pexp_ident "p" (fan_ops.ml[125,3818+60]..[125,3818+61])
                                  ]
                              <case>
                                pattern (fan_ops.ml[125,3818+64]..[125,3818+65])
                                  Ppat_any
                                expression (fan_ops.ml[125,3818+69]..[125,3818+73])
                                  Pexp_construct "true" (fan_ops.ml[125,3818+69]..[125,3818+73])
                                  None
                            ]
                        <label> ""
                          expression (fan_ops.ml[126,3893+14]..[126,3893+40])
                            Pexp_apply
                            expression (fan_ops.ml[126,3893+14]..[126,3893+35])
                              Pexp_ident "Ast_basic.list_of_sem" (fan_ops.ml[126,3893+14]..[126,3893+35])
                            [
                              <label> ""
                                expression (fan_ops.ml[126,3893+36]..[126,3893+37])
                                  Pexp_ident "p" (fan_ops.ml[126,3893+36]..[126,3893+37])
                              <label> ""
                                expression (fan_ops.ml[126,3893+38]..[126,3893+40])
                                  Pexp_construct "[]" (fan_ops.ml[126,3893+38]..[126,3893+40])
                                  None
                            ]
                      ]
                  <case>
                    pattern (fan_ops.ml[127,3935+9]..[127,3935+23])
                      Ppat_variant "Sem"
                      Some
                        pattern (fan_ops.ml[127,3935+9]..[127,3935+23])
                          Ppat_tuple
                          [
                            pattern (fan_ops.ml[127,3935+15]..[127,3935+16])
                              Ppat_any
                            pattern (fan_ops.ml[127,3935+17]..[127,3935+19])
                              Ppat_var "p1" (fan_ops.ml[127,3935+17]..[127,3935+19])
                            pattern (fan_ops.ml[127,3935+20]..[127,3935+22])
                              Ppat_var "p2" (fan_ops.ml[127,3935+20]..[127,3935+22])
                          ]
                    expression (fan_ops.ml[127,3935+27]..[127,3935+69])
                      Pexp_apply
                      expression (fan_ops.ml[127,3935+47]..[127,3935+49])
                        Pexp_ident "&&" (fan_ops.ml[127,3935+47]..[127,3935+49])
                      [
                        <label> ""
                          expression (fan_ops.ml[127,3935+28]..[127,3935+45])
                            Pexp_apply
                            expression (fan_ops.ml[127,3935+28]..[127,3935+42])
                              Pexp_ident "is_irrefut_pat" (fan_ops.ml[127,3935+28]..[127,3935+42])
                            [
                              <label> ""
                                expression (fan_ops.ml[127,3935+43]..[127,3935+45])
                                  Pexp_ident "p1" (fan_ops.ml[127,3935+43]..[127,3935+45])
                            ]
                        <label> ""
                          expression (fan_ops.ml[127,3935+51]..[127,3935+68])
                            Pexp_apply
                            expression (fan_ops.ml[127,3935+51]..[127,3935+65])
                              Pexp_ident "is_irrefut_pat" (fan_ops.ml[127,3935+51]..[127,3935+65])
                            [
                              <label> ""
                                expression (fan_ops.ml[127,3935+66]..[127,3935+68])
                                  Pexp_ident "p2" (fan_ops.ml[127,3935+66]..[127,3935+68])
                            ]
                      ]
                  <case>
                    pattern (fan_ops.ml[128,4005+9]..[128,4005+23])
                      Ppat_variant "Com"
                      Some
                        pattern (fan_ops.ml[128,4005+9]..[128,4005+23])
                          Ppat_tuple
                          [
                            pattern (fan_ops.ml[128,4005+15]..[128,4005+16])
                              Ppat_any
                            pattern (fan_ops.ml[128,4005+17]..[128,4005+19])
                              Ppat_var "p1" (fan_ops.ml[128,4005+17]..[128,4005+19])
                            pattern (fan_ops.ml[128,4005+20]..[128,4005+22])
                              Ppat_var "p2" (fan_ops.ml[128,4005+20]..[128,4005+22])
                          ]
                    expression (fan_ops.ml[128,4005+27]..[128,4005+69])
                      Pexp_apply
                      expression (fan_ops.ml[128,4005+47]..[128,4005+49])
                        Pexp_ident "&&" (fan_ops.ml[128,4005+47]..[128,4005+49])
                      [
                        <label> ""
                          expression (fan_ops.ml[128,4005+28]..[128,4005+45])
                            Pexp_apply
                            expression (fan_ops.ml[128,4005+28]..[128,4005+42])
                              Pexp_ident "is_irrefut_pat" (fan_ops.ml[128,4005+28]..[128,4005+42])
                            [
                              <label> ""
                                expression (fan_ops.ml[128,4005+43]..[128,4005+45])
                                  Pexp_ident "p1" (fan_ops.ml[128,4005+43]..[128,4005+45])
                            ]
                        <label> ""
                          expression (fan_ops.ml[128,4005+51]..[128,4005+68])
                            Pexp_apply
                            expression (fan_ops.ml[128,4005+51]..[128,4005+65])
                              Pexp_ident "is_irrefut_pat" (fan_ops.ml[128,4005+51]..[128,4005+65])
                            [
                              <label> ""
                                expression (fan_ops.ml[128,4005+66]..[128,4005+68])
                                  Pexp_ident "p2" (fan_ops.ml[128,4005+66]..[128,4005+68])
                            ]
                      ]
                  <case>
                    pattern (fan_ops.ml[129,4075+9]..[129,4075+23])
                      Ppat_variant "Bar"
                      Some
                        pattern (fan_ops.ml[129,4075+9]..[129,4075+23])
                          Ppat_tuple
                          [
                            pattern (fan_ops.ml[129,4075+15]..[129,4075+16])
                              Ppat_any
                            pattern (fan_ops.ml[129,4075+17]..[129,4075+19])
                              Ppat_var "p1" (fan_ops.ml[129,4075+17]..[129,4075+19])
                            pattern (fan_ops.ml[129,4075+20]..[129,4075+22])
                              Ppat_var "p2" (fan_ops.ml[129,4075+20]..[129,4075+22])
                          ]
                    expression (fan_ops.ml[129,4075+27]..[129,4075+69])
                      Pexp_apply
                      expression (fan_ops.ml[129,4075+47]..[129,4075+49])
                        Pexp_ident "&&" (fan_ops.ml[129,4075+47]..[129,4075+49])
                      [
                        <label> ""
                          expression (fan_ops.ml[129,4075+28]..[129,4075+45])
                            Pexp_apply
                            expression (fan_ops.ml[129,4075+28]..[129,4075+42])
                              Pexp_ident "is_irrefut_pat" (fan_ops.ml[129,4075+28]..[129,4075+42])
                            [
                              <label> ""
                                expression (fan_ops.ml[129,4075+43]..[129,4075+45])
                                  Pexp_ident "p1" (fan_ops.ml[129,4075+43]..[129,4075+45])
                            ]
                        <label> ""
                          expression (fan_ops.ml[129,4075+51]..[129,4075+68])
                            Pexp_apply
                            expression (fan_ops.ml[129,4075+51]..[129,4075+65])
                              Pexp_ident "is_irrefut_pat" (fan_ops.ml[129,4075+51]..[129,4075+65])
                            [
                              <label> ""
                                expression (fan_ops.ml[129,4075+66]..[129,4075+68])
                                  Pexp_ident "p2" (fan_ops.ml[129,4075+66]..[129,4075+68])
                            ]
                      ]
                  <case>
                    pattern (fan_ops.ml[130,4145+9]..[130,4145+23])
                      Ppat_variant "App"
                      Some
                        pattern (fan_ops.ml[130,4145+9]..[130,4145+23])
                          Ppat_tuple
                          [
                            pattern (fan_ops.ml[130,4145+15]..[130,4145+16])
                              Ppat_any
                            pattern (fan_ops.ml[130,4145+17]..[130,4145+19])
                              Ppat_var "p1" (fan_ops.ml[130,4145+17]..[130,4145+19])
                            pattern (fan_ops.ml[130,4145+20]..[130,4145+22])
                              Ppat_var "p2" (fan_ops.ml[130,4145+20]..[130,4145+22])
                          ]
                    expression (fan_ops.ml[130,4145+27]..[130,4145+69])
                      Pexp_apply
                      expression (fan_ops.ml[130,4145+47]..[130,4145+49])
                        Pexp_ident "&&" (fan_ops.ml[130,4145+47]..[130,4145+49])
                      [
                        <label> ""
                          expression (fan_ops.ml[130,4145+28]..[130,4145+45])
                            Pexp_apply
                            expression (fan_ops.ml[130,4145+28]..[130,4145+42])
                              Pexp_ident "is_irrefut_pat" (fan_ops.ml[130,4145+28]..[130,4145+42])
                            [
                              <label> ""
                                expression (fan_ops.ml[130,4145+43]..[130,4145+45])
                                  Pexp_ident "p1" (fan_ops.ml[130,4145+43]..[130,4145+45])
                            ]
                        <label> ""
                          expression (fan_ops.ml[130,4145+51]..[130,4145+68])
                            Pexp_apply
                            expression (fan_ops.ml[130,4145+51]..[130,4145+65])
                              Pexp_ident "is_irrefut_pat" (fan_ops.ml[130,4145+51]..[130,4145+65])
                            [
                              <label> ""
                                expression (fan_ops.ml[130,4145+66]..[130,4145+68])
                                  Pexp_ident "p2" (fan_ops.ml[130,4145+66]..[130,4145+68])
                            ]
                      ]
                  <case>
                    pattern (fan_ops.ml[131,4215+9]..[131,4215+28])
                      Ppat_variant "Constraint"
                      Some
                        pattern (fan_ops.ml[131,4215+9]..[131,4215+28])
                          Ppat_tuple
                          [
                            pattern (fan_ops.ml[131,4215+22]..[131,4215+23])
                              Ppat_any
                            pattern (fan_ops.ml[131,4215+24]..[131,4215+25])
                              Ppat_var "p" (fan_ops.ml[131,4215+24]..[131,4215+25])
                            pattern (fan_ops.ml[131,4215+26]..[131,4215+27])
                              Ppat_any
                          ]
                    expression (fan_ops.ml[131,4215+32]..[131,4215+48])
                      Pexp_apply
                      expression (fan_ops.ml[131,4215+32]..[131,4215+46])
                        Pexp_ident "is_irrefut_pat" (fan_ops.ml[131,4215+32]..[131,4215+46])
                      [
                        <label> ""
                          expression (fan_ops.ml[131,4215+47]..[131,4215+48])
                            Pexp_ident "p" (fan_ops.ml[131,4215+47]..[131,4215+48])
                      ]
                  <case>
                    pattern (fan_ops.ml[132,4264+9]..[132,4264+19])
                      Ppat_variant "Par"
                      Some
                        pattern (fan_ops.ml[132,4264+9]..[132,4264+19])
                          Ppat_tuple
                          [
                            pattern (fan_ops.ml[132,4264+15]..[132,4264+16])
                              Ppat_any
                            pattern (fan_ops.ml[132,4264+17]..[132,4264+18])
                              Ppat_var "p" (fan_ops.ml[132,4264+17]..[132,4264+18])
                          ]
                    expression (fan_ops.ml[132,4264+23]..[132,4264+39])
                      Pexp_apply
                      expression (fan_ops.ml[132,4264+23]..[132,4264+37])
                        Pexp_ident "is_irrefut_pat" (fan_ops.ml[132,4264+23]..[132,4264+37])
                      [
                        <label> ""
                          expression (fan_ops.ml[132,4264+38]..[132,4264+39])
                            Pexp_ident "p" (fan_ops.ml[132,4264+38]..[132,4264+39])
                      ]
                  <case>
                    pattern (fan_ops.ml[133,4304+9]..[133,4304+20])
                      Ppat_variant "OptLablS"
                      Some
                        pattern (fan_ops.ml[133,4304+19]..[133,4304+20])
                          Ppat_any
                    expression (fan_ops.ml[133,4304+24]..[133,4304+28])
                      Pexp_construct "true" (fan_ops.ml[133,4304+24]..[133,4304+28])
                      None
                  <case>
                    pattern (fan_ops.ml[134,4333+9]..[134,4333+48])
                      Ppat_or
                      pattern (fan_ops.ml[134,4333+9]..[134,4333+25])
                        Ppat_variant "OptLabl"
                        Some
                          pattern (fan_ops.ml[134,4333+9]..[134,4333+25])
                            Ppat_tuple
                            [
                              pattern (fan_ops.ml[134,4333+19]..[134,4333+20])
                                Ppat_any
                              pattern (fan_ops.ml[134,4333+21]..[134,4333+22])
                                Ppat_any
                              pattern (fan_ops.ml[134,4333+23]..[134,4333+24])
                                Ppat_var "p" (fan_ops.ml[134,4333+23]..[134,4333+24])
                            ]
                      pattern (fan_ops.ml[134,4333+26]..[134,4333+48])
                        Ppat_variant "OptLablExpr"
                        Some
                          pattern (fan_ops.ml[134,4333+26]..[134,4333+48])
                            Ppat_tuple
                            [
                              pattern (fan_ops.ml[134,4333+40]..[134,4333+41])
                                Ppat_any
                              pattern (fan_ops.ml[134,4333+42]..[134,4333+43])
                                Ppat_any
                              pattern (fan_ops.ml[134,4333+44]..[134,4333+45])
                                Ppat_var "p" (fan_ops.ml[134,4333+44]..[134,4333+45])
                              pattern (fan_ops.ml[134,4333+46]..[134,4333+47])
                                Ppat_any
                            ]
                    expression (fan_ops.ml[134,4333+52]..[134,4333+68])
                      Pexp_apply
                      expression (fan_ops.ml[134,4333+52]..[134,4333+66])
                        Pexp_ident "is_irrefut_pat" (fan_ops.ml[134,4333+52]..[134,4333+66])
                      [
                        <label> ""
                          expression (fan_ops.ml[134,4333+67]..[134,4333+68])
                            Pexp_ident "p" (fan_ops.ml[134,4333+67]..[134,4333+68])
                      ]
                  <case>
                    pattern (fan_ops.ml[135,4402+9]..[135,4402+35])
                      Ppat_or
                      pattern (fan_ops.ml[135,4402+9]..[135,4402+23])
                        Ppat_variant "Label"
                        Some
                          pattern (fan_ops.ml[135,4402+9]..[135,4402+23])
                            Ppat_tuple
                            [
                              pattern (fan_ops.ml[135,4402+17]..[135,4402+18])
                                Ppat_any
                              pattern (fan_ops.ml[135,4402+19]..[135,4402+20])
                                Ppat_any
                              pattern (fan_ops.ml[135,4402+21]..[135,4402+22])
                                Ppat_var "p" (fan_ops.ml[135,4402+21]..[135,4402+22])
                            ]
                      pattern (fan_ops.ml[135,4402+24]..[135,4402+35])
                        Ppat_variant "Lazy"
                        Some
                          pattern (fan_ops.ml[135,4402+24]..[135,4402+35])
                            Ppat_tuple
                            [
                              pattern (fan_ops.ml[135,4402+31]..[135,4402+32])
                                Ppat_any
                              pattern (fan_ops.ml[135,4402+33]..[135,4402+34])
                                Ppat_var "p" (fan_ops.ml[135,4402+33]..[135,4402+34])
                            ]
                    expression (fan_ops.ml[135,4402+39]..[135,4402+55])
                      Pexp_apply
                      expression (fan_ops.ml[135,4402+39]..[135,4402+53])
                        Pexp_ident "is_irrefut_pat" (fan_ops.ml[135,4402+39]..[135,4402+53])
                      [
                        <label> ""
                          expression (fan_ops.ml[135,4402+54]..[135,4402+55])
                            Pexp_ident "p" (fan_ops.ml[135,4402+54]..[135,4402+55])
                      ]
                  <case>
                    pattern (fan_ops.ml[136,4458+9]..[136,4458+15])
                      Ppat_variant "Uid"
                      Some
                        pattern (fan_ops.ml[136,4458+14]..[136,4458+15])
                          Ppat_any
                    expression (fan_ops.ml[136,4458+19]..[136,4458+24])
                      Pexp_construct "false" (fan_ops.ml[136,4458+19]..[136,4458+24])
                      None
                  <case>
                    pattern (fan_ops.ml[137,4483+9]..[137,4483+44])
                      Ppat_or
                      pattern (fan_ops.ml[137,4483+9]..[137,4483+24])
                        Ppat_variant "ModuleUnpack"
                        Some
                          pattern (fan_ops.ml[137,4483+23]..[137,4483+24])
                            Ppat_any
                      pattern (fan_ops.ml[137,4483+25]..[137,4483+44])
                        Ppat_variant "ModuleConstraint"
                        Some
                          pattern (fan_ops.ml[137,4483+43]..[137,4483+44])
                            Ppat_any
                    expression (fan_ops.ml[137,4483+48]..[137,4483+52])
                      Pexp_construct "true" (fan_ops.ml[137,4483+48]..[137,4483+52])
                      None
                  <case>
                    pattern (fan_ops.ml[138,4536+9]..[138,4536+15])
                      Ppat_variant "Ant"
                      Some
                        pattern (fan_ops.ml[138,4536+14]..[138,4536+15])
                          Ppat_any
                    expression (fan_ops.ml[138,4536+19]..[138,4536+24])
                      Pexp_construct "false" (fan_ops.ml[138,4536+19]..[138,4536+24])
                      None
                  <case>
                    pattern (fan_ops.ml[139,4561+9]..[144,4887+38])
                      Ppat_or
                      pattern (fan_ops.ml[139,4561+9]..[143,4817+69])
                        Ppat_or
                        pattern (fan_ops.ml[139,4561+9]..[143,4817+36])
                          Ppat_or
                          pattern (fan_ops.ml[139,4561+9]..[142,4751+65])
                            Ppat_or
                            pattern (fan_ops.ml[139,4561+9]..[142,4751+38])
                              Ppat_or
                              pattern (fan_ops.ml[139,4561+9]..[141,4679+71])
                                Ppat_or
                                pattern (fan_ops.ml[139,4561+9]..[141,4679+42])
                                  Ppat_or
                                  pattern (fan_ops.ml[139,4561+9]..[140,4611+67])
                                    Ppat_or
                                    pattern (fan_ops.ml[139,4561+9]..[140,4611+40])
                                      Ppat_or
                                      pattern (fan_ops.ml[139,4561+9]..[139,4561+49])
                                        Ppat_or
                                        pattern (fan_ops.ml[139,4561+9]..[139,4561+22])
                                          Ppat_variant "Vrn"
                                          Some
                                            pattern (fan_ops.ml[139,4561+9]..[139,4561+22])
                                              Ppat_tuple
                                              [
                                                pattern (fan_ops.ml[139,4561+15]..[139,4561+19])
                                                  Ppat_var "_loc" (fan_ops.ml[139,4561+15]..[139,4561+19])
                                                pattern (fan_ops.ml[139,4561+20]..[139,4561+21])
                                                  Ppat_any
                                              ]
                                        pattern (fan_ops.ml[139,4561+23]..[139,4561+49])
                                          Ppat_constraint
                                          pattern (fan_ops.ml[139,4561+24]..[139,4561+37])
                                            Ppat_variant "Str"
                                            Some
                                              pattern (fan_ops.ml[139,4561+24]..[139,4561+37])
                                                Ppat_tuple
                                                [
                                                  pattern (fan_ops.ml[139,4561+30]..[139,4561+34])
                                                    Ppat_var "_loc" (fan_ops.ml[139,4561+30]..[139,4561+34])
                                                  pattern (fan_ops.ml[139,4561+35]..[139,4561+36])
                                                    Ppat_any
                                                ]
                                          core_type (fan_ops.ml[139,4561+40]..[139,4561+48])
                                            Ptyp_constr "Astf.pat" (fan_ops.ml[139,4561+40]..[139,4561+48])
                                            []
                                      pattern (fan_ops.ml[140,4611+10]..[140,4611+40])
                                        Ppat_constraint
                                        pattern (fan_ops.ml[140,4611+11]..[140,4611+28])
                                          Ppat_variant "PaRng"
                                          Some
                                            pattern (fan_ops.ml[140,4611+11]..[140,4611+28])
                                              Ppat_tuple
                                              [
                                                pattern (fan_ops.ml[140,4611+19]..[140,4611+23])
                                                  Ppat_var "_loc" (fan_ops.ml[140,4611+19]..[140,4611+23])
                                                pattern (fan_ops.ml[140,4611+24]..[140,4611+25])
                                                  Ppat_any
                                                pattern (fan_ops.ml[140,4611+26]..[140,4611+27])
                                                  Ppat_any
                                              ]
                                        core_type (fan_ops.ml[140,4611+31]..[140,4611+39])
                                          Ptyp_constr "Astf.pat" (fan_ops.ml[140,4611+31]..[140,4611+39])
                                          []
                                    pattern (fan_ops.ml[140,4611+41]..[140,4611+67])
                                      Ppat_constraint
                                      pattern (fan_ops.ml[140,4611+42]..[140,4611+55])
                                        Ppat_variant "Flo"
                                        Some
                                          pattern (fan_ops.ml[140,4611+42]..[140,4611+55])
                                            Ppat_tuple
                                            [
                                              pattern (fan_ops.ml[140,4611+48]..[140,4611+52])
                                                Ppat_var "_loc" (fan_ops.ml[140,4611+48]..[140,4611+52])
                                              pattern (fan_ops.ml[140,4611+53]..[140,4611+54])
                                                Ppat_any
                                            ]
                                      core_type (fan_ops.ml[140,4611+58]..[140,4611+66])
                                        Ptyp_constr "Astf.pat" (fan_ops.ml[140,4611+58]..[140,4611+66])
                                        []
                                  pattern (fan_ops.ml[141,4679+10]..[141,4679+42])
                                    Ppat_constraint
                                    pattern (fan_ops.ml[141,4679+11]..[141,4679+30])
                                      Ppat_variant "Nativeint"
                                      Some
                                        pattern (fan_ops.ml[141,4679+11]..[141,4679+30])
                                          Ppat_tuple
                                          [
                                            pattern (fan_ops.ml[141,4679+23]..[141,4679+27])
                                              Ppat_var "_loc" (fan_ops.ml[141,4679+23]..[141,4679+27])
                                            pattern (fan_ops.ml[141,4679+28]..[141,4679+29])
                                              Ppat_any
                                          ]
                                    core_type (fan_ops.ml[141,4679+33]..[141,4679+41])
                                      Ptyp_constr "Astf.pat" (fan_ops.ml[141,4679+33]..[141,4679+41])
                                      []
                                pattern (fan_ops.ml[141,4679+43]..[141,4679+71])
                                  Ppat_constraint
                                  pattern (fan_ops.ml[141,4679+44]..[141,4679+59])
                                    Ppat_variant "Int64"
                                    Some
                                      pattern (fan_ops.ml[141,4679+44]..[141,4679+59])
                                        Ppat_tuple
                                        [
                                          pattern (fan_ops.ml[141,4679+52]..[141,4679+56])
                                            Ppat_var "_loc" (fan_ops.ml[141,4679+52]..[141,4679+56])
                                          pattern (fan_ops.ml[141,4679+57]..[141,4679+58])
                                            Ppat_any
                                        ]
                                  core_type (fan_ops.ml[141,4679+62]..[141,4679+70])
                                    Ptyp_constr "Astf.pat" (fan_ops.ml[141,4679+62]..[141,4679+70])
                                    []
                              pattern (fan_ops.ml[142,4751+10]..[142,4751+38])
                                Ppat_constraint
                                pattern (fan_ops.ml[142,4751+11]..[142,4751+26])
                                  Ppat_variant "Int32"
                                  Some
                                    pattern (fan_ops.ml[142,4751+11]..[142,4751+26])
                                      Ppat_tuple
                                      [
                                        pattern (fan_ops.ml[142,4751+19]..[142,4751+23])
                                          Ppat_var "_loc" (fan_ops.ml[142,4751+19]..[142,4751+23])
                                        pattern (fan_ops.ml[142,4751+24]..[142,4751+25])
                                          Ppat_any
                                      ]
                                core_type (fan_ops.ml[142,4751+29]..[142,4751+37])
                                  Ptyp_constr "Astf.pat" (fan_ops.ml[142,4751+29]..[142,4751+37])
                                  []
                            pattern (fan_ops.ml[142,4751+39]..[142,4751+65])
                              Ppat_constraint
                              pattern (fan_ops.ml[142,4751+40]..[142,4751+53])
                                Ppat_variant "Int"
                                Some
                                  pattern (fan_ops.ml[142,4751+40]..[142,4751+53])
                                    Ppat_tuple
                                    [
                                      pattern (fan_ops.ml[142,4751+46]..[142,4751+50])
                                        Ppat_var "_loc" (fan_ops.ml[142,4751+46]..[142,4751+50])
                                      pattern (fan_ops.ml[142,4751+51]..[142,4751+52])
                                        Ppat_any
                                    ]
                              core_type (fan_ops.ml[142,4751+56]..[142,4751+64])
                                Ptyp_constr "Astf.pat" (fan_ops.ml[142,4751+56]..[142,4751+64])
                                []
                          pattern (fan_ops.ml[143,4817+10]..[143,4817+36])
                            Ppat_constraint
                            pattern (fan_ops.ml[143,4817+11]..[143,4817+24])
                              Ppat_variant "Chr"
                              Some
                                pattern (fan_ops.ml[143,4817+11]..[143,4817+24])
                                  Ppat_tuple
                                  [
                                    pattern (fan_ops.ml[143,4817+17]..[143,4817+21])
                                      Ppat_var "_loc" (fan_ops.ml[143,4817+17]..[143,4817+21])
                                    pattern (fan_ops.ml[143,4817+22]..[143,4817+23])
                                      Ppat_any
                                  ]
                            core_type (fan_ops.ml[143,4817+27]..[143,4817+35])
                              Ptyp_constr "Astf.pat" (fan_ops.ml[143,4817+27]..[143,4817+35])
                              []
                        pattern (fan_ops.ml[143,4817+37]..[143,4817+69])
                          Ppat_constraint
                          pattern (fan_ops.ml[143,4817+38]..[143,4817+57])
                            Ppat_variant "ClassPath"
                            Some
                              pattern (fan_ops.ml[143,4817+38]..[143,4817+57])
                                Ppat_tuple
                                [
                                  pattern (fan_ops.ml[143,4817+50]..[143,4817+54])
                                    Ppat_var "_loc" (fan_ops.ml[143,4817+50]..[143,4817+54])
                                  pattern (fan_ops.ml[143,4817+55]..[143,4817+56])
                                    Ppat_any
                                ]
                          core_type (fan_ops.ml[143,4817+60]..[143,4817+68])
                            Ptyp_constr "Astf.pat" (fan_ops.ml[143,4817+60]..[143,4817+68])
                            []
                      pattern (fan_ops.ml[144,4887+10]..[144,4887+38])
                        Ppat_constraint
                        pattern (fan_ops.ml[144,4887+11]..[144,4887+26])
                          Ppat_variant "Array"
                          Some
                            pattern (fan_ops.ml[144,4887+11]..[144,4887+26])
                              Ppat_tuple
                              [
                                pattern (fan_ops.ml[144,4887+19]..[144,4887+23])
                                  Ppat_var "_loc" (fan_ops.ml[144,4887+19]..[144,4887+23])
                                pattern (fan_ops.ml[144,4887+24]..[144,4887+25])
                                  Ppat_any
                              ]
                        core_type (fan_ops.ml[144,4887+29]..[144,4887+37])
                          Ptyp_constr "Astf.pat" (fan_ops.ml[144,4887+29]..[144,4887+37])
                          []
                    expression (fan_ops.ml[144,4887+42]..[144,4887+47])
                      Pexp_construct "false" (fan_ops.ml[144,4887+42]..[144,4887+47])
                      None
                ]
          ]
    ]
  structure_item (fan_ops.ml[145,4936+0]..[152,5119+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[145,4936+4]..[145,4936+18])
          Ppat_var "array_of_array" (fan_ops.ml[145,4936+4]..[145,4936+18])
        expression (fan_ops.ml[146,4957+2]..[152,5119+59])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[147,4968+4]..[147,4968+7])
                Ppat_var "arr" (fan_ops.ml[147,4968+4]..[147,4968+7])
              expression (fan_ops.ml[148,4979+7]..[152,5119+58])
                Pexp_match
                expression (fan_ops.ml[148,4979+13]..[148,4979+16])
                  Pexp_ident "arr" (fan_ops.ml[148,4979+13]..[148,4979+16])
                [
                  <case>
                    pattern (fan_ops.ml[149,5001+9]..[149,5001+13])
                      Ppat_array
                      []
                    expression (fan_ops.ml[149,5001+17]..[149,5001+39])
                      Pexp_variant "ArrayEmpty"
                      Some
                        expression (fan_ops.ml[149,5001+29]..[149,5001+39])
                          Pexp_ident "Locf.ghost" (fan_ops.ml[149,5001+29]..[149,5001+39])
                  <case>
                    pattern (fan_ops.ml[150,5041+9]..[150,5041+10])
                      Ppat_any
                    expression (fan_ops.ml[151,5055+11]..[152,5119+58])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (fan_ops.ml[151,5055+15]..[151,5055+20])
                            Ppat_var "items" (fan_ops.ml[151,5055+15]..[151,5055+20])
                          expression (fan_ops.ml[151,5055+23]..[151,5055+60])
                            Pexp_apply
                            expression (fan_ops.ml[151,5055+46]..[151,5055+48])
                              Pexp_ident "|>" (fan_ops.ml[151,5055+46]..[151,5055+48])
                            [
                              <label> ""
                                expression (fan_ops.ml[151,5055+24]..[151,5055+44])
                                  Pexp_apply
                                  expression (fan_ops.ml[151,5055+28]..[151,5055+30])
                                    Pexp_ident "|>" (fan_ops.ml[151,5055+28]..[151,5055+30])
                                  [
                                    <label> ""
                                      expression (fan_ops.ml[151,5055+24]..[151,5055+27])
                                        Pexp_ident "arr" (fan_ops.ml[151,5055+24]..[151,5055+27])
                                    <label> ""
                                      expression (fan_ops.ml[151,5055+31]..[151,5055+44])
                                        Pexp_ident "Array.to_list" (fan_ops.ml[151,5055+31]..[151,5055+44])
                                  ]
                              <label> ""
                                expression (fan_ops.ml[151,5055+49]..[151,5055+60])
                                  Pexp_ident "sem_of_list" (fan_ops.ml[151,5055+49]..[151,5055+60])
                            ]
                      ]
                      expression (fan_ops.ml[152,5119+11]..[152,5119+58])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (fan_ops.ml[152,5119+15]..[152,5119+19])
                              Ppat_var "_loc" (fan_ops.ml[152,5119+15]..[152,5119+19])
                            expression (fan_ops.ml[152,5119+22]..[152,5119+34])
                              Pexp_apply
                              expression (fan_ops.ml[152,5119+22]..[152,5119+28])
                                Pexp_ident "loc_of" (fan_ops.ml[152,5119+22]..[152,5119+28])
                              [
                                <label> ""
                                  expression (fan_ops.ml[152,5119+29]..[152,5119+34])
                                    Pexp_ident "items" (fan_ops.ml[152,5119+29]..[152,5119+34])
                              ]
                        ]
                        expression (fan_ops.ml[152,5119+38]..[152,5119+58])
                          Pexp_variant "Array"
                          Some
                            expression (fan_ops.ml[152,5119+45]..[152,5119+58])
                              Pexp_tuple
                              [
                                expression (fan_ops.ml[152,5119+46]..[152,5119+50])
                                  Pexp_ident "_loc" (fan_ops.ml[152,5119+46]..[152,5119+50])
                                expression (fan_ops.ml[152,5119+52]..[152,5119+57])
                                  Pexp_ident "items" (fan_ops.ml[152,5119+52]..[152,5119+57])
                              ]
                ]
          ]
    ]
  structure_item (fan_ops.ml[153,5179+0]..[160,5293+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[153,5179+4]..[153,5179+14])
          Ppat_var "meta_array" (fan_ops.ml[153,5179+4]..[153,5179+14])
        expression (fan_ops.ml[154,5196+2]..[160,5293+77])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[155,5207+4]..[155,5207+8])
                Ppat_var "mf_a" (fan_ops.ml[155,5207+4]..[155,5207+8])
              expression (fan_ops.ml[156,5219+7]..[160,5293+76])
                Pexp_function
                [
                  <case>
                    pattern (fan_ops.ml[157,5235+9]..[157,5235+13])
                      Ppat_var "_loc" (fan_ops.ml[157,5235+9]..[157,5235+13])
                    expression (fan_ops.ml[158,5252+12]..[160,5293+75])
                      Pexp_function
                      [
                        <case>
                          pattern (fan_ops.ml[159,5273+14]..[159,5273+16])
                            Ppat_var "ls" (fan_ops.ml[159,5273+14]..[159,5273+16])
                          expression (fan_ops.ml[160,5293+16]..[160,5293+75])
                            Pexp_apply
                            expression (fan_ops.ml[160,5293+16]..[160,5293+30])
                              Pexp_ident "array_of_array" (fan_ops.ml[160,5293+16]..[160,5293+30])
                            [
                              <label> ""
                                expression (fan_ops.ml[160,5293+32]..[160,5293+74])
                                  Pexp_apply
                                  expression (fan_ops.ml[160,5293+32]..[160,5293+41])
                                    Pexp_ident "Array.map" (fan_ops.ml[160,5293+32]..[160,5293+41])
                                  [
                                    <label> ""
                                      expression (fan_ops.ml[160,5293+43]..[160,5293+70])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (fan_ops.ml[160,5293+54]..[160,5293+55])
                                              Ppat_var "x" (fan_ops.ml[160,5293+54]..[160,5293+55])
                                            expression (fan_ops.ml[160,5293+59]..[160,5293+70])
                                              Pexp_apply
                                              expression (fan_ops.ml[160,5293+59]..[160,5293+63])
                                                Pexp_ident "mf_a" (fan_ops.ml[160,5293+59]..[160,5293+63])
                                              [
                                                <label> ""
                                                  expression (fan_ops.ml[160,5293+64]..[160,5293+68])
                                                    Pexp_ident "_loc" (fan_ops.ml[160,5293+64]..[160,5293+68])
                                                <label> ""
                                                  expression (fan_ops.ml[160,5293+69]..[160,5293+70])
                                                    Pexp_ident "x" (fan_ops.ml[160,5293+69]..[160,5293+70])
                                              ]
                                        ]
                                    <label> ""
                                      expression (fan_ops.ml[160,5293+72]..[160,5293+74])
                                        Pexp_ident "ls" (fan_ops.ml[160,5293+72]..[160,5293+74])
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (fan_ops.ml[161,5371+0]..[240,8933+80])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[161,5371+4]..[161,5371+16])
          Ppat_var "bigarray_get" (fan_ops.ml[161,5371+4]..[161,5371+16])
        expression (fan_ops.ml[162,5390+2]..[240,8933+80])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[163,5401+4]..[163,5401+7])
                Ppat_var "loc" (fan_ops.ml[163,5401+4]..[163,5401+7])
              expression (fan_ops.ml[164,5412+7]..[240,8933+79])
                Pexp_function
                [
                  <case>
                    pattern (fan_ops.ml[165,5428+9]..[165,5428+12])
                      Ppat_var "arr" (fan_ops.ml[165,5428+9]..[165,5428+12])
                    expression (fan_ops.ml[166,5444+12]..[240,8933+78])
                      Pexp_function
                      [
                        <case>
                          pattern (fan_ops.ml[167,5465+14]..[167,5465+17])
                            Ppat_var "arg" (fan_ops.ml[167,5465+14]..[167,5465+17])
                          expression (fan_ops.ml[168,5486+16]..[240,8933+78])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (fan_ops.ml[168,5486+20]..[168,5486+26])
                                  Ppat_var "coords" (fan_ops.ml[168,5486+20]..[168,5486+26])
                                expression (fan_ops.ml[169,5515+18]..[173,5740+30])
                                  Pexp_match
                                  expression (fan_ops.ml[169,5515+24]..[169,5515+27])
                                    Pexp_ident "arg" (fan_ops.ml[169,5515+24]..[169,5515+27])
                                  [
                                    <case>
                                      pattern (fan_ops.ml[170,5548+20]..[171,5608+51])
                                        Ppat_or
                                        pattern (fan_ops.ml[170,5548+20]..[170,5548+59])
                                          Ppat_constraint
                                          pattern (fan_ops.ml[170,5548+21]..[170,5548+47])
                                            Ppat_variant "Par"
                                            Some
                                              pattern (fan_ops.ml[170,5548+21]..[170,5548+47])
                                                Ppat_tuple
                                                [
                                                  pattern (fan_ops.ml[170,5548+27]..[170,5548+31])
                                                    Ppat_var "_loc" (fan_ops.ml[170,5548+27]..[170,5548+31])
                                                  pattern (fan_ops.ml[170,5548+32]..[170,5548+46])
                                                    Ppat_variant "Com"
                                                    Some
                                                      pattern (fan_ops.ml[170,5548+32]..[170,5548+46])
                                                        Ppat_tuple
                                                        [
                                                          pattern (fan_ops.ml[170,5548+38]..[170,5548+39])
                                                            Ppat_any
                                                          pattern (fan_ops.ml[170,5548+40]..[170,5548+42])
                                                            Ppat_var "e1" (fan_ops.ml[170,5548+40]..[170,5548+42])
                                                          pattern (fan_ops.ml[170,5548+43]..[170,5548+45])
                                                            Ppat_var "e2" (fan_ops.ml[170,5548+43]..[170,5548+45])
                                                        ]
                                                ]
                                          core_type (fan_ops.ml[170,5548+50]..[170,5548+58])
                                            Ptyp_constr "Astf.exp" (fan_ops.ml[170,5548+50]..[170,5548+58])
                                            []
                                        pattern (fan_ops.ml[171,5608+21]..[171,5608+51])
                                          Ppat_constraint
                                          pattern (fan_ops.ml[171,5608+22]..[171,5608+39])
                                            Ppat_variant "Com"
                                            Some
                                              pattern (fan_ops.ml[171,5608+22]..[171,5608+39])
                                                Ppat_tuple
                                                [
                                                  pattern (fan_ops.ml[171,5608+28]..[171,5608+32])
                                                    Ppat_var "_loc" (fan_ops.ml[171,5608+28]..[171,5608+32])
                                                  pattern (fan_ops.ml[171,5608+33]..[171,5608+35])
                                                    Ppat_var "e1" (fan_ops.ml[171,5608+33]..[171,5608+35])
                                                  pattern (fan_ops.ml[171,5608+36]..[171,5608+38])
                                                    Ppat_var "e2" (fan_ops.ml[171,5608+36]..[171,5608+38])
                                                ]
                                          core_type (fan_ops.ml[171,5608+42]..[171,5608+50])
                                            Ptyp_constr "Astf.exp" (fan_ops.ml[171,5608+42]..[171,5608+50])
                                            []
                                      expression (fan_ops.ml[172,5663+22]..[172,5663+76])
                                        Pexp_apply
                                        expression (fan_ops.ml[172,5663+22]..[172,5663+43])
                                          Pexp_ident "Ast_basic.list_of_com" (fan_ops.ml[172,5663+22]..[172,5663+43])
                                        [
                                          <label> ""
                                            expression (fan_ops.ml[172,5663+44]..[172,5663+46])
                                              Pexp_ident "e1" (fan_ops.ml[172,5663+44]..[172,5663+46])
                                          <label> ""
                                            expression (fan_ops.ml[172,5663+48]..[172,5663+75])
                                              Pexp_apply
                                              expression (fan_ops.ml[172,5663+48]..[172,5663+69])
                                                Pexp_ident "Ast_basic.list_of_com" (fan_ops.ml[172,5663+48]..[172,5663+69])
                                              [
                                                <label> ""
                                                  expression (fan_ops.ml[172,5663+70]..[172,5663+72])
                                                    Pexp_ident "e2" (fan_ops.ml[172,5663+70]..[172,5663+72])
                                                <label> ""
                                                  expression (fan_ops.ml[172,5663+73]..[172,5663+75])
                                                    Pexp_construct "[]" (fan_ops.ml[172,5663+73]..[172,5663+75])
                                                    None
                                              ]
                                        ]
                                    <case>
                                      pattern (fan_ops.ml[173,5740+20]..[173,5740+21])
                                        Ppat_any
                                      expression (fan_ops.ml[173,5740+26]..[173,5740+29])
                                        Pexp_construct "::" (fan_ops.ml[173,5740+26]..[173,5740+29])
                                        Some
                                          expression (fan_ops.ml[173,5740+26]..[173,5740+29])
                                            Pexp_tuple
                                            [
                                              expression (fan_ops.ml[173,5740+26]..[173,5740+29])
                                                Pexp_ident "arg" (fan_ops.ml[173,5740+26]..[173,5740+29])
                                              expression (fan_ops.ml[173,5740+26]..[173,5740+29])
                                                Pexp_construct "[]" (fan_ops.ml[173,5740+26]..[173,5740+29])
                                                None
                                            ]
                                  ]
                            ]
                            expression (fan_ops.ml[174,5774+17]..[240,8933+77])
                              Pexp_match
                              expression (fan_ops.ml[174,5774+23]..[174,5774+29])
                                Pexp_ident "coords" (fan_ops.ml[174,5774+23]..[174,5774+29])
                              [
                                <case>
                                  pattern (fan_ops.ml[175,5809+19]..[175,5809+21])
                                    Ppat_construct "[]" (fan_ops.ml[175,5809+19]..[175,5809+21])
                                    None
                                  expression (fan_ops.ml[175,5809+25]..[175,5809+58])
                                    Pexp_apply
                                    expression (fan_ops.ml[175,5809+25]..[175,5809+33])
                                      Pexp_ident "failwith" (fan_ops.ml[175,5809+25]..[175,5809+33])
                                    [
                                      <label> ""
                                        expression (fan_ops.ml[175,5809+34]..[175,5809+58])
                                          Pexp_constant Const_string("bigarray_get null list",None)
                                    ]
                                <case>
                                  pattern (fan_ops.ml[176,5868+19]..[176,5868+25])
                                    Ppat_construct "::" (fan_ops.ml[176,5868+19]..[176,5868+25])
                                    Some
                                      pattern (fan_ops.ml[176,5868+19]..[176,5868+25])
                                        Ppat_tuple
                                        [
                                          pattern (fan_ops.ml[176,5868+19]..[176,5868+21])
                                            Ppat_var "c1" (fan_ops.ml[176,5868+19]..[176,5868+21])
                                          pattern (fan_ops.ml[176,5868+23]..[176,5868+25])
                                            Ppat_construct "[]" (fan_ops.ml[176,5868+23]..[176,5868+25])
                                            None
                                        ]
                                  expression (fan_ops.ml[177,5897+21]..[187,6375+30])
                                    Pexp_coerce
                                    expression (fan_ops.ml[177,5897+22]..[186,6301+69])
                                      Pexp_variant "App"
                                      Some
                                        expression (fan_ops.ml[178,5924+24]..[186,6301+69])
                                          Pexp_tuple
                                          [
                                            expression (fan_ops.ml[178,5924+25]..[178,5924+28])
                                              Pexp_ident "loc" (fan_ops.ml[178,5924+25]..[178,5924+28])
                                            expression (fan_ops.ml[179,5954+27]..[186,6301+49])
                                              Pexp_variant "App"
                                              Some
                                                expression (fan_ops.ml[180,5986+29]..[186,6301+49])
                                                  Pexp_tuple
                                                  [
                                                    expression (fan_ops.ml[180,5986+30]..[180,5986+33])
                                                      Pexp_ident "loc" (fan_ops.ml[180,5986+30]..[180,5986+33])
                                                    expression (fan_ops.ml[181,6021+32]..[185,6235+63])
                                                      Pexp_variant "Dot"
                                                      Some
                                                        expression (fan_ops.ml[182,6058+34]..[185,6235+63])
                                                          Pexp_tuple
                                                          [
                                                            expression (fan_ops.ml[182,6058+35]..[182,6058+38])
                                                              Pexp_ident "loc" (fan_ops.ml[182,6058+35]..[182,6058+38])
                                                            expression (fan_ops.ml[182,6058+41]..[182,6058+63])
                                                              Pexp_variant "Uid"
                                                              Some
                                                                expression (fan_ops.ml[182,6058+46]..[182,6058+63])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (fan_ops.ml[182,6058+47]..[182,6058+50])
                                                                      Pexp_ident "loc" (fan_ops.ml[182,6058+47]..[182,6058+50])
                                                                    expression (fan_ops.ml[182,6058+52]..[182,6058+62])
                                                                      Pexp_constant Const_string("Bigarray",None)
                                                                  ]
                                                            expression (fan_ops.ml[183,6124+37]..[185,6235+61])
                                                              Pexp_variant "Dot"
                                                              Some
                                                                expression (fan_ops.ml[184,6166+39]..[185,6235+61])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (fan_ops.ml[184,6166+40]..[184,6166+43])
                                                                      Pexp_ident "loc" (fan_ops.ml[184,6166+40]..[184,6166+43])
                                                                    expression (fan_ops.ml[184,6166+46]..[184,6166+66])
                                                                      Pexp_variant "Uid"
                                                                      Some
expression (fan_ops.ml[184,6166+51]..[184,6166+66])
  Pexp_tuple
  [
    expression (fan_ops.ml[184,6166+52]..[184,6166+55])
      Pexp_ident "loc" (fan_ops.ml[184,6166+52]..[184,6166+55])
    expression (fan_ops.ml[184,6166+57]..[184,6166+65])
      Pexp_constant Const_string("Array1",None)
  ]
                                                                    expression (fan_ops.ml[185,6235+42]..[185,6235+59])
                                                                      Pexp_variant "Lid"
                                                                      Some
expression (fan_ops.ml[185,6235+47]..[185,6235+59])
  Pexp_tuple
  [
    expression (fan_ops.ml[185,6235+48]..[185,6235+51])
      Pexp_ident "loc" (fan_ops.ml[185,6235+48]..[185,6235+51])
    expression (fan_ops.ml[185,6235+53]..[185,6235+58])
      Pexp_constant Const_string("get",None)
  ]
                                                                  ]
                                                          ]
                                                    expression (fan_ops.ml[186,6301+31]..[186,6301+48])
                                                      Pexp_coerce
                                                      expression (fan_ops.ml[186,6301+32]..[186,6301+35])
                                                        Pexp_ident "arr" (fan_ops.ml[186,6301+32]..[186,6301+35])
                                                      None
                                                      core_type (fan_ops.ml[186,6301+39]..[186,6301+47])
                                                        Ptyp_constr "Astf.exp" (fan_ops.ml[186,6301+39]..[186,6301+47])
                                                        []
                                                  ]
                                            expression (fan_ops.ml[186,6301+52]..[186,6301+68])
                                              Pexp_coerce
                                              expression (fan_ops.ml[186,6301+53]..[186,6301+55])
                                                Pexp_ident "c1" (fan_ops.ml[186,6301+53]..[186,6301+55])
                                              None
                                              core_type (fan_ops.ml[186,6301+59]..[186,6301+67])
                                                Ptyp_constr "Astf.exp" (fan_ops.ml[186,6301+59]..[186,6301+67])
                                                []
                                          ]
                                    None
                                    core_type (fan_ops.ml[187,6375+21]..[187,6375+29])
                                      Ptyp_constr "Astf.exp" (fan_ops.ml[187,6375+21]..[187,6375+29])
                                      []
                                <case>
                                  pattern (fan_ops.ml[188,6406+19]..[188,6406+29])
                                    Ppat_construct "::" (fan_ops.ml[188,6406+19]..[188,6406+29])
                                    Some
                                      pattern (fan_ops.ml[188,6406+19]..[188,6406+29])
                                        Ppat_tuple
                                        [
                                          pattern (fan_ops.ml[188,6406+19]..[188,6406+21])
                                            Ppat_var "c1" (fan_ops.ml[188,6406+19]..[188,6406+21])
                                          pattern (fan_ops.ml[188,6406+23]..[188,6406+29])
                                            Ppat_construct "::" (fan_ops.ml[188,6406+23]..[188,6406+29])
                                            Some
                                              pattern (fan_ops.ml[188,6406+23]..[188,6406+29])
                                                Ppat_tuple
                                                [
                                                  pattern (fan_ops.ml[188,6406+23]..[188,6406+25])
                                                    Ppat_var "c2" (fan_ops.ml[188,6406+23]..[188,6406+25])
                                                  pattern (fan_ops.ml[188,6406+27]..[188,6406+29])
                                                    Ppat_construct "[]" (fan_ops.ml[188,6406+27]..[188,6406+29])
                                                    None
                                                ]
                                        ]
                                  expression (fan_ops.ml[189,6439+21]..[201,7022+56])
                                    Pexp_coerce
                                    expression (fan_ops.ml[189,6439+22]..[201,7022+43])
                                      Pexp_variant "App"
                                      Some
                                        expression (fan_ops.ml[190,6466+24]..[201,7022+43])
                                          Pexp_tuple
                                          [
                                            expression (fan_ops.ml[190,6466+25]..[190,6466+28])
                                              Pexp_ident "loc" (fan_ops.ml[190,6466+25]..[190,6466+28])
                                            expression (fan_ops.ml[191,6496+27]..[200,6945+74])
                                              Pexp_variant "App"
                                              Some
                                                expression (fan_ops.ml[192,6528+29]..[200,6945+74])
                                                  Pexp_tuple
                                                  [
                                                    expression (fan_ops.ml[192,6528+30]..[192,6528+33])
                                                      Pexp_ident "loc" (fan_ops.ml[192,6528+30]..[192,6528+33])
                                                    expression (fan_ops.ml[193,6563+32]..[200,6945+54])
                                                      Pexp_variant "App"
                                                      Some
                                                        expression (fan_ops.ml[194,6600+34]..[200,6945+54])
                                                          Pexp_tuple
                                                          [
                                                            expression (fan_ops.ml[194,6600+35]..[194,6600+38])
                                                              Pexp_ident "loc" (fan_ops.ml[194,6600+35]..[194,6600+38])
                                                            expression (fan_ops.ml[195,6640+37]..[199,6874+68])
                                                              Pexp_variant "Dot"
                                                              Some
                                                                expression (fan_ops.ml[196,6682+39]..[199,6874+68])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (fan_ops.ml[196,6682+40]..[196,6682+43])
                                                                      Pexp_ident "loc" (fan_ops.ml[196,6682+40]..[196,6682+43])
                                                                    expression (fan_ops.ml[196,6682+46]..[196,6682+68])
                                                                      Pexp_variant "Uid"
                                                                      Some
expression (fan_ops.ml[196,6682+51]..[196,6682+68])
  Pexp_tuple
  [
    expression (fan_ops.ml[196,6682+52]..[196,6682+55])
      Pexp_ident "loc" (fan_ops.ml[196,6682+52]..[196,6682+55])
    expression (fan_ops.ml[196,6682+57]..[196,6682+67])
      Pexp_constant Const_string("Bigarray",None)
  ]
                                                                    expression (fan_ops.ml[197,6753+42]..[199,6874+66])
                                                                      Pexp_variant "Dot"
                                                                      Some
expression (fan_ops.ml[198,6800+44]..[199,6874+66])
  Pexp_tuple
  [
    expression (fan_ops.ml[198,6800+45]..[198,6800+48])
      Pexp_ident "loc" (fan_ops.ml[198,6800+45]..[198,6800+48])
    expression (fan_ops.ml[198,6800+51]..[198,6800+71])
      Pexp_variant "Uid"
      Some
        expression (fan_ops.ml[198,6800+56]..[198,6800+71])
          Pexp_tuple
          [
            expression (fan_ops.ml[198,6800+57]..[198,6800+60])
              Pexp_ident "loc" (fan_ops.ml[198,6800+57]..[198,6800+60])
            expression (fan_ops.ml[198,6800+62]..[198,6800+70])
              Pexp_constant Const_string("Array2",None)
          ]
    expression (fan_ops.ml[199,6874+47]..[199,6874+64])
      Pexp_variant "Lid"
      Some
        expression (fan_ops.ml[199,6874+52]..[199,6874+64])
          Pexp_tuple
          [
            expression (fan_ops.ml[199,6874+53]..[199,6874+56])
              Pexp_ident "loc" (fan_ops.ml[199,6874+53]..[199,6874+56])
            expression (fan_ops.ml[199,6874+58]..[199,6874+63])
              Pexp_constant Const_string("get",None)
          ]
  ]
                                                                  ]
                                                            expression (fan_ops.ml[200,6945+36]..[200,6945+53])
                                                              Pexp_coerce
                                                              expression (fan_ops.ml[200,6945+37]..[200,6945+40])
                                                                Pexp_ident "arr" (fan_ops.ml[200,6945+37]..[200,6945+40])
                                                              None
                                                              core_type (fan_ops.ml[200,6945+44]..[200,6945+52])
                                                                Ptyp_constr "Astf.exp" (fan_ops.ml[200,6945+44]..[200,6945+52])
                                                                []
                                                          ]
                                                    expression (fan_ops.ml[200,6945+57]..[200,6945+73])
                                                      Pexp_coerce
                                                      expression (fan_ops.ml[200,6945+58]..[200,6945+60])
                                                        Pexp_ident "c1" (fan_ops.ml[200,6945+58]..[200,6945+60])
                                                      None
                                                      core_type (fan_ops.ml[200,6945+64]..[200,6945+72])
                                                        Ptyp_constr "Astf.exp" (fan_ops.ml[200,6945+64]..[200,6945+72])
                                                        []
                                                  ]
                                            expression (fan_ops.ml[201,7022+26]..[201,7022+42])
                                              Pexp_coerce
                                              expression (fan_ops.ml[201,7022+27]..[201,7022+29])
                                                Pexp_ident "c2" (fan_ops.ml[201,7022+27]..[201,7022+29])
                                              None
                                              core_type (fan_ops.ml[201,7022+33]..[201,7022+41])
                                                Ptyp_constr "Astf.exp" (fan_ops.ml[201,7022+33]..[201,7022+41])
                                                []
                                          ]
                                    None
                                    core_type (fan_ops.ml[201,7022+47]..[201,7022+55])
                                      Ptyp_constr "Astf.exp" (fan_ops.ml[201,7022+47]..[201,7022+55])
                                      []
                                <case>
                                  pattern (fan_ops.ml[202,7079+19]..[202,7079+33])
                                    Ppat_construct "::" (fan_ops.ml[202,7079+19]..[202,7079+33])
                                    Some
                                      pattern (fan_ops.ml[202,7079+19]..[202,7079+33])
                                        Ppat_tuple
                                        [
                                          pattern (fan_ops.ml[202,7079+19]..[202,7079+21])
                                            Ppat_var "c1" (fan_ops.ml[202,7079+19]..[202,7079+21])
                                          pattern (fan_ops.ml[202,7079+23]..[202,7079+33])
                                            Ppat_construct "::" (fan_ops.ml[202,7079+23]..[202,7079+33])
                                            Some
                                              pattern (fan_ops.ml[202,7079+23]..[202,7079+33])
                                                Ppat_tuple
                                                [
                                                  pattern (fan_ops.ml[202,7079+23]..[202,7079+25])
                                                    Ppat_var "c2" (fan_ops.ml[202,7079+23]..[202,7079+25])
                                                  pattern (fan_ops.ml[202,7079+27]..[202,7079+33])
                                                    Ppat_construct "::" (fan_ops.ml[202,7079+27]..[202,7079+33])
                                                    Some
                                                      pattern (fan_ops.ml[202,7079+27]..[202,7079+33])
                                                        Ppat_tuple
                                                        [
                                                          pattern (fan_ops.ml[202,7079+27]..[202,7079+29])
                                                            Ppat_var "c3" (fan_ops.ml[202,7079+27]..[202,7079+29])
                                                          pattern (fan_ops.ml[202,7079+31]..[202,7079+33])
                                                            Ppat_construct "[]" (fan_ops.ml[202,7079+31]..[202,7079+33])
                                                            None
                                                        ]
                                                ]
                                        ]
                                  expression (fan_ops.ml[203,7116+21]..[219,7923+56])
                                    Pexp_coerce
                                    expression (fan_ops.ml[203,7116+22]..[219,7923+43])
                                      Pexp_variant "App"
                                      Some
                                        expression (fan_ops.ml[204,7143+24]..[219,7923+43])
                                          Pexp_tuple
                                          [
                                            expression (fan_ops.ml[204,7143+25]..[204,7143+28])
                                              Pexp_ident "loc" (fan_ops.ml[204,7143+25]..[204,7143+28])
                                            expression (fan_ops.ml[205,7173+27]..[218,7847+73])
                                              Pexp_variant "App"
                                              Some
                                                expression (fan_ops.ml[206,7205+29]..[218,7847+73])
                                                  Pexp_tuple
                                                  [
                                                    expression (fan_ops.ml[206,7205+30]..[206,7205+33])
                                                      Pexp_ident "loc" (fan_ops.ml[206,7205+30]..[206,7205+33])
                                                    expression (fan_ops.ml[207,7240+32]..[218,7847+53])
                                                      Pexp_variant "App"
                                                      Some
                                                        expression (fan_ops.ml[208,7277+34]..[218,7847+53])
                                                          Pexp_tuple
                                                          [
                                                            expression (fan_ops.ml[208,7277+35]..[208,7277+38])
                                                              Pexp_ident "loc" (fan_ops.ml[208,7277+35]..[208,7277+38])
                                                            expression (fan_ops.ml[209,7317+37]..[217,7785+59])
                                                              Pexp_variant "App"
                                                              Some
                                                                expression (fan_ops.ml[210,7359+39]..[217,7785+59])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (fan_ops.ml[210,7359+40]..[210,7359+43])
                                                                      Pexp_ident "loc" (fan_ops.ml[210,7359+40]..[210,7359+43])
                                                                    expression (fan_ops.ml[211,7404+42]..[216,7709+73])
                                                                      Pexp_variant "Dot"
                                                                      Some
expression (fan_ops.ml[212,7451+44]..[216,7709+73])
  Pexp_tuple
  [
    expression (fan_ops.ml[212,7451+45]..[212,7451+48])
      Pexp_ident "loc" (fan_ops.ml[212,7451+45]..[212,7451+48])
    expression (fan_ops.ml[212,7451+51]..[212,7451+73])
      Pexp_variant "Uid"
      Some
        expression (fan_ops.ml[212,7451+56]..[212,7451+73])
          Pexp_tuple
          [
            expression (fan_ops.ml[212,7451+57]..[212,7451+60])
              Pexp_ident "loc" (fan_ops.ml[212,7451+57]..[212,7451+60])
            expression (fan_ops.ml[212,7451+62]..[212,7451+72])
              Pexp_constant Const_string("Bigarray",None)
          ]
    expression (fan_ops.ml[213,7527+47]..[216,7709+71])
      Pexp_variant "Dot"
      Some
        expression (fan_ops.ml[214,7579+49]..[216,7709+71])
          Pexp_tuple
          [
            expression (fan_ops.ml[214,7579+50]..[214,7579+53])
              Pexp_ident "loc" (fan_ops.ml[214,7579+50]..[214,7579+53])
            expression (fan_ops.ml[215,7634+52]..[215,7634+72])
              Pexp_variant "Uid"
              Some
                expression (fan_ops.ml[215,7634+57]..[215,7634+72])
                  Pexp_tuple
                  [
                    expression (fan_ops.ml[215,7634+58]..[215,7634+61])
                      Pexp_ident "loc" (fan_ops.ml[215,7634+58]..[215,7634+61])
                    expression (fan_ops.ml[215,7634+63]..[215,7634+71])
                      Pexp_constant Const_string("Array3",None)
                  ]
            expression (fan_ops.ml[216,7709+52]..[216,7709+69])
              Pexp_variant "Lid"
              Some
                expression (fan_ops.ml[216,7709+57]..[216,7709+69])
                  Pexp_tuple
                  [
                    expression (fan_ops.ml[216,7709+58]..[216,7709+61])
                      Pexp_ident "loc" (fan_ops.ml[216,7709+58]..[216,7709+61])
                    expression (fan_ops.ml[216,7709+63]..[216,7709+68])
                      Pexp_constant Const_string("get",None)
                  ]
          ]
  ]
                                                                    expression (fan_ops.ml[217,7785+41]..[217,7785+58])
                                                                      Pexp_coerce
                                                                      expression (fan_ops.ml[217,7785+42]..[217,7785+45])
Pexp_ident "arr" (fan_ops.ml[217,7785+42]..[217,7785+45])
                                                                      None
                                                                      core_type (fan_ops.ml[217,7785+49]..[217,7785+57])
Ptyp_constr "Astf.exp" (fan_ops.ml[217,7785+49]..[217,7785+57])
[]
                                                                  ]
                                                            expression (fan_ops.ml[218,7847+36]..[218,7847+52])
                                                              Pexp_coerce
                                                              expression (fan_ops.ml[218,7847+37]..[218,7847+39])
                                                                Pexp_ident "c1" (fan_ops.ml[218,7847+37]..[218,7847+39])
                                                              None
                                                              core_type (fan_ops.ml[218,7847+43]..[218,7847+51])
                                                                Ptyp_constr "Astf.exp" (fan_ops.ml[218,7847+43]..[218,7847+51])
                                                                []
                                                          ]
                                                    expression (fan_ops.ml[218,7847+56]..[218,7847+72])
                                                      Pexp_coerce
                                                      expression (fan_ops.ml[218,7847+57]..[218,7847+59])
                                                        Pexp_ident "c2" (fan_ops.ml[218,7847+57]..[218,7847+59])
                                                      None
                                                      core_type (fan_ops.ml[218,7847+63]..[218,7847+71])
                                                        Ptyp_constr "Astf.exp" (fan_ops.ml[218,7847+63]..[218,7847+71])
                                                        []
                                                  ]
                                            expression (fan_ops.ml[219,7923+26]..[219,7923+42])
                                              Pexp_coerce
                                              expression (fan_ops.ml[219,7923+27]..[219,7923+29])
                                                Pexp_ident "c3" (fan_ops.ml[219,7923+27]..[219,7923+29])
                                              None
                                              core_type (fan_ops.ml[219,7923+33]..[219,7923+41])
                                                Ptyp_constr "Astf.exp" (fan_ops.ml[219,7923+33]..[219,7923+41])
                                                []
                                          ]
                                    None
                                    core_type (fan_ops.ml[219,7923+47]..[219,7923+55])
                                      Ptyp_constr "Astf.exp" (fan_ops.ml[219,7923+47]..[219,7923+55])
                                      []
                                <case>
                                  pattern (fan_ops.ml[220,7980+19]..[220,7980+37])
                                    Ppat_construct "::" (fan_ops.ml[220,7980+19]..[220,7980+37])
                                    Some
                                      pattern (fan_ops.ml[220,7980+19]..[220,7980+37])
                                        Ppat_tuple
                                        [
                                          pattern (fan_ops.ml[220,7980+19]..[220,7980+21])
                                            Ppat_var "c1" (fan_ops.ml[220,7980+19]..[220,7980+21])
                                          pattern (fan_ops.ml[220,7980+23]..[220,7980+37])
                                            Ppat_construct "::" (fan_ops.ml[220,7980+23]..[220,7980+37])
                                            Some
                                              pattern (fan_ops.ml[220,7980+23]..[220,7980+37])
                                                Ppat_tuple
                                                [
                                                  pattern (fan_ops.ml[220,7980+23]..[220,7980+25])
                                                    Ppat_var "c2" (fan_ops.ml[220,7980+23]..[220,7980+25])
                                                  pattern (fan_ops.ml[220,7980+27]..[220,7980+37])
                                                    Ppat_construct "::" (fan_ops.ml[220,7980+27]..[220,7980+37])
                                                    Some
                                                      pattern (fan_ops.ml[220,7980+27]..[220,7980+37])
                                                        Ppat_tuple
                                                        [
                                                          pattern (fan_ops.ml[220,7980+27]..[220,7980+29])
                                                            Ppat_var "c3" (fan_ops.ml[220,7980+27]..[220,7980+29])
                                                          pattern (fan_ops.ml[220,7980+31]..[220,7980+37])
                                                            Ppat_var "coords" (fan_ops.ml[220,7980+31]..[220,7980+37])
                                                        ]
                                                ]
                                        ]
                                  expression (fan_ops.ml[221,8021+21]..[240,8933+77])
                                    Pexp_coerce
                                    expression (fan_ops.ml[221,8021+22]..[240,8933+64])
                                      Pexp_variant "App"
                                      Some
                                        expression (fan_ops.ml[222,8048+24]..[240,8933+64])
                                          Pexp_tuple
                                          [
                                            expression (fan_ops.ml[222,8048+25]..[222,8048+28])
                                              Pexp_ident "loc" (fan_ops.ml[222,8048+25]..[222,8048+28])
                                            expression (fan_ops.ml[223,8078+27]..[230,8427+49])
                                              Pexp_variant "App"
                                              Some
                                                expression (fan_ops.ml[224,8110+29]..[230,8427+49])
                                                  Pexp_tuple
                                                  [
                                                    expression (fan_ops.ml[224,8110+30]..[224,8110+33])
                                                      Pexp_ident "loc" (fan_ops.ml[224,8110+30]..[224,8110+33])
                                                    expression (fan_ops.ml[225,8145+32]..[229,8361+63])
                                                      Pexp_variant "Dot"
                                                      Some
                                                        expression (fan_ops.ml[226,8182+34]..[229,8361+63])
                                                          Pexp_tuple
                                                          [
                                                            expression (fan_ops.ml[226,8182+35]..[226,8182+38])
                                                              Pexp_ident "loc" (fan_ops.ml[226,8182+35]..[226,8182+38])
                                                            expression (fan_ops.ml[226,8182+41]..[226,8182+63])
                                                              Pexp_variant "Uid"
                                                              Some
                                                                expression (fan_ops.ml[226,8182+46]..[226,8182+63])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (fan_ops.ml[226,8182+47]..[226,8182+50])
                                                                      Pexp_ident "loc" (fan_ops.ml[226,8182+47]..[226,8182+50])
                                                                    expression (fan_ops.ml[226,8182+52]..[226,8182+62])
                                                                      Pexp_constant Const_string("Bigarray",None)
                                                                  ]
                                                            expression (fan_ops.ml[227,8248+37]..[229,8361+61])
                                                              Pexp_variant "Dot"
                                                              Some
                                                                expression (fan_ops.ml[228,8290+39]..[229,8361+61])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (fan_ops.ml[228,8290+40]..[228,8290+43])
                                                                      Pexp_ident "loc" (fan_ops.ml[228,8290+40]..[228,8290+43])
                                                                    expression (fan_ops.ml[228,8290+46]..[228,8290+68])
                                                                      Pexp_variant "Uid"
                                                                      Some
expression (fan_ops.ml[228,8290+51]..[228,8290+68])
  Pexp_tuple
  [
    expression (fan_ops.ml[228,8290+52]..[228,8290+55])
      Pexp_ident "loc" (fan_ops.ml[228,8290+52]..[228,8290+55])
    expression (fan_ops.ml[228,8290+57]..[228,8290+67])
      Pexp_constant Const_string("Genarray",None)
  ]
                                                                    expression (fan_ops.ml[229,8361+42]..[229,8361+59])
                                                                      Pexp_variant "Lid"
                                                                      Some
expression (fan_ops.ml[229,8361+47]..[229,8361+59])
  Pexp_tuple
  [
    expression (fan_ops.ml[229,8361+48]..[229,8361+51])
      Pexp_ident "loc" (fan_ops.ml[229,8361+48]..[229,8361+51])
    expression (fan_ops.ml[229,8361+53]..[229,8361+58])
      Pexp_constant Const_string("get",None)
  ]
                                                                  ]
                                                          ]
                                                    expression (fan_ops.ml[230,8427+31]..[230,8427+48])
                                                      Pexp_coerce
                                                      expression (fan_ops.ml[230,8427+32]..[230,8427+35])
                                                        Pexp_ident "arr" (fan_ops.ml[230,8427+32]..[230,8427+35])
                                                      None
                                                      core_type (fan_ops.ml[230,8427+39]..[230,8427+47])
                                                        Ptyp_constr "Astf.exp" (fan_ops.ml[230,8427+39]..[230,8427+47])
                                                        []
                                                  ]
                                            expression (fan_ops.ml[231,8479+27]..[240,8933+62])
                                              Pexp_variant "Array"
                                              Some
                                                expression (fan_ops.ml[232,8513+29]..[240,8933+62])
                                                  Pexp_tuple
                                                  [
                                                    expression (fan_ops.ml[232,8513+30]..[232,8513+33])
                                                      Pexp_ident "loc" (fan_ops.ml[232,8513+30]..[232,8513+33])
                                                    expression (fan_ops.ml[233,8548+32]..[240,8933+60])
                                                      Pexp_variant "Sem"
                                                      Some
                                                        expression (fan_ops.ml[234,8585+34]..[240,8933+60])
                                                          Pexp_tuple
                                                          [
                                                            expression (fan_ops.ml[234,8585+35]..[234,8585+38])
                                                              Pexp_ident "loc" (fan_ops.ml[234,8585+35]..[234,8585+38])
                                                            expression (fan_ops.ml[234,8585+40]..[234,8585+56])
                                                              Pexp_coerce
                                                              expression (fan_ops.ml[234,8585+41]..[234,8585+43])
                                                                Pexp_ident "c1" (fan_ops.ml[234,8585+41]..[234,8585+43])
                                                              None
                                                              core_type (fan_ops.ml[234,8585+47]..[234,8585+55])
                                                                Ptyp_constr "Astf.exp" (fan_ops.ml[234,8585+47]..[234,8585+55])
                                                                []
                                                            expression (fan_ops.ml[235,8643+37]..[240,8933+58])
                                                              Pexp_variant "Sem"
                                                              Some
                                                                expression (fan_ops.ml[236,8685+39]..[240,8933+58])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (fan_ops.ml[236,8685+40]..[236,8685+43])
                                                                      Pexp_ident "loc" (fan_ops.ml[236,8685+40]..[236,8685+43])
                                                                    expression (fan_ops.ml[236,8685+45]..[236,8685+61])
                                                                      Pexp_coerce
                                                                      expression (fan_ops.ml[236,8685+46]..[236,8685+48])
Pexp_ident "c2" (fan_ops.ml[236,8685+46]..[236,8685+48])
                                                                      None
                                                                      core_type (fan_ops.ml[236,8685+52]..[236,8685+60])
Ptyp_constr "Astf.exp" (fan_ops.ml[236,8685+52]..[236,8685+60])
[]
                                                                    expression (fan_ops.ml[237,8748+42]..[240,8933+56])
                                                                      Pexp_variant "Sem"
                                                                      Some
expression (fan_ops.ml[238,8795+44]..[240,8933+56])
  Pexp_tuple
  [
    expression (fan_ops.ml[238,8795+45]..[238,8795+48])
      Pexp_ident "loc" (fan_ops.ml[238,8795+45]..[238,8795+48])
    expression (fan_ops.ml[238,8795+50]..[238,8795+66])
      Pexp_coerce
      expression (fan_ops.ml[238,8795+51]..[238,8795+53])
        Pexp_ident "c3" (fan_ops.ml[238,8795+51]..[238,8795+53])
      None
      core_type (fan_ops.ml[238,8795+57]..[238,8795+65])
        Ptyp_constr "Astf.exp" (fan_ops.ml[238,8795+57]..[238,8795+65])
        []
    expression (fan_ops.ml[239,8863+46]..[240,8933+55])
      Pexp_coerce
      expression (fan_ops.ml[239,8863+47]..[239,8863+65])
        Pexp_apply
        expression (fan_ops.ml[239,8863+47]..[239,8863+58])
          Pexp_ident "sem_of_list" (fan_ops.ml[239,8863+47]..[239,8863+58])
        [
          <label> ""
            expression (fan_ops.ml[239,8863+59]..[239,8863+65])
              Pexp_ident "coords" (fan_ops.ml[239,8863+59]..[239,8863+65])
        ]
      None
      core_type (fan_ops.ml[240,8933+46]..[240,8933+54])
        Ptyp_constr "Astf.exp" (fan_ops.ml[240,8933+46]..[240,8933+54])
        []
  ]
                                                                  ]
                                                          ]
                                                  ]
                                          ]
                                    None
                                    core_type (fan_ops.ml[240,8933+68]..[240,8933+76])
                                      Ptyp_constr "Astf.exp" (fan_ops.ml[240,8933+68]..[240,8933+76])
                                      []
                              ]
                      ]
                ]
          ]
    ]
  structure_item (fan_ops.ml[241,9014+0]..[366,15486+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[241,9014+4]..[241,9014+16])
          Ppat_var "bigarray_set" (fan_ops.ml[241,9014+4]..[241,9014+16])
        expression (fan_ops.ml[242,9033+2]..[366,15486+31])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[243,9044+4]..[243,9044+7])
                Ppat_var "loc" (fan_ops.ml[243,9044+4]..[243,9044+7])
              expression (fan_ops.ml[244,9055+7]..[366,15486+30])
                Pexp_function
                [
                  <case>
                    pattern (fan_ops.ml[245,9071+9]..[245,9071+12])
                      Ppat_var "var" (fan_ops.ml[245,9071+9]..[245,9071+12])
                    expression (fan_ops.ml[246,9087+12]..[366,15486+29])
                      Pexp_function
                      [
                        <case>
                          pattern (fan_ops.ml[247,9108+14]..[247,9108+20])
                            Ppat_var "newval" (fan_ops.ml[247,9108+14]..[247,9108+20])
                          expression (fan_ops.ml[248,9132+17]..[366,15486+28])
                            Pexp_match
                            expression (fan_ops.ml[248,9132+23]..[248,9132+26])
                              Pexp_ident "var" (fan_ops.ml[248,9132+23]..[248,9132+26])
                            [
                              <case>
                                pattern (fan_ops.ml[249,9164+19]..[256,9557+32])
                                  Ppat_constraint
                                  pattern (fan_ops.ml[249,9164+20]..[255,9470+86])
                                    Ppat_variant "App"
                                    Some
                                      pattern (fan_ops.ml[249,9164+20]..[255,9470+86])
                                        Ppat_tuple
                                        [
                                          pattern (fan_ops.ml[250,9189+23]..[250,9189+27])
                                            Ppat_var "_loc" (fan_ops.ml[250,9189+23]..[250,9189+27])
                                          pattern (fan_ops.ml[250,9189+28]..[255,9470+82])
                                            Ppat_variant "App"
                                            Some
                                              pattern (fan_ops.ml[250,9189+28]..[255,9470+82])
                                                Ppat_tuple
                                                [
                                                  pattern (fan_ops.ml[251,9222+31]..[251,9222+32])
                                                    Ppat_any
                                                  pattern (fan_ops.ml[251,9222+33]..[255,9470+77])
                                                    Ppat_variant "Dot"
                                                    Some
                                                      pattern (fan_ops.ml[251,9222+33]..[255,9470+77])
                                                        Ppat_tuple
                                                        [
                                                          pattern (fan_ops.ml[252,9260+36]..[252,9260+37])
                                                            Ppat_any
                                                          pattern (fan_ops.ml[252,9260+38]..[252,9260+57])
                                                            Ppat_variant "Uid"
                                                            Some
                                                              pattern (fan_ops.ml[252,9260+38]..[252,9260+57])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (fan_ops.ml[252,9260+44]..[252,9260+45])
                                                                    Ppat_any
                                                                  pattern (fan_ops.ml[252,9260+46]..[252,9260+56])
                                                                    Ppat_constant Const_string("Bigarray",None)
                                                                ]
                                                          pattern (fan_ops.ml[252,9260+58]..[255,9470+76])
                                                            Ppat_variant "Dot"
                                                            Some
                                                              pattern (fan_ops.ml[252,9260+58]..[255,9470+76])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (fan_ops.ml[253,9323+61]..[253,9323+62])
                                                                    Ppat_any
                                                                  pattern (fan_ops.ml[253,9323+63]..[254,9391+77])
                                                                    Ppat_variant "Uid"
                                                                    Some
                                                                      pattern (fan_ops.ml[253,9323+63]..[254,9391+77])
Ppat_tuple
[
  pattern (fan_ops.ml[254,9391+66]..[254,9391+67])
    Ppat_any
  pattern (fan_ops.ml[254,9391+68]..[254,9391+76])
    Ppat_constant Const_string("Array1",None)
]
                                                                  pattern (fan_ops.ml[255,9470+61]..[255,9470+75])
                                                                    Ppat_variant "Lid"
                                                                    Some
                                                                      pattern (fan_ops.ml[255,9470+61]..[255,9470+75])
Ppat_tuple
[
  pattern (fan_ops.ml[255,9470+67]..[255,9470+68])
    Ppat_any
  pattern (fan_ops.ml[255,9470+69]..[255,9470+74])
    Ppat_constant Const_string("get",None)
]
                                                                ]
                                                        ]
                                                  pattern (fan_ops.ml[255,9470+78]..[255,9470+81])
                                                    Ppat_var "arr" (fan_ops.ml[255,9470+78]..[255,9470+81])
                                                ]
                                          pattern (fan_ops.ml[255,9470+83]..[255,9470+85])
                                            Ppat_var "c1" (fan_ops.ml[255,9470+83]..[255,9470+85])
                                        ]
                                  core_type (fan_ops.ml[256,9557+23]..[256,9557+31])
                                    Ptyp_constr "Astf.exp" (fan_ops.ml[256,9557+23]..[256,9557+31])
                                    []
                                expression (fan_ops.ml[257,9593+21]..[270,10226+62])
                                  Pexp_construct "Some" (fan_ops.ml[257,9593+21]..[257,9593+25])
                                  Some
                                    expression (fan_ops.ml[258,9619+23]..[270,10226+62])
                                      Pexp_coerce
                                      expression (fan_ops.ml[258,9619+24]..[270,10226+49])
                                        Pexp_variant "App"
                                        Some
                                          expression (fan_ops.ml[259,9648+26]..[270,10226+49])
                                            Pexp_tuple
                                            [
                                              expression (fan_ops.ml[259,9648+27]..[259,9648+30])
                                                Pexp_ident "loc" (fan_ops.ml[259,9648+27]..[259,9648+30])
                                              expression (fan_ops.ml[260,9680+29]..[269,10147+76])
                                                Pexp_variant "App"
                                                Some
                                                  expression (fan_ops.ml[261,9714+31]..[269,10147+76])
                                                    Pexp_tuple
                                                    [
                                                      expression (fan_ops.ml[261,9714+32]..[261,9714+35])
                                                        Pexp_ident "loc" (fan_ops.ml[261,9714+32]..[261,9714+35])
                                                      expression (fan_ops.ml[262,9751+34]..[269,10147+56])
                                                        Pexp_variant "App"
                                                        Some
                                                          expression (fan_ops.ml[263,9790+36]..[269,10147+56])
                                                            Pexp_tuple
                                                            [
                                                              expression (fan_ops.ml[263,9790+37]..[263,9790+40])
                                                                Pexp_ident "loc" (fan_ops.ml[263,9790+37]..[263,9790+40])
                                                              expression (fan_ops.ml[264,9832+39]..[268,10074+70])
                                                                Pexp_variant "Dot"
                                                                Some
                                                                  expression (fan_ops.ml[265,9876+41]..[268,10074+70])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (fan_ops.ml[265,9876+42]..[265,9876+45])
Pexp_ident "loc" (fan_ops.ml[265,9876+42]..[265,9876+45])
                                                                      expression (fan_ops.ml[265,9876+48]..[265,9876+70])
Pexp_variant "Uid"
Some
  expression (fan_ops.ml[265,9876+53]..[265,9876+70])
    Pexp_tuple
    [
      expression (fan_ops.ml[265,9876+54]..[265,9876+57])
        Pexp_ident "loc" (fan_ops.ml[265,9876+54]..[265,9876+57])
      expression (fan_ops.ml[265,9876+59]..[265,9876+69])
        Pexp_constant Const_string("Bigarray",None)
    ]
                                                                      expression (fan_ops.ml[266,9949+44]..[268,10074+68])
Pexp_variant "Dot"
Some
  expression (fan_ops.ml[267,9998+46]..[268,10074+68])
    Pexp_tuple
    [
      expression (fan_ops.ml[267,9998+47]..[267,9998+50])
        Pexp_ident "loc" (fan_ops.ml[267,9998+47]..[267,9998+50])
      expression (fan_ops.ml[267,9998+53]..[267,9998+73])
        Pexp_variant "Uid"
        Some
          expression (fan_ops.ml[267,9998+58]..[267,9998+73])
            Pexp_tuple
            [
              expression (fan_ops.ml[267,9998+59]..[267,9998+62])
                Pexp_ident "loc" (fan_ops.ml[267,9998+59]..[267,9998+62])
              expression (fan_ops.ml[267,9998+64]..[267,9998+72])
                Pexp_constant Const_string("Array1",None)
            ]
      expression (fan_ops.ml[268,10074+49]..[268,10074+66])
        Pexp_variant "Lid"
        Some
          expression (fan_ops.ml[268,10074+54]..[268,10074+66])
            Pexp_tuple
            [
              expression (fan_ops.ml[268,10074+55]..[268,10074+58])
                Pexp_ident "loc" (fan_ops.ml[268,10074+55]..[268,10074+58])
              expression (fan_ops.ml[268,10074+60]..[268,10074+65])
                Pexp_constant Const_string("set",None)
            ]
    ]
                                                                    ]
                                                              expression (fan_ops.ml[269,10147+38]..[269,10147+55])
                                                                Pexp_coerce
                                                                expression (fan_ops.ml[269,10147+39]..[269,10147+42])
                                                                  Pexp_ident "arr" (fan_ops.ml[269,10147+39]..[269,10147+42])
                                                                None
                                                                core_type (fan_ops.ml[269,10147+46]..[269,10147+54])
                                                                  Ptyp_constr "Astf.exp" (fan_ops.ml[269,10147+46]..[269,10147+54])
                                                                  []
                                                            ]
                                                      expression (fan_ops.ml[269,10147+59]..[269,10147+75])
                                                        Pexp_coerce
                                                        expression (fan_ops.ml[269,10147+60]..[269,10147+62])
                                                          Pexp_ident "c1" (fan_ops.ml[269,10147+60]..[269,10147+62])
                                                        None
                                                        core_type (fan_ops.ml[269,10147+66]..[269,10147+74])
                                                          Ptyp_constr "Astf.exp" (fan_ops.ml[269,10147+66]..[269,10147+74])
                                                          []
                                                    ]
                                              expression (fan_ops.ml[270,10226+28]..[270,10226+48])
                                                Pexp_coerce
                                                expression (fan_ops.ml[270,10226+29]..[270,10226+35])
                                                  Pexp_ident "newval" (fan_ops.ml[270,10226+29]..[270,10226+35])
                                                None
                                                core_type (fan_ops.ml[270,10226+39]..[270,10226+47])
                                                  Ptyp_constr "Astf.exp" (fan_ops.ml[270,10226+39]..[270,10226+47])
                                                  []
                                            ]
                                      None
                                      core_type (fan_ops.ml[270,10226+53]..[270,10226+61])
                                        Ptyp_constr "Astf.exp" (fan_ops.ml[270,10226+53]..[270,10226+61])
                                        []
                              <case>
                                pattern (fan_ops.ml[271,10289+19]..[280,10815+32])
                                  Ppat_constraint
                                  pattern (fan_ops.ml[271,10289+20]..[279,10722+92])
                                    Ppat_variant "App"
                                    Some
                                      pattern (fan_ops.ml[271,10289+20]..[279,10722+92])
                                        Ppat_tuple
                                        [
                                          pattern (fan_ops.ml[272,10314+23]..[272,10314+27])
                                            Ppat_var "_loc" (fan_ops.ml[272,10314+23]..[272,10314+27])
                                          pattern (fan_ops.ml[272,10314+28]..[279,10722+88])
                                            Ppat_variant "App"
                                            Some
                                              pattern (fan_ops.ml[272,10314+28]..[279,10722+88])
                                                Ppat_tuple
                                                [
                                                  pattern (fan_ops.ml[273,10347+31]..[273,10347+32])
                                                    Ppat_any
                                                  pattern (fan_ops.ml[273,10347+33]..[279,10722+84])
                                                    Ppat_variant "App"
                                                    Some
                                                      pattern (fan_ops.ml[273,10347+33]..[279,10722+84])
                                                        Ppat_tuple
                                                        [
                                                          pattern (fan_ops.ml[274,10385+36]..[274,10385+37])
                                                            Ppat_any
                                                          pattern (fan_ops.ml[274,10385+38]..[279,10722+79])
                                                            Ppat_variant "Dot"
                                                            Some
                                                              pattern (fan_ops.ml[274,10385+38]..[279,10722+79])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (fan_ops.ml[275,10428+41]..[275,10428+42])
                                                                    Ppat_any
                                                                  pattern (fan_ops.ml[275,10428+43]..[275,10428+62])
                                                                    Ppat_variant "Uid"
                                                                    Some
                                                                      pattern (fan_ops.ml[275,10428+43]..[275,10428+62])
Ppat_tuple
[
  pattern (fan_ops.ml[275,10428+49]..[275,10428+50])
    Ppat_any
  pattern (fan_ops.ml[275,10428+51]..[275,10428+61])
    Ppat_constant Const_string("Bigarray",None)
]
                                                                  pattern (fan_ops.ml[275,10428+63]..[279,10722+78])
                                                                    Ppat_variant "Dot"
                                                                    Some
                                                                      pattern (fan_ops.ml[275,10428+63]..[279,10722+78])
Ppat_tuple
[
  pattern (fan_ops.ml[276,10496+66]..[276,10496+67])
    Ppat_any
  pattern (fan_ops.ml[276,10496+68]..[277,10569+80])
    Ppat_variant "Uid"
    Some
      pattern (fan_ops.ml[276,10496+68]..[277,10569+80])
        Ppat_tuple
        [
          pattern (fan_ops.ml[277,10569+69]..[277,10569+70])
            Ppat_any
          pattern (fan_ops.ml[277,10569+71]..[277,10569+79])
            Ppat_constant Const_string("Array2",None)
        ]
  pattern (fan_ops.ml[278,10651+66]..[279,10722+77])
    Ppat_variant "Lid"
    Some
      pattern (fan_ops.ml[278,10651+66]..[279,10722+77])
        Ppat_tuple
        [
          pattern (fan_ops.ml[279,10722+69]..[279,10722+70])
            Ppat_any
          pattern (fan_ops.ml[279,10722+71]..[279,10722+76])
            Ppat_constant Const_string("get",None)
        ]
]
                                                                ]
                                                          pattern (fan_ops.ml[279,10722+80]..[279,10722+83])
                                                            Ppat_var "arr" (fan_ops.ml[279,10722+80]..[279,10722+83])
                                                        ]
                                                  pattern (fan_ops.ml[279,10722+85]..[279,10722+87])
                                                    Ppat_var "c1" (fan_ops.ml[279,10722+85]..[279,10722+87])
                                                ]
                                          pattern (fan_ops.ml[279,10722+89]..[279,10722+91])
                                            Ppat_var "c2" (fan_ops.ml[279,10722+89]..[279,10722+91])
                                        ]
                                  core_type (fan_ops.ml[280,10815+23]..[280,10815+31])
                                    Ptyp_constr "Astf.exp" (fan_ops.ml[280,10815+23]..[280,10815+31])
                                    []
                                expression (fan_ops.ml[281,10851+21]..[298,11716+62])
                                  Pexp_construct "Some" (fan_ops.ml[281,10851+21]..[281,10851+25])
                                  Some
                                    expression (fan_ops.ml[282,10877+23]..[298,11716+62])
                                      Pexp_coerce
                                      expression (fan_ops.ml[282,10877+24]..[298,11716+49])
                                        Pexp_variant "App"
                                        Some
                                          expression (fan_ops.ml[283,10906+26]..[298,11716+49])
                                            Pexp_tuple
                                            [
                                              expression (fan_ops.ml[283,10906+27]..[283,10906+30])
                                                Pexp_ident "loc" (fan_ops.ml[283,10906+27]..[283,10906+30])
                                              expression (fan_ops.ml[284,10938+29]..[297,11638+75])
                                                Pexp_variant "App"
                                                Some
                                                  expression (fan_ops.ml[285,10972+31]..[297,11638+75])
                                                    Pexp_tuple
                                                    [
                                                      expression (fan_ops.ml[285,10972+32]..[285,10972+35])
                                                        Pexp_ident "loc" (fan_ops.ml[285,10972+32]..[285,10972+35])
                                                      expression (fan_ops.ml[286,11009+34]..[297,11638+55])
                                                        Pexp_variant "App"
                                                        Some
                                                          expression (fan_ops.ml[287,11048+36]..[297,11638+55])
                                                            Pexp_tuple
                                                            [
                                                              expression (fan_ops.ml[287,11048+37]..[287,11048+40])
                                                                Pexp_ident "loc" (fan_ops.ml[287,11048+37]..[287,11048+40])
                                                              expression (fan_ops.ml[288,11090+39]..[296,11574+61])
                                                                Pexp_variant "App"
                                                                Some
                                                                  expression (fan_ops.ml[289,11134+41]..[296,11574+61])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (fan_ops.ml[289,11134+42]..[289,11134+45])
Pexp_ident "loc" (fan_ops.ml[289,11134+42]..[289,11134+45])
                                                                      expression (fan_ops.ml[290,11181+44]..[295,11496+75])
Pexp_variant "Dot"
Some
  expression (fan_ops.ml[291,11230+46]..[295,11496+75])
    Pexp_tuple
    [
      expression (fan_ops.ml[291,11230+47]..[291,11230+50])
        Pexp_ident "loc" (fan_ops.ml[291,11230+47]..[291,11230+50])
      expression (fan_ops.ml[291,11230+53]..[291,11230+75])
        Pexp_variant "Uid"
        Some
          expression (fan_ops.ml[291,11230+58]..[291,11230+75])
            Pexp_tuple
            [
              expression (fan_ops.ml[291,11230+59]..[291,11230+62])
                Pexp_ident "loc" (fan_ops.ml[291,11230+59]..[291,11230+62])
              expression (fan_ops.ml[291,11230+64]..[291,11230+74])
                Pexp_constant Const_string("Bigarray",None)
            ]
      expression (fan_ops.ml[292,11308+49]..[295,11496+73])
        Pexp_variant "Dot"
        Some
          expression (fan_ops.ml[293,11362+51]..[295,11496+73])
            Pexp_tuple
            [
              expression (fan_ops.ml[293,11362+52]..[293,11362+55])
                Pexp_ident "loc" (fan_ops.ml[293,11362+52]..[293,11362+55])
              expression (fan_ops.ml[294,11419+54]..[294,11419+74])
                Pexp_variant "Uid"
                Some
                  expression (fan_ops.ml[294,11419+59]..[294,11419+74])
                    Pexp_tuple
                    [
                      expression (fan_ops.ml[294,11419+60]..[294,11419+63])
                        Pexp_ident "loc" (fan_ops.ml[294,11419+60]..[294,11419+63])
                      expression (fan_ops.ml[294,11419+65]..[294,11419+73])
                        Pexp_constant Const_string("Array2",None)
                    ]
              expression (fan_ops.ml[295,11496+54]..[295,11496+71])
                Pexp_variant "Lid"
                Some
                  expression (fan_ops.ml[295,11496+59]..[295,11496+71])
                    Pexp_tuple
                    [
                      expression (fan_ops.ml[295,11496+60]..[295,11496+63])
                        Pexp_ident "loc" (fan_ops.ml[295,11496+60]..[295,11496+63])
                      expression (fan_ops.ml[295,11496+65]..[295,11496+70])
                        Pexp_constant Const_string("set",None)
                    ]
            ]
    ]
                                                                      expression (fan_ops.ml[296,11574+43]..[296,11574+60])
Pexp_coerce
expression (fan_ops.ml[296,11574+44]..[296,11574+47])
  Pexp_ident "arr" (fan_ops.ml[296,11574+44]..[296,11574+47])
None
core_type (fan_ops.ml[296,11574+51]..[296,11574+59])
  Ptyp_constr "Astf.exp" (fan_ops.ml[296,11574+51]..[296,11574+59])
  []
                                                                    ]
                                                              expression (fan_ops.ml[297,11638+38]..[297,11638+54])
                                                                Pexp_coerce
                                                                expression (fan_ops.ml[297,11638+39]..[297,11638+41])
                                                                  Pexp_ident "c1" (fan_ops.ml[297,11638+39]..[297,11638+41])
                                                                None
                                                                core_type (fan_ops.ml[297,11638+45]..[297,11638+53])
                                                                  Ptyp_constr "Astf.exp" (fan_ops.ml[297,11638+45]..[297,11638+53])
                                                                  []
                                                            ]
                                                      expression (fan_ops.ml[297,11638+58]..[297,11638+74])
                                                        Pexp_coerce
                                                        expression (fan_ops.ml[297,11638+59]..[297,11638+61])
                                                          Pexp_ident "c2" (fan_ops.ml[297,11638+59]..[297,11638+61])
                                                        None
                                                        core_type (fan_ops.ml[297,11638+65]..[297,11638+73])
                                                          Ptyp_constr "Astf.exp" (fan_ops.ml[297,11638+65]..[297,11638+73])
                                                          []
                                                    ]
                                              expression (fan_ops.ml[298,11716+28]..[298,11716+48])
                                                Pexp_coerce
                                                expression (fan_ops.ml[298,11716+29]..[298,11716+35])
                                                  Pexp_ident "newval" (fan_ops.ml[298,11716+29]..[298,11716+35])
                                                None
                                                core_type (fan_ops.ml[298,11716+39]..[298,11716+47])
                                                  Ptyp_constr "Astf.exp" (fan_ops.ml[298,11716+39]..[298,11716+47])
                                                  []
                                            ]
                                      None
                                      core_type (fan_ops.ml[298,11716+53]..[298,11716+61])
                                        Ptyp_constr "Astf.exp" (fan_ops.ml[298,11716+53]..[298,11716+61])
                                        []
                              <case>
                                pattern (fan_ops.ml[299,11779+19]..[310,12436+32])
                                  Ppat_constraint
                                  pattern (fan_ops.ml[299,11779+20]..[309,12339+96])
                                    Ppat_variant "App"
                                    Some
                                      pattern (fan_ops.ml[299,11779+20]..[309,12339+96])
                                        Ppat_tuple
                                        [
                                          pattern (fan_ops.ml[300,11804+23]..[300,11804+27])
                                            Ppat_var "_loc" (fan_ops.ml[300,11804+23]..[300,11804+27])
                                          pattern (fan_ops.ml[300,11804+28]..[309,12339+92])
                                            Ppat_variant "App"
                                            Some
                                              pattern (fan_ops.ml[300,11804+28]..[309,12339+92])
                                                Ppat_tuple
                                                [
                                                  pattern (fan_ops.ml[301,11837+31]..[301,11837+32])
                                                    Ppat_any
                                                  pattern (fan_ops.ml[301,11837+33]..[309,12339+88])
                                                    Ppat_variant "App"
                                                    Some
                                                      pattern (fan_ops.ml[301,11837+33]..[309,12339+88])
                                                        Ppat_tuple
                                                        [
                                                          pattern (fan_ops.ml[302,11875+36]..[302,11875+37])
                                                            Ppat_any
                                                          pattern (fan_ops.ml[302,11875+38]..[309,12339+84])
                                                            Ppat_variant "App"
                                                            Some
                                                              pattern (fan_ops.ml[302,11875+38]..[309,12339+84])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (fan_ops.ml[303,11918+41]..[303,11918+42])
                                                                    Ppat_any
                                                                  pattern (fan_ops.ml[303,11918+43]..[309,12339+79])
                                                                    Ppat_variant "Dot"
                                                                    Some
                                                                      pattern (fan_ops.ml[303,11918+43]..[309,12339+79])
Ppat_tuple
[
  pattern (fan_ops.ml[304,11966+46]..[304,11966+47])
    Ppat_any
  pattern (fan_ops.ml[304,11966+48]..[304,11966+67])
    Ppat_variant "Uid"
    Some
      pattern (fan_ops.ml[304,11966+48]..[304,11966+67])
        Ppat_tuple
        [
          pattern (fan_ops.ml[304,11966+54]..[304,11966+55])
            Ppat_any
          pattern (fan_ops.ml[304,11966+56]..[304,11966+66])
            Ppat_constant Const_string("Bigarray",None)
        ]
  pattern (fan_ops.ml[304,11966+68]..[309,12339+78])
    Ppat_variant "Dot"
    Some
      pattern (fan_ops.ml[304,11966+68]..[309,12339+78])
        Ppat_tuple
        [
          pattern (fan_ops.ml[305,12039+69]..[305,12039+70])
            Ppat_any
          pattern (fan_ops.ml[306,12111+68]..[307,12184+80])
            Ppat_variant "Uid"
            Some
              pattern (fan_ops.ml[306,12111+68]..[307,12184+80])
                Ppat_tuple
                [
                  pattern (fan_ops.ml[307,12184+69]..[307,12184+70])
                    Ppat_any
                  pattern (fan_ops.ml[307,12184+71]..[307,12184+79])
                    Ppat_constant Const_string("Array3",None)
                ]
          pattern (fan_ops.ml[308,12266+68]..[309,12339+77])
            Ppat_variant "Lid"
            Some
              pattern (fan_ops.ml[308,12266+68]..[309,12339+77])
                Ppat_tuple
                [
                  pattern (fan_ops.ml[309,12339+69]..[309,12339+70])
                    Ppat_any
                  pattern (fan_ops.ml[309,12339+71]..[309,12339+76])
                    Ppat_constant Const_string("get",None)
                ]
        ]
]
                                                                  pattern (fan_ops.ml[309,12339+80]..[309,12339+83])
                                                                    Ppat_var "arr" (fan_ops.ml[309,12339+80]..[309,12339+83])
                                                                ]
                                                          pattern (fan_ops.ml[309,12339+85]..[309,12339+87])
                                                            Ppat_var "c1" (fan_ops.ml[309,12339+85]..[309,12339+87])
                                                        ]
                                                  pattern (fan_ops.ml[309,12339+89]..[309,12339+91])
                                                    Ppat_var "c2" (fan_ops.ml[309,12339+89]..[309,12339+91])
                                                ]
                                          pattern (fan_ops.ml[309,12339+93]..[309,12339+95])
                                            Ppat_var "c3" (fan_ops.ml[309,12339+93]..[309,12339+95])
                                        ]
                                  core_type (fan_ops.ml[310,12436+23]..[310,12436+31])
                                    Ptyp_constr "Astf.exp" (fan_ops.ml[310,12436+23]..[310,12436+31])
                                    []
                                expression (fan_ops.ml[311,12472+21]..[341,14202+62])
                                  Pexp_construct "Some" (fan_ops.ml[311,12472+21]..[311,12472+25])
                                  Some
                                    expression (fan_ops.ml[312,12498+23]..[341,14202+62])
                                      Pexp_coerce
                                      expression (fan_ops.ml[312,12498+24]..[341,14202+49])
                                        Pexp_variant "App"
                                        Some
                                          expression (fan_ops.ml[313,12527+26]..[341,14202+49])
                                            Pexp_tuple
                                            [
                                              expression (fan_ops.ml[313,12527+27]..[313,12527+30])
                                                Pexp_ident "loc" (fan_ops.ml[313,12527+27]..[313,12527+30])
                                              expression (fan_ops.ml[314,12559+29]..[340,14142+57])
                                                Pexp_variant "App"
                                                Some
                                                  expression (fan_ops.ml[315,12593+31]..[340,14142+57])
                                                    Pexp_tuple
                                                    [
                                                      expression (fan_ops.ml[315,12593+32]..[315,12593+35])
                                                        Pexp_ident "loc" (fan_ops.ml[315,12593+32]..[315,12593+35])
                                                      expression (fan_ops.ml[315,12593+38]..[315,12593+54])
                                                        Pexp_variant "Lid"
                                                        Some
                                                          expression (fan_ops.ml[315,12593+43]..[315,12593+54])
                                                            Pexp_tuple
                                                            [
                                                              expression (fan_ops.ml[315,12593+44]..[315,12593+47])
                                                                Pexp_ident "loc" (fan_ops.ml[315,12593+44]..[315,12593+47])
                                                              expression (fan_ops.ml[315,12593+49]..[315,12593+53])
                                                                Pexp_constant Const_string(":=",None)
                                                            ]
                                                      expression (fan_ops.ml[316,12650+34]..[340,14142+55])
                                                        Pexp_variant "App"
                                                        Some
                                                          expression (fan_ops.ml[317,12689+36]..[340,14142+55])
                                                            Pexp_tuple
                                                            [
                                                              expression (fan_ops.ml[317,12689+37]..[317,12689+40])
                                                                Pexp_ident "loc" (fan_ops.ml[317,12689+37]..[317,12689+40])
                                                              expression (fan_ops.ml[318,12731+39]..[339,14079+60])
                                                                Pexp_variant "App"
                                                                Some
                                                                  expression (fan_ops.ml[319,12775+41]..[339,14079+60])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (fan_ops.ml[319,12775+42]..[319,12775+45])
Pexp_ident "loc" (fan_ops.ml[319,12775+42]..[319,12775+45])
                                                                      expression (fan_ops.ml[320,12822+44]..[338,14011+65])
Pexp_variant "App"
Some
  expression (fan_ops.ml[321,12871+46]..[338,14011+65])
    Pexp_tuple
    [
      expression (fan_ops.ml[321,12871+47]..[321,12871+50])
        Pexp_ident "loc" (fan_ops.ml[321,12871+47]..[321,12871+50])
      expression (fan_ops.ml[322,12923+49]..[337,13937+71])
        Pexp_variant "App"
        Some
          expression (fan_ops.ml[323,12977+51]..[337,13937+71])
            Pexp_tuple
            [
              expression (fan_ops.ml[323,12977+52]..[323,12977+55])
                Pexp_ident "loc" (fan_ops.ml[323,12977+52]..[323,12977+55])
              expression (fan_ops.ml[324,13034+54]..[336,13856+78])
                Pexp_variant "Dot"
                Some
                  expression (fan_ops.ml[325,13093+56]..[336,13856+78])
                    Pexp_tuple
                    [
                      expression (fan_ops.ml[325,13093+57]..[325,13093+60])
                        Pexp_ident "loc" (fan_ops.ml[325,13093+57]..[325,13093+60])
                      expression (fan_ops.ml[326,13155+59]..[328,13286+74])
                        Pexp_variant "Uid"
                        Some
                          expression (fan_ops.ml[327,13219+61]..[328,13286+74])
                            Pexp_tuple
                            [
                              expression (fan_ops.ml[327,13219+62]..[327,13219+65])
                                Pexp_ident "loc" (fan_ops.ml[327,13219+62]..[327,13219+65])
                              expression (fan_ops.ml[328,13286+63]..[328,13286+73])
                                Pexp_constant Const_string("Bigarray",None)
                            ]
                      expression (fan_ops.ml[329,13363+59]..[336,13856+76])
                        Pexp_variant "Dot"
                        Some
                          expression (fan_ops.ml[330,13427+61]..[336,13856+76])
                            Pexp_tuple
                            [
                              expression (fan_ops.ml[330,13427+62]..[330,13427+65])
                                Pexp_ident "loc" (fan_ops.ml[330,13427+62]..[330,13427+65])
                              expression (fan_ops.ml[331,13494+64]..[333,13635+77])
                                Pexp_variant "Uid"
                                Some
                                  expression (fan_ops.ml[332,13563+66]..[333,13635+77])
                                    Pexp_tuple
                                    [
                                      expression (fan_ops.ml[332,13563+67]..[332,13563+70])
                                        Pexp_ident "loc" (fan_ops.ml[332,13563+67]..[332,13563+70])
                                      expression (fan_ops.ml[333,13635+68]..[333,13635+76])
                                        Pexp_constant Const_string("Array3",None)
                                    ]
                              expression (fan_ops.ml[334,13715+64]..[336,13856+74])
                                Pexp_variant "Lid"
                                Some
                                  expression (fan_ops.ml[335,13784+66]..[336,13856+74])
                                    Pexp_tuple
                                    [
                                      expression (fan_ops.ml[335,13784+67]..[335,13784+70])
                                        Pexp_ident "loc" (fan_ops.ml[335,13784+67]..[335,13784+70])
                                      expression (fan_ops.ml[336,13856+68]..[336,13856+73])
                                        Pexp_constant Const_string("get",None)
                                    ]
                            ]
                    ]
              expression (fan_ops.ml[337,13937+53]..[337,13937+70])
                Pexp_coerce
                expression (fan_ops.ml[337,13937+54]..[337,13937+57])
                  Pexp_ident "arr" (fan_ops.ml[337,13937+54]..[337,13937+57])
                None
                core_type (fan_ops.ml[337,13937+61]..[337,13937+69])
                  Ptyp_constr "Astf.exp" (fan_ops.ml[337,13937+61]..[337,13937+69])
                  []
            ]
      expression (fan_ops.ml[338,14011+48]..[338,14011+64])
        Pexp_coerce
        expression (fan_ops.ml[338,14011+49]..[338,14011+51])
          Pexp_ident "c1" (fan_ops.ml[338,14011+49]..[338,14011+51])
        None
        core_type (fan_ops.ml[338,14011+55]..[338,14011+63])
          Ptyp_constr "Astf.exp" (fan_ops.ml[338,14011+55]..[338,14011+63])
          []
    ]
                                                                      expression (fan_ops.ml[339,14079+43]..[339,14079+59])
Pexp_coerce
expression (fan_ops.ml[339,14079+44]..[339,14079+46])
  Pexp_ident "c2" (fan_ops.ml[339,14079+44]..[339,14079+46])
None
core_type (fan_ops.ml[339,14079+50]..[339,14079+58])
  Ptyp_constr "Astf.exp" (fan_ops.ml[339,14079+50]..[339,14079+58])
  []
                                                                    ]
                                                              expression (fan_ops.ml[340,14142+38]..[340,14142+54])
                                                                Pexp_coerce
                                                                expression (fan_ops.ml[340,14142+39]..[340,14142+41])
                                                                  Pexp_ident "c3" (fan_ops.ml[340,14142+39]..[340,14142+41])
                                                                None
                                                                core_type (fan_ops.ml[340,14142+45]..[340,14142+53])
                                                                  Ptyp_constr "Astf.exp" (fan_ops.ml[340,14142+45]..[340,14142+53])
                                                                  []
                                                            ]
                                                    ]
                                              expression (fan_ops.ml[341,14202+28]..[341,14202+48])
                                                Pexp_coerce
                                                expression (fan_ops.ml[341,14202+29]..[341,14202+35])
                                                  Pexp_ident "newval" (fan_ops.ml[341,14202+29]..[341,14202+35])
                                                None
                                                core_type (fan_ops.ml[341,14202+39]..[341,14202+47])
                                                  Ptyp_constr "Astf.exp" (fan_ops.ml[341,14202+39]..[341,14202+47])
                                                  []
                                            ]
                                      None
                                      core_type (fan_ops.ml[341,14202+53]..[341,14202+61])
                                        Ptyp_constr "Astf.exp" (fan_ops.ml[341,14202+53]..[341,14202+61])
                                        []
                              <case>
                                pattern (fan_ops.ml[342,14265+19]..[350,14699+32])
                                  Ppat_constraint
                                  pattern (fan_ops.ml[342,14265+20]..[349,14657+41])
                                    Ppat_variant "App"
                                    Some
                                      pattern (fan_ops.ml[342,14265+20]..[349,14657+41])
                                        Ppat_tuple
                                        [
                                          pattern (fan_ops.ml[343,14290+23]..[343,14290+27])
                                            Ppat_var "_loc" (fan_ops.ml[343,14290+23]..[343,14290+27])
                                          pattern (fan_ops.ml[343,14290+28]..[348,14573+82])
                                            Ppat_variant "App"
                                            Some
                                              pattern (fan_ops.ml[343,14290+28]..[348,14573+82])
                                                Ppat_tuple
                                                [
                                                  pattern (fan_ops.ml[344,14323+31]..[344,14323+32])
                                                    Ppat_any
                                                  pattern (fan_ops.ml[344,14323+33]..[348,14573+77])
                                                    Ppat_variant "Dot"
                                                    Some
                                                      pattern (fan_ops.ml[344,14323+33]..[348,14573+77])
                                                        Ppat_tuple
                                                        [
                                                          pattern (fan_ops.ml[345,14361+36]..[345,14361+37])
                                                            Ppat_any
                                                          pattern (fan_ops.ml[345,14361+38]..[345,14361+57])
                                                            Ppat_variant "Uid"
                                                            Some
                                                              pattern (fan_ops.ml[345,14361+38]..[345,14361+57])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (fan_ops.ml[345,14361+44]..[345,14361+45])
                                                                    Ppat_any
                                                                  pattern (fan_ops.ml[345,14361+46]..[345,14361+56])
                                                                    Ppat_constant Const_string("Bigarray",None)
                                                                ]
                                                          pattern (fan_ops.ml[345,14361+58]..[348,14573+76])
                                                            Ppat_variant "Dot"
                                                            Some
                                                              pattern (fan_ops.ml[345,14361+58]..[348,14573+76])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (fan_ops.ml[346,14424+61]..[346,14424+62])
                                                                    Ppat_any
                                                                  pattern (fan_ops.ml[346,14424+63]..[347,14492+79])
                                                                    Ppat_variant "Uid"
                                                                    Some
                                                                      pattern (fan_ops.ml[346,14424+63]..[347,14492+79])
Ppat_tuple
[
  pattern (fan_ops.ml[347,14492+66]..[347,14492+67])
    Ppat_any
  pattern (fan_ops.ml[347,14492+68]..[347,14492+78])
    Ppat_constant Const_string("Genarray",None)
]
                                                                  pattern (fan_ops.ml[348,14573+61]..[348,14573+75])
                                                                    Ppat_variant "Lid"
                                                                    Some
                                                                      pattern (fan_ops.ml[348,14573+61]..[348,14573+75])
Ppat_tuple
[
  pattern (fan_ops.ml[348,14573+67]..[348,14573+68])
    Ppat_any
  pattern (fan_ops.ml[348,14573+69]..[348,14573+74])
    Ppat_constant Const_string("get",None)
]
                                                                ]
                                                        ]
                                                  pattern (fan_ops.ml[348,14573+78]..[348,14573+81])
                                                    Ppat_var "arr" (fan_ops.ml[348,14573+78]..[348,14573+81])
                                                ]
                                          pattern (fan_ops.ml[349,14657+23]..[349,14657+40])
                                            Ppat_variant "Array"
                                            Some
                                              pattern (fan_ops.ml[349,14657+23]..[349,14657+40])
                                                Ppat_tuple
                                                [
                                                  pattern (fan_ops.ml[349,14657+31]..[349,14657+32])
                                                    Ppat_any
                                                  pattern (fan_ops.ml[349,14657+33]..[349,14657+39])
                                                    Ppat_var "coords" (fan_ops.ml[349,14657+33]..[349,14657+39])
                                                ]
                                        ]
                                  core_type (fan_ops.ml[350,14699+23]..[350,14699+31])
                                    Ptyp_constr "Astf.exp" (fan_ops.ml[350,14699+23]..[350,14699+31])
                                    []
                                expression (fan_ops.ml[351,14735+21]..[365,15423+62])
                                  Pexp_construct "Some" (fan_ops.ml[351,14735+21]..[351,14735+25])
                                  Some
                                    expression (fan_ops.ml[352,14761+23]..[365,15423+62])
                                      Pexp_coerce
                                      expression (fan_ops.ml[352,14761+24]..[365,15423+49])
                                        Pexp_variant "App"
                                        Some
                                          expression (fan_ops.ml[353,14790+26]..[365,15423+49])
                                            Pexp_tuple
                                            [
                                              expression (fan_ops.ml[353,14790+27]..[353,14790+30])
                                                Pexp_ident "loc" (fan_ops.ml[353,14790+27]..[353,14790+30])
                                              expression (fan_ops.ml[354,14822+29]..[364,15350+70])
                                                Pexp_variant "App"
                                                Some
                                                  expression (fan_ops.ml[355,14856+31]..[364,15350+70])
                                                    Pexp_tuple
                                                    [
                                                      expression (fan_ops.ml[355,14856+32]..[355,14856+35])
                                                        Pexp_ident "loc" (fan_ops.ml[355,14856+32]..[355,14856+35])
                                                      expression (fan_ops.ml[356,14893+34]..[363,15291+56])
                                                        Pexp_variant "App"
                                                        Some
                                                          expression (fan_ops.ml[357,14932+36]..[363,15291+56])
                                                            Pexp_tuple
                                                            [
                                                              expression (fan_ops.ml[357,14932+37]..[357,14932+40])
                                                                Pexp_ident "loc" (fan_ops.ml[357,14932+37]..[357,14932+40])
                                                              expression (fan_ops.ml[358,14974+39]..[362,15218+70])
                                                                Pexp_variant "Dot"
                                                                Some
                                                                  expression (fan_ops.ml[359,15018+41]..[362,15218+70])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (fan_ops.ml[359,15018+42]..[359,15018+45])
Pexp_ident "loc" (fan_ops.ml[359,15018+42]..[359,15018+45])
                                                                      expression (fan_ops.ml[359,15018+48]..[359,15018+70])
Pexp_variant "Uid"
Some
  expression (fan_ops.ml[359,15018+53]..[359,15018+70])
    Pexp_tuple
    [
      expression (fan_ops.ml[359,15018+54]..[359,15018+57])
        Pexp_ident "loc" (fan_ops.ml[359,15018+54]..[359,15018+57])
      expression (fan_ops.ml[359,15018+59]..[359,15018+69])
        Pexp_constant Const_string("Bigarray",None)
    ]
                                                                      expression (fan_ops.ml[360,15091+44]..[362,15218+68])
Pexp_variant "Dot"
Some
  expression (fan_ops.ml[361,15140+46]..[362,15218+68])
    Pexp_tuple
    [
      expression (fan_ops.ml[361,15140+47]..[361,15140+50])
        Pexp_ident "loc" (fan_ops.ml[361,15140+47]..[361,15140+50])
      expression (fan_ops.ml[361,15140+53]..[361,15140+75])
        Pexp_variant "Uid"
        Some
          expression (fan_ops.ml[361,15140+58]..[361,15140+75])
            Pexp_tuple
            [
              expression (fan_ops.ml[361,15140+59]..[361,15140+62])
                Pexp_ident "loc" (fan_ops.ml[361,15140+59]..[361,15140+62])
              expression (fan_ops.ml[361,15140+64]..[361,15140+74])
                Pexp_constant Const_string("Genarray",None)
            ]
      expression (fan_ops.ml[362,15218+49]..[362,15218+66])
        Pexp_variant "Lid"
        Some
          expression (fan_ops.ml[362,15218+54]..[362,15218+66])
            Pexp_tuple
            [
              expression (fan_ops.ml[362,15218+55]..[362,15218+58])
                Pexp_ident "loc" (fan_ops.ml[362,15218+55]..[362,15218+58])
              expression (fan_ops.ml[362,15218+60]..[362,15218+65])
                Pexp_constant Const_string("set",None)
            ]
    ]
                                                                    ]
                                                              expression (fan_ops.ml[363,15291+38]..[363,15291+55])
                                                                Pexp_coerce
                                                                expression (fan_ops.ml[363,15291+39]..[363,15291+42])
                                                                  Pexp_ident "arr" (fan_ops.ml[363,15291+39]..[363,15291+42])
                                                                None
                                                                core_type (fan_ops.ml[363,15291+46]..[363,15291+54])
                                                                  Ptyp_constr "Astf.exp" (fan_ops.ml[363,15291+46]..[363,15291+54])
                                                                  []
                                                            ]
                                                      expression (fan_ops.ml[364,15350+34]..[364,15350+68])
                                                        Pexp_variant "Array"
                                                        Some
                                                          expression (fan_ops.ml[364,15350+41]..[364,15350+68])
                                                            Pexp_tuple
                                                            [
                                                              expression (fan_ops.ml[364,15350+42]..[364,15350+45])
                                                                Pexp_ident "loc" (fan_ops.ml[364,15350+42]..[364,15350+45])
                                                              expression (fan_ops.ml[364,15350+47]..[364,15350+67])
                                                                Pexp_coerce
                                                                expression (fan_ops.ml[364,15350+48]..[364,15350+54])
                                                                  Pexp_ident "coords" (fan_ops.ml[364,15350+48]..[364,15350+54])
                                                                None
                                                                core_type (fan_ops.ml[364,15350+58]..[364,15350+66])
                                                                  Ptyp_constr "Astf.exp" (fan_ops.ml[364,15350+58]..[364,15350+66])
                                                                  []
                                                            ]
                                                    ]
                                              expression (fan_ops.ml[365,15423+28]..[365,15423+48])
                                                Pexp_coerce
                                                expression (fan_ops.ml[365,15423+29]..[365,15423+35])
                                                  Pexp_ident "newval" (fan_ops.ml[365,15423+29]..[365,15423+35])
                                                None
                                                core_type (fan_ops.ml[365,15423+39]..[365,15423+47])
                                                  Ptyp_constr "Astf.exp" (fan_ops.ml[365,15423+39]..[365,15423+47])
                                                  []
                                            ]
                                      None
                                      core_type (fan_ops.ml[365,15423+53]..[365,15423+61])
                                        Ptyp_constr "Astf.exp" (fan_ops.ml[365,15423+53]..[365,15423+61])
                                        []
                              <case>
                                pattern (fan_ops.ml[366,15486+19]..[366,15486+20])
                                  Ppat_any
                                expression (fan_ops.ml[366,15486+24]..[366,15486+28])
                                  Pexp_construct "None" (fan_ops.ml[366,15486+24]..[366,15486+28])
                                  None
                            ]
                      ]
                ]
          ]
    ]
  structure_item (fan_ops.ml[367,15518+0]..[372,15680+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[367,15518+4]..[367,15518+14])
          Ppat_var "mksequence" (fan_ops.ml[367,15518+4]..[367,15518+14])
        expression (fan_ops.ml[367,15518+15]..[372,15680+10])
          Pexp_fun "?loc"
          None
          pattern (fan_ops.ml[367,15518+16]..[367,15518+19])
            Ppat_var "loc" (fan_ops.ml[367,15518+16]..[367,15518+19])
          expression (fan_ops.ml[368,15541+2]..[372,15680+10])
            Pexp_function
            [
              <case>
                pattern (fan_ops.ml[369,15552+4]..[369,15552+38])
                  Ppat_alias "e" (fan_ops.ml[369,15552+37]..[369,15552+38])
                  pattern (fan_ops.ml[369,15552+4]..[369,15552+33])
                    Ppat_or
                    pattern (fan_ops.ml[369,15552+4]..[369,15552+19])
                      Ppat_variant "Sem"
                      Some
                        pattern (fan_ops.ml[369,15552+4]..[369,15552+19])
                          Ppat_tuple
                          [
                            pattern (fan_ops.ml[369,15552+10]..[369,15552+14])
                              Ppat_var "_loc" (fan_ops.ml[369,15552+10]..[369,15552+14])
                            pattern (fan_ops.ml[369,15552+15]..[369,15552+16])
                              Ppat_any
                            pattern (fan_ops.ml[369,15552+17]..[369,15552+18])
                              Ppat_any
                          ]
                    pattern (fan_ops.ml[369,15552+20]..[369,15552+33])
                      Ppat_variant "Ant"
                      Some
                        pattern (fan_ops.ml[369,15552+20]..[369,15552+33])
                          Ppat_tuple
                          [
                            pattern (fan_ops.ml[369,15552+26]..[369,15552+30])
                              Ppat_var "_loc" (fan_ops.ml[369,15552+26]..[369,15552+30])
                            pattern (fan_ops.ml[369,15552+31]..[369,15552+32])
                              Ppat_any
                          ]
                expression (fan_ops.ml[370,15594+6]..[371,15659+20])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (fan_ops.ml[370,15594+10]..[370,15594+14])
                        Ppat_var "_loc" (fan_ops.ml[370,15594+10]..[370,15594+14])
                      expression (fan_ops.ml[370,15594+17]..[370,15594+61])
                        Pexp_match
                        expression (fan_ops.ml[370,15594+23]..[370,15594+26])
                          Pexp_ident "loc" (fan_ops.ml[370,15594+23]..[370,15594+26])
                        [
                          <case>
                            pattern (fan_ops.ml[370,15594+34]..[370,15594+40])
                              Ppat_construct "Some" (fan_ops.ml[370,15594+34]..[370,15594+38])
                              Some
                                pattern (fan_ops.ml[370,15594+39]..[370,15594+40])
                                  Ppat_var "x" (fan_ops.ml[370,15594+39]..[370,15594+40])
                            expression (fan_ops.ml[370,15594+44]..[370,15594+45])
                              Pexp_ident "x" (fan_ops.ml[370,15594+44]..[370,15594+45])
                          <case>
                            pattern (fan_ops.ml[370,15594+48]..[370,15594+52])
                              Ppat_construct "None" (fan_ops.ml[370,15594+48]..[370,15594+52])
                              None
                            expression (fan_ops.ml[370,15594+57]..[370,15594+61])
                              Pexp_ident "_loc" (fan_ops.ml[370,15594+57]..[370,15594+61])
                        ]
                  ]
                  expression (fan_ops.ml[371,15659+6]..[371,15659+20])
                    Pexp_variant "Seq"
                    Some
                      expression (fan_ops.ml[371,15659+11]..[371,15659+20])
                        Pexp_tuple
                        [
                          expression (fan_ops.ml[371,15659+12]..[371,15659+16])
                            Pexp_ident "_loc" (fan_ops.ml[371,15659+12]..[371,15659+16])
                          expression (fan_ops.ml[371,15659+18]..[371,15659+19])
                            Pexp_ident "e" (fan_ops.ml[371,15659+18]..[371,15659+19])
                        ]
              <case>
                pattern (fan_ops.ml[372,15680+4]..[372,15680+5])
                  Ppat_var "e" (fan_ops.ml[372,15680+4]..[372,15680+5])
                expression (fan_ops.ml[372,15680+9]..[372,15680+10])
                  Pexp_ident "e" (fan_ops.ml[372,15680+9]..[372,15680+10])
            ]
    ]
  structure_item (fan_ops.ml[373,15691+0]..[378,15840+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[373,15691+4]..[373,15691+15])
          Ppat_var "mksequence'" (fan_ops.ml[373,15691+4]..[373,15691+15])
        expression (fan_ops.ml[373,15691+16]..[378,15840+10])
          Pexp_fun "?loc"
          None
          pattern (fan_ops.ml[373,15691+17]..[373,15691+20])
            Ppat_var "loc" (fan_ops.ml[373,15691+17]..[373,15691+20])
          expression (fan_ops.ml[374,15715+2]..[378,15840+10])
            Pexp_function
            [
              <case>
                pattern (fan_ops.ml[375,15726+4]..[375,15726+24])
                  Ppat_alias "e" (fan_ops.ml[375,15726+23]..[375,15726+24])
                  pattern (fan_ops.ml[375,15726+4]..[375,15726+19])
                    Ppat_variant "Sem"
                    Some
                      pattern (fan_ops.ml[375,15726+4]..[375,15726+19])
                        Ppat_tuple
                        [
                          pattern (fan_ops.ml[375,15726+10]..[375,15726+14])
                            Ppat_var "_loc" (fan_ops.ml[375,15726+10]..[375,15726+14])
                          pattern (fan_ops.ml[375,15726+15]..[375,15726+16])
                            Ppat_any
                          pattern (fan_ops.ml[375,15726+17]..[375,15726+18])
                            Ppat_any
                        ]
                expression (fan_ops.ml[376,15754+6]..[377,15819+20])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (fan_ops.ml[376,15754+10]..[376,15754+14])
                        Ppat_var "_loc" (fan_ops.ml[376,15754+10]..[376,15754+14])
                      expression (fan_ops.ml[376,15754+17]..[376,15754+61])
                        Pexp_match
                        expression (fan_ops.ml[376,15754+23]..[376,15754+26])
                          Pexp_ident "loc" (fan_ops.ml[376,15754+23]..[376,15754+26])
                        [
                          <case>
                            pattern (fan_ops.ml[376,15754+34]..[376,15754+40])
                              Ppat_construct "Some" (fan_ops.ml[376,15754+34]..[376,15754+38])
                              Some
                                pattern (fan_ops.ml[376,15754+39]..[376,15754+40])
                                  Ppat_var "x" (fan_ops.ml[376,15754+39]..[376,15754+40])
                            expression (fan_ops.ml[376,15754+44]..[376,15754+45])
                              Pexp_ident "x" (fan_ops.ml[376,15754+44]..[376,15754+45])
                          <case>
                            pattern (fan_ops.ml[376,15754+48]..[376,15754+52])
                              Ppat_construct "None" (fan_ops.ml[376,15754+48]..[376,15754+52])
                              None
                            expression (fan_ops.ml[376,15754+57]..[376,15754+61])
                              Pexp_ident "_loc" (fan_ops.ml[376,15754+57]..[376,15754+61])
                        ]
                  ]
                  expression (fan_ops.ml[377,15819+6]..[377,15819+20])
                    Pexp_variant "Seq"
                    Some
                      expression (fan_ops.ml[377,15819+11]..[377,15819+20])
                        Pexp_tuple
                        [
                          expression (fan_ops.ml[377,15819+12]..[377,15819+16])
                            Pexp_ident "_loc" (fan_ops.ml[377,15819+12]..[377,15819+16])
                          expression (fan_ops.ml[377,15819+18]..[377,15819+19])
                            Pexp_ident "e" (fan_ops.ml[377,15819+18]..[377,15819+19])
                        ]
              <case>
                pattern (fan_ops.ml[378,15840+4]..[378,15840+5])
                  Ppat_var "e" (fan_ops.ml[378,15840+4]..[378,15840+5])
                expression (fan_ops.ml[378,15840+9]..[378,15840+10])
                  Pexp_ident "e" (fan_ops.ml[378,15840+9]..[378,15840+10])
            ]
    ]
  structure_item (fan_ops.ml[379,15851+0]..[383,15938+21])
    Pstr_value Rec
    [
      <def>
        pattern (fan_ops.ml[379,15851+8]..[379,15851+14])
          Ppat_var "to_lid" (fan_ops.ml[379,15851+8]..[379,15851+14])
        expression (fan_ops.ml[380,15868+2]..[383,15938+21])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[381,15879+4]..[381,15879+19])
                Ppat_variant "Dot"
                Some
                  pattern (fan_ops.ml[381,15879+4]..[381,15879+19])
                    Ppat_tuple
                    [
                      pattern (fan_ops.ml[381,15879+10]..[381,15879+14])
                        Ppat_var "_loc" (fan_ops.ml[381,15879+10]..[381,15879+14])
                      pattern (fan_ops.ml[381,15879+15]..[381,15879+16])
                        Ppat_any
                      pattern (fan_ops.ml[381,15879+17]..[381,15879+18])
                        Ppat_var "i" (fan_ops.ml[381,15879+17]..[381,15879+18])
                    ]
              expression (fan_ops.ml[381,15879+23]..[381,15879+31])
                Pexp_apply
                expression (fan_ops.ml[381,15879+23]..[381,15879+29])
                  Pexp_ident "to_lid" (fan_ops.ml[381,15879+23]..[381,15879+29])
                [
                  <label> ""
                    expression (fan_ops.ml[381,15879+30]..[381,15879+31])
                      Pexp_ident "i" (fan_ops.ml[381,15879+30]..[381,15879+31])
                ]
            <case>
              pattern (fan_ops.ml[382,15911+4]..[382,15911+19])
                Ppat_variant "Lid"
                Some
                  pattern (fan_ops.ml[382,15911+4]..[382,15911+19])
                    Ppat_tuple
                    [
                      pattern (fan_ops.ml[382,15911+10]..[382,15911+14])
                        Ppat_var "_loc" (fan_ops.ml[382,15911+10]..[382,15911+14])
                      pattern (fan_ops.ml[382,15911+15]..[382,15911+18])
                        Ppat_var "lid" (fan_ops.ml[382,15911+15]..[382,15911+18])
                    ]
              expression (fan_ops.ml[382,15911+23]..[382,15911+26])
                Pexp_ident "lid" (fan_ops.ml[382,15911+23]..[382,15911+26])
            <case>
              pattern (fan_ops.ml[383,15938+4]..[383,15938+5])
                Ppat_any
              expression (fan_ops.ml[383,15938+9]..[383,15938+21])
                Pexp_assert
                expression (fan_ops.ml[383,15938+16]..[383,15938+21])
                  Pexp_construct "false" (fan_ops.ml[383,15938+16]..[383,15938+21])
                  None
          ]
    ]
  structure_item (fan_ops.ml[384,15960+0]..[405,16795+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (fan_ops.ml[384,15960+4]..[384,15960+10])
          Ppat_var "mkumin" (fan_ops.ml[384,15960+4]..[384,15960+10])
        expression (fan_ops.ml[385,15973+2]..[405,16795+60])
          Pexp_function
          [
            <case>
              pattern (fan_ops.ml[386,15984+4]..[386,15984+7])
                Ppat_var "loc" (fan_ops.ml[386,15984+4]..[386,15984+7])
              expression (fan_ops.ml[387,15995+7]..[405,16795+59])
                Pexp_function
                [
                  <case>
                    pattern (fan_ops.ml[388,16011+9]..[388,16011+15])
                      Ppat_var "prefix" (fan_ops.ml[388,16011+9]..[388,16011+15])
                    expression (fan_ops.ml[389,16030+12]..[405,16795+58])
                      Pexp_function
                      [
                        <case>
                          pattern (fan_ops.ml[390,16051+14]..[390,16051+17])
                            Ppat_var "arg" (fan_ops.ml[390,16051+14]..[390,16051+17])
                          expression (fan_ops.ml[391,16072+17]..[405,16795+57])
                            Pexp_match
                            expression (fan_ops.ml[391,16072+23]..[391,16072+26])
                              Pexp_ident "arg" (fan_ops.ml[391,16072+23]..[391,16072+26])
                            [
                              <case>
                                pattern (fan_ops.ml[392,16104+19]..[392,16104+45])
                                  Ppat_constraint
                                  pattern (fan_ops.ml[392,16104+20]..[392,16104+33])
                                    Ppat_variant "Int"
                                    Some
                                      pattern (fan_ops.ml[392,16104+20]..[392,16104+33])
                                        Ppat_tuple
                                        [
                                          pattern (fan_ops.ml[392,16104+26]..[392,16104+30])
                                            Ppat_var "_loc" (fan_ops.ml[392,16104+26]..[392,16104+30])
                                          pattern (fan_ops.ml[392,16104+31]..[392,16104+32])
                                            Ppat_var "n" (fan_ops.ml[392,16104+31]..[392,16104+32])
                                        ]
                                  core_type (fan_ops.ml[392,16104+36]..[392,16104+44])
                                    Ptyp_constr "Astf.exp" (fan_ops.ml[392,16104+36]..[392,16104+44])
                                    []
                                expression (fan_ops.ml[393,16153+21]..[393,16153+62])
                                  Pexp_coerce
                                  expression (fan_ops.ml[393,16153+22]..[393,16153+49])
                                    Pexp_variant "Int"
                                    Some
                                      expression (fan_ops.ml[393,16153+27]..[393,16153+49])
                                        Pexp_tuple
                                        [
                                          expression (fan_ops.ml[393,16153+28]..[393,16153+31])
                                            Pexp_ident "loc" (fan_ops.ml[393,16153+28]..[393,16153+31])
                                          expression (fan_ops.ml[393,16153+34]..[393,16153+47])
                                            Pexp_apply
                                            expression (fan_ops.ml[393,16153+34]..[393,16153+45])
                                              Pexp_ident "Stringf.neg" (fan_ops.ml[393,16153+34]..[393,16153+45])
                                            [
                                              <label> ""
                                                expression (fan_ops.ml[393,16153+46]..[393,16153+47])
                                                  Pexp_ident "n" (fan_ops.ml[393,16153+46]..[393,16153+47])
                                            ]
                                        ]
                                  None
                                  core_type (fan_ops.ml[393,16153+53]..[393,16153+61])
                                    Ptyp_constr "Astf.exp" (fan_ops.ml[393,16153+53]..[393,16153+61])
                                    []
                              <case>
                                pattern (fan_ops.ml[394,16216+19]..[394,16216+47])
                                  Ppat_constraint
                                  pattern (fan_ops.ml[394,16216+20]..[394,16216+35])
                                    Ppat_variant "Int32"
                                    Some
                                      pattern (fan_ops.ml[394,16216+20]..[394,16216+35])
                                        Ppat_tuple
                                        [
                                          pattern (fan_ops.ml[394,16216+28]..[394,16216+32])
                                            Ppat_var "_loc" (fan_ops.ml[394,16216+28]..[394,16216+32])
                                          pattern (fan_ops.ml[394,16216+33]..[394,16216+34])
                                            Ppat_var "n" (fan_ops.ml[394,16216+33]..[394,16216+34])
                                        ]
                                  core_type (fan_ops.ml[394,16216+38]..[394,16216+46])
                                    Ptyp_constr "Astf.exp" (fan_ops.ml[394,16216+38]..[394,16216+46])
                                    []
                                expression (fan_ops.ml[395,16267+21]..[395,16267+64])
                                  Pexp_coerce
                                  expression (fan_ops.ml[395,16267+22]..[395,16267+51])
                                    Pexp_variant "Int32"
                                    Some
                                      expression (fan_ops.ml[395,16267+29]..[395,16267+51])
                                        Pexp_tuple
                                        [
                                          expression (fan_ops.ml[395,16267+30]..[395,16267+33])
                                            Pexp_ident "loc" (fan_ops.ml[395,16267+30]..[395,16267+33])
                                          expression (fan_ops.ml[395,16267+36]..[395,16267+49])
                                            Pexp_apply
                                            expression (fan_ops.ml[395,16267+36]..[395,16267+47])
                                              Pexp_ident "Stringf.neg" (fan_ops.ml[395,16267+36]..[395,16267+47])
                                            [
                                              <label> ""
                                                expression (fan_ops.ml[395,16267+48]..[395,16267+49])
                                                  Pexp_ident "n" (fan_ops.ml[395,16267+48]..[395,16267+49])
                                            ]
                                        ]
                                  None
                                  core_type (fan_ops.ml[395,16267+55]..[395,16267+63])
                                    Ptyp_constr "Astf.exp" (fan_ops.ml[395,16267+55]..[395,16267+63])
                                    []
                              <case>
                                pattern (fan_ops.ml[396,16332+19]..[396,16332+47])
                                  Ppat_constraint
                                  pattern (fan_ops.ml[396,16332+20]..[396,16332+35])
                                    Ppat_variant "Int64"
                                    Some
                                      pattern (fan_ops.ml[396,16332+20]..[396,16332+35])
                                        Ppat_tuple
                                        [
                                          pattern (fan_ops.ml[396,16332+28]..[396,16332+32])
                                            Ppat_var "_loc" (fan_ops.ml[396,16332+28]..[396,16332+32])
                                          pattern (fan_ops.ml[396,16332+33]..[396,16332+34])
                                            Ppat_var "n" (fan_ops.ml[396,16332+33]..[396,16332+34])
                                        ]
                                  core_type (fan_ops.ml[396,16332+38]..[396,16332+46])
                                    Ptyp_constr "Astf.exp" (fan_ops.ml[396,16332+38]..[396,16332+46])
                                    []
                                expression (fan_ops.ml[397,16383+21]..[397,16383+64])
                                  Pexp_coerce
                                  expression (fan_ops.ml[397,16383+22]..[397,16383+51])
                                    Pexp_variant "Int64"
                                    Some
                                      expression (fan_ops.ml[397,16383+29]..[397,16383+51])
                                        Pexp_tuple
                                        [
                                          expression (fan_ops.ml[397,16383+30]..[397,16383+33])
                                            Pexp_ident "loc" (fan_ops.ml[397,16383+30]..[397,16383+33])
                                          expression (fan_ops.ml[397,16383+36]..[397,16383+49])
                                            Pexp_apply
                                            expression (fan_ops.ml[397,16383+36]..[397,16383+47])
                                              Pexp_ident "Stringf.neg" (fan_ops.ml[397,16383+36]..[397,16383+47])
                                            [
                                              <label> ""
                                                expression (fan_ops.ml[397,16383+48]..[397,16383+49])
                                                  Pexp_ident "n" (fan_ops.ml[397,16383+48]..[397,16383+49])
                                            ]
                                        ]
                                  None
                                  core_type (fan_ops.ml[397,16383+55]..[397,16383+63])
                                    Ptyp_constr "Astf.exp" (fan_ops.ml[397,16383+55]..[397,16383+63])
                                    []
                              <case>
                                pattern (fan_ops.ml[398,16448+19]..[398,16448+51])
                                  Ppat_constraint
                                  pattern (fan_ops.ml[398,16448+20]..[398,16448+39])
                                    Ppat_variant "Nativeint"
                                    Some
                                      pattern (fan_ops.ml[398,16448+20]..[398,16448+39])
                                        Ppat_tuple
                                        [
                                          pattern (fan_ops.ml[398,16448+32]..[398,16448+36])
                                            Ppat_var "_loc" (fan_ops.ml[398,16448+32]..[398,16448+36])
                                          pattern (fan_ops.ml[398,16448+37]..[398,16448+38])
                                            Ppat_var "n" (fan_ops.ml[398,16448+37]..[398,16448+38])
                                        ]
                                  core_type (fan_ops.ml[398,16448+42]..[398,16448+50])
                                    Ptyp_constr "Astf.exp" (fan_ops.ml[398,16448+42]..[398,16448+50])
                                    []
                                expression (fan_ops.ml[399,16503+21]..[399,16503+68])
                                  Pexp_coerce
                                  expression (fan_ops.ml[399,16503+22]..[399,16503+55])
                                    Pexp_variant "Nativeint"
                                    Some
                                      expression (fan_ops.ml[399,16503+33]..[399,16503+55])
                                        Pexp_tuple
                                        [
                                          expression (fan_ops.ml[399,16503+34]..[399,16503+37])
                                            Pexp_ident "loc" (fan_ops.ml[399,16503+34]..[399,16503+37])
                                          expression (fan_ops.ml[399,16503+40]..[399,16503+53])
                                            Pexp_apply
                                            expression (fan_ops.ml[399,16503+40]..[399,16503+51])
                                              Pexp_ident "Stringf.neg" (fan_ops.ml[399,16503+40]..[399,16503+51])
                                            [
                                              <label> ""
                                                expression (fan_ops.ml[399,16503+52]..[399,16503+53])
                                                  Pexp_ident "n" (fan_ops.ml[399,16503+52]..[399,16503+53])
                                            ]
                                        ]
                                  None
                                  core_type (fan_ops.ml[399,16503+59]..[399,16503+67])
                                    Ptyp_constr "Astf.exp" (fan_ops.ml[399,16503+59]..[399,16503+67])
                                    []
                              <case>
                                pattern (fan_ops.ml[400,16572+19]..[400,16572+45])
                                  Ppat_constraint
                                  pattern (fan_ops.ml[400,16572+20]..[400,16572+33])
                                    Ppat_variant "Flo"
                                    Some
                                      pattern (fan_ops.ml[400,16572+20]..[400,16572+33])
                                        Ppat_tuple
                                        [
                                          pattern (fan_ops.ml[400,16572+26]..[400,16572+30])
                                            Ppat_var "_loc" (fan_ops.ml[400,16572+26]..[400,16572+30])
                                          pattern (fan_ops.ml[400,16572+31]..[400,16572+32])
                                            Ppat_var "n" (fan_ops.ml[400,16572+31]..[400,16572+32])
                                        ]
                                  core_type (fan_ops.ml[400,16572+36]..[400,16572+44])
                                    Ptyp_constr "Astf.exp" (fan_ops.ml[400,16572+36]..[400,16572+44])
                                    []
                                expression (fan_ops.ml[401,16621+21]..[401,16621+62])
                                  Pexp_coerce
                                  expression (fan_ops.ml[401,16621+22]..[401,16621+49])
                                    Pexp_variant "Flo"
                                    Some
                                      expression (fan_ops.ml[401,16621+27]..[401,16621+49])
                                        Pexp_tuple
                                        [
                                          expression (fan_ops.ml[401,16621+28]..[401,16621+31])
                                            Pexp_ident "loc" (fan_ops.ml[401,16621+28]..[401,16621+31])
                                          expression (fan_ops.ml[401,16621+34]..[401,16621+47])
                                            Pexp_apply
                                            expression (fan_ops.ml[401,16621+34]..[401,16621+45])
                                              Pexp_ident "Stringf.neg" (fan_ops.ml[401,16621+34]..[401,16621+45])
                                            [
                                              <label> ""
                                                expression (fan_ops.ml[401,16621+46]..[401,16621+47])
                                                  Pexp_ident "n" (fan_ops.ml[401,16621+46]..[401,16621+47])
                                            ]
                                        ]
                                  None
                                  core_type (fan_ops.ml[401,16621+53]..[401,16621+61])
                                    Ptyp_constr "Astf.exp" (fan_ops.ml[401,16621+53]..[401,16621+61])
                                    []
                              <case>
                                pattern (fan_ops.ml[402,16684+19]..[402,16684+20])
                                  Ppat_any
                                expression (fan_ops.ml[403,16708+21]..[405,16795+57])
                                  Pexp_coerce
                                  expression (fan_ops.ml[403,16708+22]..[405,16795+44])
                                    Pexp_variant "App"
                                    Some
                                      expression (fan_ops.ml[404,16735+24]..[405,16795+44])
                                        Pexp_tuple
                                        [
                                          expression (fan_ops.ml[404,16735+25]..[404,16735+28])
                                            Pexp_ident "loc" (fan_ops.ml[404,16735+25]..[404,16735+28])
                                          expression (fan_ops.ml[404,16735+31]..[404,16735+57])
                                            Pexp_variant "Lid"
                                            Some
                                              expression (fan_ops.ml[404,16735+36]..[404,16735+57])
                                                Pexp_tuple
                                                [
                                                  expression (fan_ops.ml[404,16735+37]..[404,16735+40])
                                                    Pexp_ident "loc" (fan_ops.ml[404,16735+37]..[404,16735+40])
                                                  expression (fan_ops.ml[404,16735+43]..[404,16735+55])
                                                    Pexp_apply
                                                    expression (fan_ops.ml[404,16735+47]..[404,16735+48])
                                                      Pexp_ident "^" (fan_ops.ml[404,16735+47]..[404,16735+48])
                                                    [
                                                      <label> ""
                                                        expression (fan_ops.ml[404,16735+43]..[404,16735+46])
                                                          Pexp_constant Const_string("~",None)
                                                      <label> ""
                                                        expression (fan_ops.ml[404,16735+49]..[404,16735+55])
                                                          Pexp_ident "prefix" (fan_ops.ml[404,16735+49]..[404,16735+55])
                                                    ]
                                                ]
                                          expression (fan_ops.ml[405,16795+26]..[405,16795+43])
                                            Pexp_coerce
                                            expression (fan_ops.ml[405,16795+27]..[405,16795+30])
                                              Pexp_ident "arg" (fan_ops.ml[405,16795+27]..[405,16795+30])
                                            None
                                            core_type (fan_ops.ml[405,16795+34]..[405,16795+42])
                                              Ptyp_constr "Astf.exp" (fan_ops.ml[405,16795+34]..[405,16795+42])
                                              []
                                        ]
                                  None
                                  core_type (fan_ops.ml[405,16795+48]..[405,16795+56])
                                    Ptyp_constr "Astf.exp" (fan_ops.ml[405,16795+48]..[405,16795+56])
                                    []
                            ]
                      ]
                ]
          ]
    ]
]
