[
  structure_item (compile_stream.ml[1,0+0]..[1,0+9])
    Pstr_open Fresh "Astf" (compile_stream.ml[1,0+5]..[1,0+9])
  structure_item (compile_stream.ml[2,10+0]..[2,10+12])
    Pstr_open Fresh "Ast_gen" (compile_stream.ml[2,10+5]..[2,10+12])
  structure_item (compile_stream.ml[3,23+0]..[6,100+19])
    Pstr_type
    [
      type_declaration "spat_comp" (compile_stream.ml[3,23+5]..[3,23+14]) (compile_stream.ml[3,23+5]..[6,100+19])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (compile_stream.ml[4,40+4]..[4,40+32])
                "When" (compile_stream.ml[4,40+4]..[4,40+8])
                [
                  core_type (compile_stream.ml[4,40+12]..[4,40+15])
                    Ptyp_constr "loc" (compile_stream.ml[4,40+12]..[4,40+15])
                    []
                  core_type (compile_stream.ml[4,40+17]..[4,40+20])
                    Ptyp_constr "pat" (compile_stream.ml[4,40+17]..[4,40+20])
                    []
                  core_type (compile_stream.ml[4,40+22]..[4,40+32])
                    Ptyp_constr "option" (compile_stream.ml[4,40+26]..[4,40+32])
                    [
                      core_type (compile_stream.ml[4,40+22]..[4,40+25])
                        Ptyp_constr "exp" (compile_stream.ml[4,40+22]..[4,40+25])
                        []
                    ]
                ]
                None
              (compile_stream.ml[5,73+4]..[5,73+26])
                "Match" (compile_stream.ml[5,73+4]..[5,73+9])
                [
                  core_type (compile_stream.ml[5,73+13]..[5,73+16])
                    Ptyp_constr "loc" (compile_stream.ml[5,73+13]..[5,73+16])
                    []
                  core_type (compile_stream.ml[5,73+18]..[5,73+21])
                    Ptyp_constr "pat" (compile_stream.ml[5,73+18]..[5,73+21])
                    []
                  core_type (compile_stream.ml[5,73+23]..[5,73+26])
                    Ptyp_constr "exp" (compile_stream.ml[5,73+23]..[5,73+26])
                    []
                ]
                None
              (compile_stream.ml[6,100+4]..[6,100+19])
                "Str" (compile_stream.ml[6,100+4]..[6,100+7])
                [
                  core_type (compile_stream.ml[6,100+11]..[6,100+14])
                    Ptyp_constr "loc" (compile_stream.ml[6,100+11]..[6,100+14])
                    []
                  core_type (compile_stream.ml[6,100+16]..[6,100+19])
                    Ptyp_constr "pat" (compile_stream.ml[6,100+16]..[6,100+19])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (compile_stream.ml[7,120+0]..[7,120+41])
    Pstr_type
    [
      type_declaration "stream_pat" (compile_stream.ml[7,120+5]..[7,120+15]) (compile_stream.ml[7,120+5]..[7,120+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (compile_stream.ml[7,120+18]..[7,120+41])
              Ptyp_tuple
              [
                core_type (compile_stream.ml[7,120+19]..[7,120+28])
                  Ptyp_constr "spat_comp" (compile_stream.ml[7,120+19]..[7,120+28])
                  []
                core_type (compile_stream.ml[7,120+30]..[7,120+40])
                  Ptyp_constr "option" (compile_stream.ml[7,120+34]..[7,120+40])
                  [
                    core_type (compile_stream.ml[7,120+30]..[7,120+33])
                      Ptyp_constr "exp" (compile_stream.ml[7,120+30]..[7,120+33])
                      []
                  ]
              ]
    ]
  structure_item (compile_stream.ml[8,162+0]..[8,162+34])
    Pstr_type
    [
      type_declaration "stream_pats" (compile_stream.ml[8,162+5]..[8,162+16]) (compile_stream.ml[8,162+5]..[8,162+34])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (compile_stream.ml[8,162+19]..[8,162+34])
              Ptyp_constr "list" (compile_stream.ml[8,162+30]..[8,162+34])
              [
                core_type (compile_stream.ml[8,162+19]..[8,162+29])
                  Ptyp_constr "stream_pat" (compile_stream.ml[8,162+19]..[8,162+29])
                  []
              ]
    ]
  structure_item (compile_stream.ml[9,197+0]..[9,197+49])
    Pstr_type
    [
      type_declaration "stream_case" (compile_stream.ml[9,197+5]..[9,197+16]) (compile_stream.ml[9,197+5]..[9,197+49])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (compile_stream.ml[9,197+19]..[9,197+49])
              Ptyp_tuple
              [
                core_type (compile_stream.ml[9,197+20]..[9,197+31])
                  Ptyp_constr "stream_pats" (compile_stream.ml[9,197+20]..[9,197+31])
                  []
                core_type (compile_stream.ml[9,197+33]..[9,197+43])
                  Ptyp_constr "option" (compile_stream.ml[9,197+37]..[9,197+43])
                  [
                    core_type (compile_stream.ml[9,197+33]..[9,197+36])
                      Ptyp_constr "pat" (compile_stream.ml[9,197+33]..[9,197+36])
                      []
                  ]
                core_type (compile_stream.ml[9,197+45]..[9,197+48])
                  Ptyp_constr "exp" (compile_stream.ml[9,197+45]..[9,197+48])
                  []
              ]
    ]
  structure_item (compile_stream.ml[10,247+0]..[10,247+36])
    Pstr_type
    [
      type_declaration "stream_cases" (compile_stream.ml[10,247+5]..[10,247+17]) (compile_stream.ml[10,247+5]..[10,247+36])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (compile_stream.ml[10,247+20]..[10,247+36])
              Ptyp_constr "list" (compile_stream.ml[10,247+32]..[10,247+36])
              [
                core_type (compile_stream.ml[10,247+20]..[10,247+31])
                  Ptyp_constr "stream_case" (compile_stream.ml[10,247+20]..[10,247+31])
                  []
              ]
    ]
  structure_item (compile_stream.ml[11,284+0]..[11,284+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_stream.ml[11,284+4]..[11,284+23])
          Ppat_var "grammar_module_name" (compile_stream.ml[11,284+4]..[11,284+23])
        expression (compile_stream.ml[11,284+26]..[11,284+39])
          Pexp_apply
          expression (compile_stream.ml[11,284+26]..[11,284+29])
            Pexp_ident "ref" (compile_stream.ml[11,284+26]..[11,284+29])
          [
            <label> ""
              expression (compile_stream.ml[11,284+30]..[11,284+39])
                Pexp_constant Const_string("Streamf",None)
          ]
    ]
  structure_item (compile_stream.ml[12,324+0]..[12,324+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_stream.ml[12,324+4]..[12,324+6])
          Ppat_var "gm" (compile_stream.ml[12,324+4]..[12,324+6])
        expression (compile_stream.ml[12,324+9]..[12,324+46])
          Pexp_function
          [
            <case>
              pattern (compile_stream.ml[12,324+20]..[12,324+22])
                Ppat_construct "()" (compile_stream.ml[12,324+20]..[12,324+22])
                None
              expression (compile_stream.ml[12,324+26]..[12,324+46])
                Pexp_apply
                expression (compile_stream.ml[12,324+26]..[12,324+27])
                  Pexp_ident "!" (compile_stream.ml[12,324+26]..[12,324+27])
                [
                  <label> ""
                    expression (compile_stream.ml[12,324+27]..[12,324+46])
                      Pexp_ident "grammar_module_name" (compile_stream.ml[12,324+27]..[12,324+46])
                ]
          ]
    ]
  structure_item (compile_stream.ml[13,371+0]..[13,371+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_stream.ml[13,371+4]..[13,371+10])
          Ppat_var "strm_n" (compile_stream.ml[13,371+4]..[13,371+10])
        expression (compile_stream.ml[13,371+13]..[13,371+21])
          Pexp_constant Const_string("__strm",None)
    ]
  structure_item (compile_stream.ml[14,393+0]..[18,501+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_stream.ml[14,393+4]..[14,393+12])
          Ppat_var "peek_fun" (compile_stream.ml[14,393+4]..[14,393+12])
        expression (compile_stream.ml[15,408+2]..[18,501+15])
          Pexp_function
          [
            <case>
              pattern (compile_stream.ml[16,419+4]..[16,419+8])
                Ppat_var "_loc" (compile_stream.ml[16,419+4]..[16,419+8])
              expression (compile_stream.ml[17,431+6]..[18,501+15])
                Pexp_coerce
                expression (compile_stream.ml[17,431+7]..[17,431+65])
                  Pexp_variant "Dot"
                  Some
                    expression (compile_stream.ml[17,431+12]..[17,431+65])
                      Pexp_tuple
                      [
                        expression (compile_stream.ml[17,431+13]..[17,431+17])
                          Pexp_ident "_loc" (compile_stream.ml[17,431+13]..[17,431+17])
                        expression (compile_stream.ml[17,431+20]..[17,431+40])
                          Pexp_variant "Uid"
                          Some
                            expression (compile_stream.ml[17,431+25]..[17,431+40])
                              Pexp_tuple
                              [
                                expression (compile_stream.ml[17,431+26]..[17,431+30])
                                  Pexp_ident "_loc" (compile_stream.ml[17,431+26]..[17,431+30])
                                expression (compile_stream.ml[17,431+33]..[17,431+38])
                                  Pexp_apply
                                  expression (compile_stream.ml[17,431+33]..[17,431+35])
                                    Pexp_ident "gm" (compile_stream.ml[17,431+33]..[17,431+35])
                                  [
                                    <label> ""
                                      expression (compile_stream.ml[17,431+36]..[17,431+38])
                                        Pexp_construct "()" (compile_stream.ml[17,431+36]..[17,431+38])
                                        None
                                  ]
                              ]
                        expression (compile_stream.ml[17,431+44]..[17,431+63])
                          Pexp_variant "Lid"
                          Some
                            expression (compile_stream.ml[17,431+49]..[17,431+63])
                              Pexp_tuple
                              [
                                expression (compile_stream.ml[17,431+50]..[17,431+54])
                                  Pexp_ident "_loc" (compile_stream.ml[17,431+50]..[17,431+54])
                                expression (compile_stream.ml[17,431+56]..[17,431+62])
                                  Pexp_constant Const_string("peek",None)
                              ]
                      ]
                None
                core_type (compile_stream.ml[18,501+6]..[18,501+14])
                  Ptyp_constr "Astf.exp" (compile_stream.ml[18,501+6]..[18,501+14])
                  []
          ]
    ]
  structure_item (compile_stream.ml[19,517+0]..[23,625+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_stream.ml[19,517+4]..[19,517+12])
          Ppat_var "junk_fun" (compile_stream.ml[19,517+4]..[19,517+12])
        expression (compile_stream.ml[20,532+2]..[23,625+15])
          Pexp_function
          [
            <case>
              pattern (compile_stream.ml[21,543+4]..[21,543+8])
                Ppat_var "_loc" (compile_stream.ml[21,543+4]..[21,543+8])
              expression (compile_stream.ml[22,555+6]..[23,625+15])
                Pexp_coerce
                expression (compile_stream.ml[22,555+7]..[22,555+65])
                  Pexp_variant "Dot"
                  Some
                    expression (compile_stream.ml[22,555+12]..[22,555+65])
                      Pexp_tuple
                      [
                        expression (compile_stream.ml[22,555+13]..[22,555+17])
                          Pexp_ident "_loc" (compile_stream.ml[22,555+13]..[22,555+17])
                        expression (compile_stream.ml[22,555+20]..[22,555+40])
                          Pexp_variant "Uid"
                          Some
                            expression (compile_stream.ml[22,555+25]..[22,555+40])
                              Pexp_tuple
                              [
                                expression (compile_stream.ml[22,555+26]..[22,555+30])
                                  Pexp_ident "_loc" (compile_stream.ml[22,555+26]..[22,555+30])
                                expression (compile_stream.ml[22,555+33]..[22,555+38])
                                  Pexp_apply
                                  expression (compile_stream.ml[22,555+33]..[22,555+35])
                                    Pexp_ident "gm" (compile_stream.ml[22,555+33]..[22,555+35])
                                  [
                                    <label> ""
                                      expression (compile_stream.ml[22,555+36]..[22,555+38])
                                        Pexp_construct "()" (compile_stream.ml[22,555+36]..[22,555+38])
                                        None
                                  ]
                              ]
                        expression (compile_stream.ml[22,555+44]..[22,555+63])
                          Pexp_variant "Lid"
                          Some
                            expression (compile_stream.ml[22,555+49]..[22,555+63])
                              Pexp_tuple
                              [
                                expression (compile_stream.ml[22,555+50]..[22,555+54])
                                  Pexp_ident "_loc" (compile_stream.ml[22,555+50]..[22,555+54])
                                expression (compile_stream.ml[22,555+56]..[22,555+62])
                                  Pexp_constant Const_string("junk",None)
                              ]
                      ]
                None
                core_type (compile_stream.ml[23,625+6]..[23,625+14])
                  Ptyp_constr "Astf.exp" (compile_stream.ml[23,625+6]..[23,625+14])
                  []
          ]
    ]
  structure_item (compile_stream.ml[24,641+0]..[28,748+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_stream.ml[24,641+4]..[24,641+9])
          Ppat_var "empty" (compile_stream.ml[24,641+4]..[24,641+9])
        expression (compile_stream.ml[25,653+2]..[28,748+15])
          Pexp_function
          [
            <case>
              pattern (compile_stream.ml[26,664+4]..[26,664+8])
                Ppat_var "_loc" (compile_stream.ml[26,664+4]..[26,664+8])
              expression (compile_stream.ml[27,676+6]..[28,748+15])
                Pexp_coerce
                expression (compile_stream.ml[27,676+7]..[27,676+67])
                  Pexp_variant "Dot"
                  Some
                    expression (compile_stream.ml[27,676+12]..[27,676+67])
                      Pexp_tuple
                      [
                        expression (compile_stream.ml[27,676+13]..[27,676+17])
                          Pexp_ident "_loc" (compile_stream.ml[27,676+13]..[27,676+17])
                        expression (compile_stream.ml[27,676+20]..[27,676+40])
                          Pexp_variant "Uid"
                          Some
                            expression (compile_stream.ml[27,676+25]..[27,676+40])
                              Pexp_tuple
                              [
                                expression (compile_stream.ml[27,676+26]..[27,676+30])
                                  Pexp_ident "_loc" (compile_stream.ml[27,676+26]..[27,676+30])
                                expression (compile_stream.ml[27,676+33]..[27,676+38])
                                  Pexp_apply
                                  expression (compile_stream.ml[27,676+33]..[27,676+35])
                                    Pexp_ident "gm" (compile_stream.ml[27,676+33]..[27,676+35])
                                  [
                                    <label> ""
                                      expression (compile_stream.ml[27,676+36]..[27,676+38])
                                        Pexp_construct "()" (compile_stream.ml[27,676+36]..[27,676+38])
                                        None
                                  ]
                              ]
                        expression (compile_stream.ml[27,676+44]..[27,676+65])
                          Pexp_variant "Lid"
                          Some
                            expression (compile_stream.ml[27,676+49]..[27,676+65])
                              Pexp_tuple
                              [
                                expression (compile_stream.ml[27,676+50]..[27,676+54])
                                  Pexp_ident "_loc" (compile_stream.ml[27,676+50]..[27,676+54])
                                expression (compile_stream.ml[27,676+56]..[27,676+64])
                                  Pexp_constant Const_string("sempty",None)
                              ]
                      ]
                None
                core_type (compile_stream.ml[28,748+6]..[28,748+14])
                  Ptyp_constr "Astf.exp" (compile_stream.ml[28,748+6]..[28,748+14])
                  []
          ]
    ]
  structure_item (compile_stream.ml[29,764+0]..[36,978+20])
    Pstr_value Rec
    [
      <def>
        pattern (compile_stream.ml[29,764+8]..[29,764+23])
          Ppat_var "is_constr_apply" (compile_stream.ml[29,764+8]..[29,764+23])
        expression (compile_stream.ml[30,790+2]..[36,978+20])
          Pexp_function
          [
            <case>
              pattern (compile_stream.ml[31,801+4]..[31,801+5])
                Ppat_var "a" (compile_stream.ml[31,801+4]..[31,801+5])
              expression (compile_stream.ml[32,810+7]..[36,978+19])
                Pexp_match
                expression (compile_stream.ml[32,810+13]..[32,810+14])
                  Pexp_ident "a" (compile_stream.ml[32,810+13]..[32,810+14])
                [
                  <case>
                    pattern (compile_stream.ml[33,830+9]..[33,830+35])
                      Ppat_constraint
                      pattern (compile_stream.ml[33,830+10]..[33,830+23])
                        Ppat_variant "Uid"
                        Some
                          pattern (compile_stream.ml[33,830+10]..[33,830+23])
                            Ppat_tuple
                            [
                              pattern (compile_stream.ml[33,830+16]..[33,830+20])
                                Ppat_var "_loc" (compile_stream.ml[33,830+16]..[33,830+20])
                              pattern (compile_stream.ml[33,830+21]..[33,830+22])
                                Ppat_any
                            ]
                      core_type (compile_stream.ml[33,830+26]..[33,830+34])
                        Ptyp_constr "Astf.exp" (compile_stream.ml[33,830+26]..[33,830+34])
                        []
                    expression (compile_stream.ml[33,830+39]..[33,830+43])
                      Pexp_construct "true" (compile_stream.ml[33,830+39]..[33,830+43])
                      None
                  <case>
                    pattern (compile_stream.ml[34,874+9]..[34,874+37])
                      Ppat_constraint
                      pattern (compile_stream.ml[34,874+10]..[34,874+25])
                        Ppat_variant "App"
                        Some
                          pattern (compile_stream.ml[34,874+10]..[34,874+25])
                            Ppat_tuple
                            [
                              pattern (compile_stream.ml[34,874+16]..[34,874+20])
                                Ppat_var "_loc" (compile_stream.ml[34,874+16]..[34,874+20])
                              pattern (compile_stream.ml[34,874+21]..[34,874+22])
                                Ppat_var "x" (compile_stream.ml[34,874+21]..[34,874+22])
                              pattern (compile_stream.ml[34,874+23]..[34,874+24])
                                Ppat_any
                            ]
                      core_type (compile_stream.ml[34,874+28]..[34,874+36])
                        Ptyp_constr "Astf.exp" (compile_stream.ml[34,874+28]..[34,874+36])
                        []
                    expression (compile_stream.ml[34,874+41]..[34,874+58])
                      Pexp_apply
                      expression (compile_stream.ml[34,874+41]..[34,874+56])
                        Pexp_ident "is_constr_apply" (compile_stream.ml[34,874+41]..[34,874+56])
                      [
                        <label> ""
                          expression (compile_stream.ml[34,874+57]..[34,874+58])
                            Pexp_ident "x" (compile_stream.ml[34,874+57]..[34,874+58])
                      ]
                  <case>
                    pattern (compile_stream.ml[35,933+9]..[35,933+35])
                      Ppat_constraint
                      pattern (compile_stream.ml[35,933+10]..[35,933+23])
                        Ppat_variant "Lid"
                        Some
                          pattern (compile_stream.ml[35,933+10]..[35,933+23])
                            Ppat_tuple
                            [
                              pattern (compile_stream.ml[35,933+16]..[35,933+20])
                                Ppat_var "_loc" (compile_stream.ml[35,933+16]..[35,933+20])
                              pattern (compile_stream.ml[35,933+21]..[35,933+22])
                                Ppat_any
                            ]
                      core_type (compile_stream.ml[35,933+26]..[35,933+34])
                        Ptyp_constr "Astf.exp" (compile_stream.ml[35,933+26]..[35,933+34])
                        []
                    expression (compile_stream.ml[35,933+39]..[35,933+44])
                      Pexp_construct "false" (compile_stream.ml[35,933+39]..[35,933+44])
                      None
                  <case>
                    pattern (compile_stream.ml[36,978+9]..[36,978+10])
                      Ppat_any
                    expression (compile_stream.ml[36,978+14]..[36,978+19])
                      Pexp_construct "false" (compile_stream.ml[36,978+14]..[36,978+19])
                      None
                ]
          ]
    ]
  structure_item (compile_stream.ml[37,999+0]..[68,2375+20])
    Pstr_value Rec
    [
      <def>
        pattern (compile_stream.ml[37,999+8]..[37,999+22])
          Ppat_var "handle_failure" (compile_stream.ml[37,999+8]..[37,999+22])
        expression (compile_stream.ml[38,1024+2]..[68,2375+20])
          Pexp_function
          [
            <case>
              pattern (compile_stream.ml[39,1035+4]..[39,1035+5])
                Ppat_var "e" (compile_stream.ml[39,1035+4]..[39,1035+5])
              expression (compile_stream.ml[40,1044+7]..[68,2375+19])
                Pexp_match
                expression (compile_stream.ml[40,1044+13]..[40,1044+14])
                  Pexp_ident "e" (compile_stream.ml[40,1044+13]..[40,1044+14])
                [
                  <case>
                    pattern (compile_stream.ml[41,1064+9]..[43,1155+22])
                      Ppat_constraint
                      pattern (compile_stream.ml[41,1064+10]..[42,1079+75])
                        Ppat_variant "Try"
                        Some
                          pattern (compile_stream.ml[41,1064+10]..[42,1079+75])
                            Ppat_tuple
                            [
                              pattern (compile_stream.ml[42,1079+13]..[42,1079+17])
                                Ppat_var "_loc" (compile_stream.ml[42,1079+13]..[42,1079+17])
                              pattern (compile_stream.ml[42,1079+18]..[42,1079+19])
                                Ppat_any
                              pattern (compile_stream.ml[42,1079+20]..[42,1079+74])
                                Ppat_variant "Case"
                                Some
                                  pattern (compile_stream.ml[42,1079+20]..[42,1079+74])
                                    Ppat_tuple
                                    [
                                      pattern (compile_stream.ml[42,1079+27]..[42,1079+28])
                                        Ppat_any
                                      pattern (compile_stream.ml[42,1079+29]..[42,1079+71])
                                        Ppat_variant "Dot"
                                        Some
                                          pattern (compile_stream.ml[42,1079+29]..[42,1079+71])
                                            Ppat_tuple
                                            [
                                              pattern (compile_stream.ml[42,1079+35]..[42,1079+36])
                                                Ppat_any
                                              pattern (compile_stream.ml[42,1079+37]..[42,1079+47])
                                                Ppat_variant "Uid"
                                                Some
                                                  pattern (compile_stream.ml[42,1079+37]..[42,1079+47])
                                                    Ppat_tuple
                                                    [
                                                      pattern (compile_stream.ml[42,1079+43]..[42,1079+44])
                                                        Ppat_any
                                                      pattern (compile_stream.ml[42,1079+45]..[42,1079+46])
                                                        Ppat_var "m" (compile_stream.ml[42,1079+45]..[42,1079+46])
                                                    ]
                                              pattern (compile_stream.ml[42,1079+48]..[42,1079+70])
                                                Ppat_variant "Uid"
                                                Some
                                                  pattern (compile_stream.ml[42,1079+48]..[42,1079+70])
                                                    Ppat_tuple
                                                    [
                                                      pattern (compile_stream.ml[42,1079+54]..[42,1079+55])
                                                        Ppat_any
                                                      pattern (compile_stream.ml[42,1079+56]..[42,1079+69])
                                                        Ppat_constant Const_string("NotConsumed",None)
                                                    ]
                                            ]
                                      pattern (compile_stream.ml[42,1079+72]..[42,1079+73])
                                        Ppat_var "e" (compile_stream.ml[42,1079+72]..[42,1079+73])
                                    ]
                            ]
                      core_type (compile_stream.ml[43,1155+13]..[43,1155+21])
                        Ptyp_constr "Astf.exp" (compile_stream.ml[43,1155+13]..[43,1155+21])
                        []
                    <when>
                      expression (compile_stream.ml[43,1155+28]..[43,1155+39])
                        Pexp_apply
                        expression (compile_stream.ml[43,1155+30]..[43,1155+31])
                          Pexp_ident "=" (compile_stream.ml[43,1155+30]..[43,1155+31])
                        [
                          <label> ""
                            expression (compile_stream.ml[43,1155+28]..[43,1155+29])
                              Pexp_ident "m" (compile_stream.ml[43,1155+28]..[43,1155+29])
                          <label> ""
                            expression (compile_stream.ml[43,1155+33]..[43,1155+38])
                              Pexp_apply
                              expression (compile_stream.ml[43,1155+33]..[43,1155+35])
                                Pexp_ident "gm" (compile_stream.ml[43,1155+33]..[43,1155+35])
                              [
                                <label> ""
                                  expression (compile_stream.ml[43,1155+36]..[43,1155+38])
                                    Pexp_construct "()" (compile_stream.ml[43,1155+36]..[43,1155+38])
                                    None
                              ]
                        ]
                    expression (compile_stream.ml[43,1155+43]..[43,1155+59])
                      Pexp_apply
                      expression (compile_stream.ml[43,1155+43]..[43,1155+57])
                        Pexp_ident "handle_failure" (compile_stream.ml[43,1155+43]..[43,1155+57])
                      [
                        <label> ""
                          expression (compile_stream.ml[43,1155+58]..[43,1155+59])
                            Pexp_ident "e" (compile_stream.ml[43,1155+58]..[43,1155+59])
                      ]
                  <case>
                    pattern (compile_stream.ml[44,1215+9]..[44,1215+40])
                      Ppat_constraint
                      pattern (compile_stream.ml[44,1215+10]..[44,1215+28])
                        Ppat_variant "Match"
                        Some
                          pattern (compile_stream.ml[44,1215+10]..[44,1215+28])
                            Ppat_tuple
                            [
                              pattern (compile_stream.ml[44,1215+18]..[44,1215+22])
                                Ppat_var "_loc" (compile_stream.ml[44,1215+18]..[44,1215+22])
                              pattern (compile_stream.ml[44,1215+23]..[44,1215+25])
                                Ppat_var "me" (compile_stream.ml[44,1215+23]..[44,1215+25])
                              pattern (compile_stream.ml[44,1215+26]..[44,1215+27])
                                Ppat_var "a" (compile_stream.ml[44,1215+26]..[44,1215+27])
                            ]
                      core_type (compile_stream.ml[44,1215+31]..[44,1215+39])
                        Ptyp_constr "Astf.exp" (compile_stream.ml[44,1215+31]..[44,1215+39])
                        []
                    expression (compile_stream.ml[45,1259+11]..[51,1537+57])
                      Pexp_let Rec
                      [
                        <def>
                          pattern (compile_stream.ml[45,1259+19]..[45,1259+38])
                            Ppat_var "case_handle_failure" (compile_stream.ml[45,1259+19]..[45,1259+38])
                          expression (compile_stream.ml[46,1300+13]..[50,1508+25])
                            Pexp_function
                            [
                              <case>
                                pattern (compile_stream.ml[47,1322+15]..[47,1322+46])
                                  Ppat_constraint
                                  pattern (compile_stream.ml[47,1322+16]..[47,1322+33])
                                    Ppat_variant "Bar"
                                    Some
                                      pattern (compile_stream.ml[47,1322+16]..[47,1322+33])
                                        Ppat_tuple
                                        [
                                          pattern (compile_stream.ml[47,1322+22]..[47,1322+26])
                                            Ppat_var "_loc" (compile_stream.ml[47,1322+22]..[47,1322+26])
                                          pattern (compile_stream.ml[47,1322+27]..[47,1322+29])
                                            Ppat_var "a1" (compile_stream.ml[47,1322+27]..[47,1322+29])
                                          pattern (compile_stream.ml[47,1322+30]..[47,1322+32])
                                            Ppat_var "a2" (compile_stream.ml[47,1322+30]..[47,1322+32])
                                        ]
                                  core_type (compile_stream.ml[47,1322+36]..[47,1322+45])
                                    Ptyp_constr "Astf.case" (compile_stream.ml[47,1322+36]..[47,1322+45])
                                    []
                                expression (compile_stream.ml[48,1372+17]..[48,1372+69])
                                  Pexp_apply
                                  expression (compile_stream.ml[48,1372+42]..[48,1372+44])
                                    Pexp_ident "&&" (compile_stream.ml[48,1372+42]..[48,1372+44])
                                  [
                                    <label> ""
                                      expression (compile_stream.ml[48,1372+18]..[48,1372+40])
                                        Pexp_apply
                                        expression (compile_stream.ml[48,1372+18]..[48,1372+37])
                                          Pexp_ident "case_handle_failure" (compile_stream.ml[48,1372+18]..[48,1372+37])
                                        [
                                          <label> ""
                                            expression (compile_stream.ml[48,1372+38]..[48,1372+40])
                                              Pexp_ident "a1" (compile_stream.ml[48,1372+38]..[48,1372+40])
                                        ]
                                    <label> ""
                                      expression (compile_stream.ml[48,1372+46]..[48,1372+68])
                                        Pexp_apply
                                        expression (compile_stream.ml[48,1372+46]..[48,1372+65])
                                          Pexp_ident "case_handle_failure" (compile_stream.ml[48,1372+46]..[48,1372+65])
                                        [
                                          <label> ""
                                            expression (compile_stream.ml[48,1372+66]..[48,1372+68])
                                              Pexp_ident "a2" (compile_stream.ml[48,1372+66]..[48,1372+68])
                                        ]
                                  ]
                              <case>
                                pattern (compile_stream.ml[49,1442+15]..[49,1442+45])
                                  Ppat_constraint
                                  pattern (compile_stream.ml[49,1442+16]..[49,1442+32])
                                    Ppat_variant "Case"
                                    Some
                                      pattern (compile_stream.ml[49,1442+16]..[49,1442+32])
                                        Ppat_tuple
                                        [
                                          pattern (compile_stream.ml[49,1442+23]..[49,1442+27])
                                            Ppat_var "_loc" (compile_stream.ml[49,1442+23]..[49,1442+27])
                                          pattern (compile_stream.ml[49,1442+28]..[49,1442+29])
                                            Ppat_any
                                          pattern (compile_stream.ml[49,1442+30]..[49,1442+31])
                                            Ppat_var "e" (compile_stream.ml[49,1442+30]..[49,1442+31])
                                        ]
                                  core_type (compile_stream.ml[49,1442+35]..[49,1442+44])
                                    Ptyp_constr "Astf.case" (compile_stream.ml[49,1442+35]..[49,1442+44])
                                    []
                                expression (compile_stream.ml[49,1442+49]..[49,1442+65])
                                  Pexp_apply
                                  expression (compile_stream.ml[49,1442+49]..[49,1442+63])
                                    Pexp_ident "handle_failure" (compile_stream.ml[49,1442+49]..[49,1442+63])
                                  [
                                    <label> ""
                                      expression (compile_stream.ml[49,1442+64]..[49,1442+65])
                                        Pexp_ident "e" (compile_stream.ml[49,1442+64]..[49,1442+65])
                                  ]
                              <case>
                                pattern (compile_stream.ml[50,1508+15]..[50,1508+16])
                                  Ppat_any
                                expression (compile_stream.ml[50,1508+20]..[50,1508+25])
                                  Pexp_construct "false" (compile_stream.ml[50,1508+20]..[50,1508+25])
                                  None
                            ]
                      ]
                      expression (compile_stream.ml[51,1537+11]..[51,1537+57])
                        Pexp_apply
                        expression (compile_stream.ml[51,1537+31]..[51,1537+33])
                          Pexp_ident "&&" (compile_stream.ml[51,1537+31]..[51,1537+33])
                        [
                          <label> ""
                            expression (compile_stream.ml[51,1537+12]..[51,1537+29])
                              Pexp_apply
                              expression (compile_stream.ml[51,1537+12]..[51,1537+26])
                                Pexp_ident "handle_failure" (compile_stream.ml[51,1537+12]..[51,1537+26])
                              [
                                <label> ""
                                  expression (compile_stream.ml[51,1537+27]..[51,1537+29])
                                    Pexp_ident "me" (compile_stream.ml[51,1537+27]..[51,1537+29])
                              ]
                          <label> ""
                            expression (compile_stream.ml[51,1537+35]..[51,1537+56])
                              Pexp_apply
                              expression (compile_stream.ml[51,1537+35]..[51,1537+54])
                                Pexp_ident "case_handle_failure" (compile_stream.ml[51,1537+35]..[51,1537+54])
                              [
                                <label> ""
                                  expression (compile_stream.ml[51,1537+55]..[51,1537+56])
                                    Pexp_ident "a" (compile_stream.ml[51,1537+55]..[51,1537+56])
                              ]
                        ]
                  <case>
                    pattern (compile_stream.ml[52,1595+9]..[52,1595+52])
                      Ppat_constraint
                      pattern (compile_stream.ml[52,1595+10]..[52,1595+40])
                        Ppat_variant "LetIn"
                        Some
                          pattern (compile_stream.ml[52,1595+10]..[52,1595+40])
                            Ppat_tuple
                            [
                              pattern (compile_stream.ml[52,1595+18]..[52,1595+22])
                                Ppat_var "_loc" (compile_stream.ml[52,1595+18]..[52,1595+22])
                              pattern (compile_stream.ml[52,1595+23]..[52,1595+34])
                                Ppat_variant "Negative"
                                Some
                                  pattern (compile_stream.ml[52,1595+33]..[52,1595+34])
                                    Ppat_any
                              pattern (compile_stream.ml[52,1595+35]..[52,1595+37])
                                Ppat_var "bi" (compile_stream.ml[52,1595+35]..[52,1595+37])
                              pattern (compile_stream.ml[52,1595+38]..[52,1595+39])
                                Ppat_var "e" (compile_stream.ml[52,1595+38]..[52,1595+39])
                            ]
                      core_type (compile_stream.ml[52,1595+43]..[52,1595+51])
                        Ptyp_constr "Astf.exp" (compile_stream.ml[52,1595+43]..[52,1595+51])
                        []
                    expression (compile_stream.ml[53,1651+11]..[59,1929+57])
                      Pexp_let Rec
                      [
                        <def>
                          pattern (compile_stream.ml[53,1651+19]..[53,1651+38])
                            Ppat_var "bind_handle_failure" (compile_stream.ml[53,1651+19]..[53,1651+38])
                          expression (compile_stream.ml[54,1692+13]..[58,1900+25])
                            Pexp_function
                            [
                              <case>
                                pattern (compile_stream.ml[55,1714+15]..[55,1714+46])
                                  Ppat_constraint
                                  pattern (compile_stream.ml[55,1714+16]..[55,1714+33])
                                    Ppat_variant "And"
                                    Some
                                      pattern (compile_stream.ml[55,1714+16]..[55,1714+33])
                                        Ppat_tuple
                                        [
                                          pattern (compile_stream.ml[55,1714+22]..[55,1714+26])
                                            Ppat_var "_loc" (compile_stream.ml[55,1714+22]..[55,1714+26])
                                          pattern (compile_stream.ml[55,1714+27]..[55,1714+29])
                                            Ppat_var "b1" (compile_stream.ml[55,1714+27]..[55,1714+29])
                                          pattern (compile_stream.ml[55,1714+30]..[55,1714+32])
                                            Ppat_var "b2" (compile_stream.ml[55,1714+30]..[55,1714+32])
                                        ]
                                  core_type (compile_stream.ml[55,1714+36]..[55,1714+45])
                                    Ptyp_constr "Astf.bind" (compile_stream.ml[55,1714+36]..[55,1714+45])
                                    []
                                expression (compile_stream.ml[56,1764+17]..[56,1764+69])
                                  Pexp_apply
                                  expression (compile_stream.ml[56,1764+42]..[56,1764+44])
                                    Pexp_ident "&&" (compile_stream.ml[56,1764+42]..[56,1764+44])
                                  [
                                    <label> ""
                                      expression (compile_stream.ml[56,1764+18]..[56,1764+40])
                                        Pexp_apply
                                        expression (compile_stream.ml[56,1764+18]..[56,1764+37])
                                          Pexp_ident "bind_handle_failure" (compile_stream.ml[56,1764+18]..[56,1764+37])
                                        [
                                          <label> ""
                                            expression (compile_stream.ml[56,1764+38]..[56,1764+40])
                                              Pexp_ident "b1" (compile_stream.ml[56,1764+38]..[56,1764+40])
                                        ]
                                    <label> ""
                                      expression (compile_stream.ml[56,1764+46]..[56,1764+68])
                                        Pexp_apply
                                        expression (compile_stream.ml[56,1764+46]..[56,1764+65])
                                          Pexp_ident "bind_handle_failure" (compile_stream.ml[56,1764+46]..[56,1764+65])
                                        [
                                          <label> ""
                                            expression (compile_stream.ml[56,1764+66]..[56,1764+68])
                                              Pexp_ident "b2" (compile_stream.ml[56,1764+66]..[56,1764+68])
                                        ]
                                  ]
                              <case>
                                pattern (compile_stream.ml[57,1834+15]..[57,1834+45])
                                  Ppat_constraint
                                  pattern (compile_stream.ml[57,1834+16]..[57,1834+32])
                                    Ppat_variant "Bind"
                                    Some
                                      pattern (compile_stream.ml[57,1834+16]..[57,1834+32])
                                        Ppat_tuple
                                        [
                                          pattern (compile_stream.ml[57,1834+23]..[57,1834+27])
                                            Ppat_var "_loc" (compile_stream.ml[57,1834+23]..[57,1834+27])
                                          pattern (compile_stream.ml[57,1834+28]..[57,1834+29])
                                            Ppat_any
                                          pattern (compile_stream.ml[57,1834+30]..[57,1834+31])
                                            Ppat_var "e" (compile_stream.ml[57,1834+30]..[57,1834+31])
                                        ]
                                  core_type (compile_stream.ml[57,1834+35]..[57,1834+44])
                                    Ptyp_constr "Astf.bind" (compile_stream.ml[57,1834+35]..[57,1834+44])
                                    []
                                expression (compile_stream.ml[57,1834+49]..[57,1834+65])
                                  Pexp_apply
                                  expression (compile_stream.ml[57,1834+49]..[57,1834+63])
                                    Pexp_ident "handle_failure" (compile_stream.ml[57,1834+49]..[57,1834+63])
                                  [
                                    <label> ""
                                      expression (compile_stream.ml[57,1834+64]..[57,1834+65])
                                        Pexp_ident "e" (compile_stream.ml[57,1834+64]..[57,1834+65])
                                  ]
                              <case>
                                pattern (compile_stream.ml[58,1900+15]..[58,1900+16])
                                  Ppat_any
                                expression (compile_stream.ml[58,1900+20]..[58,1900+25])
                                  Pexp_construct "false" (compile_stream.ml[58,1900+20]..[58,1900+25])
                                  None
                            ]
                      ]
                      expression (compile_stream.ml[59,1929+11]..[59,1929+57])
                        Pexp_apply
                        expression (compile_stream.ml[59,1929+36]..[59,1929+38])
                          Pexp_ident "&&" (compile_stream.ml[59,1929+36]..[59,1929+38])
                        [
                          <label> ""
                            expression (compile_stream.ml[59,1929+12]..[59,1929+34])
                              Pexp_apply
                              expression (compile_stream.ml[59,1929+12]..[59,1929+31])
                                Pexp_ident "bind_handle_failure" (compile_stream.ml[59,1929+12]..[59,1929+31])
                              [
                                <label> ""
                                  expression (compile_stream.ml[59,1929+32]..[59,1929+34])
                                    Pexp_ident "bi" (compile_stream.ml[59,1929+32]..[59,1929+34])
                              ]
                          <label> ""
                            expression (compile_stream.ml[59,1929+40]..[59,1929+56])
                              Pexp_apply
                              expression (compile_stream.ml[59,1929+40]..[59,1929+54])
                                Pexp_ident "handle_failure" (compile_stream.ml[59,1929+40]..[59,1929+54])
                              [
                                <label> ""
                                  expression (compile_stream.ml[59,1929+55]..[59,1929+56])
                                    Pexp_ident "e" (compile_stream.ml[59,1929+55]..[59,1929+56])
                              ]
                        ]
                  <case>
                    pattern (compile_stream.ml[60,1987+9]..[60,1987+23])
                      Ppat_or
                      pattern (compile_stream.ml[60,1987+9]..[60,1987+17])
                        Ppat_type
                        "literal" (compile_stream.ml[60,1987+10]..[60,1987+17])
                      pattern (compile_stream.ml[60,1987+18]..[60,1987+23])
                        Ppat_type
                        "vid'" (compile_stream.ml[60,1987+19]..[60,1987+23])
                    expression (compile_stream.ml[60,1987+27]..[60,1987+31])
                      Pexp_construct "true" (compile_stream.ml[60,1987+27]..[60,1987+31])
                      None
                  <case>
                    pattern (compile_stream.ml[61,2019+9]..[61,2019+35])
                      Ppat_constraint
                      pattern (compile_stream.ml[61,2019+10]..[61,2019+23])
                        Ppat_variant "Fun"
                        Some
                          pattern (compile_stream.ml[61,2019+10]..[61,2019+23])
                            Ppat_tuple
                            [
                              pattern (compile_stream.ml[61,2019+16]..[61,2019+20])
                                Ppat_var "_loc" (compile_stream.ml[61,2019+16]..[61,2019+20])
                              pattern (compile_stream.ml[61,2019+21]..[61,2019+22])
                                Ppat_any
                            ]
                      core_type (compile_stream.ml[61,2019+26]..[61,2019+34])
                        Ptyp_constr "Astf.exp" (compile_stream.ml[61,2019+26]..[61,2019+34])
                        []
                    expression (compile_stream.ml[61,2019+39]..[61,2019+43])
                      Pexp_construct "true" (compile_stream.ml[61,2019+39]..[61,2019+43])
                      None
                  <case>
                    pattern (compile_stream.ml[62,2063+9]..[64,2157+22])
                      Ppat_constraint
                      pattern (compile_stream.ml[62,2063+10]..[63,2078+78])
                        Ppat_variant "App"
                        Some
                          pattern (compile_stream.ml[62,2063+10]..[63,2078+78])
                            Ppat_tuple
                            [
                              pattern (compile_stream.ml[63,2078+13]..[63,2078+17])
                                Ppat_var "_loc" (compile_stream.ml[63,2078+13]..[63,2078+17])
                              pattern (compile_stream.ml[63,2078+18]..[63,2078+34])
                                Ppat_variant "Lid"
                                Some
                                  pattern (compile_stream.ml[63,2078+18]..[63,2078+34])
                                    Ppat_tuple
                                    [
                                      pattern (compile_stream.ml[63,2078+24]..[63,2078+25])
                                        Ppat_any
                                      pattern (compile_stream.ml[63,2078+26]..[63,2078+33])
                                        Ppat_constant Const_string("raise",None)
                                    ]
                              pattern (compile_stream.ml[63,2078+35]..[63,2078+77])
                                Ppat_variant "Dot"
                                Some
                                  pattern (compile_stream.ml[63,2078+35]..[63,2078+77])
                                    Ppat_tuple
                                    [
                                      pattern (compile_stream.ml[63,2078+41]..[63,2078+42])
                                        Ppat_any
                                      pattern (compile_stream.ml[63,2078+43]..[63,2078+53])
                                        Ppat_variant "Uid"
                                        Some
                                          pattern (compile_stream.ml[63,2078+43]..[63,2078+53])
                                            Ppat_tuple
                                            [
                                              pattern (compile_stream.ml[63,2078+49]..[63,2078+50])
                                                Ppat_any
                                              pattern (compile_stream.ml[63,2078+51]..[63,2078+52])
                                                Ppat_var "m" (compile_stream.ml[63,2078+51]..[63,2078+52])
                                            ]
                                      pattern (compile_stream.ml[63,2078+54]..[63,2078+76])
                                        Ppat_variant "Uid"
                                        Some
                                          pattern (compile_stream.ml[63,2078+54]..[63,2078+76])
                                            Ppat_tuple
                                            [
                                              pattern (compile_stream.ml[63,2078+60]..[63,2078+61])
                                                Ppat_any
                                              pattern (compile_stream.ml[63,2078+62]..[63,2078+75])
                                                Ppat_constant Const_string("NotConsumed",None)
                                            ]
                                    ]
                            ]
                      core_type (compile_stream.ml[64,2157+13]..[64,2157+21])
                        Ptyp_constr "Astf.exp" (compile_stream.ml[64,2157+13]..[64,2157+21])
                        []
                    expression (compile_stream.ml[64,2157+26]..[64,2157+38])
                      Pexp_apply
                      expression (compile_stream.ml[64,2157+28]..[64,2157+30])
                        Pexp_ident "<>" (compile_stream.ml[64,2157+28]..[64,2157+30])
                      [
                        <label> ""
                          expression (compile_stream.ml[64,2157+26]..[64,2157+27])
                            Pexp_ident "m" (compile_stream.ml[64,2157+26]..[64,2157+27])
                        <label> ""
                          expression (compile_stream.ml[64,2157+32]..[64,2157+37])
                            Pexp_apply
                            expression (compile_stream.ml[64,2157+32]..[64,2157+34])
                              Pexp_ident "gm" (compile_stream.ml[64,2157+32]..[64,2157+34])
                            [
                              <label> ""
                                expression (compile_stream.ml[64,2157+35]..[64,2157+37])
                                  Pexp_construct "()" (compile_stream.ml[64,2157+35]..[64,2157+37])
                                  None
                            ]
                      ]
                  <case>
                    pattern (compile_stream.ml[65,2196+9]..[65,2196+52])
                      Ppat_constraint
                      pattern (compile_stream.ml[65,2196+10]..[65,2196+40])
                        Ppat_variant "App"
                        Some
                          pattern (compile_stream.ml[65,2196+10]..[65,2196+40])
                            Ppat_tuple
                            [
                              pattern (compile_stream.ml[65,2196+16]..[65,2196+20])
                                Ppat_var "_loc" (compile_stream.ml[65,2196+16]..[65,2196+20])
                              pattern (compile_stream.ml[65,2196+21]..[65,2196+37])
                                Ppat_variant "Lid"
                                Some
                                  pattern (compile_stream.ml[65,2196+21]..[65,2196+37])
                                    Ppat_tuple
                                    [
                                      pattern (compile_stream.ml[65,2196+27]..[65,2196+28])
                                        Ppat_any
                                      pattern (compile_stream.ml[65,2196+29]..[65,2196+36])
                                        Ppat_constant Const_string("raise",None)
                                    ]
                              pattern (compile_stream.ml[65,2196+38]..[65,2196+39])
                                Ppat_any
                            ]
                      core_type (compile_stream.ml[65,2196+43]..[65,2196+51])
                        Ptyp_constr "Astf.exp" (compile_stream.ml[65,2196+43]..[65,2196+51])
                        []
                    expression (compile_stream.ml[65,2196+56]..[65,2196+60])
                      Pexp_construct "true" (compile_stream.ml[65,2196+56]..[65,2196+60])
                      None
                  <case>
                    pattern (compile_stream.ml[66,2257+9]..[66,2257+37])
                      Ppat_constraint
                      pattern (compile_stream.ml[66,2257+10]..[66,2257+25])
                        Ppat_variant "App"
                        Some
                          pattern (compile_stream.ml[66,2257+10]..[66,2257+25])
                            Ppat_tuple
                            [
                              pattern (compile_stream.ml[66,2257+16]..[66,2257+20])
                                Ppat_var "_loc" (compile_stream.ml[66,2257+16]..[66,2257+20])
                              pattern (compile_stream.ml[66,2257+21]..[66,2257+22])
                                Ppat_var "f" (compile_stream.ml[66,2257+21]..[66,2257+22])
                              pattern (compile_stream.ml[66,2257+23]..[66,2257+24])
                                Ppat_var "x" (compile_stream.ml[66,2257+23]..[66,2257+24])
                            ]
                      core_type (compile_stream.ml[66,2257+28]..[66,2257+36])
                        Ptyp_constr "Astf.exp" (compile_stream.ml[66,2257+28]..[66,2257+36])
                        []
                    expression (compile_stream.ml[67,2298+11]..[67,2298+76])
                      Pexp_apply
                      expression (compile_stream.ml[67,2298+31]..[67,2298+33])
                        Pexp_ident "&&" (compile_stream.ml[67,2298+31]..[67,2298+33])
                      [
                        <label> ""
                          expression (compile_stream.ml[67,2298+12]..[67,2298+29])
                            Pexp_apply
                            expression (compile_stream.ml[67,2298+12]..[67,2298+27])
                              Pexp_ident "is_constr_apply" (compile_stream.ml[67,2298+12]..[67,2298+27])
                            [
                              <label> ""
                                expression (compile_stream.ml[67,2298+28]..[67,2298+29])
                                  Pexp_ident "f" (compile_stream.ml[67,2298+28]..[67,2298+29])
                            ]
                        <label> ""
                          expression (compile_stream.ml[67,2298+35]..[67,2298+75])
                            Pexp_apply
                            expression (compile_stream.ml[67,2298+54]..[67,2298+56])
                              Pexp_ident "&&" (compile_stream.ml[67,2298+54]..[67,2298+56])
                            [
                              <label> ""
                                expression (compile_stream.ml[67,2298+36]..[67,2298+52])
                                  Pexp_apply
                                  expression (compile_stream.ml[67,2298+36]..[67,2298+50])
                                    Pexp_ident "handle_failure" (compile_stream.ml[67,2298+36]..[67,2298+50])
                                  [
                                    <label> ""
                                      expression (compile_stream.ml[67,2298+51]..[67,2298+52])
                                        Pexp_ident "f" (compile_stream.ml[67,2298+51]..[67,2298+52])
                                  ]
                              <label> ""
                                expression (compile_stream.ml[67,2298+58]..[67,2298+74])
                                  Pexp_apply
                                  expression (compile_stream.ml[67,2298+58]..[67,2298+72])
                                    Pexp_ident "handle_failure" (compile_stream.ml[67,2298+58]..[67,2298+72])
                                  [
                                    <label> ""
                                      expression (compile_stream.ml[67,2298+73]..[67,2298+74])
                                        Pexp_ident "x" (compile_stream.ml[67,2298+73]..[67,2298+74])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (compile_stream.ml[68,2375+9]..[68,2375+10])
                      Ppat_any
                    expression (compile_stream.ml[68,2375+14]..[68,2375+19])
                      Pexp_construct "false" (compile_stream.ml[68,2375+14]..[68,2375+19])
                      None
                ]
          ]
    ]
  structure_item (compile_stream.ml[69,2396+0]..[338,16531+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_stream.ml[69,2396+4]..[69,2396+28])
          Ppat_var "stream_pattern_component" (compile_stream.ml[69,2396+4]..[69,2396+28])
        expression (compile_stream.ml[70,2427+2]..[338,16531+22])
          Pexp_function
          [
            <case>
              pattern (compile_stream.ml[71,2438+4]..[71,2438+17])
                Ppat_constraint
                pattern (compile_stream.ml[71,2438+5]..[71,2438+10])
                  Ppat_var "skont" (compile_stream.ml[71,2438+5]..[71,2438+10])
                core_type (compile_stream.ml[71,2438+13]..[71,2438+16])
                  Ptyp_constr "exp" (compile_stream.ml[71,2438+13]..[71,2438+16])
                  []
              expression (compile_stream.ml[72,2459+7]..[338,16531+21])
                Pexp_function
                [
                  <case>
                    pattern (compile_stream.ml[73,2475+9]..[73,2475+22])
                      Ppat_constraint
                      pattern (compile_stream.ml[73,2475+10]..[73,2475+15])
                        Ppat_var "ckont" (compile_stream.ml[73,2475+10]..[73,2475+15])
                      core_type (compile_stream.ml[73,2475+18]..[73,2475+21])
                        Ptyp_constr "exp" (compile_stream.ml[73,2475+18]..[73,2475+21])
                        []
                    expression (compile_stream.ml[74,2501+12]..[338,16531+20])
                      Pexp_function
                      [
                        <case>
                          pattern (compile_stream.ml[75,2522+14]..[75,2522+29])
                            Ppat_constraint
                            pattern (compile_stream.ml[75,2522+15]..[75,2522+16])
                              Ppat_var "x" (compile_stream.ml[75,2522+15]..[75,2522+16])
                            core_type (compile_stream.ml[75,2522+19]..[75,2522+28])
                              Ptyp_constr "spat_comp" (compile_stream.ml[75,2522+19]..[75,2522+28])
                              []
                          expression (compile_stream.ml[76,2555+16]..[338,16531+20])
                            Pexp_constraint
                            expression (compile_stream.ml[76,2555+18]..[337,16460+66])
                              Pexp_match
                              expression (compile_stream.ml[76,2555+24]..[76,2555+39])
                                Pexp_constraint
                                expression (compile_stream.ml[76,2555+25]..[76,2555+26])
                                  Pexp_ident "x" (compile_stream.ml[76,2555+25]..[76,2555+26])
                                core_type (compile_stream.ml[76,2555+29]..[76,2555+38])
                                  Ptyp_constr "spat_comp" (compile_stream.ml[76,2555+29]..[76,2555+38])
                                  []
                              [
                                <case>
                                  pattern (compile_stream.ml[77,2600+20]..[77,2600+39])
                                    Ppat_construct "When" (compile_stream.ml[77,2600+20]..[77,2600+24])
                                    Some
                                      pattern (compile_stream.ml[77,2600+20]..[77,2600+39])
                                        Ppat_tuple
                                        [
                                          pattern (compile_stream.ml[77,2600+26]..[77,2600+30])
                                            Ppat_var "_loc" (compile_stream.ml[77,2600+26]..[77,2600+30])
                                          pattern (compile_stream.ml[77,2600+31]..[77,2600+32])
                                            Ppat_var "p" (compile_stream.ml[77,2600+31]..[77,2600+32])
                                          pattern (compile_stream.ml[77,2600+33]..[77,2600+37])
                                            Ppat_construct "None" (compile_stream.ml[77,2600+33]..[77,2600+37])
                                            None
                                        ]
                                  expression (compile_stream.ml[78,2643+22]..[102,3894+31])
                                    Pexp_coerce
                                    expression (compile_stream.ml[78,2643+23]..[101,3810+79])
                                      Pexp_variant "Match"
                                      Some
                                        expression (compile_stream.ml[79,2673+25]..[101,3810+79])
                                          Pexp_tuple
                                          [
                                            expression (compile_stream.ml[79,2673+26]..[79,2673+30])
                                              Pexp_ident "_loc" (compile_stream.ml[79,2673+26]..[79,2673+30])
                                            expression (compile_stream.ml[80,2705+28]..[82,2804+54])
                                              Pexp_variant "App"
                                              Some
                                                expression (compile_stream.ml[81,2738+30]..[82,2804+54])
                                                  Pexp_tuple
                                                  [
                                                    expression (compile_stream.ml[81,2738+31]..[81,2738+35])
                                                      Pexp_ident "_loc" (compile_stream.ml[81,2738+31]..[81,2738+35])
                                                    expression (compile_stream.ml[81,2738+37]..[81,2738+64])
                                                      Pexp_coerce
                                                      expression (compile_stream.ml[81,2738+38]..[81,2738+51])
                                                        Pexp_apply
                                                        expression (compile_stream.ml[81,2738+38]..[81,2738+46])
                                                          Pexp_ident "peek_fun" (compile_stream.ml[81,2738+38]..[81,2738+46])
                                                        [
                                                          <label> ""
                                                            expression (compile_stream.ml[81,2738+47]..[81,2738+51])
                                                              Pexp_ident "_loc" (compile_stream.ml[81,2738+47]..[81,2738+51])
                                                        ]
                                                      None
                                                      core_type (compile_stream.ml[81,2738+55]..[81,2738+63])
                                                        Ptyp_constr "Astf.exp" (compile_stream.ml[81,2738+55]..[81,2738+63])
                                                        []
                                                    expression (compile_stream.ml[82,2804+33]..[82,2804+52])
                                                      Pexp_variant "Lid"
                                                      Some
                                                        expression (compile_stream.ml[82,2804+38]..[82,2804+52])
                                                          Pexp_tuple
                                                          [
                                                            expression (compile_stream.ml[82,2804+39]..[82,2804+43])
                                                              Pexp_ident "_loc" (compile_stream.ml[82,2804+39]..[82,2804+43])
                                                            expression (compile_stream.ml[82,2804+45]..[82,2804+51])
                                                              Pexp_ident "strm_n" (compile_stream.ml[82,2804+45]..[82,2804+51])
                                                          ]
                                                  ]
                                            expression (compile_stream.ml[83,2861+28]..[101,3810+77])
                                              Pexp_variant "Bar"
                                              Some
                                                expression (compile_stream.ml[84,2894+30]..[101,3810+77])
                                                  Pexp_tuple
                                                  [
                                                    expression (compile_stream.ml[84,2894+31]..[84,2894+35])
                                                      Pexp_ident "_loc" (compile_stream.ml[84,2894+31]..[84,2894+35])
                                                    expression (compile_stream.ml[85,2931+33]..[99,3697+71])
                                                      Pexp_variant "Case"
                                                      Some
                                                        expression (compile_stream.ml[86,2970+35]..[99,3697+71])
                                                          Pexp_tuple
                                                          [
                                                            expression (compile_stream.ml[86,2970+36]..[86,2970+40])
                                                              Pexp_ident "_loc" (compile_stream.ml[86,2970+36]..[86,2970+40])
                                                            expression (compile_stream.ml[87,3012+38]..[89,3125+58])
                                                              Pexp_variant "App"
                                                              Some
                                                                expression (compile_stream.ml[88,3055+40]..[89,3125+58])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (compile_stream.ml[88,3055+41]..[88,3055+45])
                                                                      Pexp_ident "_loc" (compile_stream.ml[88,3055+41]..[88,3055+45])
                                                                    expression (compile_stream.ml[88,3055+48]..[88,3055+67])
                                                                      Pexp_variant "Uid"
                                                                      Some
expression (compile_stream.ml[88,3055+53]..[88,3055+67])
  Pexp_tuple
  [
    expression (compile_stream.ml[88,3055+54]..[88,3055+58])
      Pexp_ident "_loc" (compile_stream.ml[88,3055+54]..[88,3055+58])
    expression (compile_stream.ml[88,3055+60]..[88,3055+66])
      Pexp_constant Const_string("Some",None)
  ]
                                                                    expression (compile_stream.ml[89,3125+42]..[89,3125+57])
                                                                      Pexp_coerce
                                                                      expression (compile_stream.ml[89,3125+43]..[89,3125+44])
Pexp_ident "p" (compile_stream.ml[89,3125+43]..[89,3125+44])
                                                                      None
                                                                      core_type (compile_stream.ml[89,3125+48]..[89,3125+56])
Ptyp_constr "Astf.pat" (compile_stream.ml[89,3125+48]..[89,3125+56])
[]
                                                                  ]
                                                            expression (compile_stream.ml[90,3186+38]..[99,3697+69])
                                                              Pexp_variant "Seq"
                                                              Some
                                                                expression (compile_stream.ml[91,3229+40]..[99,3697+69])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (compile_stream.ml[91,3229+41]..[91,3229+45])
                                                                      Pexp_ident "_loc" (compile_stream.ml[91,3229+41]..[91,3229+45])
                                                                    expression (compile_stream.ml[92,3276+43]..[99,3697+67])
                                                                      Pexp_variant "Sem"
                                                                      Some
expression (compile_stream.ml[93,3324+45]..[99,3697+67])
  Pexp_tuple
  [
    expression (compile_stream.ml[93,3324+46]..[93,3324+50])
      Pexp_ident "_loc" (compile_stream.ml[93,3324+46]..[93,3324+50])
    expression (compile_stream.ml[94,3376+48]..[98,3620+74])
      Pexp_variant "App"
      Some
        expression (compile_stream.ml[95,3429+50]..[98,3620+74])
          Pexp_tuple
          [
            expression (compile_stream.ml[95,3429+51]..[95,3429+55])
              Pexp_ident "_loc" (compile_stream.ml[95,3429+51]..[95,3429+55])
            expression (compile_stream.ml[96,3486+52]..[97,3557+61])
              Pexp_coerce
              expression (compile_stream.ml[96,3486+53]..[96,3486+66])
                Pexp_apply
                expression (compile_stream.ml[96,3486+53]..[96,3486+61])
                  Pexp_ident "junk_fun" (compile_stream.ml[96,3486+53]..[96,3486+61])
                [
                  <label> ""
                    expression (compile_stream.ml[96,3486+62]..[96,3486+66])
                      Pexp_ident "_loc" (compile_stream.ml[96,3486+62]..[96,3486+66])
                ]
              None
              core_type (compile_stream.ml[97,3557+52]..[97,3557+60])
                Ptyp_constr "Astf.exp" (compile_stream.ml[97,3557+52]..[97,3557+60])
                []
            expression (compile_stream.ml[98,3620+53]..[98,3620+72])
              Pexp_variant "Lid"
              Some
                expression (compile_stream.ml[98,3620+58]..[98,3620+72])
                  Pexp_tuple
                  [
                    expression (compile_stream.ml[98,3620+59]..[98,3620+63])
                      Pexp_ident "_loc" (compile_stream.ml[98,3620+59]..[98,3620+63])
                    expression (compile_stream.ml[98,3620+65]..[98,3620+71])
                      Pexp_ident "strm_n" (compile_stream.ml[98,3620+65]..[98,3620+71])
                  ]
          ]
    expression (compile_stream.ml[99,3697+47]..[99,3697+66])
      Pexp_coerce
      expression (compile_stream.ml[99,3697+48]..[99,3697+53])
        Pexp_ident "skont" (compile_stream.ml[99,3697+48]..[99,3697+53])
      None
      core_type (compile_stream.ml[99,3697+57]..[99,3697+65])
        Ptyp_constr "Astf.exp" (compile_stream.ml[99,3697+57]..[99,3697+65])
        []
  ]
                                                                  ]
                                                          ]
                                                    expression (compile_stream.ml[100,3771+33]..[101,3810+75])
                                                      Pexp_variant "Case"
                                                      Some
                                                        expression (compile_stream.ml[101,3810+35]..[101,3810+75])
                                                          Pexp_tuple
                                                          [
                                                            expression (compile_stream.ml[101,3810+36]..[101,3810+40])
                                                              Pexp_ident "_loc" (compile_stream.ml[101,3810+36]..[101,3810+40])
                                                            expression (compile_stream.ml[101,3810+43]..[101,3810+52])
                                                              Pexp_variant "Any"
                                                              Some
                                                                expression (compile_stream.ml[101,3810+48]..[101,3810+52])
                                                                  Pexp_ident "_loc" (compile_stream.ml[101,3810+48]..[101,3810+52])
                                                            expression (compile_stream.ml[101,3810+55]..[101,3810+74])
                                                              Pexp_coerce
                                                              expression (compile_stream.ml[101,3810+56]..[101,3810+61])
                                                                Pexp_ident "ckont" (compile_stream.ml[101,3810+56]..[101,3810+61])
                                                              None
                                                              core_type (compile_stream.ml[101,3810+65]..[101,3810+73])
                                                                Ptyp_constr "Astf.exp" (compile_stream.ml[101,3810+65]..[101,3810+73])
                                                                []
                                                          ]
                                                  ]
                                          ]
                                    None
                                    core_type (compile_stream.ml[102,3894+22]..[102,3894+30])
                                      Ptyp_constr "Astf.exp" (compile_stream.ml[102,3894+22]..[102,3894+30])
                                      []
                                <case>
                                  pattern (compile_stream.ml[103,3926+20]..[103,3926+40])
                                    Ppat_construct "When" (compile_stream.ml[103,3926+20]..[103,3926+24])
                                    Some
                                      pattern (compile_stream.ml[103,3926+20]..[103,3926+40])
                                        Ppat_tuple
                                        [
                                          pattern (compile_stream.ml[103,3926+26]..[103,3926+30])
                                            Ppat_var "_loc" (compile_stream.ml[103,3926+26]..[103,3926+30])
                                          pattern (compile_stream.ml[103,3926+31]..[103,3926+32])
                                            Ppat_var "p" (compile_stream.ml[103,3926+31]..[103,3926+32])
                                          pattern (compile_stream.ml[103,3926+33]..[103,3926+39])
                                            Ppat_construct "Some" (compile_stream.ml[103,3926+33]..[103,3926+37])
                                            Some
                                              pattern (compile_stream.ml[103,3926+38]..[103,3926+39])
                                                Ppat_var "w" (compile_stream.ml[103,3926+38]..[103,3926+39])
                                        ]
                                  expression (compile_stream.ml[104,3970+22]..[128,5242+31])
                                    Pexp_coerce
                                    expression (compile_stream.ml[104,3970+23]..[127,5158+79])
                                      Pexp_variant "Match"
                                      Some
                                        expression (compile_stream.ml[105,4000+25]..[127,5158+79])
                                          Pexp_tuple
                                          [
                                            expression (compile_stream.ml[105,4000+26]..[105,4000+30])
                                              Pexp_ident "_loc" (compile_stream.ml[105,4000+26]..[105,4000+30])
                                            expression (compile_stream.ml[106,4032+28]..[108,4131+54])
                                              Pexp_variant "App"
                                              Some
                                                expression (compile_stream.ml[107,4065+30]..[108,4131+54])
                                                  Pexp_tuple
                                                  [
                                                    expression (compile_stream.ml[107,4065+31]..[107,4065+35])
                                                      Pexp_ident "_loc" (compile_stream.ml[107,4065+31]..[107,4065+35])
                                                    expression (compile_stream.ml[107,4065+37]..[107,4065+64])
                                                      Pexp_coerce
                                                      expression (compile_stream.ml[107,4065+38]..[107,4065+51])
                                                        Pexp_apply
                                                        expression (compile_stream.ml[107,4065+38]..[107,4065+46])
                                                          Pexp_ident "peek_fun" (compile_stream.ml[107,4065+38]..[107,4065+46])
                                                        [
                                                          <label> ""
                                                            expression (compile_stream.ml[107,4065+47]..[107,4065+51])
                                                              Pexp_ident "_loc" (compile_stream.ml[107,4065+47]..[107,4065+51])
                                                        ]
                                                      None
                                                      core_type (compile_stream.ml[107,4065+55]..[107,4065+63])
                                                        Ptyp_constr "Astf.exp" (compile_stream.ml[107,4065+55]..[107,4065+63])
                                                        []
                                                    expression (compile_stream.ml[108,4131+33]..[108,4131+52])
                                                      Pexp_variant "Lid"
                                                      Some
                                                        expression (compile_stream.ml[108,4131+38]..[108,4131+52])
                                                          Pexp_tuple
                                                          [
                                                            expression (compile_stream.ml[108,4131+39]..[108,4131+43])
                                                              Pexp_ident "_loc" (compile_stream.ml[108,4131+39]..[108,4131+43])
                                                            expression (compile_stream.ml[108,4131+45]..[108,4131+51])
                                                              Pexp_ident "strm_n" (compile_stream.ml[108,4131+45]..[108,4131+51])
                                                          ]
                                                  ]
                                            expression (compile_stream.ml[109,4188+28]..[127,5158+77])
                                              Pexp_variant "Bar"
                                              Some
                                                expression (compile_stream.ml[110,4221+30]..[127,5158+77])
                                                  Pexp_tuple
                                                  [
                                                    expression (compile_stream.ml[110,4221+31]..[110,4221+35])
                                                      Pexp_ident "_loc" (compile_stream.ml[110,4221+31]..[110,4221+35])
                                                    expression (compile_stream.ml[111,4258+33]..[125,5045+71])
                                                      Pexp_variant "CaseWhen"
                                                      Some
                                                        expression (compile_stream.ml[112,4301+35]..[125,5045+71])
                                                          Pexp_tuple
                                                          [
                                                            expression (compile_stream.ml[112,4301+36]..[112,4301+40])
                                                              Pexp_ident "_loc" (compile_stream.ml[112,4301+36]..[112,4301+40])
                                                            expression (compile_stream.ml[113,4343+38]..[115,4456+58])
                                                              Pexp_variant "App"
                                                              Some
                                                                expression (compile_stream.ml[114,4386+40]..[115,4456+58])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (compile_stream.ml[114,4386+41]..[114,4386+45])
                                                                      Pexp_ident "_loc" (compile_stream.ml[114,4386+41]..[114,4386+45])
                                                                    expression (compile_stream.ml[114,4386+48]..[114,4386+67])
                                                                      Pexp_variant "Uid"
                                                                      Some
expression (compile_stream.ml[114,4386+53]..[114,4386+67])
  Pexp_tuple
  [
    expression (compile_stream.ml[114,4386+54]..[114,4386+58])
      Pexp_ident "_loc" (compile_stream.ml[114,4386+54]..[114,4386+58])
    expression (compile_stream.ml[114,4386+60]..[114,4386+66])
      Pexp_constant Const_string("Some",None)
  ]
                                                                    expression (compile_stream.ml[115,4456+42]..[115,4456+57])
                                                                      Pexp_coerce
                                                                      expression (compile_stream.ml[115,4456+43]..[115,4456+44])
Pexp_ident "p" (compile_stream.ml[115,4456+43]..[115,4456+44])
                                                                      None
                                                                      core_type (compile_stream.ml[115,4456+48]..[115,4456+56])
Ptyp_constr "Astf.pat" (compile_stream.ml[115,4456+48]..[115,4456+56])
[]
                                                                  ]
                                                            expression (compile_stream.ml[115,4456+61]..[115,4456+76])
                                                              Pexp_coerce
                                                              expression (compile_stream.ml[115,4456+62]..[115,4456+63])
                                                                Pexp_ident "w" (compile_stream.ml[115,4456+62]..[115,4456+63])
                                                              None
                                                              core_type (compile_stream.ml[115,4456+67]..[115,4456+75])
                                                                Ptyp_constr "Astf.exp" (compile_stream.ml[115,4456+67]..[115,4456+75])
                                                                []
                                                            expression (compile_stream.ml[116,4534+38]..[125,5045+69])
                                                              Pexp_variant "Seq"
                                                              Some
                                                                expression (compile_stream.ml[117,4577+40]..[125,5045+69])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (compile_stream.ml[117,4577+41]..[117,4577+45])
                                                                      Pexp_ident "_loc" (compile_stream.ml[117,4577+41]..[117,4577+45])
                                                                    expression (compile_stream.ml[118,4624+43]..[125,5045+67])
                                                                      Pexp_variant "Sem"
                                                                      Some
expression (compile_stream.ml[119,4672+45]..[125,5045+67])
  Pexp_tuple
  [
    expression (compile_stream.ml[119,4672+46]..[119,4672+50])
      Pexp_ident "_loc" (compile_stream.ml[119,4672+46]..[119,4672+50])
    expression (compile_stream.ml[120,4724+48]..[124,4968+74])
      Pexp_variant "App"
      Some
        expression (compile_stream.ml[121,4777+50]..[124,4968+74])
          Pexp_tuple
          [
            expression (compile_stream.ml[121,4777+51]..[121,4777+55])
              Pexp_ident "_loc" (compile_stream.ml[121,4777+51]..[121,4777+55])
            expression (compile_stream.ml[122,4834+52]..[123,4905+61])
              Pexp_coerce
              expression (compile_stream.ml[122,4834+53]..[122,4834+66])
                Pexp_apply
                expression (compile_stream.ml[122,4834+53]..[122,4834+61])
                  Pexp_ident "junk_fun" (compile_stream.ml[122,4834+53]..[122,4834+61])
                [
                  <label> ""
                    expression (compile_stream.ml[122,4834+62]..[122,4834+66])
                      Pexp_ident "_loc" (compile_stream.ml[122,4834+62]..[122,4834+66])
                ]
              None
              core_type (compile_stream.ml[123,4905+52]..[123,4905+60])
                Ptyp_constr "Astf.exp" (compile_stream.ml[123,4905+52]..[123,4905+60])
                []
            expression (compile_stream.ml[124,4968+53]..[124,4968+72])
              Pexp_variant "Lid"
              Some
                expression (compile_stream.ml[124,4968+58]..[124,4968+72])
                  Pexp_tuple
                  [
                    expression (compile_stream.ml[124,4968+59]..[124,4968+63])
                      Pexp_ident "_loc" (compile_stream.ml[124,4968+59]..[124,4968+63])
                    expression (compile_stream.ml[124,4968+65]..[124,4968+71])
                      Pexp_ident "strm_n" (compile_stream.ml[124,4968+65]..[124,4968+71])
                  ]
          ]
    expression (compile_stream.ml[125,5045+47]..[125,5045+66])
      Pexp_coerce
      expression (compile_stream.ml[125,5045+48]..[125,5045+53])
        Pexp_ident "skont" (compile_stream.ml[125,5045+48]..[125,5045+53])
      None
      core_type (compile_stream.ml[125,5045+57]..[125,5045+65])
        Ptyp_constr "Astf.exp" (compile_stream.ml[125,5045+57]..[125,5045+65])
        []
  ]
                                                                  ]
                                                          ]
                                                    expression (compile_stream.ml[126,5119+33]..[127,5158+75])
                                                      Pexp_variant "Case"
                                                      Some
                                                        expression (compile_stream.ml[127,5158+35]..[127,5158+75])
                                                          Pexp_tuple
                                                          [
                                                            expression (compile_stream.ml[127,5158+36]..[127,5158+40])
                                                              Pexp_ident "_loc" (compile_stream.ml[127,5158+36]..[127,5158+40])
                                                            expression (compile_stream.ml[127,5158+43]..[127,5158+52])
                                                              Pexp_variant "Any"
                                                              Some
                                                                expression (compile_stream.ml[127,5158+48]..[127,5158+52])
                                                                  Pexp_ident "_loc" (compile_stream.ml[127,5158+48]..[127,5158+52])
                                                            expression (compile_stream.ml[127,5158+55]..[127,5158+74])
                                                              Pexp_coerce
                                                              expression (compile_stream.ml[127,5158+56]..[127,5158+61])
                                                                Pexp_ident "ckont" (compile_stream.ml[127,5158+56]..[127,5158+61])
                                                              None
                                                              core_type (compile_stream.ml[127,5158+65]..[127,5158+73])
                                                                Ptyp_constr "Astf.exp" (compile_stream.ml[127,5158+65]..[127,5158+73])
                                                                []
                                                          ]
                                                  ]
                                          ]
                                    None
                                    core_type (compile_stream.ml[128,5242+22]..[128,5242+30])
                                      Ptyp_constr "Astf.exp" (compile_stream.ml[128,5242+22]..[128,5242+30])
                                      []
                                <case>
                                  pattern (compile_stream.ml[129,5274+20]..[129,5274+36])
                                    Ppat_construct "Match" (compile_stream.ml[129,5274+20]..[129,5274+25])
                                    Some
                                      pattern (compile_stream.ml[129,5274+20]..[129,5274+36])
                                        Ppat_tuple
                                        [
                                          pattern (compile_stream.ml[129,5274+27]..[129,5274+31])
                                            Ppat_var "_loc" (compile_stream.ml[129,5274+27]..[129,5274+31])
                                          pattern (compile_stream.ml[129,5274+32]..[129,5274+33])
                                            Ppat_var "p" (compile_stream.ml[129,5274+32]..[129,5274+33])
                                          pattern (compile_stream.ml[129,5274+34]..[129,5274+35])
                                            Ppat_var "e" (compile_stream.ml[129,5274+34]..[129,5274+35])
                                        ]
                                  expression (compile_stream.ml[130,5314+22]..[275,13035+39])
                                    Pexp_let Rec
                                    [
                                      <def>
                                        pattern (compile_stream.ml[130,5314+30]..[130,5314+40])
                                          Ppat_var "pat_eq_exp" (compile_stream.ml[130,5314+30]..[130,5314+40])
                                        expression (compile_stream.ml[131,5357+24]..[149,6434+48])
                                          Pexp_function
                                          [
                                            <case>
                                              pattern (compile_stream.ml[132,5390+26]..[132,5390+27])
                                                Ppat_var "p" (compile_stream.ml[132,5390+26]..[132,5390+27])
                                              expression (compile_stream.ml[133,5421+29]..[149,6434+47])
                                                Pexp_function
                                                [
                                                  <case>
                                                    pattern (compile_stream.ml[134,5459+31]..[134,5459+32])
                                                      Ppat_var "e" (compile_stream.ml[134,5459+31]..[134,5459+32])
                                                    expression (compile_stream.ml[135,5495+34]..[149,6434+46])
                                                      Pexp_match
                                                      expression (compile_stream.ml[135,5495+40]..[135,5495+46])
                                                        Pexp_tuple
                                                        [
                                                          expression (compile_stream.ml[135,5495+41]..[135,5495+42])
                                                            Pexp_ident "p" (compile_stream.ml[135,5495+41]..[135,5495+42])
                                                          expression (compile_stream.ml[135,5495+44]..[135,5495+45])
                                                            Pexp_ident "e" (compile_stream.ml[135,5495+44]..[135,5495+45])
                                                        ]
                                                      [
                                                        <case>
                                                          pattern (compile_stream.ml[136,5547+36]..[140,5848+77])
                                                            Ppat_or
                                                            pattern (compile_stream.ml[136,5547+36]..[137,5625+76])
                                                              Ppat_tuple
                                                              [
                                                                pattern (compile_stream.ml[136,5547+37]..[136,5547+63])
                                                                  Ppat_constraint
                                                                  pattern (compile_stream.ml[136,5547+38]..[136,5547+51])
                                                                    Ppat_variant "Lid"
                                                                    Some
                                                                      pattern (compile_stream.ml[136,5547+38]..[136,5547+51])
Ppat_tuple
[
  pattern (compile_stream.ml[136,5547+44]..[136,5547+48])
    Ppat_var "_loc" (compile_stream.ml[136,5547+44]..[136,5547+48])
  pattern (compile_stream.ml[136,5547+49]..[136,5547+50])
    Ppat_var "a" (compile_stream.ml[136,5547+49]..[136,5547+50])
]
                                                                  core_type (compile_stream.ml[136,5547+54]..[136,5547+62])
                                                                    Ptyp_constr "Astf.pat" (compile_stream.ml[136,5547+54]..[136,5547+62])
                                                                    []
                                                                pattern (compile_stream.ml[136,5547+64]..[137,5625+75])
                                                                  Ppat_constraint
                                                                  pattern (compile_stream.ml[136,5547+65]..[136,5547+75])
                                                                    Ppat_variant "Lid"
                                                                    Some
                                                                      pattern (compile_stream.ml[136,5547+65]..[136,5547+75])
Ppat_tuple
[
  pattern (compile_stream.ml[136,5547+71]..[136,5547+72])
    Ppat_any
  pattern (compile_stream.ml[136,5547+73]..[136,5547+74])
    Ppat_var "b" (compile_stream.ml[136,5547+73]..[136,5547+74])
]
                                                                  core_type (compile_stream.ml[137,5625+66]..[137,5625+74])
                                                                    Ptyp_constr "Astf.exp" (compile_stream.ml[137,5625+66]..[137,5625+74])
                                                                    []
                                                              ]
                                                            pattern (compile_stream.ml[138,5702+37]..[140,5848+77])
                                                              Ppat_tuple
                                                              [
                                                                pattern (compile_stream.ml[138,5702+38]..[138,5702+64])
                                                                  Ppat_constraint
                                                                  pattern (compile_stream.ml[138,5702+39]..[138,5702+52])
                                                                    Ppat_variant "Uid"
                                                                    Some
                                                                      pattern (compile_stream.ml[138,5702+39]..[138,5702+52])
Ppat_tuple
[
  pattern (compile_stream.ml[138,5702+45]..[138,5702+49])
    Ppat_var "_loc" (compile_stream.ml[138,5702+45]..[138,5702+49])
  pattern (compile_stream.ml[138,5702+50]..[138,5702+51])
    Ppat_var "a" (compile_stream.ml[138,5702+50]..[138,5702+51])
]
                                                                  core_type (compile_stream.ml[138,5702+55]..[138,5702+63])
                                                                    Ptyp_constr "Astf.pat" (compile_stream.ml[138,5702+55]..[138,5702+63])
                                                                    []
                                                                pattern (compile_stream.ml[138,5702+65]..[140,5848+76])
                                                                  Ppat_constraint
                                                                  pattern (compile_stream.ml[138,5702+66]..[138,5702+76])
                                                                    Ppat_variant "Uid"
                                                                    Some
                                                                      pattern (compile_stream.ml[138,5702+66]..[138,5702+76])
Ppat_tuple
[
  pattern (compile_stream.ml[138,5702+72]..[138,5702+73])
    Ppat_any
  pattern (compile_stream.ml[138,5702+74]..[138,5702+75])
    Ppat_var "b" (compile_stream.ml[138,5702+74]..[138,5702+75])
]
                                                                  core_type (compile_stream.ml[140,5848+67]..[140,5848+75])
                                                                    Ptyp_constr "Astf.exp" (compile_stream.ml[140,5848+67]..[140,5848+75])
                                                                    []
                                                              ]
                                                          expression (compile_stream.ml[141,5926+41]..[141,5926+46])
                                                            Pexp_apply
                                                            expression (compile_stream.ml[141,5926+43]..[141,5926+44])
                                                              Pexp_ident "=" (compile_stream.ml[141,5926+43]..[141,5926+44])
                                                            [
                                                              <label> ""
                                                                expression (compile_stream.ml[141,5926+41]..[141,5926+42])
                                                                  Pexp_ident "a" (compile_stream.ml[141,5926+41]..[141,5926+42])
                                                              <label> ""
                                                                expression (compile_stream.ml[141,5926+45]..[141,5926+46])
                                                                  Pexp_ident "b" (compile_stream.ml[141,5926+45]..[141,5926+46])
                                                            ]
                                                        <case>
                                                          pattern (compile_stream.ml[142,5973+36]..[145,6195+78])
                                                            Ppat_tuple
                                                            [
                                                              pattern (compile_stream.ml[142,5973+37]..[142,5973+67])
                                                                Ppat_constraint
                                                                pattern (compile_stream.ml[142,5973+38]..[142,5973+55])
                                                                  Ppat_variant "App"
                                                                  Some
                                                                    pattern (compile_stream.ml[142,5973+38]..[142,5973+55])
                                                                      Ppat_tuple
                                                                      [
pattern (compile_stream.ml[142,5973+44]..[142,5973+48])
  Ppat_var "_loc" (compile_stream.ml[142,5973+44]..[142,5973+48])
pattern (compile_stream.ml[142,5973+49]..[142,5973+51])
  Ppat_var "p1" (compile_stream.ml[142,5973+49]..[142,5973+51])
pattern (compile_stream.ml[142,5973+52]..[142,5973+54])
  Ppat_var "p2" (compile_stream.ml[142,5973+52]..[142,5973+54])
                                                                      ]
                                                                core_type (compile_stream.ml[142,5973+58]..[142,5973+66])
                                                                  Ptyp_constr "Astf.pat" (compile_stream.ml[142,5973+58]..[142,5973+66])
                                                                  []
                                                              pattern (compile_stream.ml[142,5973+68]..[145,6195+77])
                                                                Ppat_constraint
                                                                pattern (compile_stream.ml[142,5973+69]..[143,6047+77])
                                                                  Ppat_variant "App"
                                                                  Some
                                                                    pattern (compile_stream.ml[142,5973+69]..[143,6047+77])
                                                                      Ppat_tuple
                                                                      [
pattern (compile_stream.ml[143,6047+69]..[143,6047+70])
  Ppat_any
pattern (compile_stream.ml[143,6047+71]..[143,6047+73])
  Ppat_var "e1" (compile_stream.ml[143,6047+71]..[143,6047+73])
pattern (compile_stream.ml[143,6047+74]..[143,6047+76])
  Ppat_var "e2" (compile_stream.ml[143,6047+74]..[143,6047+76])
                                                                      ]
                                                                core_type (compile_stream.ml[145,6195+68]..[145,6195+76])
                                                                  Ptyp_constr "Astf.exp" (compile_stream.ml[145,6195+68]..[145,6195+76])
                                                                  []
                                                            ]
                                                          expression (compile_stream.ml[147,6315+38]..[148,6375+58])
                                                            Pexp_apply
                                                            expression (compile_stream.ml[147,6315+57]..[147,6315+59])
                                                              Pexp_ident "&&" (compile_stream.ml[147,6315+57]..[147,6315+59])
                                                            [
                                                              <label> ""
                                                                expression (compile_stream.ml[147,6315+39]..[147,6315+55])
                                                                  Pexp_apply
                                                                  expression (compile_stream.ml[147,6315+39]..[147,6315+49])
                                                                    Pexp_ident "pat_eq_exp" (compile_stream.ml[147,6315+39]..[147,6315+49])
                                                                  [
                                                                    <label> ""
                                                                      expression (compile_stream.ml[147,6315+50]..[147,6315+52])
Pexp_ident "p1" (compile_stream.ml[147,6315+50]..[147,6315+52])
                                                                    <label> ""
                                                                      expression (compile_stream.ml[147,6315+53]..[147,6315+55])
Pexp_ident "e1" (compile_stream.ml[147,6315+53]..[147,6315+55])
                                                                  ]
                                                              <label> ""
                                                                expression (compile_stream.ml[148,6375+41]..[148,6375+57])
                                                                  Pexp_apply
                                                                  expression (compile_stream.ml[148,6375+41]..[148,6375+51])
                                                                    Pexp_ident "pat_eq_exp" (compile_stream.ml[148,6375+41]..[148,6375+51])
                                                                  [
                                                                    <label> ""
                                                                      expression (compile_stream.ml[148,6375+52]..[148,6375+54])
Pexp_ident "p2" (compile_stream.ml[148,6375+52]..[148,6375+54])
                                                                    <label> ""
                                                                      expression (compile_stream.ml[148,6375+55]..[148,6375+57])
Pexp_ident "e2" (compile_stream.ml[148,6375+55]..[148,6375+57])
                                                                  ]
                                                            ]
                                                        <case>
                                                          pattern (compile_stream.ml[149,6434+36]..[149,6434+37])
                                                            Ppat_any
                                                          expression (compile_stream.ml[149,6434+41]..[149,6434+46])
                                                            Pexp_construct "false" (compile_stream.ml[149,6434+41]..[149,6434+46])
                                                            None
                                                      ]
                                                ]
                                          ]
                                    ]
                                    expression (compile_stream.ml[150,6486+22]..[275,13035+39])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (compile_stream.ml[150,6486+26]..[150,6486+27])
                                            Ppat_var "e" (compile_stream.ml[150,6486+26]..[150,6486+27])
                                          expression (compile_stream.ml[151,6516+24]..[166,7356+37])
                                            Pexp_match
                                            expression (compile_stream.ml[151,6516+30]..[151,6516+31])
                                              Pexp_ident "e" (compile_stream.ml[151,6516+30]..[151,6516+31])
                                            [
                                              <case>
                                                pattern (compile_stream.ml[152,6553+26]..[161,7101+39])
                                                  Ppat_constraint
                                                  pattern (compile_stream.ml[152,6553+27]..[160,7029+71])
                                                    Ppat_variant "Fun"
                                                    Some
                                                      pattern (compile_stream.ml[152,6553+27]..[160,7029+71])
                                                        Ppat_tuple
                                                        [
                                                          pattern (compile_stream.ml[153,6585+30]..[153,6585+34])
                                                            Ppat_var "_loc" (compile_stream.ml[153,6585+30]..[153,6585+34])
                                                          pattern (compile_stream.ml[153,6585+35]..[160,7029+70])
                                                            Ppat_variant "Case"
                                                            Some
                                                              pattern (compile_stream.ml[153,6585+35]..[160,7029+70])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (compile_stream.ml[154,6626+38]..[154,6626+39])
                                                                    Ppat_any
                                                                  pattern (compile_stream.ml[154,6626+40]..[160,7029+67])
                                                                    Ppat_variant "Constraint"
                                                                    Some
                                                                      pattern (compile_stream.ml[154,6626+40]..[160,7029+67])
Ppat_tuple
[
  pattern (compile_stream.ml[155,6678+43]..[155,6678+44])
    Ppat_any
  pattern (compile_stream.ml[155,6678+45]..[155,6678+55])
    Ppat_variant "Lid"
    Some
      pattern (compile_stream.ml[155,6678+45]..[155,6678+55])
        Ppat_tuple
        [
          pattern (compile_stream.ml[155,6678+51]..[155,6678+52])
            Ppat_any
          pattern (compile_stream.ml[155,6678+53]..[155,6678+54])
            Ppat_var "v" (compile_stream.ml[155,6678+53]..[155,6678+54])
        ]
  pattern (compile_stream.ml[155,6678+56]..[160,7029+66])
    Ppat_variant "App"
    Some
      pattern (compile_stream.ml[155,6678+56]..[160,7029+66])
        Ppat_tuple
        [
          pattern (compile_stream.ml[156,6739+59]..[156,6739+60])
            Ppat_any
          pattern (compile_stream.ml[156,6739+61]..[159,6953+74])
            Ppat_variant "Dot"
            Some
              pattern (compile_stream.ml[156,6739+61]..[159,6953+74])
                Ppat_tuple
                [
                  pattern (compile_stream.ml[157,6805+64]..[157,6805+65])
                    Ppat_any
                  pattern (compile_stream.ml[157,6805+66]..[157,6805+76])
                    Ppat_variant "Uid"
                    Some
                      pattern (compile_stream.ml[157,6805+66]..[157,6805+76])
                        Ppat_tuple
                        [
                          pattern (compile_stream.ml[157,6805+72]..[157,6805+73])
                            Ppat_any
                          pattern (compile_stream.ml[157,6805+74]..[157,6805+75])
                            Ppat_var "m" (compile_stream.ml[157,6805+74]..[157,6805+75])
                        ]
                  pattern (compile_stream.ml[158,6883+64]..[159,6953+73])
                    Ppat_variant "Lid"
                    Some
                      pattern (compile_stream.ml[158,6883+64]..[159,6953+73])
                        Ppat_tuple
                        [
                          pattern (compile_stream.ml[159,6953+67]..[159,6953+68])
                            Ppat_any
                          pattern (compile_stream.ml[159,6953+69]..[159,6953+72])
                            Ppat_constant Const_string("t",None)
                        ]
                ]
          pattern (compile_stream.ml[160,7029+59]..[160,7029+65])
            Ppat_variant "Any"
            Some
              pattern (compile_stream.ml[160,7029+64]..[160,7029+65])
                Ppat_any
        ]
]
                                                                  pattern (compile_stream.ml[160,7029+68]..[160,7029+69])
                                                                    Ppat_var "e" (compile_stream.ml[160,7029+68]..[160,7029+69])
                                                                ]
                                                        ]
                                                  core_type (compile_stream.ml[161,7101+30]..[161,7101+38])
                                                    Ptyp_constr "Astf.exp" (compile_stream.ml[161,7101+30]..[161,7101+38])
                                                    []
                                                <when>
                                                  expression (compile_stream.ml[161,7101+45]..[161,7101+74])
                                                    Pexp_apply
                                                    expression (compile_stream.ml[161,7101+58]..[161,7101+60])
                                                      Pexp_ident "&&" (compile_stream.ml[161,7101+58]..[161,7101+60])
                                                    [
                                                      <label> ""
                                                        expression (compile_stream.ml[161,7101+46]..[161,7101+56])
                                                          Pexp_apply
                                                          expression (compile_stream.ml[161,7101+48]..[161,7101+49])
                                                            Pexp_ident "=" (compile_stream.ml[161,7101+48]..[161,7101+49])
                                                          [
                                                            <label> ""
                                                              expression (compile_stream.ml[161,7101+46]..[161,7101+47])
                                                                Pexp_ident "v" (compile_stream.ml[161,7101+46]..[161,7101+47])
                                                            <label> ""
                                                              expression (compile_stream.ml[161,7101+50]..[161,7101+56])
                                                                Pexp_ident "strm_n" (compile_stream.ml[161,7101+50]..[161,7101+56])
                                                          ]
                                                      <label> ""
                                                        expression (compile_stream.ml[161,7101+62]..[161,7101+73])
                                                          Pexp_apply
                                                          expression (compile_stream.ml[161,7101+64]..[161,7101+65])
                                                            Pexp_ident "=" (compile_stream.ml[161,7101+64]..[161,7101+65])
                                                          [
                                                            <label> ""
                                                              expression (compile_stream.ml[161,7101+62]..[161,7101+63])
                                                                Pexp_ident "m" (compile_stream.ml[161,7101+62]..[161,7101+63])
                                                            <label> ""
                                                              expression (compile_stream.ml[161,7101+67]..[161,7101+72])
                                                                Pexp_apply
                                                                expression (compile_stream.ml[161,7101+67]..[161,7101+69])
                                                                  Pexp_ident "gm" (compile_stream.ml[161,7101+67]..[161,7101+69])
                                                                [
                                                                  <label> ""
                                                                    expression (compile_stream.ml[161,7101+70]..[161,7101+72])
                                                                      Pexp_construct "()" (compile_stream.ml[161,7101+70]..[161,7101+72])
                                                                      None
                                                                ]
                                                          ]
                                                    ]
                                                expression (compile_stream.ml[162,7179+28]..[162,7179+29])
                                                  Pexp_ident "e" (compile_stream.ml[162,7179+28]..[162,7179+29])
                                              <case>
                                                pattern (compile_stream.ml[163,7209+26]..[163,7209+27])
                                                  Ppat_any
                                                expression (compile_stream.ml[164,7240+28]..[166,7356+37])
                                                  Pexp_coerce
                                                  expression (compile_stream.ml[164,7240+29]..[165,7274+77])
                                                    Pexp_variant "App"
                                                    Some
                                                      expression (compile_stream.ml[165,7274+31]..[165,7274+77])
                                                        Pexp_tuple
                                                        [
                                                          expression (compile_stream.ml[165,7274+32]..[165,7274+36])
                                                            Pexp_ident "_loc" (compile_stream.ml[165,7274+32]..[165,7274+36])
                                                          expression (compile_stream.ml[165,7274+38]..[165,7274+53])
                                                            Pexp_coerce
                                                            expression (compile_stream.ml[165,7274+39]..[165,7274+40])
                                                              Pexp_ident "e" (compile_stream.ml[165,7274+39]..[165,7274+40])
                                                            None
                                                            core_type (compile_stream.ml[165,7274+44]..[165,7274+52])
                                                              Ptyp_constr "Astf.exp" (compile_stream.ml[165,7274+44]..[165,7274+52])
                                                              []
                                                          expression (compile_stream.ml[165,7274+56]..[165,7274+75])
                                                            Pexp_variant "Lid"
                                                            Some
                                                              expression (compile_stream.ml[165,7274+61]..[165,7274+75])
                                                                Pexp_tuple
                                                                [
                                                                  expression (compile_stream.ml[165,7274+62]..[165,7274+66])
                                                                    Pexp_ident "_loc" (compile_stream.ml[165,7274+62]..[165,7274+66])
                                                                  expression (compile_stream.ml[165,7274+68]..[165,7274+74])
                                                                    Pexp_ident "strm_n" (compile_stream.ml[165,7274+68]..[165,7274+74])
                                                                ]
                                                        ]
                                                  None
                                                  core_type (compile_stream.ml[166,7356+28]..[166,7356+36])
                                                    Ptyp_constr "Astf.exp" (compile_stream.ml[166,7356+28]..[166,7356+36])
                                                    []
                                            ]
                                      ]
                                      expression (compile_stream.ml[167,7397+22]..[275,13035+39])
                                        Pexp_ifthenelse
                                        expression (compile_stream.ml[167,7397+25]..[167,7397+43])
                                          Pexp_apply
                                          expression (compile_stream.ml[167,7397+25]..[167,7397+35])
                                            Pexp_ident "pat_eq_exp" (compile_stream.ml[167,7397+25]..[167,7397+35])
                                          [
                                            <label> ""
                                              expression (compile_stream.ml[167,7397+36]..[167,7397+37])
                                                Pexp_ident "p" (compile_stream.ml[167,7397+36]..[167,7397+37])
                                            <label> ""
                                              expression (compile_stream.ml[167,7397+38]..[167,7397+43])
                                                Pexp_ident "skont" (compile_stream.ml[167,7397+38]..[167,7397+43])
                                          ]
                                        expression (compile_stream.ml[169,7468+25]..[187,8414+72])
                                          Pexp_ifthenelse
                                          expression (compile_stream.ml[170,7496+27]..[177,7924+71])
                                            Pexp_apply
                                            expression (compile_stream.ml[177,7924+50]..[177,7924+52])
                                              Pexp_ident "||" (compile_stream.ml[177,7924+50]..[177,7924+52])
                                            [
                                              <label> ""
                                                expression (compile_stream.ml[170,7496+28]..[177,7924+48])
                                                  Pexp_apply
                                                  expression (compile_stream.ml[170,7496+29]..[177,7924+41])
                                                    Pexp_function
                                                    [
                                                      <case>
                                                        pattern (compile_stream.ml[171,7534+31]..[176,7854+44])
                                                          Ppat_constraint
                                                          pattern (compile_stream.ml[171,7534+32]..[175,7772+81])
                                                            Ppat_variant "App"
                                                            Some
                                                              pattern (compile_stream.ml[171,7534+32]..[175,7772+81])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (compile_stream.ml[172,7571+35]..[172,7571+39])
                                                                    Ppat_var "_loc" (compile_stream.ml[172,7571+35]..[172,7571+39])
                                                                  pattern (compile_stream.ml[172,7571+40]..[172,7571+56])
                                                                    Ppat_variant "Lid"
                                                                    Some
                                                                      pattern (compile_stream.ml[172,7571+40]..[172,7571+56])
Ppat_tuple
[
  pattern (compile_stream.ml[172,7571+46]..[172,7571+47])
    Ppat_any
  pattern (compile_stream.ml[172,7571+48]..[172,7571+55])
    Ppat_constant Const_string("raise",None)
]
                                                                  pattern (compile_stream.ml[172,7571+57]..[175,7772+80])
                                                                    Ppat_variant "Dot"
                                                                    Some
                                                                      pattern (compile_stream.ml[172,7571+57]..[175,7772+80])
Ppat_tuple
[
  pattern (compile_stream.ml[173,7633+60]..[173,7633+61])
    Ppat_any
  pattern (compile_stream.ml[173,7633+62]..[173,7633+72])
    Ppat_variant "Uid"
    Some
      pattern (compile_stream.ml[173,7633+62]..[173,7633+72])
        Ppat_tuple
        [
          pattern (compile_stream.ml[173,7633+68]..[173,7633+69])
            Ppat_any
          pattern (compile_stream.ml[173,7633+70]..[173,7633+71])
            Ppat_var "m" (compile_stream.ml[173,7633+70]..[173,7633+71])
        ]
  pattern (compile_stream.ml[174,7707+60]..[175,7772+79])
    Ppat_variant "Uid"
    Some
      pattern (compile_stream.ml[174,7707+60]..[175,7772+79])
        Ppat_tuple
        [
          pattern (compile_stream.ml[175,7772+63]..[175,7772+64])
            Ppat_any
          pattern (compile_stream.ml[175,7772+65]..[175,7772+78])
            Ppat_constant Const_string("NotConsumed",None)
        ]
]
                                                                ]
                                                          core_type (compile_stream.ml[176,7854+35]..[176,7854+43])
                                                            Ptyp_constr "Astf.exp" (compile_stream.ml[176,7854+35]..[176,7854+43])
                                                            []
                                                        <when>
                                                          expression (compile_stream.ml[176,7854+50]..[176,7854+61])
                                                            Pexp_apply
                                                            expression (compile_stream.ml[176,7854+52]..[176,7854+53])
                                                              Pexp_ident "=" (compile_stream.ml[176,7854+52]..[176,7854+53])
                                                            [
                                                              <label> ""
                                                                expression (compile_stream.ml[176,7854+50]..[176,7854+51])
                                                                  Pexp_ident "m" (compile_stream.ml[176,7854+50]..[176,7854+51])
                                                              <label> ""
                                                                expression (compile_stream.ml[176,7854+55]..[176,7854+60])
                                                                  Pexp_apply
                                                                  expression (compile_stream.ml[176,7854+55]..[176,7854+57])
                                                                    Pexp_ident "gm" (compile_stream.ml[176,7854+55]..[176,7854+57])
                                                                  [
                                                                    <label> ""
                                                                      expression (compile_stream.ml[176,7854+58]..[176,7854+60])
Pexp_construct "()" (compile_stream.ml[176,7854+58]..[176,7854+60])
None
                                                                  ]
                                                            ]
                                                        expression (compile_stream.ml[176,7854+65]..[176,7854+69])
                                                          Pexp_construct "true" (compile_stream.ml[176,7854+65]..[176,7854+69])
                                                          None
                                                      <case>
                                                        pattern (compile_stream.ml[177,7924+31]..[177,7924+32])
                                                          Ppat_any
                                                        expression (compile_stream.ml[177,7924+36]..[177,7924+41])
                                                          Pexp_construct "false" (compile_stream.ml[177,7924+36]..[177,7924+41])
                                                          None
                                                    ]
                                                  [
                                                    <label> ""
                                                      expression (compile_stream.ml[177,7924+43]..[177,7924+48])
                                                        Pexp_ident "ckont" (compile_stream.ml[177,7924+43]..[177,7924+48])
                                                  ]
                                              <label> ""
                                                expression (compile_stream.ml[177,7924+54]..[177,7924+70])
                                                  Pexp_apply
                                                  expression (compile_stream.ml[177,7924+54]..[177,7924+68])
                                                    Pexp_ident "handle_failure" (compile_stream.ml[177,7924+54]..[177,7924+68])
                                                  [
                                                    <label> ""
                                                      expression (compile_stream.ml[177,7924+69]..[177,7924+70])
                                                        Pexp_ident "e" (compile_stream.ml[177,7924+69]..[177,7924+70])
                                                  ]
                                            ]
                                          expression (compile_stream.ml[178,7996+30]..[178,7996+31])
                                            Pexp_ident "e" (compile_stream.ml[178,7996+30]..[178,7996+31])
                                          Some
                                            expression (compile_stream.ml[180,8058+27]..[187,8414+72])
                                              Pexp_coerce
                                              expression (compile_stream.ml[180,8058+28]..[187,8414+59])
                                                Pexp_variant "Try"
                                                Some
                                                  expression (compile_stream.ml[181,8091+30]..[187,8414+59])
                                                    Pexp_tuple
                                                    [
                                                      expression (compile_stream.ml[181,8091+31]..[181,8091+35])
                                                        Pexp_ident "_loc" (compile_stream.ml[181,8091+31]..[181,8091+35])
                                                      expression (compile_stream.ml[181,8091+37]..[181,8091+52])
                                                        Pexp_coerce
                                                        expression (compile_stream.ml[181,8091+38]..[181,8091+39])
                                                          Pexp_ident "e" (compile_stream.ml[181,8091+38]..[181,8091+39])
                                                        None
                                                        core_type (compile_stream.ml[181,8091+43]..[181,8091+51])
                                                          Ptyp_constr "Astf.exp" (compile_stream.ml[181,8091+43]..[181,8091+51])
                                                          []
                                                      expression (compile_stream.ml[182,8145+33]..[187,8414+57])
                                                        Pexp_variant "Case"
                                                        Some
                                                          expression (compile_stream.ml[183,8184+35]..[187,8414+57])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_stream.ml[183,8184+36]..[183,8184+40])
                                                                Pexp_ident "_loc" (compile_stream.ml[183,8184+36]..[183,8184+40])
                                                              expression (compile_stream.ml[184,8226+38]..[186,8340+71])
                                                                Pexp_variant "Dot"
                                                                Some
                                                                  expression (compile_stream.ml[185,8269+40]..[186,8340+71])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (compile_stream.ml[185,8269+41]..[185,8269+45])
Pexp_ident "_loc" (compile_stream.ml[185,8269+41]..[185,8269+45])
                                                                      expression (compile_stream.ml[185,8269+48]..[185,8269+68])
Pexp_variant "Uid"
Some
  expression (compile_stream.ml[185,8269+53]..[185,8269+68])
    Pexp_tuple
    [
      expression (compile_stream.ml[185,8269+54]..[185,8269+58])
        Pexp_ident "_loc" (compile_stream.ml[185,8269+54]..[185,8269+58])
      expression (compile_stream.ml[185,8269+61]..[185,8269+66])
        Pexp_apply
        expression (compile_stream.ml[185,8269+61]..[185,8269+63])
          Pexp_ident "gm" (compile_stream.ml[185,8269+61]..[185,8269+63])
        [
          <label> ""
            expression (compile_stream.ml[185,8269+64]..[185,8269+66])
              Pexp_construct "()" (compile_stream.ml[185,8269+64]..[185,8269+66])
              None
        ]
    ]
                                                                      expression (compile_stream.ml[186,8340+43]..[186,8340+69])
Pexp_variant "Uid"
Some
  expression (compile_stream.ml[186,8340+48]..[186,8340+69])
    Pexp_tuple
    [
      expression (compile_stream.ml[186,8340+49]..[186,8340+53])
        Pexp_ident "_loc" (compile_stream.ml[186,8340+49]..[186,8340+53])
      expression (compile_stream.ml[186,8340+55]..[186,8340+68])
        Pexp_constant Const_string("NotConsumed",None)
    ]
                                                                    ]
                                                              expression (compile_stream.ml[187,8414+37]..[187,8414+56])
                                                                Pexp_coerce
                                                                expression (compile_stream.ml[187,8414+38]..[187,8414+43])
                                                                  Pexp_ident "ckont" (compile_stream.ml[187,8414+38]..[187,8414+43])
                                                                None
                                                                core_type (compile_stream.ml[187,8414+47]..[187,8414+55])
                                                                  Ptyp_constr "Astf.exp" (compile_stream.ml[187,8414+47]..[187,8414+55])
                                                                  []
                                                            ]
                                                    ]
                                              None
                                              core_type (compile_stream.ml[187,8414+63]..[187,8414+71])
                                                Ptyp_constr "Astf.exp" (compile_stream.ml[187,8414+63]..[187,8414+71])
                                                []
                                        Some
                                          expression (compile_stream.ml[189,8515+24]..[275,13035+39])
                                            Pexp_ifthenelse
                                            expression (compile_stream.ml[190,8542+26]..[197,8963+48])
                                              Pexp_apply
                                              expression (compile_stream.ml[190,8542+28]..[197,8963+40])
                                                Pexp_function
                                                [
                                                  <case>
                                                    pattern (compile_stream.ml[191,8579+30]..[196,8894+43])
                                                      Ppat_constraint
                                                      pattern (compile_stream.ml[191,8579+31]..[195,8813+80])
                                                        Ppat_variant "App"
                                                        Some
                                                          pattern (compile_stream.ml[191,8579+31]..[195,8813+80])
                                                            Ppat_tuple
                                                            [
                                                              pattern (compile_stream.ml[192,8615+34]..[192,8615+38])
                                                                Ppat_var "_loc" (compile_stream.ml[192,8615+34]..[192,8615+38])
                                                              pattern (compile_stream.ml[192,8615+39]..[192,8615+55])
                                                                Ppat_variant "Lid"
                                                                Some
                                                                  pattern (compile_stream.ml[192,8615+39]..[192,8615+55])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (compile_stream.ml[192,8615+45]..[192,8615+46])
Ppat_any
                                                                      pattern (compile_stream.ml[192,8615+47]..[192,8615+54])
Ppat_constant Const_string("raise",None)
                                                                    ]
                                                              pattern (compile_stream.ml[192,8615+56]..[195,8813+79])
                                                                Ppat_variant "Dot"
                                                                Some
                                                                  pattern (compile_stream.ml[192,8615+56]..[195,8813+79])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (compile_stream.ml[193,8676+59]..[193,8676+60])
Ppat_any
                                                                      pattern (compile_stream.ml[193,8676+61]..[193,8676+71])
Ppat_variant "Uid"
Some
  pattern (compile_stream.ml[193,8676+61]..[193,8676+71])
    Ppat_tuple
    [
      pattern (compile_stream.ml[193,8676+67]..[193,8676+68])
        Ppat_any
      pattern (compile_stream.ml[193,8676+69]..[193,8676+70])
        Ppat_var "m" (compile_stream.ml[193,8676+69]..[193,8676+70])
    ]
                                                                      pattern (compile_stream.ml[194,8749+59]..[195,8813+78])
Ppat_variant "Uid"
Some
  pattern (compile_stream.ml[194,8749+59]..[195,8813+78])
    Ppat_tuple
    [
      pattern (compile_stream.ml[195,8813+62]..[195,8813+63])
        Ppat_any
      pattern (compile_stream.ml[195,8813+64]..[195,8813+77])
        Ppat_constant Const_string("NotConsumed",None)
    ]
                                                                    ]
                                                            ]
                                                      core_type (compile_stream.ml[196,8894+34]..[196,8894+42])
                                                        Ptyp_constr "Astf.exp" (compile_stream.ml[196,8894+34]..[196,8894+42])
                                                        []
                                                    <when>
                                                      expression (compile_stream.ml[196,8894+49]..[196,8894+60])
                                                        Pexp_apply
                                                        expression (compile_stream.ml[196,8894+51]..[196,8894+52])
                                                          Pexp_ident "=" (compile_stream.ml[196,8894+51]..[196,8894+52])
                                                        [
                                                          <label> ""
                                                            expression (compile_stream.ml[196,8894+49]..[196,8894+50])
                                                              Pexp_ident "m" (compile_stream.ml[196,8894+49]..[196,8894+50])
                                                          <label> ""
                                                            expression (compile_stream.ml[196,8894+54]..[196,8894+59])
                                                              Pexp_apply
                                                              expression (compile_stream.ml[196,8894+54]..[196,8894+56])
                                                                Pexp_ident "gm" (compile_stream.ml[196,8894+54]..[196,8894+56])
                                                              [
                                                                <label> ""
                                                                  expression (compile_stream.ml[196,8894+57]..[196,8894+59])
                                                                    Pexp_construct "()" (compile_stream.ml[196,8894+57]..[196,8894+59])
                                                                    None
                                                              ]
                                                        ]
                                                    expression (compile_stream.ml[196,8894+64]..[196,8894+68])
                                                      Pexp_construct "true" (compile_stream.ml[196,8894+64]..[196,8894+68])
                                                      None
                                                  <case>
                                                    pattern (compile_stream.ml[197,8963+30]..[197,8963+31])
                                                      Ppat_any
                                                    expression (compile_stream.ml[197,8963+35]..[197,8963+40])
                                                      Pexp_construct "false" (compile_stream.ml[197,8963+35]..[197,8963+40])
                                                      None
                                                ]
                                              [
                                                <label> ""
                                                  expression (compile_stream.ml[197,8963+43]..[197,8963+48])
                                                    Pexp_ident "ckont" (compile_stream.ml[197,8963+43]..[197,8963+48])
                                              ]
                                            expression (compile_stream.ml[199,9041+26]..[203,9244+64])
                                              Pexp_coerce
                                              expression (compile_stream.ml[199,9041+27]..[203,9244+51])
                                                Pexp_variant "LetIn"
                                                Some
                                                  expression (compile_stream.ml[200,9075+29]..[203,9244+51])
                                                    Pexp_tuple
                                                    [
                                                      expression (compile_stream.ml[200,9075+30]..[200,9075+34])
                                                        Pexp_ident "_loc" (compile_stream.ml[200,9075+30]..[200,9075+34])
                                                      expression (compile_stream.ml[200,9075+37]..[200,9075+51])
                                                        Pexp_variant "Negative"
                                                        Some
                                                          expression (compile_stream.ml[200,9075+47]..[200,9075+51])
                                                            Pexp_ident "_loc" (compile_stream.ml[200,9075+47]..[200,9075+51])
                                                      expression (compile_stream.ml[201,9129+32]..[202,9167+74])
                                                        Pexp_variant "Bind"
                                                        Some
                                                          expression (compile_stream.ml[202,9167+34]..[202,9167+74])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_stream.ml[202,9167+35]..[202,9167+39])
                                                                Pexp_ident "_loc" (compile_stream.ml[202,9167+35]..[202,9167+39])
                                                              expression (compile_stream.ml[202,9167+41]..[202,9167+56])
                                                                Pexp_coerce
                                                                expression (compile_stream.ml[202,9167+42]..[202,9167+43])
                                                                  Pexp_ident "p" (compile_stream.ml[202,9167+42]..[202,9167+43])
                                                                None
                                                                core_type (compile_stream.ml[202,9167+47]..[202,9167+55])
                                                                  Ptyp_constr "Astf.pat" (compile_stream.ml[202,9167+47]..[202,9167+55])
                                                                  []
                                                              expression (compile_stream.ml[202,9167+58]..[202,9167+73])
                                                                Pexp_coerce
                                                                expression (compile_stream.ml[202,9167+59]..[202,9167+60])
                                                                  Pexp_ident "e" (compile_stream.ml[202,9167+59]..[202,9167+60])
                                                                None
                                                                core_type (compile_stream.ml[202,9167+64]..[202,9167+72])
                                                                  Ptyp_constr "Astf.exp" (compile_stream.ml[202,9167+64]..[202,9167+72])
                                                                  []
                                                            ]
                                                      expression (compile_stream.ml[203,9244+31]..[203,9244+50])
                                                        Pexp_coerce
                                                        expression (compile_stream.ml[203,9244+32]..[203,9244+37])
                                                          Pexp_ident "skont" (compile_stream.ml[203,9244+32]..[203,9244+37])
                                                        None
                                                        core_type (compile_stream.ml[203,9244+41]..[203,9244+49])
                                                          Ptyp_constr "Astf.exp" (compile_stream.ml[203,9244+41]..[203,9244+49])
                                                          []
                                                    ]
                                              None
                                              core_type (compile_stream.ml[203,9244+55]..[203,9244+63])
                                                Ptyp_constr "Astf.exp" (compile_stream.ml[203,9244+55]..[203,9244+63])
                                                []
                                            Some
                                              expression (compile_stream.ml[205,9338+26]..[275,13035+39])
                                                Pexp_ifthenelse
                                                expression (compile_stream.ml[206,9367+28]..[209,9505+70])
                                                  Pexp_apply
                                                  expression (compile_stream.ml[206,9367+28]..[206,9367+38])
                                                    Pexp_ident "pat_eq_exp" (compile_stream.ml[206,9367+28]..[206,9367+38])
                                                  [
                                                    <label> ""
                                                      expression (compile_stream.ml[207,9406+30]..[209,9505+64])
                                                        Pexp_coerce
                                                        expression (compile_stream.ml[207,9406+31]..[209,9505+51])
                                                          Pexp_variant "App"
                                                          Some
                                                            expression (compile_stream.ml[208,9442+33]..[209,9505+51])
                                                              Pexp_tuple
                                                              [
                                                                expression (compile_stream.ml[208,9442+34]..[208,9442+38])
                                                                  Pexp_ident "_loc" (compile_stream.ml[208,9442+34]..[208,9442+38])
                                                                expression (compile_stream.ml[208,9442+41]..[208,9442+60])
                                                                  Pexp_variant "Uid"
                                                                  Some
                                                                    expression (compile_stream.ml[208,9442+46]..[208,9442+60])
                                                                      Pexp_tuple
                                                                      [
expression (compile_stream.ml[208,9442+47]..[208,9442+51])
  Pexp_ident "_loc" (compile_stream.ml[208,9442+47]..[208,9442+51])
expression (compile_stream.ml[208,9442+53]..[208,9442+59])
  Pexp_constant Const_string("Some",None)
                                                                      ]
                                                                expression (compile_stream.ml[209,9505+35]..[209,9505+50])
                                                                  Pexp_coerce
                                                                  expression (compile_stream.ml[209,9505+36]..[209,9505+37])
                                                                    Pexp_ident "p" (compile_stream.ml[209,9505+36]..[209,9505+37])
                                                                  None
                                                                  core_type (compile_stream.ml[209,9505+41]..[209,9505+49])
                                                                    Ptyp_constr "Astf.pat" (compile_stream.ml[209,9505+41]..[209,9505+49])
                                                                    []
                                                              ]
                                                        None
                                                        core_type (compile_stream.ml[209,9505+55]..[209,9505+63])
                                                          Ptyp_constr "Astf.pat" (compile_stream.ml[209,9505+55]..[209,9505+63])
                                                          []
                                                    <label> ""
                                                      expression (compile_stream.ml[209,9505+65]..[209,9505+70])
                                                        Pexp_ident "skont" (compile_stream.ml[209,9505+65]..[209,9505+70])
                                                  ]
                                                expression (compile_stream.ml[211,9607+28]..[221,10115+73])
                                                  Pexp_coerce
                                                  expression (compile_stream.ml[211,9607+29]..[221,10115+60])
                                                    Pexp_variant "Try"
                                                    Some
                                                      expression (compile_stream.ml[212,9641+31]..[221,10115+60])
                                                        Pexp_tuple
                                                        [
                                                          expression (compile_stream.ml[212,9641+32]..[212,9641+36])
                                                            Pexp_ident "_loc" (compile_stream.ml[212,9641+32]..[212,9641+36])
                                                          expression (compile_stream.ml[213,9679+34]..[215,9784+54])
                                                            Pexp_variant "App"
                                                            Some
                                                              expression (compile_stream.ml[214,9718+36]..[215,9784+54])
                                                                Pexp_tuple
                                                                [
                                                                  expression (compile_stream.ml[214,9718+37]..[214,9718+41])
                                                                    Pexp_ident "_loc" (compile_stream.ml[214,9718+37]..[214,9718+41])
                                                                  expression (compile_stream.ml[214,9718+44]..[214,9718+63])
                                                                    Pexp_variant "Uid"
                                                                    Some
                                                                      expression (compile_stream.ml[214,9718+49]..[214,9718+63])
Pexp_tuple
[
  expression (compile_stream.ml[214,9718+50]..[214,9718+54])
    Pexp_ident "_loc" (compile_stream.ml[214,9718+50]..[214,9718+54])
  expression (compile_stream.ml[214,9718+56]..[214,9718+62])
    Pexp_constant Const_string("Some",None)
]
                                                                  expression (compile_stream.ml[215,9784+38]..[215,9784+53])
                                                                    Pexp_coerce
                                                                    expression (compile_stream.ml[215,9784+39]..[215,9784+40])
                                                                      Pexp_ident "e" (compile_stream.ml[215,9784+39]..[215,9784+40])
                                                                    None
                                                                    core_type (compile_stream.ml[215,9784+44]..[215,9784+52])
                                                                      Ptyp_constr "Astf.exp" (compile_stream.ml[215,9784+44]..[215,9784+52])
                                                                      []
                                                                ]
                                                          expression (compile_stream.ml[216,9841+34]..[221,10115+58])
                                                            Pexp_variant "Case"
                                                            Some
                                                              expression (compile_stream.ml[217,9881+36]..[221,10115+58])
                                                                Pexp_tuple
                                                                [
                                                                  expression (compile_stream.ml[217,9881+37]..[217,9881+41])
                                                                    Pexp_ident "_loc" (compile_stream.ml[217,9881+37]..[217,9881+41])
                                                                  expression (compile_stream.ml[218,9924+39]..[220,10040+72])
                                                                    Pexp_variant "Dot"
                                                                    Some
                                                                      expression (compile_stream.ml[219,9968+41]..[220,10040+72])
Pexp_tuple
[
  expression (compile_stream.ml[219,9968+42]..[219,9968+46])
    Pexp_ident "_loc" (compile_stream.ml[219,9968+42]..[219,9968+46])
  expression (compile_stream.ml[219,9968+49]..[219,9968+69])
    Pexp_variant "Uid"
    Some
      expression (compile_stream.ml[219,9968+54]..[219,9968+69])
        Pexp_tuple
        [
          expression (compile_stream.ml[219,9968+55]..[219,9968+59])
            Pexp_ident "_loc" (compile_stream.ml[219,9968+55]..[219,9968+59])
          expression (compile_stream.ml[219,9968+62]..[219,9968+67])
            Pexp_apply
            expression (compile_stream.ml[219,9968+62]..[219,9968+64])
              Pexp_ident "gm" (compile_stream.ml[219,9968+62]..[219,9968+64])
            [
              <label> ""
                expression (compile_stream.ml[219,9968+65]..[219,9968+67])
                  Pexp_construct "()" (compile_stream.ml[219,9968+65]..[219,9968+67])
                  None
            ]
        ]
  expression (compile_stream.ml[220,10040+44]..[220,10040+70])
    Pexp_variant "Uid"
    Some
      expression (compile_stream.ml[220,10040+49]..[220,10040+70])
        Pexp_tuple
        [
          expression (compile_stream.ml[220,10040+50]..[220,10040+54])
            Pexp_ident "_loc" (compile_stream.ml[220,10040+50]..[220,10040+54])
          expression (compile_stream.ml[220,10040+56]..[220,10040+69])
            Pexp_constant Const_string("NotConsumed",None)
        ]
]
                                                                  expression (compile_stream.ml[221,10115+38]..[221,10115+57])
                                                                    Pexp_coerce
                                                                    expression (compile_stream.ml[221,10115+39]..[221,10115+44])
                                                                      Pexp_ident "ckont" (compile_stream.ml[221,10115+39]..[221,10115+44])
                                                                    None
                                                                    core_type (compile_stream.ml[221,10115+48]..[221,10115+56])
                                                                      Ptyp_constr "Astf.exp" (compile_stream.ml[221,10115+48]..[221,10115+56])
                                                                      []
                                                                ]
                                                        ]
                                                  None
                                                  core_type (compile_stream.ml[221,10115+64]..[221,10115+72])
                                                    Ptyp_constr "Astf.exp" (compile_stream.ml[221,10115+64]..[221,10115+72])
                                                    []
                                                Some
                                                  expression (compile_stream.ml[223,10220+28]..[275,13035+39])
                                                    Pexp_ifthenelse
                                                    expression (compile_stream.ml[224,10251+30]..[227,10414+52])
                                                      Pexp_apply
                                                      expression (compile_stream.ml[224,10251+32]..[227,10414+44])
                                                        Pexp_function
                                                        [
                                                          <case>
                                                            pattern (compile_stream.ml[225,10292+34]..[225,10292+77])
                                                              Ppat_constraint
                                                              pattern (compile_stream.ml[225,10292+35]..[225,10292+65])
                                                                Ppat_variant "App"
                                                                Some
                                                                  pattern (compile_stream.ml[225,10292+35]..[225,10292+65])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (compile_stream.ml[225,10292+41]..[225,10292+45])
Ppat_var "_loc" (compile_stream.ml[225,10292+41]..[225,10292+45])
                                                                      pattern (compile_stream.ml[225,10292+46]..[225,10292+62])
Ppat_variant "Lid"
Some
  pattern (compile_stream.ml[225,10292+46]..[225,10292+62])
    Ppat_tuple
    [
      pattern (compile_stream.ml[225,10292+52]..[225,10292+53])
        Ppat_any
      pattern (compile_stream.ml[225,10292+54]..[225,10292+61])
        Ppat_constant Const_string("raise",None)
    ]
                                                                      pattern (compile_stream.ml[225,10292+63]..[225,10292+64])
Ppat_any
                                                                    ]
                                                              core_type (compile_stream.ml[225,10292+68]..[225,10292+76])
                                                                Ptyp_constr "Astf.exp" (compile_stream.ml[225,10292+68]..[225,10292+76])
                                                                []
                                                            expression (compile_stream.ml[226,10370+39]..[226,10370+43])
                                                              Pexp_construct "true" (compile_stream.ml[226,10370+39]..[226,10370+43])
                                                              None
                                                          <case>
                                                            pattern (compile_stream.ml[227,10414+34]..[227,10414+35])
                                                              Ppat_any
                                                            expression (compile_stream.ml[227,10414+39]..[227,10414+44])
                                                              Pexp_construct "false" (compile_stream.ml[227,10414+39]..[227,10414+44])
                                                              None
                                                        ]
                                                      [
                                                        <label> ""
                                                          expression (compile_stream.ml[227,10414+47]..[227,10414+52])
                                                            Pexp_ident "ckont" (compile_stream.ml[227,10414+47]..[227,10414+52])
                                                      ]
                                                    expression (compile_stream.ml[229,10500+31]..[248,11520+69])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (compile_stream.ml[229,10500+35]..[229,10500+38])
                                                            Ppat_var "tst" (compile_stream.ml[229,10500+35]..[229,10500+38])
                                                          expression (compile_stream.ml[230,10541+33]..[242,11206+44])
                                                            Pexp_ifthenelse
                                                            expression (compile_stream.ml[230,10541+36]..[230,10541+52])
                                                              Pexp_apply
                                                              expression (compile_stream.ml[230,10541+36]..[230,10541+50])
                                                                Pexp_ident "handle_failure" (compile_stream.ml[230,10541+36]..[230,10541+50])
                                                              [
                                                                <label> ""
                                                                  expression (compile_stream.ml[230,10541+51]..[230,10541+52])
                                                                    Pexp_ident "e" (compile_stream.ml[230,10541+51]..[230,10541+52])
                                                              ]
                                                            expression (compile_stream.ml[231,10594+38]..[231,10594+39])
                                                              Pexp_ident "e" (compile_stream.ml[231,10594+38]..[231,10594+39])
                                                            Some
                                                              expression (compile_stream.ml[233,10672+35]..[242,11206+44])
                                                                Pexp_coerce
                                                                expression (compile_stream.ml[233,10672+36]..[241,11134+67])
                                                                  Pexp_variant "Try"
                                                                  Some
                                                                    expression (compile_stream.ml[234,10713+38]..[241,11134+67])
                                                                      Pexp_tuple
                                                                      [
expression (compile_stream.ml[234,10713+39]..[234,10713+43])
  Pexp_ident "_loc" (compile_stream.ml[234,10713+39]..[234,10713+43])
expression (compile_stream.ml[234,10713+45]..[234,10713+60])
  Pexp_coerce
  expression (compile_stream.ml[234,10713+46]..[234,10713+47])
    Pexp_ident "e" (compile_stream.ml[234,10713+46]..[234,10713+47])
  None
  core_type (compile_stream.ml[234,10713+51]..[234,10713+59])
    Ptyp_constr "Astf.exp" (compile_stream.ml[234,10713+51]..[234,10713+59])
    []
expression (compile_stream.ml[235,10775+41]..[241,11134+65])
  Pexp_variant "Case"
  Some
    expression (compile_stream.ml[236,10822+43]..[241,11134+65])
      Pexp_tuple
      [
        expression (compile_stream.ml[236,10822+44]..[236,10822+48])
          Pexp_ident "_loc" (compile_stream.ml[236,10822+44]..[236,10822+48])
        expression (compile_stream.ml[237,10872+46]..[240,11052+79])
          Pexp_variant "Dot"
          Some
            expression (compile_stream.ml[238,10923+48]..[240,11052+79])
              Pexp_tuple
              [
                expression (compile_stream.ml[238,10923+49]..[238,10923+53])
                  Pexp_ident "_loc" (compile_stream.ml[238,10923+49]..[238,10923+53])
                expression (compile_stream.ml[239,10978+51]..[239,10978+71])
                  Pexp_variant "Uid"
                  Some
                    expression (compile_stream.ml[239,10978+56]..[239,10978+71])
                      Pexp_tuple
                      [
                        expression (compile_stream.ml[239,10978+57]..[239,10978+61])
                          Pexp_ident "_loc" (compile_stream.ml[239,10978+57]..[239,10978+61])
                        expression (compile_stream.ml[239,10978+64]..[239,10978+69])
                          Pexp_apply
                          expression (compile_stream.ml[239,10978+64]..[239,10978+66])
                            Pexp_ident "gm" (compile_stream.ml[239,10978+64]..[239,10978+66])
                          [
                            <label> ""
                              expression (compile_stream.ml[239,10978+67]..[239,10978+69])
                                Pexp_construct "()" (compile_stream.ml[239,10978+67]..[239,10978+69])
                                None
                          ]
                      ]
                expression (compile_stream.ml[240,11052+51]..[240,11052+77])
                  Pexp_variant "Uid"
                  Some
                    expression (compile_stream.ml[240,11052+56]..[240,11052+77])
                      Pexp_tuple
                      [
                        expression (compile_stream.ml[240,11052+57]..[240,11052+61])
                          Pexp_ident "_loc" (compile_stream.ml[240,11052+57]..[240,11052+61])
                        expression (compile_stream.ml[240,11052+63]..[240,11052+76])
                          Pexp_constant Const_string("NotConsumed",None)
                      ]
              ]
        expression (compile_stream.ml[241,11134+45]..[241,11134+64])
          Pexp_coerce
          expression (compile_stream.ml[241,11134+46]..[241,11134+51])
            Pexp_ident "ckont" (compile_stream.ml[241,11134+46]..[241,11134+51])
          None
          core_type (compile_stream.ml[241,11134+55]..[241,11134+63])
            Ptyp_constr "Astf.exp" (compile_stream.ml[241,11134+55]..[241,11134+63])
            []
      ]
                                                                      ]
                                                                None
                                                                core_type (compile_stream.ml[242,11206+35]..[242,11206+43])
                                                                  Ptyp_constr "Astf.exp" (compile_stream.ml[242,11206+35]..[242,11206+43])
                                                                  []
                                                      ]
                                                      expression (compile_stream.ml[243,11254+31]..[248,11520+69])
                                                        Pexp_coerce
                                                        expression (compile_stream.ml[243,11254+32]..[248,11520+56])
                                                          Pexp_variant "LetIn"
                                                          Some
                                                            expression (compile_stream.ml[244,11293+34]..[248,11520+56])
                                                              Pexp_tuple
                                                              [
                                                                expression (compile_stream.ml[244,11293+35]..[244,11293+39])
                                                                  Pexp_ident "_loc" (compile_stream.ml[244,11293+35]..[244,11293+39])
                                                                expression (compile_stream.ml[244,11293+42]..[244,11293+56])
                                                                  Pexp_variant "Negative"
                                                                  Some
                                                                    expression (compile_stream.ml[244,11293+52]..[244,11293+56])
                                                                      Pexp_ident "_loc" (compile_stream.ml[244,11293+52]..[244,11293+56])
                                                                expression (compile_stream.ml[245,11352+37]..[247,11458+59])
                                                                  Pexp_variant "Bind"
                                                                  Some
                                                                    expression (compile_stream.ml[246,11395+39]..[247,11458+59])
                                                                      Pexp_tuple
                                                                      [
expression (compile_stream.ml[246,11395+40]..[246,11395+44])
  Pexp_ident "_loc" (compile_stream.ml[246,11395+40]..[246,11395+44])
expression (compile_stream.ml[246,11395+46]..[246,11395+61])
  Pexp_coerce
  expression (compile_stream.ml[246,11395+47]..[246,11395+48])
    Pexp_ident "p" (compile_stream.ml[246,11395+47]..[246,11395+48])
  None
  core_type (compile_stream.ml[246,11395+52]..[246,11395+60])
    Ptyp_constr "Astf.pat" (compile_stream.ml[246,11395+52]..[246,11395+60])
    []
expression (compile_stream.ml[247,11458+41]..[247,11458+58])
  Pexp_coerce
  expression (compile_stream.ml[247,11458+42]..[247,11458+45])
    Pexp_ident "tst" (compile_stream.ml[247,11458+42]..[247,11458+45])
  None
  core_type (compile_stream.ml[247,11458+49]..[247,11458+57])
    Ptyp_constr "Astf.exp" (compile_stream.ml[247,11458+49]..[247,11458+57])
    []
                                                                      ]
                                                                expression (compile_stream.ml[248,11520+36]..[248,11520+55])
                                                                  Pexp_coerce
                                                                  expression (compile_stream.ml[248,11520+37]..[248,11520+42])
                                                                    Pexp_ident "skont" (compile_stream.ml[248,11520+37]..[248,11520+42])
                                                                  None
                                                                  core_type (compile_stream.ml[248,11520+46]..[248,11520+54])
                                                                    Ptyp_constr "Astf.exp" (compile_stream.ml[248,11520+46]..[248,11520+54])
                                                                    []
                                                              ]
                                                        None
                                                        core_type (compile_stream.ml[248,11520+60]..[248,11520+68])
                                                          Ptyp_constr "Astf.exp" (compile_stream.ml[248,11520+60]..[248,11520+68])
                                                          []
                                                    Some
                                                      expression (compile_stream.ml[250,11624+30]..[275,13035+39])
                                                        Pexp_coerce
                                                        expression (compile_stream.ml[250,11624+31]..[274,12961+69])
                                                          Pexp_variant "Match"
                                                          Some
                                                            expression (compile_stream.ml[251,11662+33]..[274,12961+69])
                                                              Pexp_tuple
                                                              [
                                                                expression (compile_stream.ml[251,11662+34]..[251,11662+38])
                                                                  Pexp_ident "_loc" (compile_stream.ml[251,11662+34]..[251,11662+38])
                                                                expression (compile_stream.ml[252,11702+36]..[263,12330+69])
                                                                  Pexp_variant "Try"
                                                                  Some
                                                                    expression (compile_stream.ml[253,11743+38]..[263,12330+69])
                                                                      Pexp_tuple
                                                                      [
expression (compile_stream.ml[253,11743+39]..[253,11743+43])
  Pexp_ident "_loc" (compile_stream.ml[253,11743+39]..[253,11743+43])
expression (compile_stream.ml[254,11788+41]..[256,11907+61])
  Pexp_variant "App"
  Some
    expression (compile_stream.ml[255,11834+43]..[256,11907+61])
      Pexp_tuple
      [
        expression (compile_stream.ml[255,11834+44]..[255,11834+48])
          Pexp_ident "_loc" (compile_stream.ml[255,11834+44]..[255,11834+48])
        expression (compile_stream.ml[255,11834+51]..[255,11834+70])
          Pexp_variant "Uid"
          Some
            expression (compile_stream.ml[255,11834+56]..[255,11834+70])
              Pexp_tuple
              [
                expression (compile_stream.ml[255,11834+57]..[255,11834+61])
                  Pexp_ident "_loc" (compile_stream.ml[255,11834+57]..[255,11834+61])
                expression (compile_stream.ml[255,11834+63]..[255,11834+69])
                  Pexp_constant Const_string("Some",None)
              ]
        expression (compile_stream.ml[256,11907+45]..[256,11907+60])
          Pexp_coerce
          expression (compile_stream.ml[256,11907+46]..[256,11907+47])
            Pexp_ident "e" (compile_stream.ml[256,11907+46]..[256,11907+47])
          None
          core_type (compile_stream.ml[256,11907+51]..[256,11907+59])
            Ptyp_constr "Astf.exp" (compile_stream.ml[256,11907+51]..[256,11907+59])
            []
      ]
expression (compile_stream.ml[257,11971+41]..[263,12330+67])
  Pexp_variant "Case"
  Some
    expression (compile_stream.ml[258,12018+43]..[263,12330+67])
      Pexp_tuple
      [
        expression (compile_stream.ml[258,12018+44]..[258,12018+48])
          Pexp_ident "_loc" (compile_stream.ml[258,12018+44]..[258,12018+48])
        expression (compile_stream.ml[259,12068+46]..[262,12248+79])
          Pexp_variant "Dot"
          Some
            expression (compile_stream.ml[260,12119+48]..[262,12248+79])
              Pexp_tuple
              [
                expression (compile_stream.ml[260,12119+49]..[260,12119+53])
                  Pexp_ident "_loc" (compile_stream.ml[260,12119+49]..[260,12119+53])
                expression (compile_stream.ml[261,12174+51]..[261,12174+71])
                  Pexp_variant "Uid"
                  Some
                    expression (compile_stream.ml[261,12174+56]..[261,12174+71])
                      Pexp_tuple
                      [
                        expression (compile_stream.ml[261,12174+57]..[261,12174+61])
                          Pexp_ident "_loc" (compile_stream.ml[261,12174+57]..[261,12174+61])
                        expression (compile_stream.ml[261,12174+64]..[261,12174+69])
                          Pexp_apply
                          expression (compile_stream.ml[261,12174+64]..[261,12174+66])
                            Pexp_ident "gm" (compile_stream.ml[261,12174+64]..[261,12174+66])
                          [
                            <label> ""
                              expression (compile_stream.ml[261,12174+67]..[261,12174+69])
                                Pexp_construct "()" (compile_stream.ml[261,12174+67]..[261,12174+69])
                                None
                          ]
                      ]
                expression (compile_stream.ml[262,12248+51]..[262,12248+77])
                  Pexp_variant "Uid"
                  Some
                    expression (compile_stream.ml[262,12248+56]..[262,12248+77])
                      Pexp_tuple
                      [
                        expression (compile_stream.ml[262,12248+57]..[262,12248+61])
                          Pexp_ident "_loc" (compile_stream.ml[262,12248+57]..[262,12248+61])
                        expression (compile_stream.ml[262,12248+63]..[262,12248+76])
                          Pexp_constant Const_string("NotConsumed",None)
                      ]
              ]
        expression (compile_stream.ml[263,12330+46]..[263,12330+65])
          Pexp_variant "Uid"
          Some
            expression (compile_stream.ml[263,12330+51]..[263,12330+65])
              Pexp_tuple
              [
                expression (compile_stream.ml[263,12330+52]..[263,12330+56])
                  Pexp_ident "_loc" (compile_stream.ml[263,12330+52]..[263,12330+56])
                expression (compile_stream.ml[263,12330+58]..[263,12330+64])
                  Pexp_constant Const_string("None",None)
              ]
      ]
                                                                      ]
                                                                expression (compile_stream.ml[264,12402+36]..[274,12961+67])
                                                                  Pexp_variant "Bar"
                                                                  Some
                                                                    expression (compile_stream.ml[265,12443+38]..[274,12961+67])
                                                                      Pexp_tuple
                                                                      [
expression (compile_stream.ml[265,12443+39]..[265,12443+43])
  Pexp_ident "_loc" (compile_stream.ml[265,12443+39]..[265,12443+43])
expression (compile_stream.ml[266,12488+41]..[271,12783+65])
  Pexp_variant "Case"
  Some
    expression (compile_stream.ml[267,12535+43]..[271,12783+65])
      Pexp_tuple
      [
        expression (compile_stream.ml[267,12535+44]..[267,12535+48])
          Pexp_ident "_loc" (compile_stream.ml[267,12535+44]..[267,12535+48])
        expression (compile_stream.ml[268,12585+46]..[270,12714+66])
          Pexp_variant "App"
          Some
            expression (compile_stream.ml[269,12636+48]..[270,12714+66])
              Pexp_tuple
              [
                expression (compile_stream.ml[269,12636+49]..[269,12636+53])
                  Pexp_ident "_loc" (compile_stream.ml[269,12636+49]..[269,12636+53])
                expression (compile_stream.ml[269,12636+56]..[269,12636+75])
                  Pexp_variant "Uid"
                  Some
                    expression (compile_stream.ml[269,12636+61]..[269,12636+75])
                      Pexp_tuple
                      [
                        expression (compile_stream.ml[269,12636+62]..[269,12636+66])
                          Pexp_ident "_loc" (compile_stream.ml[269,12636+62]..[269,12636+66])
                        expression (compile_stream.ml[269,12636+68]..[269,12636+74])
                          Pexp_constant Const_string("Some",None)
                      ]
                expression (compile_stream.ml[270,12714+50]..[270,12714+65])
                  Pexp_coerce
                  expression (compile_stream.ml[270,12714+51]..[270,12714+52])
                    Pexp_ident "p" (compile_stream.ml[270,12714+51]..[270,12714+52])
                  None
                  core_type (compile_stream.ml[270,12714+56]..[270,12714+64])
                    Ptyp_constr "Astf.pat" (compile_stream.ml[270,12714+56]..[270,12714+64])
                    []
              ]
        expression (compile_stream.ml[271,12783+45]..[271,12783+64])
          Pexp_coerce
          expression (compile_stream.ml[271,12783+46]..[271,12783+51])
            Pexp_ident "skont" (compile_stream.ml[271,12783+46]..[271,12783+51])
          None
          core_type (compile_stream.ml[271,12783+55]..[271,12783+63])
            Ptyp_constr "Astf.exp" (compile_stream.ml[271,12783+55]..[271,12783+63])
            []
      ]
expression (compile_stream.ml[272,12851+41]..[274,12961+65])
  Pexp_variant "Case"
  Some
    expression (compile_stream.ml[273,12898+43]..[274,12961+65])
      Pexp_tuple
      [
        expression (compile_stream.ml[273,12898+44]..[273,12898+48])
          Pexp_ident "_loc" (compile_stream.ml[273,12898+44]..[273,12898+48])
        expression (compile_stream.ml[273,12898+51]..[273,12898+60])
          Pexp_variant "Any"
          Some
            expression (compile_stream.ml[273,12898+56]..[273,12898+60])
              Pexp_ident "_loc" (compile_stream.ml[273,12898+56]..[273,12898+60])
        expression (compile_stream.ml[274,12961+45]..[274,12961+64])
          Pexp_coerce
          expression (compile_stream.ml[274,12961+46]..[274,12961+51])
            Pexp_ident "ckont" (compile_stream.ml[274,12961+46]..[274,12961+51])
          None
          core_type (compile_stream.ml[274,12961+55]..[274,12961+63])
            Ptyp_constr "Astf.exp" (compile_stream.ml[274,12961+55]..[274,12961+63])
            []
      ]
                                                                      ]
                                                              ]
                                                        None
                                                        core_type (compile_stream.ml[275,13035+30]..[275,13035+38])
                                                          Ptyp_constr "Astf.exp" (compile_stream.ml[275,13035+30]..[275,13035+38])
                                                          []
                                <case>
                                  pattern (compile_stream.ml[276,13075+20]..[276,13075+32])
                                    Ppat_construct "Str" (compile_stream.ml[276,13075+20]..[276,13075+23])
                                    Some
                                      pattern (compile_stream.ml[276,13075+20]..[276,13075+32])
                                        Ppat_tuple
                                        [
                                          pattern (compile_stream.ml[276,13075+25]..[276,13075+29])
                                            Ppat_var "_loc" (compile_stream.ml[276,13075+25]..[276,13075+29])
                                          pattern (compile_stream.ml[276,13075+30]..[276,13075+31])
                                            Ppat_var "p" (compile_stream.ml[276,13075+30]..[276,13075+31])
                                        ]
                                  expression (compile_stream.ml[277,13111+22]..[337,16460+66])
                                    Pexp_let Rec
                                    [
                                      <def>
                                        pattern (compile_stream.ml[277,13111+30]..[277,13111+35])
                                          Ppat_var "subst" (compile_stream.ml[277,13111+30]..[277,13111+35])
                                        expression (compile_stream.ml[278,13149+24]..[310,15090+58])
                                          Pexp_function
                                          [
                                            <case>
                                              pattern (compile_stream.ml[279,13182+26]..[279,13182+38])
                                                Ppat_constraint
                                                pattern (compile_stream.ml[279,13182+27]..[279,13182+28])
                                                  Ppat_var "v" (compile_stream.ml[279,13182+27]..[279,13182+28])
                                                core_type (compile_stream.ml[279,13182+31]..[279,13182+37])
                                                  Ptyp_constr "string" (compile_stream.ml[279,13182+31]..[279,13182+37])
                                                  []
                                              expression (compile_stream.ml[280,13224+29]..[310,15090+57])
                                                Pexp_function
                                                [
                                                  <case>
                                                    pattern (compile_stream.ml[281,13262+31]..[281,13262+40])
                                                      Ppat_constraint
                                                      pattern (compile_stream.ml[281,13262+32]..[281,13262+33])
                                                        Ppat_var "e" (compile_stream.ml[281,13262+32]..[281,13262+33])
                                                      core_type (compile_stream.ml[281,13262+36]..[281,13262+39])
                                                        Ptyp_constr "exp" (compile_stream.ml[281,13262+36]..[281,13262+39])
                                                        []
                                                    expression (compile_stream.ml[282,13306+33]..[310,15090+57])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (compile_stream.ml[282,13306+37]..[282,13306+41])
                                                            Ppat_var "_loc" (compile_stream.ml[282,13306+37]..[282,13306+41])
                                                          expression (compile_stream.ml[282,13306+44]..[282,13306+52])
                                                            Pexp_apply
                                                            expression (compile_stream.ml[282,13306+44]..[282,13306+50])
                                                              Pexp_ident "loc_of" (compile_stream.ml[282,13306+44]..[282,13306+50])
                                                            [
                                                              <label> ""
                                                                expression (compile_stream.ml[282,13306+51]..[282,13306+52])
                                                                  Pexp_ident "e" (compile_stream.ml[282,13306+51]..[282,13306+52])
                                                            ]
                                                      ]
                                                      expression (compile_stream.ml[283,13362+34]..[310,15090+56])
                                                        Pexp_match
                                                        expression (compile_stream.ml[283,13362+40]..[283,13362+41])
                                                          Pexp_ident "e" (compile_stream.ml[283,13362+40]..[283,13362+41])
                                                        [
                                                          <case>
                                                            pattern (compile_stream.ml[284,13409+36]..[284,13409+62])
                                                              Ppat_constraint
                                                              pattern (compile_stream.ml[284,13409+37]..[284,13409+50])
                                                                Ppat_variant "Lid"
                                                                Some
                                                                  pattern (compile_stream.ml[284,13409+37]..[284,13409+50])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (compile_stream.ml[284,13409+43]..[284,13409+47])
Ppat_var "_loc" (compile_stream.ml[284,13409+43]..[284,13409+47])
                                                                      pattern (compile_stream.ml[284,13409+48]..[284,13409+49])
Ppat_var "x" (compile_stream.ml[284,13409+48]..[284,13409+49])
                                                                    ]
                                                              core_type (compile_stream.ml[284,13409+53]..[284,13409+61])
                                                                Ptyp_constr "Astf.exp" (compile_stream.ml[284,13409+53]..[284,13409+61])
                                                                []
                                                            expression (compile_stream.ml[285,13475+38]..[286,13552+66])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (compile_stream.ml[285,13475+42]..[285,13475+43])
                                                                    Ppat_var "x" (compile_stream.ml[285,13475+42]..[285,13475+43])
                                                                  expression (compile_stream.ml[285,13475+46]..[285,13475+73])
                                                                    Pexp_ifthenelse
                                                                    expression (compile_stream.ml[285,13475+49]..[285,13475+54])
                                                                      Pexp_apply
                                                                      expression (compile_stream.ml[285,13475+51]..[285,13475+52])
Pexp_ident "=" (compile_stream.ml[285,13475+51]..[285,13475+52])
                                                                      [
<label> ""
  expression (compile_stream.ml[285,13475+49]..[285,13475+50])
    Pexp_ident "x" (compile_stream.ml[285,13475+49]..[285,13475+50])
<label> ""
  expression (compile_stream.ml[285,13475+53]..[285,13475+54])
    Pexp_ident "v" (compile_stream.ml[285,13475+53]..[285,13475+54])
                                                                      ]
                                                                    expression (compile_stream.ml[285,13475+60]..[285,13475+66])
                                                                      Pexp_ident "strm_n" (compile_stream.ml[285,13475+60]..[285,13475+66])
                                                                    Some
                                                                      expression (compile_stream.ml[285,13475+72]..[285,13475+73])
Pexp_ident "x" (compile_stream.ml[285,13475+72]..[285,13475+73])
                                                              ]
                                                              expression (compile_stream.ml[286,13552+38]..[286,13552+66])
                                                                Pexp_coerce
                                                                expression (compile_stream.ml[286,13552+39]..[286,13552+53])
                                                                  Pexp_variant "Lid"
                                                                  Some
                                                                    expression (compile_stream.ml[286,13552+44]..[286,13552+53])
                                                                      Pexp_tuple
                                                                      [
expression (compile_stream.ml[286,13552+45]..[286,13552+49])
  Pexp_ident "_loc" (compile_stream.ml[286,13552+45]..[286,13552+49])
expression (compile_stream.ml[286,13552+51]..[286,13552+52])
  Pexp_ident "x" (compile_stream.ml[286,13552+51]..[286,13552+52])
                                                                      ]
                                                                None
                                                                core_type (compile_stream.ml[286,13552+57]..[286,13552+65])
                                                                  Ptyp_constr "Astf.exp" (compile_stream.ml[286,13552+57]..[286,13552+65])
                                                                  []
                                                          <case>
                                                            pattern (compile_stream.ml[287,13619+36]..[291,13874+67])
                                                              Ppat_or
                                                              pattern (compile_stream.ml[287,13619+36]..[290,13810+63])
                                                                Ppat_or
                                                                pattern (compile_stream.ml[287,13619+36]..[289,13746+63])
                                                                  Ppat_or
                                                                  pattern (compile_stream.ml[287,13619+36]..[288,13682+63])
                                                                    Ppat_or
                                                                    pattern (compile_stream.ml[287,13619+36]..[287,13619+62])
                                                                      Ppat_constraint
                                                                      pattern (compile_stream.ml[287,13619+37]..[287,13619+50])
Ppat_variant "Uid"
Some
  pattern (compile_stream.ml[287,13619+37]..[287,13619+50])
    Ppat_tuple
    [
      pattern (compile_stream.ml[287,13619+43]..[287,13619+47])
        Ppat_var "_loc" (compile_stream.ml[287,13619+43]..[287,13619+47])
      pattern (compile_stream.ml[287,13619+48]..[287,13619+49])
        Ppat_any
    ]
                                                                      core_type (compile_stream.ml[287,13619+53]..[287,13619+61])
Ptyp_constr "Astf.exp" (compile_stream.ml[287,13619+53]..[287,13619+61])
[]
                                                                    pattern (compile_stream.ml[288,13682+37]..[288,13682+63])
                                                                      Ppat_constraint
                                                                      pattern (compile_stream.ml[288,13682+38]..[288,13682+51])
Ppat_variant "Int"
Some
  pattern (compile_stream.ml[288,13682+38]..[288,13682+51])
    Ppat_tuple
    [
      pattern (compile_stream.ml[288,13682+44]..[288,13682+48])
        Ppat_var "_loc" (compile_stream.ml[288,13682+44]..[288,13682+48])
      pattern (compile_stream.ml[288,13682+49]..[288,13682+50])
        Ppat_any
    ]
                                                                      core_type (compile_stream.ml[288,13682+54]..[288,13682+62])
Ptyp_constr "Astf.exp" (compile_stream.ml[288,13682+54]..[288,13682+62])
[]
                                                                  pattern (compile_stream.ml[289,13746+37]..[289,13746+63])
                                                                    Ppat_constraint
                                                                    pattern (compile_stream.ml[289,13746+38]..[289,13746+51])
                                                                      Ppat_variant "Chr"
                                                                      Some
pattern (compile_stream.ml[289,13746+38]..[289,13746+51])
  Ppat_tuple
  [
    pattern (compile_stream.ml[289,13746+44]..[289,13746+48])
      Ppat_var "_loc" (compile_stream.ml[289,13746+44]..[289,13746+48])
    pattern (compile_stream.ml[289,13746+49]..[289,13746+50])
      Ppat_any
  ]
                                                                    core_type (compile_stream.ml[289,13746+54]..[289,13746+62])
                                                                      Ptyp_constr "Astf.exp" (compile_stream.ml[289,13746+54]..[289,13746+62])
                                                                      []
                                                                pattern (compile_stream.ml[290,13810+37]..[290,13810+63])
                                                                  Ppat_constraint
                                                                  pattern (compile_stream.ml[290,13810+38]..[290,13810+51])
                                                                    Ppat_variant "Str"
                                                                    Some
                                                                      pattern (compile_stream.ml[290,13810+38]..[290,13810+51])
Ppat_tuple
[
  pattern (compile_stream.ml[290,13810+44]..[290,13810+48])
    Ppat_var "_loc" (compile_stream.ml[290,13810+44]..[290,13810+48])
  pattern (compile_stream.ml[290,13810+49]..[290,13810+50])
    Ppat_any
]
                                                                  core_type (compile_stream.ml[290,13810+54]..[290,13810+62])
                                                                    Ptyp_constr "Astf.exp" (compile_stream.ml[290,13810+54]..[290,13810+62])
                                                                    []
                                                              pattern (compile_stream.ml[291,13874+37]..[291,13874+67])
                                                                Ppat_constraint
                                                                pattern (compile_stream.ml[291,13874+38]..[291,13874+55])
                                                                  Ppat_variant "Field"
                                                                  Some
                                                                    pattern (compile_stream.ml[291,13874+38]..[291,13874+55])
                                                                      Ppat_tuple
                                                                      [
pattern (compile_stream.ml[291,13874+46]..[291,13874+50])
  Ppat_var "_loc" (compile_stream.ml[291,13874+46]..[291,13874+50])
pattern (compile_stream.ml[291,13874+51]..[291,13874+52])
  Ppat_any
pattern (compile_stream.ml[291,13874+53]..[291,13874+54])
  Ppat_any
                                                                      ]
                                                                core_type (compile_stream.ml[291,13874+58]..[291,13874+66])
                                                                  Ptyp_constr "Astf.exp" (compile_stream.ml[291,13874+58]..[291,13874+66])
                                                                  []
                                                            expression (compile_stream.ml[291,13874+71]..[291,13874+72])
                                                              Pexp_ident "e" (compile_stream.ml[291,13874+71]..[291,13874+72])
                                                          <case>
                                                            pattern (compile_stream.ml[292,13947+36]..[292,13947+70])
                                                              Ppat_constraint
                                                              pattern (compile_stream.ml[292,13947+37]..[292,13947+58])
                                                                Ppat_variant "LetIn"
                                                                Some
                                                                  pattern (compile_stream.ml[292,13947+37]..[292,13947+58])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (compile_stream.ml[292,13947+45]..[292,13947+49])
Ppat_var "_loc" (compile_stream.ml[292,13947+45]..[292,13947+49])
                                                                      pattern (compile_stream.ml[292,13947+50]..[292,13947+52])
Ppat_var "rf" (compile_stream.ml[292,13947+50]..[292,13947+52])
                                                                      pattern (compile_stream.ml[292,13947+53]..[292,13947+55])
Ppat_var "bi" (compile_stream.ml[292,13947+53]..[292,13947+55])
                                                                      pattern (compile_stream.ml[292,13947+56]..[292,13947+57])
Ppat_var "e" (compile_stream.ml[292,13947+56]..[292,13947+57])
                                                                    ]
                                                              core_type (compile_stream.ml[292,13947+61]..[292,13947+69])
                                                                Ptyp_constr "Astf.exp" (compile_stream.ml[292,13947+61]..[292,13947+69])
                                                                []
                                                            expression (compile_stream.ml[293,14021+38]..[297,14281+47])
                                                              Pexp_coerce
                                                              expression (compile_stream.ml[293,14021+39]..[296,14209+67])
                                                                Pexp_variant "LetIn"
                                                                Some
                                                                  expression (compile_stream.ml[294,14067+41]..[296,14209+67])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (compile_stream.ml[294,14067+42]..[294,14067+46])
Pexp_ident "_loc" (compile_stream.ml[294,14067+42]..[294,14067+46])
                                                                      expression (compile_stream.ml[294,14067+48]..[294,14067+65])
Pexp_coerce
expression (compile_stream.ml[294,14067+49]..[294,14067+51])
  Pexp_ident "rf" (compile_stream.ml[294,14067+49]..[294,14067+51])
None
core_type (compile_stream.ml[294,14067+55]..[294,14067+64])
  Ptyp_constr "Astf.flag" (compile_stream.ml[294,14067+55]..[294,14067+64])
  []
                                                                      expression (compile_stream.ml[295,14134+43]..[295,14134+73])
Pexp_coerce
expression (compile_stream.ml[295,14134+44]..[295,14134+59])
  Pexp_apply
  expression (compile_stream.ml[295,14134+44]..[295,14134+54])
    Pexp_ident "subst_bind" (compile_stream.ml[295,14134+44]..[295,14134+54])
  [
    <label> ""
      expression (compile_stream.ml[295,14134+55]..[295,14134+56])
        Pexp_ident "v" (compile_stream.ml[295,14134+55]..[295,14134+56])
    <label> ""
      expression (compile_stream.ml[295,14134+57]..[295,14134+59])
        Pexp_ident "bi" (compile_stream.ml[295,14134+57]..[295,14134+59])
  ]
None
core_type (compile_stream.ml[295,14134+63]..[295,14134+72])
  Ptyp_constr "Astf.bind" (compile_stream.ml[295,14134+63]..[295,14134+72])
  []
                                                                      expression (compile_stream.ml[296,14209+43]..[296,14209+66])
Pexp_coerce
expression (compile_stream.ml[296,14209+44]..[296,14209+53])
  Pexp_apply
  expression (compile_stream.ml[296,14209+44]..[296,14209+49])
    Pexp_ident "subst" (compile_stream.ml[296,14209+44]..[296,14209+49])
  [
    <label> ""
      expression (compile_stream.ml[296,14209+50]..[296,14209+51])
        Pexp_ident "v" (compile_stream.ml[296,14209+50]..[296,14209+51])
    <label> ""
      expression (compile_stream.ml[296,14209+52]..[296,14209+53])
        Pexp_ident "e" (compile_stream.ml[296,14209+52]..[296,14209+53])
  ]
None
core_type (compile_stream.ml[296,14209+57]..[296,14209+65])
  Ptyp_constr "Astf.exp" (compile_stream.ml[296,14209+57]..[296,14209+65])
  []
                                                                    ]
                                                              None
                                                              core_type (compile_stream.ml[297,14281+38]..[297,14281+46])
                                                                Ptyp_constr "Astf.exp" (compile_stream.ml[297,14281+38]..[297,14281+46])
                                                                []
                                                          <case>
                                                            pattern (compile_stream.ml[298,14329+36]..[298,14329+66])
                                                              Ppat_constraint
                                                              pattern (compile_stream.ml[298,14329+37]..[298,14329+54])
                                                                Ppat_variant "App"
                                                                Some
                                                                  pattern (compile_stream.ml[298,14329+37]..[298,14329+54])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (compile_stream.ml[298,14329+43]..[298,14329+47])
Ppat_var "_loc" (compile_stream.ml[298,14329+43]..[298,14329+47])
                                                                      pattern (compile_stream.ml[298,14329+48]..[298,14329+50])
Ppat_var "e1" (compile_stream.ml[298,14329+48]..[298,14329+50])
                                                                      pattern (compile_stream.ml[298,14329+51]..[298,14329+53])
Ppat_var "e2" (compile_stream.ml[298,14329+51]..[298,14329+53])
                                                                    ]
                                                              core_type (compile_stream.ml[298,14329+57]..[298,14329+65])
                                                                Ptyp_constr "Astf.exp" (compile_stream.ml[298,14329+57]..[298,14329+65])
                                                                []
                                                            expression (compile_stream.ml[299,14399+38]..[302,14590+47])
                                                              Pexp_coerce
                                                              expression (compile_stream.ml[299,14399+39]..[301,14517+68])
                                                                Pexp_variant "App"
                                                                Some
                                                                  expression (compile_stream.ml[300,14443+41]..[301,14517+68])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (compile_stream.ml[300,14443+42]..[300,14443+46])
Pexp_ident "_loc" (compile_stream.ml[300,14443+42]..[300,14443+46])
                                                                      expression (compile_stream.ml[300,14443+48]..[300,14443+72])
Pexp_coerce
expression (compile_stream.ml[300,14443+49]..[300,14443+59])
  Pexp_apply
  expression (compile_stream.ml[300,14443+49]..[300,14443+54])
    Pexp_ident "subst" (compile_stream.ml[300,14443+49]..[300,14443+54])
  [
    <label> ""
      expression (compile_stream.ml[300,14443+55]..[300,14443+56])
        Pexp_ident "v" (compile_stream.ml[300,14443+55]..[300,14443+56])
    <label> ""
      expression (compile_stream.ml[300,14443+57]..[300,14443+59])
        Pexp_ident "e1" (compile_stream.ml[300,14443+57]..[300,14443+59])
  ]
None
core_type (compile_stream.ml[300,14443+63]..[300,14443+71])
  Ptyp_constr "Astf.exp" (compile_stream.ml[300,14443+63]..[300,14443+71])
  []
                                                                      expression (compile_stream.ml[301,14517+43]..[301,14517+67])
Pexp_coerce
expression (compile_stream.ml[301,14517+44]..[301,14517+54])
  Pexp_apply
  expression (compile_stream.ml[301,14517+44]..[301,14517+49])
    Pexp_ident "subst" (compile_stream.ml[301,14517+44]..[301,14517+49])
  [
    <label> ""
      expression (compile_stream.ml[301,14517+50]..[301,14517+51])
        Pexp_ident "v" (compile_stream.ml[301,14517+50]..[301,14517+51])
    <label> ""
      expression (compile_stream.ml[301,14517+52]..[301,14517+54])
        Pexp_ident "e2" (compile_stream.ml[301,14517+52]..[301,14517+54])
  ]
None
core_type (compile_stream.ml[301,14517+58]..[301,14517+66])
  Ptyp_constr "Astf.exp" (compile_stream.ml[301,14517+58]..[301,14517+66])
  []
                                                                    ]
                                                              None
                                                              core_type (compile_stream.ml[302,14590+38]..[302,14590+46])
                                                                Ptyp_constr "Astf.exp" (compile_stream.ml[302,14590+38]..[302,14590+46])
                                                                []
                                                          <case>
                                                            pattern (compile_stream.ml[303,14638+36]..[303,14638+62])
                                                              Ppat_constraint
                                                              pattern (compile_stream.ml[303,14638+37]..[303,14638+50])
                                                                Ppat_variant "Par"
                                                                Some
                                                                  pattern (compile_stream.ml[303,14638+37]..[303,14638+50])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (compile_stream.ml[303,14638+43]..[303,14638+47])
Ppat_var "_loc" (compile_stream.ml[303,14638+43]..[303,14638+47])
                                                                      pattern (compile_stream.ml[303,14638+48]..[303,14638+49])
Ppat_var "e" (compile_stream.ml[303,14638+48]..[303,14638+49])
                                                                    ]
                                                              core_type (compile_stream.ml[303,14638+53]..[303,14638+61])
                                                                Ptyp_constr "Astf.exp" (compile_stream.ml[303,14638+53]..[303,14638+61])
                                                                []
                                                            expression (compile_stream.ml[304,14704+38]..[304,14704+76])
                                                              Pexp_coerce
                                                              expression (compile_stream.ml[304,14704+39]..[304,14704+63])
                                                                Pexp_variant "Par"
                                                                Some
                                                                  expression (compile_stream.ml[304,14704+44]..[304,14704+63])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (compile_stream.ml[304,14704+45]..[304,14704+49])
Pexp_ident "_loc" (compile_stream.ml[304,14704+45]..[304,14704+49])
                                                                      expression (compile_stream.ml[304,14704+52]..[304,14704+61])
Pexp_apply
expression (compile_stream.ml[304,14704+52]..[304,14704+57])
  Pexp_ident "subst" (compile_stream.ml[304,14704+52]..[304,14704+57])
[
  <label> ""
    expression (compile_stream.ml[304,14704+58]..[304,14704+59])
      Pexp_ident "v" (compile_stream.ml[304,14704+58]..[304,14704+59])
  <label> ""
    expression (compile_stream.ml[304,14704+60]..[304,14704+61])
      Pexp_ident "e" (compile_stream.ml[304,14704+60]..[304,14704+61])
]
                                                                    ]
                                                              None
                                                              core_type (compile_stream.ml[304,14704+67]..[304,14704+75])
                                                                Ptyp_constr "Astf.exp" (compile_stream.ml[304,14704+67]..[304,14704+75])
                                                                []
                                                          <case>
                                                            pattern (compile_stream.ml[305,14781+36]..[305,14781+66])
                                                              Ppat_constraint
                                                              pattern (compile_stream.ml[305,14781+37]..[305,14781+54])
                                                                Ppat_variant "Com"
                                                                Some
                                                                  pattern (compile_stream.ml[305,14781+37]..[305,14781+54])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (compile_stream.ml[305,14781+43]..[305,14781+47])
Ppat_var "_loc" (compile_stream.ml[305,14781+43]..[305,14781+47])
                                                                      pattern (compile_stream.ml[305,14781+48]..[305,14781+50])
Ppat_var "e1" (compile_stream.ml[305,14781+48]..[305,14781+50])
                                                                      pattern (compile_stream.ml[305,14781+51]..[305,14781+53])
Ppat_var "e2" (compile_stream.ml[305,14781+51]..[305,14781+53])
                                                                    ]
                                                              core_type (compile_stream.ml[305,14781+57]..[305,14781+65])
                                                                Ptyp_constr "Astf.exp" (compile_stream.ml[305,14781+57]..[305,14781+65])
                                                                []
                                                            expression (compile_stream.ml[306,14851+38]..[309,15042+47])
                                                              Pexp_coerce
                                                              expression (compile_stream.ml[306,14851+39]..[308,14969+68])
                                                                Pexp_variant "Com"
                                                                Some
                                                                  expression (compile_stream.ml[307,14895+41]..[308,14969+68])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (compile_stream.ml[307,14895+42]..[307,14895+46])
Pexp_ident "_loc" (compile_stream.ml[307,14895+42]..[307,14895+46])
                                                                      expression (compile_stream.ml[307,14895+48]..[307,14895+72])
Pexp_coerce
expression (compile_stream.ml[307,14895+49]..[307,14895+59])
  Pexp_apply
  expression (compile_stream.ml[307,14895+49]..[307,14895+54])
    Pexp_ident "subst" (compile_stream.ml[307,14895+49]..[307,14895+54])
  [
    <label> ""
      expression (compile_stream.ml[307,14895+55]..[307,14895+56])
        Pexp_ident "v" (compile_stream.ml[307,14895+55]..[307,14895+56])
    <label> ""
      expression (compile_stream.ml[307,14895+57]..[307,14895+59])
        Pexp_ident "e1" (compile_stream.ml[307,14895+57]..[307,14895+59])
  ]
None
core_type (compile_stream.ml[307,14895+63]..[307,14895+71])
  Ptyp_constr "Astf.exp" (compile_stream.ml[307,14895+63]..[307,14895+71])
  []
                                                                      expression (compile_stream.ml[308,14969+43]..[308,14969+67])
Pexp_coerce
expression (compile_stream.ml[308,14969+44]..[308,14969+54])
  Pexp_apply
  expression (compile_stream.ml[308,14969+44]..[308,14969+49])
    Pexp_ident "subst" (compile_stream.ml[308,14969+44]..[308,14969+49])
  [
    <label> ""
      expression (compile_stream.ml[308,14969+50]..[308,14969+51])
        Pexp_ident "v" (compile_stream.ml[308,14969+50]..[308,14969+51])
    <label> ""
      expression (compile_stream.ml[308,14969+52]..[308,14969+54])
        Pexp_ident "e2" (compile_stream.ml[308,14969+52]..[308,14969+54])
  ]
None
core_type (compile_stream.ml[308,14969+58]..[308,14969+66])
  Ptyp_constr "Astf.exp" (compile_stream.ml[308,14969+58]..[308,14969+66])
  []
                                                                    ]
                                                              None
                                                              core_type (compile_stream.ml[309,15042+38]..[309,15042+46])
                                                                Ptyp_constr "Astf.exp" (compile_stream.ml[309,15042+38]..[309,15042+46])
                                                                []
                                                          <case>
                                                            pattern (compile_stream.ml[310,15090+36]..[310,15090+37])
                                                              Ppat_any
                                                            expression (compile_stream.ml[310,15090+41]..[310,15090+56])
                                                              Pexp_apply
                                                              expression (compile_stream.ml[310,15090+41]..[310,15090+46])
                                                                Pexp_ident "raise" (compile_stream.ml[310,15090+41]..[310,15090+46])
                                                              [
                                                                <label> ""
                                                                  expression (compile_stream.ml[310,15090+47]..[310,15090+56])
                                                                    Pexp_construct "Not_found" (compile_stream.ml[310,15090+47]..[310,15090+56])
                                                                    None
                                                              ]
                                                        ]
                                                ]
                                          ]
                                      <def>
                                        pattern (compile_stream.ml[311,15149+26]..[311,15149+36])
                                          Ppat_var "subst_bind" (compile_stream.ml[311,15149+26]..[311,15149+36])
                                        expression (compile_stream.ml[312,15188+24]..[325,15903+52])
                                          Pexp_function
                                          [
                                            <case>
                                              pattern (compile_stream.ml[313,15221+26]..[313,15221+27])
                                                Ppat_var "v" (compile_stream.ml[313,15221+26]..[313,15221+27])
                                              expression (compile_stream.ml[314,15252+29]..[325,15903+51])
                                                Pexp_function
                                                [
                                                  <case>
                                                    pattern (compile_stream.ml[315,15290+31]..[315,15290+62])
                                                      Ppat_constraint
                                                      pattern (compile_stream.ml[315,15290+32]..[315,15290+49])
                                                        Ppat_variant "And"
                                                        Some
                                                          pattern (compile_stream.ml[315,15290+32]..[315,15290+49])
                                                            Ppat_tuple
                                                            [
                                                              pattern (compile_stream.ml[315,15290+38]..[315,15290+42])
                                                                Ppat_var "_loc" (compile_stream.ml[315,15290+38]..[315,15290+42])
                                                              pattern (compile_stream.ml[315,15290+43]..[315,15290+45])
                                                                Ppat_var "b1" (compile_stream.ml[315,15290+43]..[315,15290+45])
                                                              pattern (compile_stream.ml[315,15290+46]..[315,15290+48])
                                                                Ppat_var "b2" (compile_stream.ml[315,15290+46]..[315,15290+48])
                                                            ]
                                                      core_type (compile_stream.ml[315,15290+52]..[315,15290+61])
                                                        Ptyp_constr "Astf.bind" (compile_stream.ml[315,15290+52]..[315,15290+61])
                                                        []
                                                    expression (compile_stream.ml[316,15356+33]..[319,15544+43])
                                                      Pexp_coerce
                                                      expression (compile_stream.ml[316,15356+34]..[318,15470+69])
                                                        Pexp_variant "And"
                                                        Some
                                                          expression (compile_stream.ml[317,15395+36]..[318,15470+69])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_stream.ml[317,15395+37]..[317,15395+41])
                                                                Pexp_ident "_loc" (compile_stream.ml[317,15395+37]..[317,15395+41])
                                                              expression (compile_stream.ml[317,15395+43]..[317,15395+73])
                                                                Pexp_coerce
                                                                expression (compile_stream.ml[317,15395+44]..[317,15395+59])
                                                                  Pexp_apply
                                                                  expression (compile_stream.ml[317,15395+44]..[317,15395+54])
                                                                    Pexp_ident "subst_bind" (compile_stream.ml[317,15395+44]..[317,15395+54])
                                                                  [
                                                                    <label> ""
                                                                      expression (compile_stream.ml[317,15395+55]..[317,15395+56])
Pexp_ident "v" (compile_stream.ml[317,15395+55]..[317,15395+56])
                                                                    <label> ""
                                                                      expression (compile_stream.ml[317,15395+57]..[317,15395+59])
Pexp_ident "b1" (compile_stream.ml[317,15395+57]..[317,15395+59])
                                                                  ]
                                                                None
                                                                core_type (compile_stream.ml[317,15395+63]..[317,15395+72])
                                                                  Ptyp_constr "Astf.bind" (compile_stream.ml[317,15395+63]..[317,15395+72])
                                                                  []
                                                              expression (compile_stream.ml[318,15470+38]..[318,15470+68])
                                                                Pexp_coerce
                                                                expression (compile_stream.ml[318,15470+39]..[318,15470+54])
                                                                  Pexp_apply
                                                                  expression (compile_stream.ml[318,15470+39]..[318,15470+49])
                                                                    Pexp_ident "subst_bind" (compile_stream.ml[318,15470+39]..[318,15470+49])
                                                                  [
                                                                    <label> ""
                                                                      expression (compile_stream.ml[318,15470+50]..[318,15470+51])
Pexp_ident "v" (compile_stream.ml[318,15470+50]..[318,15470+51])
                                                                    <label> ""
                                                                      expression (compile_stream.ml[318,15470+52]..[318,15470+54])
Pexp_ident "b2" (compile_stream.ml[318,15470+52]..[318,15470+54])
                                                                  ]
                                                                None
                                                                core_type (compile_stream.ml[318,15470+58]..[318,15470+67])
                                                                  Ptyp_constr "Astf.bind" (compile_stream.ml[318,15470+58]..[318,15470+67])
                                                                  []
                                                            ]
                                                      None
                                                      core_type (compile_stream.ml[319,15544+33]..[319,15544+42])
                                                        Ptyp_constr "Astf.bind" (compile_stream.ml[319,15544+33]..[319,15544+42])
                                                        []
                                                  <case>
                                                    pattern (compile_stream.ml[320,15588+31]..[320,15588+71])
                                                      Ppat_constraint
                                                      pattern (compile_stream.ml[320,15588+32]..[320,15588+58])
                                                        Ppat_variant "Bind"
                                                        Some
                                                          pattern (compile_stream.ml[320,15588+32]..[320,15588+58])
                                                            Ppat_tuple
                                                            [
                                                              pattern (compile_stream.ml[320,15588+39]..[320,15588+43])
                                                                Ppat_var "_loc" (compile_stream.ml[320,15588+39]..[320,15588+43])
                                                              pattern (compile_stream.ml[320,15588+44]..[320,15588+55])
                                                                Ppat_variant "Lid"
                                                                Some
                                                                  pattern (compile_stream.ml[320,15588+44]..[320,15588+55])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (compile_stream.ml[320,15588+50]..[320,15588+51])
Ppat_any
                                                                      pattern (compile_stream.ml[320,15588+52]..[320,15588+54])
Ppat_var "v'" (compile_stream.ml[320,15588+52]..[320,15588+54])
                                                                    ]
                                                              pattern (compile_stream.ml[320,15588+56]..[320,15588+57])
                                                                Ppat_var "e" (compile_stream.ml[320,15588+56]..[320,15588+57])
                                                            ]
                                                      core_type (compile_stream.ml[320,15588+61]..[320,15588+70])
                                                        Ptyp_constr "Astf.bind" (compile_stream.ml[320,15588+61]..[320,15588+70])
                                                        []
                                                    expression (compile_stream.ml[321,15663+33]..[324,15840+62])
                                                      Pexp_coerce
                                                      expression (compile_stream.ml[321,15663+34]..[324,15840+48])
                                                        Pexp_variant "Bind"
                                                        Some
                                                          expression (compile_stream.ml[322,15703+36]..[324,15840+48])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_stream.ml[322,15703+37]..[322,15703+41])
                                                                Pexp_ident "_loc" (compile_stream.ml[322,15703+37]..[322,15703+41])
                                                              expression (compile_stream.ml[322,15703+44]..[322,15703+59])
                                                                Pexp_variant "Lid"
                                                                Some
                                                                  expression (compile_stream.ml[322,15703+49]..[322,15703+59])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (compile_stream.ml[322,15703+50]..[322,15703+54])
Pexp_ident "_loc" (compile_stream.ml[322,15703+50]..[322,15703+54])
                                                                      expression (compile_stream.ml[322,15703+56]..[322,15703+58])
Pexp_ident "v'" (compile_stream.ml[322,15703+56]..[322,15703+58])
                                                                    ]
                                                              expression (compile_stream.ml[323,15765+38]..[324,15840+47])
                                                                Pexp_coerce
                                                                expression (compile_stream.ml[323,15765+39]..[323,15765+70])
                                                                  Pexp_ifthenelse
                                                                  expression (compile_stream.ml[323,15765+42]..[323,15765+48])
                                                                    Pexp_apply
                                                                    expression (compile_stream.ml[323,15765+44]..[323,15765+45])
                                                                      Pexp_ident "=" (compile_stream.ml[323,15765+44]..[323,15765+45])
                                                                    [
                                                                      <label> ""
expression (compile_stream.ml[323,15765+42]..[323,15765+43])
  Pexp_ident "v" (compile_stream.ml[323,15765+42]..[323,15765+43])
                                                                      <label> ""
expression (compile_stream.ml[323,15765+46]..[323,15765+48])
  Pexp_ident "v'" (compile_stream.ml[323,15765+46]..[323,15765+48])
                                                                    ]
                                                                  expression (compile_stream.ml[323,15765+54]..[323,15765+55])
                                                                    Pexp_ident "e" (compile_stream.ml[323,15765+54]..[323,15765+55])
                                                                  Some
                                                                    expression (compile_stream.ml[323,15765+61]..[323,15765+70])
                                                                      Pexp_apply
                                                                      expression (compile_stream.ml[323,15765+61]..[323,15765+66])
Pexp_ident "subst" (compile_stream.ml[323,15765+61]..[323,15765+66])
                                                                      [
<label> ""
  expression (compile_stream.ml[323,15765+67]..[323,15765+68])
    Pexp_ident "v" (compile_stream.ml[323,15765+67]..[323,15765+68])
<label> ""
  expression (compile_stream.ml[323,15765+69]..[323,15765+70])
    Pexp_ident "e" (compile_stream.ml[323,15765+69]..[323,15765+70])
                                                                      ]
                                                                None
                                                                core_type (compile_stream.ml[324,15840+38]..[324,15840+46])
                                                                  Ptyp_constr "Astf.exp" (compile_stream.ml[324,15840+38]..[324,15840+46])
                                                                  []
                                                            ]
                                                      None
                                                      core_type (compile_stream.ml[324,15840+52]..[324,15840+61])
                                                        Ptyp_constr "Astf.bind" (compile_stream.ml[324,15840+52]..[324,15840+61])
                                                        []
                                                  <case>
                                                    pattern (compile_stream.ml[325,15903+31]..[325,15903+32])
                                                      Ppat_any
                                                    expression (compile_stream.ml[325,15903+36]..[325,15903+51])
                                                      Pexp_apply
                                                      expression (compile_stream.ml[325,15903+36]..[325,15903+41])
                                                        Pexp_ident "raise" (compile_stream.ml[325,15903+36]..[325,15903+41])
                                                      [
                                                        <label> ""
                                                          expression (compile_stream.ml[325,15903+42]..[325,15903+51])
                                                            Pexp_construct "Not_found" (compile_stream.ml[325,15903+42]..[325,15903+51])
                                                            None
                                                      ]
                                                ]
                                          ]
                                    ]
                                    expression (compile_stream.ml[326,15959+23]..[337,16460+65])
                                      Pexp_try
                                      expression (compile_stream.ml[327,15986+25]..[329,16095+47])
                                        Pexp_match
                                        expression (compile_stream.ml[327,15986+31]..[327,15986+32])
                                          Pexp_ident "p" (compile_stream.ml[327,15986+31]..[327,15986+32])
                                        [
                                          <case>
                                            pattern (compile_stream.ml[328,16024+27]..[328,16024+53])
                                              Ppat_constraint
                                              pattern (compile_stream.ml[328,16024+28]..[328,16024+41])
                                                Ppat_variant "Lid"
                                                Some
                                                  pattern (compile_stream.ml[328,16024+28]..[328,16024+41])
                                                    Ppat_tuple
                                                    [
                                                      pattern (compile_stream.ml[328,16024+34]..[328,16024+38])
                                                        Ppat_var "_loc" (compile_stream.ml[328,16024+34]..[328,16024+38])
                                                      pattern (compile_stream.ml[328,16024+39]..[328,16024+40])
                                                        Ppat_var "v" (compile_stream.ml[328,16024+39]..[328,16024+40])
                                                    ]
                                              core_type (compile_stream.ml[328,16024+44]..[328,16024+52])
                                                Ptyp_constr "Astf.pat" (compile_stream.ml[328,16024+44]..[328,16024+52])
                                                []
                                            expression (compile_stream.ml[328,16024+57]..[328,16024+70])
                                              Pexp_apply
                                              expression (compile_stream.ml[328,16024+57]..[328,16024+62])
                                                Pexp_ident "subst" (compile_stream.ml[328,16024+57]..[328,16024+62])
                                              [
                                                <label> ""
                                                  expression (compile_stream.ml[328,16024+63]..[328,16024+64])
                                                    Pexp_ident "v" (compile_stream.ml[328,16024+63]..[328,16024+64])
                                                <label> ""
                                                  expression (compile_stream.ml[328,16024+65]..[328,16024+70])
                                                    Pexp_ident "skont" (compile_stream.ml[328,16024+65]..[328,16024+70])
                                              ]
                                          <case>
                                            pattern (compile_stream.ml[329,16095+27]..[329,16095+28])
                                              Ppat_any
                                            expression (compile_stream.ml[329,16095+32]..[329,16095+47])
                                              Pexp_apply
                                              expression (compile_stream.ml[329,16095+32]..[329,16095+37])
                                                Pexp_ident "raise" (compile_stream.ml[329,16095+32]..[329,16095+37])
                                              [
                                                <label> ""
                                                  expression (compile_stream.ml[329,16095+38]..[329,16095+47])
                                                    Pexp_construct "Not_found" (compile_stream.ml[329,16095+38]..[329,16095+47])
                                                    None
                                              ]
                                        ]
                                      [
                                        <case>
                                          pattern (compile_stream.ml[331,16171+25]..[331,16171+34])
                                            Ppat_construct "Not_found" (compile_stream.ml[331,16171+25]..[331,16171+34])
                                            None
                                          expression (compile_stream.ml[332,16210+27]..[337,16460+65])
                                            Pexp_coerce
                                            expression (compile_stream.ml[332,16210+28]..[337,16460+52])
                                              Pexp_variant "LetIn"
                                              Some
                                                expression (compile_stream.ml[333,16245+30]..[337,16460+52])
                                                  Pexp_tuple
                                                  [
                                                    expression (compile_stream.ml[333,16245+31]..[333,16245+35])
                                                      Pexp_ident "_loc" (compile_stream.ml[333,16245+31]..[333,16245+35])
                                                    expression (compile_stream.ml[333,16245+38]..[333,16245+52])
                                                      Pexp_variant "Negative"
                                                      Some
                                                        expression (compile_stream.ml[333,16245+48]..[333,16245+52])
                                                          Pexp_ident "_loc" (compile_stream.ml[333,16245+48]..[333,16245+52])
                                                    expression (compile_stream.ml[334,16300+33]..[336,16398+59])
                                                      Pexp_variant "Bind"
                                                      Some
                                                        expression (compile_stream.ml[335,16339+35]..[336,16398+59])
                                                          Pexp_tuple
                                                          [
                                                            expression (compile_stream.ml[335,16339+36]..[335,16339+40])
                                                              Pexp_ident "_loc" (compile_stream.ml[335,16339+36]..[335,16339+40])
                                                            expression (compile_stream.ml[335,16339+42]..[335,16339+57])
                                                              Pexp_coerce
                                                              expression (compile_stream.ml[335,16339+43]..[335,16339+44])
                                                                Pexp_ident "p" (compile_stream.ml[335,16339+43]..[335,16339+44])
                                                              None
                                                              core_type (compile_stream.ml[335,16339+48]..[335,16339+56])
                                                                Ptyp_constr "Astf.pat" (compile_stream.ml[335,16339+48]..[335,16339+56])
                                                                []
                                                            expression (compile_stream.ml[336,16398+38]..[336,16398+57])
                                                              Pexp_variant "Lid"
                                                              Some
                                                                expression (compile_stream.ml[336,16398+43]..[336,16398+57])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (compile_stream.ml[336,16398+44]..[336,16398+48])
                                                                      Pexp_ident "_loc" (compile_stream.ml[336,16398+44]..[336,16398+48])
                                                                    expression (compile_stream.ml[336,16398+50]..[336,16398+56])
                                                                      Pexp_ident "strm_n" (compile_stream.ml[336,16398+50]..[336,16398+56])
                                                                  ]
                                                          ]
                                                    expression (compile_stream.ml[337,16460+32]..[337,16460+51])
                                                      Pexp_coerce
                                                      expression (compile_stream.ml[337,16460+33]..[337,16460+38])
                                                        Pexp_ident "skont" (compile_stream.ml[337,16460+33]..[337,16460+38])
                                                      None
                                                      core_type (compile_stream.ml[337,16460+42]..[337,16460+50])
                                                        Ptyp_constr "Astf.exp" (compile_stream.ml[337,16460+42]..[337,16460+50])
                                                        []
                                                  ]
                                            None
                                            core_type (compile_stream.ml[337,16460+56]..[337,16460+64])
                                              Ptyp_constr "Astf.exp" (compile_stream.ml[337,16460+56]..[337,16460+64])
                                              []
                                      ]
                              ]
                            core_type (compile_stream.ml[338,16531+16]..[338,16531+19])
                              Ptyp_constr "exp" (compile_stream.ml[338,16531+16]..[338,16531+19])
                              []
                      ]
                ]
          ]
    ]
  structure_item (compile_stream.ml[339,16554+0]..[381,18403+64])
    Pstr_value Rec
    [
      <def>
        pattern (compile_stream.ml[339,16554+8]..[339,16554+22])
          Ppat_var "stream_pattern" (compile_stream.ml[339,16554+8]..[339,16554+22])
        expression (compile_stream.ml[340,16579+2]..[381,18403+64])
          Pexp_function
          [
            <case>
              pattern (compile_stream.ml[341,16590+4]..[341,16590+8])
                Ppat_var "_loc" (compile_stream.ml[341,16590+4]..[341,16590+8])
              expression (compile_stream.ml[342,16602+7]..[381,18403+63])
                Pexp_function
                [
                  <case>
                    pattern (compile_stream.ml[343,16618+9]..[343,16618+18])
                      Ppat_tuple
                      [
                        pattern (compile_stream.ml[343,16618+10]..[343,16618+11])
                          Ppat_var "x" (compile_stream.ml[343,16618+10]..[343,16618+11])
                        pattern (compile_stream.ml[343,16618+12]..[343,16618+15])
                          Ppat_var "epo" (compile_stream.ml[343,16618+12]..[343,16618+15])
                        pattern (compile_stream.ml[343,16618+16]..[343,16618+17])
                          Ppat_var "e" (compile_stream.ml[343,16618+16]..[343,16618+17])
                      ]
                    expression (compile_stream.ml[344,16640+12]..[381,18403+62])
                      Pexp_function
                      [
                        <case>
                          pattern (compile_stream.ml[345,16661+14]..[345,16661+41])
                            Ppat_constraint
                            pattern (compile_stream.ml[345,16661+15]..[345,16661+20])
                              Ppat_var "ekont" (compile_stream.ml[345,16661+15]..[345,16661+20])
                            core_type (compile_stream.ml[345,16661+23]..[345,16661+40])
                              Ptyp_arrow
                              ""
                              core_type (compile_stream.ml[345,16661+23]..[345,16661+33])
                                Ptyp_constr "option" (compile_stream.ml[345,16661+27]..[345,16661+33])
                                [
                                  core_type (compile_stream.ml[345,16661+23]..[345,16661+26])
                                    Ptyp_constr "exp" (compile_stream.ml[345,16661+23]..[345,16661+26])
                                    []
                                ]
                              core_type (compile_stream.ml[345,16661+37]..[345,16661+40])
                                Ptyp_constr "exp" (compile_stream.ml[345,16661+37]..[345,16661+40])
                                []
                          expression (compile_stream.ml[346,16706+17]..[381,18403+61])
                            Pexp_match
                            expression (compile_stream.ml[346,16706+23]..[346,16706+24])
                              Pexp_ident "x" (compile_stream.ml[346,16706+23]..[346,16706+24])
                            [
                              <case>
                                pattern (compile_stream.ml[347,16736+19]..[347,16736+21])
                                  Ppat_construct "[]" (compile_stream.ml[347,16736+19]..[347,16736+21])
                                  None
                                expression (compile_stream.ml[348,16761+22]..[361,17429+30])
                                  Pexp_match
                                  expression (compile_stream.ml[348,16761+28]..[348,16761+31])
                                    Pexp_ident "epo" (compile_stream.ml[348,16761+28]..[348,16761+31])
                                  [
                                    <case>
                                      pattern (compile_stream.ml[349,16798+24]..[349,16798+31])
                                        Ppat_construct "Some" (compile_stream.ml[349,16798+24]..[349,16798+28])
                                        Some
                                          pattern (compile_stream.ml[349,16798+29]..[349,16798+31])
                                            Ppat_var "ep" (compile_stream.ml[349,16798+29]..[349,16798+31])
                                      expression (compile_stream.ml[350,16833+26]..[360,17368+60])
                                        Pexp_coerce
                                        expression (compile_stream.ml[350,16833+27]..[360,17368+47])
                                          Pexp_variant "LetIn"
                                          Some
                                            expression (compile_stream.ml[351,16867+29]..[360,17368+47])
                                              Pexp_tuple
                                              [
                                                expression (compile_stream.ml[351,16867+30]..[351,16867+34])
                                                  Pexp_ident "_loc" (compile_stream.ml[351,16867+30]..[351,16867+34])
                                                expression (compile_stream.ml[351,16867+37]..[351,16867+51])
                                                  Pexp_variant "Negative"
                                                  Some
                                                    expression (compile_stream.ml[351,16867+47]..[351,16867+51])
                                                      Pexp_ident "_loc" (compile_stream.ml[351,16867+47]..[351,16867+51])
                                                expression (compile_stream.ml[352,16921+32]..[359,17300+65])
                                                  Pexp_variant "Bind"
                                                  Some
                                                    expression (compile_stream.ml[353,16959+34]..[359,17300+65])
                                                      Pexp_tuple
                                                      [
                                                        expression (compile_stream.ml[353,16959+35]..[353,16959+39])
                                                          Pexp_ident "_loc" (compile_stream.ml[353,16959+35]..[353,16959+39])
                                                        expression (compile_stream.ml[353,16959+41]..[353,16959+57])
                                                          Pexp_coerce
                                                          expression (compile_stream.ml[353,16959+42]..[353,16959+44])
                                                            Pexp_ident "ep" (compile_stream.ml[353,16959+42]..[353,16959+44])
                                                          None
                                                          core_type (compile_stream.ml[353,16959+48]..[353,16959+56])
                                                            Ptyp_constr "Astf.pat" (compile_stream.ml[353,16959+48]..[353,16959+56])
                                                            []
                                                        expression (compile_stream.ml[354,17018+37]..[359,17300+63])
                                                          Pexp_variant "App"
                                                          Some
                                                            expression (compile_stream.ml[355,17060+39]..[359,17300+63])
                                                              Pexp_tuple
                                                              [
                                                                expression (compile_stream.ml[355,17060+40]..[355,17060+44])
                                                                  Pexp_ident "_loc" (compile_stream.ml[355,17060+40]..[355,17060+44])
                                                                expression (compile_stream.ml[356,17106+42]..[358,17228+69])
                                                                  Pexp_variant "Dot"
                                                                  Some
                                                                    expression (compile_stream.ml[357,17153+44]..[358,17228+69])
                                                                      Pexp_tuple
                                                                      [
expression (compile_stream.ml[357,17153+45]..[357,17153+49])
  Pexp_ident "_loc" (compile_stream.ml[357,17153+45]..[357,17153+49])
expression (compile_stream.ml[357,17153+52]..[357,17153+72])
  Pexp_variant "Uid"
  Some
    expression (compile_stream.ml[357,17153+57]..[357,17153+72])
      Pexp_tuple
      [
        expression (compile_stream.ml[357,17153+58]..[357,17153+62])
          Pexp_ident "_loc" (compile_stream.ml[357,17153+58]..[357,17153+62])
        expression (compile_stream.ml[357,17153+65]..[357,17153+70])
          Pexp_apply
          expression (compile_stream.ml[357,17153+65]..[357,17153+67])
            Pexp_ident "gm" (compile_stream.ml[357,17153+65]..[357,17153+67])
          [
            <label> ""
              expression (compile_stream.ml[357,17153+68]..[357,17153+70])
                Pexp_construct "()" (compile_stream.ml[357,17153+68]..[357,17153+70])
                None
          ]
      ]
expression (compile_stream.ml[358,17228+47]..[358,17228+67])
  Pexp_variant "Lid"
  Some
    expression (compile_stream.ml[358,17228+52]..[358,17228+67])
      Pexp_tuple
      [
        expression (compile_stream.ml[358,17228+53]..[358,17228+57])
          Pexp_ident "_loc" (compile_stream.ml[358,17228+53]..[358,17228+57])
        expression (compile_stream.ml[358,17228+59]..[358,17228+66])
          Pexp_constant Const_string("count",None)
      ]
                                                                      ]
                                                                expression (compile_stream.ml[359,17300+42]..[359,17300+61])
                                                                  Pexp_variant "Lid"
                                                                  Some
                                                                    expression (compile_stream.ml[359,17300+47]..[359,17300+61])
                                                                      Pexp_tuple
                                                                      [
expression (compile_stream.ml[359,17300+48]..[359,17300+52])
  Pexp_ident "_loc" (compile_stream.ml[359,17300+48]..[359,17300+52])
expression (compile_stream.ml[359,17300+54]..[359,17300+60])
  Pexp_ident "strm_n" (compile_stream.ml[359,17300+54]..[359,17300+60])
                                                                      ]
                                                              ]
                                                      ]
                                                expression (compile_stream.ml[360,17368+31]..[360,17368+46])
                                                  Pexp_coerce
                                                  expression (compile_stream.ml[360,17368+32]..[360,17368+33])
                                                    Pexp_ident "e" (compile_stream.ml[360,17368+32]..[360,17368+33])
                                                  None
                                                  core_type (compile_stream.ml[360,17368+37]..[360,17368+45])
                                                    Ptyp_constr "Astf.exp" (compile_stream.ml[360,17368+37]..[360,17368+45])
                                                    []
                                              ]
                                        None
                                        core_type (compile_stream.ml[360,17368+51]..[360,17368+59])
                                          Ptyp_constr "Astf.exp" (compile_stream.ml[360,17368+51]..[360,17368+59])
                                          []
                                    <case>
                                      pattern (compile_stream.ml[361,17429+24]..[361,17429+25])
                                        Ppat_any
                                      expression (compile_stream.ml[361,17429+29]..[361,17429+30])
                                        Pexp_ident "e" (compile_stream.ml[361,17429+29]..[361,17429+30])
                                  ]
                              <case>
                                pattern (compile_stream.ml[362,17461+19]..[362,17461+34])
                                  Ppat_construct "::" (compile_stream.ml[362,17461+19]..[362,17461+34])
                                  Some
                                    pattern (compile_stream.ml[362,17461+19]..[362,17461+34])
                                      Ppat_tuple
                                      [
                                        pattern (compile_stream.ml[362,17461+19]..[362,17461+28])
                                          Ppat_tuple
                                          [
                                            pattern (compile_stream.ml[362,17461+20]..[362,17461+23])
                                              Ppat_var "spc" (compile_stream.ml[362,17461+20]..[362,17461+23])
                                            pattern (compile_stream.ml[362,17461+24]..[362,17461+27])
                                              Ppat_var "err" (compile_stream.ml[362,17461+24]..[362,17461+27])
                                          ]
                                        pattern (compile_stream.ml[362,17461+30]..[362,17461+34])
                                          Ppat_var "spcl" (compile_stream.ml[362,17461+30]..[362,17461+34])
                                      ]
                                expression (compile_stream.ml[363,17499+21]..[381,18403+61])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (compile_stream.ml[363,17499+25]..[363,17499+30])
                                        Ppat_var "skont" (compile_stream.ml[363,17499+25]..[363,17499+30])
                                      expression (compile_stream.ml[364,17532+23]..[379,18289+64])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (compile_stream.ml[364,17532+27]..[364,17532+33])
                                              Ppat_var "ekont0" (compile_stream.ml[364,17532+27]..[364,17532+33])
                                            expression (compile_stream.ml[365,17568+25]..[378,18213+72])
                                              Pexp_function
                                              [
                                                <case>
                                                  pattern (compile_stream.ml[366,17602+27]..[366,17602+30])
                                                    Ppat_var "err" (compile_stream.ml[366,17602+27]..[366,17602+30])
                                                  expression (compile_stream.ml[367,17636+29]..[378,18213+72])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (compile_stream.ml[367,17636+33]..[367,17636+36])
                                                          Ppat_var "str" (compile_stream.ml[367,17636+33]..[367,17636+36])
                                                        expression (compile_stream.ml[368,17675+31]..[370,17772+67])
                                                          Pexp_match
                                                          expression (compile_stream.ml[368,17675+37]..[368,17675+40])
                                                            Pexp_ident "err" (compile_stream.ml[368,17675+37]..[368,17675+40])
                                                          [
                                                            <case>
                                                              pattern (compile_stream.ml[369,17721+33]..[369,17721+42])
                                                                Ppat_construct "Some" (compile_stream.ml[369,17721+33]..[369,17721+37])
                                                                Some
                                                                  pattern (compile_stream.ml[369,17721+38]..[369,17721+42])
                                                                    Ppat_var "estr" (compile_stream.ml[369,17721+38]..[369,17721+42])
                                                              expression (compile_stream.ml[369,17721+46]..[369,17721+50])
                                                                Pexp_ident "estr" (compile_stream.ml[369,17721+46]..[369,17721+50])
                                                            <case>
                                                              pattern (compile_stream.ml[370,17772+33]..[370,17772+34])
                                                                Ppat_any
                                                              expression (compile_stream.ml[370,17772+38]..[370,17772+67])
                                                                Pexp_coerce
                                                                expression (compile_stream.ml[370,17772+39]..[370,17772+54])
                                                                  Pexp_variant "Str"
                                                                  Some
                                                                    expression (compile_stream.ml[370,17772+44]..[370,17772+54])
                                                                      Pexp_tuple
                                                                      [
expression (compile_stream.ml[370,17772+45]..[370,17772+49])
  Pexp_ident "_loc" (compile_stream.ml[370,17772+45]..[370,17772+49])
expression (compile_stream.ml[370,17772+51]..[370,17772+53])
  Pexp_constant Const_string("",None)
                                                                      ]
                                                                None
                                                                core_type (compile_stream.ml[370,17772+58]..[370,17772+66])
                                                                  Ptyp_constr "Astf.exp" (compile_stream.ml[370,17772+58]..[370,17772+66])
                                                                  []
                                                          ]
                                                    ]
                                                    expression (compile_stream.ml[371,17843+29]..[378,18213+72])
                                                      Pexp_coerce
                                                      expression (compile_stream.ml[371,17843+30]..[378,18213+59])
                                                        Pexp_variant "App"
                                                        Some
                                                          expression (compile_stream.ml[372,17878+32]..[378,18213+59])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_stream.ml[372,17878+33]..[372,17878+37])
                                                                Pexp_ident "_loc" (compile_stream.ml[372,17878+33]..[372,17878+37])
                                                              expression (compile_stream.ml[372,17878+40]..[372,17878+60])
                                                                Pexp_variant "Lid"
                                                                Some
                                                                  expression (compile_stream.ml[372,17878+45]..[372,17878+60])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (compile_stream.ml[372,17878+46]..[372,17878+50])
Pexp_ident "_loc" (compile_stream.ml[372,17878+46]..[372,17878+50])
                                                                      expression (compile_stream.ml[372,17878+52]..[372,17878+59])
Pexp_constant Const_string("raise",None)
                                                                    ]
                                                              expression (compile_stream.ml[373,17941+35]..[378,18213+57])
                                                                Pexp_variant "App"
                                                                Some
                                                                  expression (compile_stream.ml[374,17981+37]..[378,18213+57])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (compile_stream.ml[374,17981+38]..[374,17981+42])
Pexp_ident "_loc" (compile_stream.ml[374,17981+38]..[374,17981+42])
                                                                      expression (compile_stream.ml[375,18025+40]..[377,18143+67])
Pexp_variant "Dot"
Some
  expression (compile_stream.ml[376,18070+42]..[377,18143+67])
    Pexp_tuple
    [
      expression (compile_stream.ml[376,18070+43]..[376,18070+47])
        Pexp_ident "_loc" (compile_stream.ml[376,18070+43]..[376,18070+47])
      expression (compile_stream.ml[376,18070+50]..[376,18070+70])
        Pexp_variant "Uid"
        Some
          expression (compile_stream.ml[376,18070+55]..[376,18070+70])
            Pexp_tuple
            [
              expression (compile_stream.ml[376,18070+56]..[376,18070+60])
                Pexp_ident "_loc" (compile_stream.ml[376,18070+56]..[376,18070+60])
              expression (compile_stream.ml[376,18070+63]..[376,18070+68])
                Pexp_apply
                expression (compile_stream.ml[376,18070+63]..[376,18070+65])
                  Pexp_ident "gm" (compile_stream.ml[376,18070+63]..[376,18070+65])
                [
                  <label> ""
                    expression (compile_stream.ml[376,18070+66]..[376,18070+68])
                      Pexp_construct "()" (compile_stream.ml[376,18070+66]..[376,18070+68])
                      None
                ]
            ]
      expression (compile_stream.ml[377,18143+45]..[377,18143+65])
        Pexp_variant "Uid"
        Some
          expression (compile_stream.ml[377,18143+50]..[377,18143+65])
            Pexp_tuple
            [
              expression (compile_stream.ml[377,18143+51]..[377,18143+55])
                Pexp_ident "_loc" (compile_stream.ml[377,18143+51]..[377,18143+55])
              expression (compile_stream.ml[377,18143+57]..[377,18143+64])
                Pexp_constant Const_string("Error",None)
            ]
    ]
                                                                      expression (compile_stream.ml[378,18213+39]..[378,18213+56])
Pexp_coerce
expression (compile_stream.ml[378,18213+40]..[378,18213+43])
  Pexp_ident "str" (compile_stream.ml[378,18213+40]..[378,18213+43])
None
core_type (compile_stream.ml[378,18213+47]..[378,18213+55])
  Ptyp_constr "Astf.exp" (compile_stream.ml[378,18213+47]..[378,18213+55])
  []
                                                                    ]
                                                            ]
                                                      None
                                                      core_type (compile_stream.ml[378,18213+63]..[378,18213+71])
                                                        Ptyp_constr "Astf.exp" (compile_stream.ml[378,18213+63]..[378,18213+71])
                                                        []
                                              ]
                                        ]
                                        expression (compile_stream.ml[379,18289+23]..[379,18289+64])
                                          Pexp_apply
                                          expression (compile_stream.ml[379,18289+23]..[379,18289+37])
                                            Pexp_ident "stream_pattern" (compile_stream.ml[379,18289+23]..[379,18289+37])
                                          [
                                            <label> ""
                                              expression (compile_stream.ml[379,18289+38]..[379,18289+42])
                                                Pexp_ident "_loc" (compile_stream.ml[379,18289+38]..[379,18289+42])
                                            <label> ""
                                              expression (compile_stream.ml[379,18289+43]..[379,18289+57])
                                                Pexp_tuple
                                                [
                                                  expression (compile_stream.ml[379,18289+44]..[379,18289+48])
                                                    Pexp_ident "spcl" (compile_stream.ml[379,18289+44]..[379,18289+48])
                                                  expression (compile_stream.ml[379,18289+50]..[379,18289+53])
                                                    Pexp_ident "epo" (compile_stream.ml[379,18289+50]..[379,18289+53])
                                                  expression (compile_stream.ml[379,18289+55]..[379,18289+56])
                                                    Pexp_ident "e" (compile_stream.ml[379,18289+55]..[379,18289+56])
                                                ]
                                            <label> ""
                                              expression (compile_stream.ml[379,18289+58]..[379,18289+64])
                                                Pexp_ident "ekont0" (compile_stream.ml[379,18289+58]..[379,18289+64])
                                          ]
                                  ]
                                  expression (compile_stream.ml[380,18357+21]..[381,18403+61])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (compile_stream.ml[380,18357+25]..[380,18357+30])
                                          Ppat_var "ckont" (compile_stream.ml[380,18357+25]..[380,18357+30])
                                        expression (compile_stream.ml[380,18357+33]..[380,18357+42])
                                          Pexp_apply
                                          expression (compile_stream.ml[380,18357+33]..[380,18357+38])
                                            Pexp_ident "ekont" (compile_stream.ml[380,18357+33]..[380,18357+38])
                                          [
                                            <label> ""
                                              expression (compile_stream.ml[380,18357+39]..[380,18357+42])
                                                Pexp_ident "err" (compile_stream.ml[380,18357+39]..[380,18357+42])
                                          ]
                                    ]
                                    expression (compile_stream.ml[381,18403+21]..[381,18403+61])
                                      Pexp_apply
                                      expression (compile_stream.ml[381,18403+21]..[381,18403+45])
                                        Pexp_ident "stream_pattern_component" (compile_stream.ml[381,18403+21]..[381,18403+45])
                                      [
                                        <label> ""
                                          expression (compile_stream.ml[381,18403+46]..[381,18403+51])
                                            Pexp_ident "skont" (compile_stream.ml[381,18403+46]..[381,18403+51])
                                        <label> ""
                                          expression (compile_stream.ml[381,18403+52]..[381,18403+57])
                                            Pexp_ident "ckont" (compile_stream.ml[381,18403+52]..[381,18403+57])
                                        <label> ""
                                          expression (compile_stream.ml[381,18403+58]..[381,18403+61])
                                            Pexp_ident "spc" (compile_stream.ml[381,18403+58]..[381,18403+61])
                                      ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (compile_stream.ml[382,18468+0]..[389,18712+28])
    Pstr_value Rec
    [
      <def>
        pattern (compile_stream.ml[382,18468+8]..[382,18468+19])
          Ppat_var "group_terms" (compile_stream.ml[382,18468+8]..[382,18468+19])
        expression (compile_stream.ml[383,18490+2]..[389,18712+28])
          Pexp_function
          [
            <case>
              pattern (compile_stream.ml[384,18501+4]..[384,18501+23])
                Ppat_constraint
                pattern (compile_stream.ml[384,18501+5]..[384,18501+7])
                  Ppat_var "xs" (compile_stream.ml[384,18501+5]..[384,18501+7])
                core_type (compile_stream.ml[384,18501+10]..[384,18501+22])
                  Ptyp_constr "stream_cases" (compile_stream.ml[384,18501+10]..[384,18501+22])
                  []
              expression (compile_stream.ml[385,18528+7]..[389,18712+27])
                Pexp_match
                expression (compile_stream.ml[385,18528+13]..[385,18528+15])
                  Pexp_ident "xs" (compile_stream.ml[385,18528+13]..[385,18528+15])
                [
                  <case>
                    pattern (compile_stream.ml[386,18549+9]..[386,18549+52])
                      Ppat_construct "::" (compile_stream.ml[386,18549+9]..[386,18549+52])
                      Some
                        pattern (compile_stream.ml[386,18549+9]..[386,18549+52])
                          Ppat_tuple
                          [
                            pattern (compile_stream.ml[386,18549+9]..[386,18549+46])
                              Ppat_tuple
                              [
                                pattern (compile_stream.ml[386,18549+10]..[386,18549+39])
                                  Ppat_construct "::" (compile_stream.ml[386,18549+10]..[386,18549+39])
                                  Some
                                    pattern (compile_stream.ml[386,18549+10]..[386,18549+39])
                                      Ppat_tuple
                                      [
                                        pattern (compile_stream.ml[386,18549+10]..[386,18549+33])
                                          Ppat_tuple
                                          [
                                            pattern (compile_stream.ml[386,18549+11]..[386,18549+26])
                                              Ppat_construct "When" (compile_stream.ml[386,18549+11]..[386,18549+15])
                                              Some
                                                pattern (compile_stream.ml[386,18549+11]..[386,18549+26])
                                                  Ppat_tuple
                                                  [
                                                    pattern (compile_stream.ml[386,18549+17]..[386,18549+21])
                                                      Ppat_var "_loc" (compile_stream.ml[386,18549+17]..[386,18549+21])
                                                    pattern (compile_stream.ml[386,18549+22]..[386,18549+23])
                                                      Ppat_var "p" (compile_stream.ml[386,18549+22]..[386,18549+23])
                                                    pattern (compile_stream.ml[386,18549+24]..[386,18549+25])
                                                      Ppat_var "w" (compile_stream.ml[386,18549+24]..[386,18549+25])
                                                  ]
                                            pattern (compile_stream.ml[386,18549+27]..[386,18549+31])
                                              Ppat_construct "None" (compile_stream.ml[386,18549+27]..[386,18549+31])
                                              None
                                          ]
                                        pattern (compile_stream.ml[386,18549+35]..[386,18549+39])
                                          Ppat_var "spcl" (compile_stream.ml[386,18549+35]..[386,18549+39])
                                      ]
                                pattern (compile_stream.ml[386,18549+40]..[386,18549+43])
                                  Ppat_var "epo" (compile_stream.ml[386,18549+40]..[386,18549+43])
                                pattern (compile_stream.ml[386,18549+44]..[386,18549+45])
                                  Ppat_var "e" (compile_stream.ml[386,18549+44]..[386,18549+45])
                              ]
                            pattern (compile_stream.ml[386,18549+48]..[386,18549+52])
                              Ppat_var "spel" (compile_stream.ml[386,18549+48]..[386,18549+52])
                          ]
                    expression (compile_stream.ml[387,18605+11]..[388,18655+56])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (compile_stream.ml[387,18605+15]..[387,18605+27])
                            Ppat_tuple
                            [
                              pattern (compile_stream.ml[387,18605+16]..[387,18605+21])
                                Ppat_var "tspel" (compile_stream.ml[387,18605+16]..[387,18605+21])
                              pattern (compile_stream.ml[387,18605+22]..[387,18605+26])
                                Ppat_var "spel" (compile_stream.ml[387,18605+22]..[387,18605+26])
                            ]
                          expression (compile_stream.ml[387,18605+30]..[387,18605+46])
                            Pexp_apply
                            expression (compile_stream.ml[387,18605+30]..[387,18605+41])
                              Pexp_ident "group_terms" (compile_stream.ml[387,18605+30]..[387,18605+41])
                            [
                              <label> ""
                                expression (compile_stream.ml[387,18605+42]..[387,18605+46])
                                  Pexp_ident "spel" (compile_stream.ml[387,18605+42]..[387,18605+46])
                            ]
                      ]
                      expression (compile_stream.ml[388,18655+11]..[388,18655+56])
                        Pexp_tuple
                        [
                          expression (compile_stream.ml[388,18655+13]..[388,18655+48])
                            Pexp_construct "::" (compile_stream.ml[388,18655+40]..[388,18655+42])
                            Some
                              expression (compile_stream.ml[388,18655+13]..[388,18655+48])
                                Pexp_tuple
                                [
                                  expression (compile_stream.ml[388,18655+13]..[388,18655+39])
                                    Pexp_tuple
                                    [
                                      expression (compile_stream.ml[388,18655+14]..[388,18655+15])
                                        Pexp_ident "p" (compile_stream.ml[388,18655+14]..[388,18655+15])
                                      expression (compile_stream.ml[388,18655+17]..[388,18655+18])
                                        Pexp_ident "w" (compile_stream.ml[388,18655+17]..[388,18655+18])
                                      expression (compile_stream.ml[388,18655+20]..[388,18655+24])
                                        Pexp_ident "_loc" (compile_stream.ml[388,18655+20]..[388,18655+24])
                                      expression (compile_stream.ml[388,18655+26]..[388,18655+30])
                                        Pexp_ident "spcl" (compile_stream.ml[388,18655+26]..[388,18655+30])
                                      expression (compile_stream.ml[388,18655+32]..[388,18655+35])
                                        Pexp_ident "epo" (compile_stream.ml[388,18655+32]..[388,18655+35])
                                      expression (compile_stream.ml[388,18655+37]..[388,18655+38])
                                        Pexp_ident "e" (compile_stream.ml[388,18655+37]..[388,18655+38])
                                    ]
                                  expression (compile_stream.ml[388,18655+43]..[388,18655+48])
                                    Pexp_ident "tspel" (compile_stream.ml[388,18655+43]..[388,18655+48])
                                ]
                          expression (compile_stream.ml[388,18655+51]..[388,18655+55])
                            Pexp_ident "spel" (compile_stream.ml[388,18655+51]..[388,18655+55])
                        ]
                  <case>
                    pattern (compile_stream.ml[389,18712+9]..[389,18712+13])
                      Ppat_var "spel" (compile_stream.ml[389,18712+9]..[389,18712+13])
                    expression (compile_stream.ml[389,18712+17]..[389,18712+27])
                      Pexp_tuple
                      [
                        expression (compile_stream.ml[389,18712+18]..[389,18712+20])
                          Pexp_construct "[]" (compile_stream.ml[389,18712+18]..[389,18712+20])
                          None
                        expression (compile_stream.ml[389,18712+22]..[389,18712+26])
                          Pexp_ident "spel" (compile_stream.ml[389,18712+22]..[389,18712+26])
                      ]
                ]
          ]
    ]
  structure_item (compile_stream.ml[390,18741+0]..[460,22206+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_stream.ml[390,18741+4]..[390,18741+24])
          Ppat_var "stream_patterns_term" (compile_stream.ml[390,18741+4]..[390,18741+24])
        expression (compile_stream.ml[391,18768+2]..[460,22206+22])
          Pexp_function
          [
            <case>
              pattern (compile_stream.ml[392,18779+4]..[392,18779+8])
                Ppat_var "_loc" (compile_stream.ml[392,18779+4]..[392,18779+8])
              expression (compile_stream.ml[393,18791+7]..[460,22206+21])
                Pexp_function
                [
                  <case>
                    pattern (compile_stream.ml[394,18807+9]..[394,18807+30])
                      Ppat_constraint
                      pattern (compile_stream.ml[394,18807+10]..[394,18807+15])
                        Ppat_var "ekont" (compile_stream.ml[394,18807+10]..[394,18807+15])
                      core_type (compile_stream.ml[394,18807+18]..[394,18807+29])
                        Ptyp_arrow
                        ""
                        core_type (compile_stream.ml[394,18807+18]..[394,18807+22])
                          Ptyp_constr "unit" (compile_stream.ml[394,18807+18]..[394,18807+22])
                          []
                        core_type (compile_stream.ml[394,18807+26]..[394,18807+29])
                          Ptyp_constr "exp" (compile_stream.ml[394,18807+26]..[394,18807+29])
                          []
                    expression (compile_stream.ml[395,18841+12]..[460,22206+20])
                      Pexp_function
                      [
                        <case>
                          pattern (compile_stream.ml[396,18862+14]..[396,18862+19])
                            Ppat_var "tspel" (compile_stream.ml[396,18862+14]..[396,18862+19])
                          expression (compile_stream.ml[397,18885+16]..[460,22206+20])
                            Pexp_constraint
                            expression (compile_stream.ml[397,18885+17]..[459,22133+69])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (compile_stream.ml[397,18885+21]..[397,18885+24])
                                    Ppat_var "pel" (compile_stream.ml[397,18885+21]..[397,18885+24])
                                  expression (compile_stream.ml[398,18912+19]..[454,21957+31])
                                    Pexp_apply
                                    expression (compile_stream.ml[398,18912+19]..[398,18912+34])
                                      Pexp_ident "List.fold_right" (compile_stream.ml[398,18912+19]..[398,18912+34])
                                    [
                                      <label> ""
                                        expression (compile_stream.ml[399,18947+22]..[452,21825+48])
                                          Pexp_function
                                          [
                                            <case>
                                              pattern (compile_stream.ml[400,18978+24]..[400,18978+45])
                                                Ppat_tuple
                                                [
                                                  pattern (compile_stream.ml[400,18978+25]..[400,18978+26])
                                                    Ppat_var "p" (compile_stream.ml[400,18978+25]..[400,18978+26])
                                                  pattern (compile_stream.ml[400,18978+27]..[400,18978+28])
                                                    Ppat_var "w" (compile_stream.ml[400,18978+27]..[400,18978+28])
                                                  pattern (compile_stream.ml[400,18978+29]..[400,18978+33])
                                                    Ppat_var "_loc" (compile_stream.ml[400,18978+29]..[400,18978+33])
                                                  pattern (compile_stream.ml[400,18978+34]..[400,18978+38])
                                                    Ppat_var "spcl" (compile_stream.ml[400,18978+34]..[400,18978+38])
                                                  pattern (compile_stream.ml[400,18978+39]..[400,18978+42])
                                                    Ppat_var "epo" (compile_stream.ml[400,18978+39]..[400,18978+42])
                                                  pattern (compile_stream.ml[400,18978+43]..[400,18978+44])
                                                    Ppat_var "e" (compile_stream.ml[400,18978+43]..[400,18978+44])
                                                ]
                                              expression (compile_stream.ml[401,19027+27]..[452,21825+47])
                                                Pexp_function
                                                [
                                                  <case>
                                                    pattern (compile_stream.ml[402,19063+29]..[402,19063+32])
                                                      Ppat_var "acc" (compile_stream.ml[402,19063+29]..[402,19063+32])
                                                    expression (compile_stream.ml[403,19099+31]..[452,21825+47])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (compile_stream.ml[403,19099+35]..[403,19099+36])
                                                            Ppat_var "p" (compile_stream.ml[403,19099+35]..[403,19099+36])
                                                          expression (compile_stream.ml[404,19138+33]..[406,19243+67])
                                                            Pexp_coerce
                                                            expression (compile_stream.ml[404,19138+34]..[406,19243+54])
                                                              Pexp_variant "App"
                                                              Some
                                                                expression (compile_stream.ml[405,19177+36]..[406,19243+54])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (compile_stream.ml[405,19177+37]..[405,19177+41])
                                                                      Pexp_ident "_loc" (compile_stream.ml[405,19177+37]..[405,19177+41])
                                                                    expression (compile_stream.ml[405,19177+44]..[405,19177+63])
                                                                      Pexp_variant "Uid"
                                                                      Some
expression (compile_stream.ml[405,19177+49]..[405,19177+63])
  Pexp_tuple
  [
    expression (compile_stream.ml[405,19177+50]..[405,19177+54])
      Pexp_ident "_loc" (compile_stream.ml[405,19177+50]..[405,19177+54])
    expression (compile_stream.ml[405,19177+56]..[405,19177+62])
      Pexp_constant Const_string("Some",None)
  ]
                                                                    expression (compile_stream.ml[406,19243+38]..[406,19243+53])
                                                                      Pexp_coerce
                                                                      expression (compile_stream.ml[406,19243+39]..[406,19243+40])
Pexp_ident "p" (compile_stream.ml[406,19243+39]..[406,19243+40])
                                                                      None
                                                                      core_type (compile_stream.ml[406,19243+44]..[406,19243+52])
Ptyp_constr "Astf.pat" (compile_stream.ml[406,19243+44]..[406,19243+52])
[]
                                                                  ]
                                                            None
                                                            core_type (compile_stream.ml[406,19243+58]..[406,19243+66])
                                                              Ptyp_constr "Astf.pat" (compile_stream.ml[406,19243+58]..[406,19243+66])
                                                              []
                                                      ]
                                                      expression (compile_stream.ml[407,19314+31]..[452,21825+47])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (compile_stream.ml[407,19314+35]..[407,19314+36])
                                                              Ppat_var "e" (compile_stream.ml[407,19314+35]..[407,19314+36])
                                                            expression (compile_stream.ml[408,19353+33]..[436,20975+44])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (compile_stream.ml[408,19353+37]..[408,19353+42])
                                                                    Ppat_var "ekont" (compile_stream.ml[408,19353+37]..[408,19353+42])
                                                                  expression (compile_stream.ml[409,19398+35]..[424,20301+50])
                                                                    Pexp_function
                                                                    [
                                                                      <case>
pattern (compile_stream.ml[410,19442+37]..[410,19442+40])
  Ppat_var "err" (compile_stream.ml[410,19442+37]..[410,19442+40])
expression (compile_stream.ml[411,19486+39]..[424,20301+50])
  Pexp_let Nonrec
  [
    <def>
      pattern (compile_stream.ml[411,19486+43]..[411,19486+46])
        Ppat_var "str" (compile_stream.ml[411,19486+43]..[411,19486+46])
      expression (compile_stream.ml[412,19535+41]..[414,19652+77])
        Pexp_match
        expression (compile_stream.ml[412,19535+47]..[412,19535+50])
          Pexp_ident "err" (compile_stream.ml[412,19535+47]..[412,19535+50])
        [
          <case>
            pattern (compile_stream.ml[413,19591+43]..[413,19591+52])
              Ppat_construct "Some" (compile_stream.ml[413,19591+43]..[413,19591+47])
              Some
                pattern (compile_stream.ml[413,19591+48]..[413,19591+52])
                  Ppat_var "estr" (compile_stream.ml[413,19591+48]..[413,19591+52])
            expression (compile_stream.ml[413,19591+56]..[413,19591+60])
              Pexp_ident "estr" (compile_stream.ml[413,19591+56]..[413,19591+60])
          <case>
            pattern (compile_stream.ml[414,19652+43]..[414,19652+44])
              Ppat_any
            expression (compile_stream.ml[414,19652+48]..[414,19652+77])
              Pexp_coerce
              expression (compile_stream.ml[414,19652+49]..[414,19652+64])
                Pexp_variant "Str"
                Some
                  expression (compile_stream.ml[414,19652+54]..[414,19652+64])
                    Pexp_tuple
                    [
                      expression (compile_stream.ml[414,19652+55]..[414,19652+59])
                        Pexp_ident "_loc" (compile_stream.ml[414,19652+55]..[414,19652+59])
                      expression (compile_stream.ml[414,19652+61]..[414,19652+63])
                        Pexp_constant Const_string("",None)
                    ]
              None
              core_type (compile_stream.ml[414,19652+68]..[414,19652+76])
                Ptyp_constr "Astf.exp" (compile_stream.ml[414,19652+68]..[414,19652+76])
                []
        ]
  ]
  expression (compile_stream.ml[415,19733+39]..[424,20301+50])
    Pexp_coerce
    expression (compile_stream.ml[415,19733+40]..[423,20227+69])
      Pexp_variant "App"
      Some
        expression (compile_stream.ml[416,19778+42]..[423,20227+69])
          Pexp_tuple
          [
            expression (compile_stream.ml[416,19778+43]..[416,19778+47])
              Pexp_ident "_loc" (compile_stream.ml[416,19778+43]..[416,19778+47])
            expression (compile_stream.ml[416,19778+50]..[416,19778+70])
              Pexp_variant "Lid"
              Some
                expression (compile_stream.ml[416,19778+55]..[416,19778+70])
                  Pexp_tuple
                  [
                    expression (compile_stream.ml[416,19778+56]..[416,19778+60])
                      Pexp_ident "_loc" (compile_stream.ml[416,19778+56]..[416,19778+60])
                    expression (compile_stream.ml[416,19778+62]..[416,19778+69])
                      Pexp_constant Const_string("raise",None)
                  ]
            expression (compile_stream.ml[417,19851+45]..[423,20227+67])
              Pexp_variant "App"
              Some
                expression (compile_stream.ml[418,19901+47]..[423,20227+67])
                  Pexp_tuple
                  [
                    expression (compile_stream.ml[418,19901+48]..[418,19901+52])
                      Pexp_ident "_loc" (compile_stream.ml[418,19901+48]..[418,19901+52])
                    expression (compile_stream.ml[419,19955+50]..[422,20147+77])
                      Pexp_variant "Dot"
                      Some
                        expression (compile_stream.ml[420,20010+52]..[422,20147+77])
                          Pexp_tuple
                          [
                            expression (compile_stream.ml[420,20010+53]..[420,20010+57])
                              Pexp_ident "_loc" (compile_stream.ml[420,20010+53]..[420,20010+57])
                            expression (compile_stream.ml[421,20069+55]..[421,20069+75])
                              Pexp_variant "Uid"
                              Some
                                expression (compile_stream.ml[421,20069+60]..[421,20069+75])
                                  Pexp_tuple
                                  [
                                    expression (compile_stream.ml[421,20069+61]..[421,20069+65])
                                      Pexp_ident "_loc" (compile_stream.ml[421,20069+61]..[421,20069+65])
                                    expression (compile_stream.ml[421,20069+68]..[421,20069+73])
                                      Pexp_apply
                                      expression (compile_stream.ml[421,20069+68]..[421,20069+70])
                                        Pexp_ident "gm" (compile_stream.ml[421,20069+68]..[421,20069+70])
                                      [
                                        <label> ""
                                          expression (compile_stream.ml[421,20069+71]..[421,20069+73])
                                            Pexp_construct "()" (compile_stream.ml[421,20069+71]..[421,20069+73])
                                            None
                                      ]
                                  ]
                            expression (compile_stream.ml[422,20147+55]..[422,20147+75])
                              Pexp_variant "Uid"
                              Some
                                expression (compile_stream.ml[422,20147+60]..[422,20147+75])
                                  Pexp_tuple
                                  [
                                    expression (compile_stream.ml[422,20147+61]..[422,20147+65])
                                      Pexp_ident "_loc" (compile_stream.ml[422,20147+61]..[422,20147+65])
                                    expression (compile_stream.ml[422,20147+67]..[422,20147+74])
                                      Pexp_constant Const_string("Error",None)
                                  ]
                          ]
                    expression (compile_stream.ml[423,20227+49]..[423,20227+66])
                      Pexp_coerce
                      expression (compile_stream.ml[423,20227+50]..[423,20227+53])
                        Pexp_ident "str" (compile_stream.ml[423,20227+50]..[423,20227+53])
                      None
                      core_type (compile_stream.ml[423,20227+57]..[423,20227+65])
                        Ptyp_constr "Astf.exp" (compile_stream.ml[423,20227+57]..[423,20227+65])
                        []
                  ]
          ]
    None
    core_type (compile_stream.ml[424,20301+41]..[424,20301+49])
      Ptyp_constr "Astf.exp" (compile_stream.ml[424,20301+41]..[424,20301+49])
      []
                                                                    ]
                                                              ]
                                                              expression (compile_stream.ml[425,20355+33]..[436,20975+44])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (compile_stream.ml[425,20355+37]..[425,20355+42])
                                                                      Ppat_var "skont" (compile_stream.ml[425,20355+37]..[425,20355+42])
                                                                    expression (compile_stream.ml[426,20400+35]..[426,20400+75])
                                                                      Pexp_apply
                                                                      expression (compile_stream.ml[426,20400+35]..[426,20400+49])
Pexp_ident "stream_pattern" (compile_stream.ml[426,20400+35]..[426,20400+49])
                                                                      [
<label> ""
  expression (compile_stream.ml[426,20400+50]..[426,20400+54])
    Pexp_ident "_loc" (compile_stream.ml[426,20400+50]..[426,20400+54])
<label> ""
  expression (compile_stream.ml[426,20400+55]..[426,20400+69])
    Pexp_tuple
    [
      expression (compile_stream.ml[426,20400+56]..[426,20400+60])
        Pexp_ident "spcl" (compile_stream.ml[426,20400+56]..[426,20400+60])
      expression (compile_stream.ml[426,20400+62]..[426,20400+65])
        Pexp_ident "epo" (compile_stream.ml[426,20400+62]..[426,20400+65])
      expression (compile_stream.ml[426,20400+67]..[426,20400+68])
        Pexp_ident "e" (compile_stream.ml[426,20400+67]..[426,20400+68])
    ]
<label> ""
  expression (compile_stream.ml[426,20400+70]..[426,20400+75])
    Pexp_ident "ekont" (compile_stream.ml[426,20400+70]..[426,20400+75])
                                                                      ]
                                                                ]
                                                                expression (compile_stream.ml[427,20479+33]..[436,20975+44])
                                                                  Pexp_coerce
                                                                  expression (compile_stream.ml[427,20479+34]..[435,20905+65])
                                                                    Pexp_variant "Seq"
                                                                    Some
                                                                      expression (compile_stream.ml[428,20518+36]..[435,20905+65])
Pexp_tuple
[
  expression (compile_stream.ml[428,20518+37]..[428,20518+41])
    Pexp_ident "_loc" (compile_stream.ml[428,20518+37]..[428,20518+41])
  expression (compile_stream.ml[429,20561+39]..[435,20905+63])
    Pexp_variant "Sem"
    Some
      expression (compile_stream.ml[430,20605+41]..[435,20905+63])
        Pexp_tuple
        [
          expression (compile_stream.ml[430,20605+42]..[430,20605+46])
            Pexp_ident "_loc" (compile_stream.ml[430,20605+42]..[430,20605+46])
          expression (compile_stream.ml[431,20653+44]..[434,20832+70])
            Pexp_variant "App"
            Some
              expression (compile_stream.ml[432,20702+46]..[434,20832+70])
                Pexp_tuple
                [
                  expression (compile_stream.ml[432,20702+47]..[432,20702+51])
                    Pexp_ident "_loc" (compile_stream.ml[432,20702+47]..[432,20702+51])
                  expression (compile_stream.ml[433,20755+48]..[433,20755+75])
                    Pexp_coerce
                    expression (compile_stream.ml[433,20755+49]..[433,20755+62])
                      Pexp_apply
                      expression (compile_stream.ml[433,20755+49]..[433,20755+57])
                        Pexp_ident "junk_fun" (compile_stream.ml[433,20755+49]..[433,20755+57])
                      [
                        <label> ""
                          expression (compile_stream.ml[433,20755+58]..[433,20755+62])
                            Pexp_ident "_loc" (compile_stream.ml[433,20755+58]..[433,20755+62])
                      ]
                    None
                    core_type (compile_stream.ml[433,20755+66]..[433,20755+74])
                      Ptyp_constr "Astf.exp" (compile_stream.ml[433,20755+66]..[433,20755+74])
                      []
                  expression (compile_stream.ml[434,20832+49]..[434,20832+68])
                    Pexp_variant "Lid"
                    Some
                      expression (compile_stream.ml[434,20832+54]..[434,20832+68])
                        Pexp_tuple
                        [
                          expression (compile_stream.ml[434,20832+55]..[434,20832+59])
                            Pexp_ident "_loc" (compile_stream.ml[434,20832+55]..[434,20832+59])
                          expression (compile_stream.ml[434,20832+61]..[434,20832+67])
                            Pexp_ident "strm_n" (compile_stream.ml[434,20832+61]..[434,20832+67])
                        ]
                ]
          expression (compile_stream.ml[435,20905+43]..[435,20905+62])
            Pexp_coerce
            expression (compile_stream.ml[435,20905+44]..[435,20905+49])
              Pexp_ident "skont" (compile_stream.ml[435,20905+44]..[435,20905+49])
            None
            core_type (compile_stream.ml[435,20905+53]..[435,20905+61])
              Ptyp_constr "Astf.exp" (compile_stream.ml[435,20905+53]..[435,20905+61])
              []
        ]
]
                                                                  None
                                                                  core_type (compile_stream.ml[436,20975+35]..[436,20975+43])
                                                                    Ptyp_constr "Astf.exp" (compile_stream.ml[436,20975+35]..[436,20975+43])
                                                                    []
                                                        ]
                                                        expression (compile_stream.ml[437,21023+32]..[452,21825+46])
                                                          Pexp_match
                                                          expression (compile_stream.ml[437,21023+38]..[437,21023+39])
                                                            Pexp_ident "w" (compile_stream.ml[437,21023+38]..[437,21023+39])
                                                          [
                                                            <case>
                                                              pattern (compile_stream.ml[438,21068+34]..[438,21068+40])
                                                                Ppat_construct "Some" (compile_stream.ml[438,21068+34]..[438,21068+38])
                                                                Some
                                                                  pattern (compile_stream.ml[438,21068+39]..[438,21068+40])
                                                                    Ppat_var "w" (compile_stream.ml[438,21068+39]..[438,21068+40])
                                                              expression (compile_stream.ml[439,21112+36]..[445,21457+46])
                                                                Pexp_coerce
                                                                expression (compile_stream.ml[439,21112+37]..[444,21383+69])
                                                                  Pexp_variant "Bar"
                                                                  Some
                                                                    expression (compile_stream.ml[440,21154+39]..[444,21383+69])
                                                                      Pexp_tuple
                                                                      [
expression (compile_stream.ml[440,21154+40]..[440,21154+44])
  Pexp_ident "_loc" (compile_stream.ml[440,21154+40]..[440,21154+44])
expression (compile_stream.ml[441,21200+42]..[444,21383+62])
  Pexp_variant "CaseWhen"
  Some
    expression (compile_stream.ml[442,21252+44]..[444,21383+62])
      Pexp_tuple
      [
        expression (compile_stream.ml[442,21252+45]..[442,21252+49])
          Pexp_ident "_loc" (compile_stream.ml[442,21252+45]..[442,21252+49])
        expression (compile_stream.ml[442,21252+51]..[442,21252+66])
          Pexp_coerce
          expression (compile_stream.ml[442,21252+52]..[442,21252+53])
            Pexp_ident "p" (compile_stream.ml[442,21252+52]..[442,21252+53])
          None
          core_type (compile_stream.ml[442,21252+57]..[442,21252+65])
            Ptyp_constr "Astf.pat" (compile_stream.ml[442,21252+57]..[442,21252+65])
            []
        expression (compile_stream.ml[443,21320+46]..[443,21320+61])
          Pexp_coerce
          expression (compile_stream.ml[443,21320+47]..[443,21320+48])
            Pexp_ident "w" (compile_stream.ml[443,21320+47]..[443,21320+48])
          None
          core_type (compile_stream.ml[443,21320+52]..[443,21320+60])
            Ptyp_constr "Astf.exp" (compile_stream.ml[443,21320+52]..[443,21320+60])
            []
        expression (compile_stream.ml[444,21383+46]..[444,21383+61])
          Pexp_coerce
          expression (compile_stream.ml[444,21383+47]..[444,21383+48])
            Pexp_ident "e" (compile_stream.ml[444,21383+47]..[444,21383+48])
          None
          core_type (compile_stream.ml[444,21383+52]..[444,21383+60])
            Ptyp_constr "Astf.exp" (compile_stream.ml[444,21383+52]..[444,21383+60])
            []
      ]
expression (compile_stream.ml[444,21383+65]..[444,21383+68])
  Pexp_ident "acc" (compile_stream.ml[444,21383+65]..[444,21383+68])
                                                                      ]
                                                                None
                                                                core_type (compile_stream.ml[445,21457+36]..[445,21457+45])
                                                                  Ptyp_constr "Astf.case" (compile_stream.ml[445,21457+36]..[445,21457+45])
                                                                  []
                                                            <case>
                                                              pattern (compile_stream.ml[446,21504+34]..[446,21504+38])
                                                                Ppat_construct "None" (compile_stream.ml[446,21504+34]..[446,21504+38])
                                                                None
                                                              expression (compile_stream.ml[447,21547+36]..[452,21825+46])
                                                                Pexp_coerce
                                                                expression (compile_stream.ml[447,21547+37]..[451,21751+69])
                                                                  Pexp_variant "Bar"
                                                                  Some
                                                                    expression (compile_stream.ml[448,21589+39]..[451,21751+69])
                                                                      Pexp_tuple
                                                                      [
expression (compile_stream.ml[448,21589+40]..[448,21589+44])
  Pexp_ident "_loc" (compile_stream.ml[448,21589+40]..[448,21589+44])
expression (compile_stream.ml[449,21635+42]..[451,21751+62])
  Pexp_variant "Case"
  Some
    expression (compile_stream.ml[450,21683+44]..[451,21751+62])
      Pexp_tuple
      [
        expression (compile_stream.ml[450,21683+45]..[450,21683+49])
          Pexp_ident "_loc" (compile_stream.ml[450,21683+45]..[450,21683+49])
        expression (compile_stream.ml[450,21683+51]..[450,21683+66])
          Pexp_coerce
          expression (compile_stream.ml[450,21683+52]..[450,21683+53])
            Pexp_ident "p" (compile_stream.ml[450,21683+52]..[450,21683+53])
          None
          core_type (compile_stream.ml[450,21683+57]..[450,21683+65])
            Ptyp_constr "Astf.pat" (compile_stream.ml[450,21683+57]..[450,21683+65])
            []
        expression (compile_stream.ml[451,21751+46]..[451,21751+61])
          Pexp_coerce
          expression (compile_stream.ml[451,21751+47]..[451,21751+48])
            Pexp_ident "e" (compile_stream.ml[451,21751+47]..[451,21751+48])
          None
          core_type (compile_stream.ml[451,21751+52]..[451,21751+60])
            Ptyp_constr "Astf.exp" (compile_stream.ml[451,21751+52]..[451,21751+60])
            []
      ]
expression (compile_stream.ml[451,21751+65]..[451,21751+68])
  Pexp_ident "acc" (compile_stream.ml[451,21751+65]..[451,21751+68])
                                                                      ]
                                                                None
                                                                core_type (compile_stream.ml[452,21825+36]..[452,21825+45])
                                                                  Ptyp_constr "Astf.case" (compile_stream.ml[452,21825+36]..[452,21825+45])
                                                                  []
                                                          ]
                                                ]
                                          ]
                                      <label> ""
                                        expression (compile_stream.ml[452,21825+50]..[452,21825+55])
                                          Pexp_ident "tspel" (compile_stream.ml[452,21825+50]..[452,21825+55])
                                      <label> ""
                                        expression (compile_stream.ml[453,21881+21]..[454,21957+31])
                                          Pexp_coerce
                                          expression (compile_stream.ml[453,21881+22]..[453,21881+71])
                                            Pexp_variant "Case"
                                            Some
                                              expression (compile_stream.ml[453,21881+28]..[453,21881+71])
                                                Pexp_tuple
                                                [
                                                  expression (compile_stream.ml[453,21881+29]..[453,21881+33])
                                                    Pexp_ident "_loc" (compile_stream.ml[453,21881+29]..[453,21881+33])
                                                  expression (compile_stream.ml[453,21881+36]..[453,21881+45])
                                                    Pexp_variant "Any"
                                                    Some
                                                      expression (compile_stream.ml[453,21881+41]..[453,21881+45])
                                                        Pexp_ident "_loc" (compile_stream.ml[453,21881+41]..[453,21881+45])
                                                  expression (compile_stream.ml[453,21881+48]..[453,21881+70])
                                                    Pexp_coerce
                                                    expression (compile_stream.ml[453,21881+49]..[453,21881+57])
                                                      Pexp_apply
                                                      expression (compile_stream.ml[453,21881+49]..[453,21881+54])
                                                        Pexp_ident "ekont" (compile_stream.ml[453,21881+49]..[453,21881+54])
                                                      [
                                                        <label> ""
                                                          expression (compile_stream.ml[453,21881+55]..[453,21881+57])
                                                            Pexp_construct "()" (compile_stream.ml[453,21881+55]..[453,21881+57])
                                                            None
                                                      ]
                                                    None
                                                    core_type (compile_stream.ml[453,21881+61]..[453,21881+69])
                                                      Ptyp_constr "Astf.exp" (compile_stream.ml[453,21881+61]..[453,21881+69])
                                                      []
                                                ]
                                          None
                                          core_type (compile_stream.ml[454,21957+21]..[454,21957+30])
                                            Ptyp_constr "Astf.case" (compile_stream.ml[454,21957+21]..[454,21957+30])
                                            []
                                    ]
                              ]
                              expression (compile_stream.ml[455,21992+17]..[459,22133+69])
                                Pexp_coerce
                                expression (compile_stream.ml[455,21992+18]..[459,22133+56])
                                  Pexp_variant "Match"
                                  Some
                                    expression (compile_stream.ml[456,22017+20]..[459,22133+56])
                                      Pexp_tuple
                                      [
                                        expression (compile_stream.ml[456,22017+21]..[456,22017+25])
                                          Pexp_ident "_loc" (compile_stream.ml[456,22017+21]..[456,22017+25])
                                        expression (compile_stream.ml[457,22044+23]..[459,22133+49])
                                          Pexp_variant "App"
                                          Some
                                            expression (compile_stream.ml[458,22072+25]..[459,22133+49])
                                              Pexp_tuple
                                              [
                                                expression (compile_stream.ml[458,22072+26]..[458,22072+30])
                                                  Pexp_ident "_loc" (compile_stream.ml[458,22072+26]..[458,22072+30])
                                                expression (compile_stream.ml[458,22072+32]..[458,22072+59])
                                                  Pexp_coerce
                                                  expression (compile_stream.ml[458,22072+33]..[458,22072+46])
                                                    Pexp_apply
                                                    expression (compile_stream.ml[458,22072+33]..[458,22072+41])
                                                      Pexp_ident "peek_fun" (compile_stream.ml[458,22072+33]..[458,22072+41])
                                                    [
                                                      <label> ""
                                                        expression (compile_stream.ml[458,22072+42]..[458,22072+46])
                                                          Pexp_ident "_loc" (compile_stream.ml[458,22072+42]..[458,22072+46])
                                                    ]
                                                  None
                                                  core_type (compile_stream.ml[458,22072+50]..[458,22072+58])
                                                    Ptyp_constr "Astf.exp" (compile_stream.ml[458,22072+50]..[458,22072+58])
                                                    []
                                                expression (compile_stream.ml[459,22133+28]..[459,22133+47])
                                                  Pexp_variant "Lid"
                                                  Some
                                                    expression (compile_stream.ml[459,22133+33]..[459,22133+47])
                                                      Pexp_tuple
                                                      [
                                                        expression (compile_stream.ml[459,22133+34]..[459,22133+38])
                                                          Pexp_ident "_loc" (compile_stream.ml[459,22133+34]..[459,22133+38])
                                                        expression (compile_stream.ml[459,22133+40]..[459,22133+46])
                                                          Pexp_ident "strm_n" (compile_stream.ml[459,22133+40]..[459,22133+46])
                                                      ]
                                              ]
                                        expression (compile_stream.ml[459,22133+52]..[459,22133+55])
                                          Pexp_ident "pel" (compile_stream.ml[459,22133+52]..[459,22133+55])
                                      ]
                                None
                                core_type (compile_stream.ml[459,22133+60]..[459,22133+68])
                                  Ptyp_constr "Astf.exp" (compile_stream.ml[459,22133+60]..[459,22133+68])
                                  []
                            core_type (compile_stream.ml[460,22206+16]..[460,22206+19])
                              Ptyp_constr "exp" (compile_stream.ml[460,22206+16]..[460,22206+19])
                              []
                      ]
                ]
          ]
    ]
  structure_item (compile_stream.ml[461,22229+0]..[480,22883+72])
    Pstr_value Rec
    [
      <def>
        pattern (compile_stream.ml[461,22229+8]..[461,22229+20])
          Ppat_var "parser_cases" (compile_stream.ml[461,22229+8]..[461,22229+20])
        expression (compile_stream.ml[462,22252+2]..[480,22883+72])
          Pexp_function
          [
            <case>
              pattern (compile_stream.ml[463,22263+4]..[463,22263+8])
                Ppat_var "_loc" (compile_stream.ml[463,22263+4]..[463,22263+8])
              expression (compile_stream.ml[464,22275+7]..[480,22883+71])
                Pexp_function
                [
                  <case>
                    pattern (compile_stream.ml[465,22291+9]..[465,22291+27])
                      Ppat_constraint
                      pattern (compile_stream.ml[465,22291+10]..[465,22291+11])
                        Ppat_var "x" (compile_stream.ml[465,22291+10]..[465,22291+11])
                      core_type (compile_stream.ml[465,22291+14]..[465,22291+26])
                        Ptyp_constr "stream_cases" (compile_stream.ml[465,22291+14]..[465,22291+26])
                        []
                    expression (compile_stream.ml[466,22322+12]..[480,22883+70])
                      Pexp_match
                      expression (compile_stream.ml[466,22322+18]..[466,22322+19])
                        Pexp_ident "x" (compile_stream.ml[466,22322+18]..[466,22322+19])
                      [
                        <case>
                          pattern (compile_stream.ml[467,22347+14]..[467,22347+16])
                            Ppat_construct "[]" (compile_stream.ml[467,22347+14]..[467,22347+16])
                            None
                          expression (compile_stream.ml[468,22367+16]..[472,22521+70])
                            Pexp_coerce
                            expression (compile_stream.ml[468,22367+17]..[472,22521+57])
                              Pexp_variant "App"
                              Some
                                expression (compile_stream.ml[469,22389+19]..[472,22521+57])
                                  Pexp_tuple
                                  [
                                    expression (compile_stream.ml[469,22389+20]..[469,22389+24])
                                      Pexp_ident "_loc" (compile_stream.ml[469,22389+20]..[469,22389+24])
                                    expression (compile_stream.ml[469,22389+27]..[469,22389+47])
                                      Pexp_variant "Lid"
                                      Some
                                        expression (compile_stream.ml[469,22389+32]..[469,22389+47])
                                          Pexp_tuple
                                          [
                                            expression (compile_stream.ml[469,22389+33]..[469,22389+37])
                                              Pexp_ident "_loc" (compile_stream.ml[469,22389+33]..[469,22389+37])
                                            expression (compile_stream.ml[469,22389+39]..[469,22389+46])
                                              Pexp_constant Const_string("raise",None)
                                          ]
                                    expression (compile_stream.ml[470,22439+22]..[472,22521+55])
                                      Pexp_variant "Dot"
                                      Some
                                        expression (compile_stream.ml[471,22466+24]..[472,22521+55])
                                          Pexp_tuple
                                          [
                                            expression (compile_stream.ml[471,22466+25]..[471,22466+29])
                                              Pexp_ident "_loc" (compile_stream.ml[471,22466+25]..[471,22466+29])
                                            expression (compile_stream.ml[471,22466+32]..[471,22466+52])
                                              Pexp_variant "Uid"
                                              Some
                                                expression (compile_stream.ml[471,22466+37]..[471,22466+52])
                                                  Pexp_tuple
                                                  [
                                                    expression (compile_stream.ml[471,22466+38]..[471,22466+42])
                                                      Pexp_ident "_loc" (compile_stream.ml[471,22466+38]..[471,22466+42])
                                                    expression (compile_stream.ml[471,22466+45]..[471,22466+50])
                                                      Pexp_apply
                                                      expression (compile_stream.ml[471,22466+45]..[471,22466+47])
                                                        Pexp_ident "gm" (compile_stream.ml[471,22466+45]..[471,22466+47])
                                                      [
                                                        <label> ""
                                                          expression (compile_stream.ml[471,22466+48]..[471,22466+50])
                                                            Pexp_construct "()" (compile_stream.ml[471,22466+48]..[471,22466+50])
                                                            None
                                                      ]
                                                  ]
                                            expression (compile_stream.ml[472,22521+27]..[472,22521+53])
                                              Pexp_variant "Uid"
                                              Some
                                                expression (compile_stream.ml[472,22521+32]..[472,22521+53])
                                                  Pexp_tuple
                                                  [
                                                    expression (compile_stream.ml[472,22521+33]..[472,22521+37])
                                                      Pexp_ident "_loc" (compile_stream.ml[472,22521+33]..[472,22521+37])
                                                    expression (compile_stream.ml[472,22521+39]..[472,22521+52])
                                                      Pexp_constant Const_string("NotConsumed",None)
                                                  ]
                                          ]
                                  ]
                            None
                            core_type (compile_stream.ml[472,22521+61]..[472,22521+69])
                              Ptyp_constr "Astf.exp" (compile_stream.ml[472,22521+61]..[472,22521+69])
                              []
                        <case>
                          pattern (compile_stream.ml[473,22592+14]..[473,22592+18])
                            Ppat_var "spel" (compile_stream.ml[473,22592+14]..[473,22592+18])
                          expression (compile_stream.ml[474,22614+17]..[480,22883+69])
                            Pexp_match
                            expression (compile_stream.ml[474,22614+23]..[474,22614+39])
                              Pexp_apply
                              expression (compile_stream.ml[474,22614+23]..[474,22614+34])
                                Pexp_ident "group_terms" (compile_stream.ml[474,22614+23]..[474,22614+34])
                              [
                                <label> ""
                                  expression (compile_stream.ml[474,22614+35]..[474,22614+39])
                                    Pexp_ident "spel" (compile_stream.ml[474,22614+35]..[474,22614+39])
                              ]
                            [
                              <case>
                                pattern (compile_stream.ml[475,22659+19]..[475,22659+31])
                                  Ppat_tuple
                                  [
                                    pattern (compile_stream.ml[475,22659+20]..[475,22659+22])
                                      Ppat_construct "[]" (compile_stream.ml[475,22659+20]..[475,22659+22])
                                      None
                                    pattern (compile_stream.ml[475,22659+23]..[475,22659+30])
                                      Ppat_construct "::" (compile_stream.ml[475,22659+23]..[475,22659+30])
                                      Some
                                        pattern (compile_stream.ml[475,22659+23]..[475,22659+30])
                                          Ppat_tuple
                                          [
                                            pattern (compile_stream.ml[475,22659+23]..[475,22659+24])
                                              Ppat_var "x" (compile_stream.ml[475,22659+23]..[475,22659+24])
                                            pattern (compile_stream.ml[475,22659+26]..[475,22659+30])
                                              Ppat_var "spel" (compile_stream.ml[475,22659+26]..[475,22659+30])
                                          ]
                                  ]
                                expression (compile_stream.ml[476,22694+21]..[477,22737+63])
                                  Pexp_apply
                                  expression (compile_stream.ml[476,22694+21]..[476,22694+35])
                                    Pexp_ident "stream_pattern" (compile_stream.ml[476,22694+21]..[476,22694+35])
                                  [
                                    <label> ""
                                      expression (compile_stream.ml[476,22694+36]..[476,22694+40])
                                        Pexp_ident "_loc" (compile_stream.ml[476,22694+36]..[476,22694+40])
                                    <label> ""
                                      expression (compile_stream.ml[476,22694+41]..[476,22694+42])
                                        Pexp_ident "x" (compile_stream.ml[476,22694+41]..[476,22694+42])
                                    <label> ""
                                      expression (compile_stream.ml[477,22737+24]..[477,22737+62])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (compile_stream.ml[477,22737+35]..[477,22737+36])
                                              Ppat_any
                                            expression (compile_stream.ml[477,22737+40]..[477,22737+62])
                                              Pexp_apply
                                              expression (compile_stream.ml[477,22737+40]..[477,22737+52])
                                                Pexp_ident "parser_cases" (compile_stream.ml[477,22737+40]..[477,22737+52])
                                              [
                                                <label> ""
                                                  expression (compile_stream.ml[477,22737+53]..[477,22737+57])
                                                    Pexp_ident "_loc" (compile_stream.ml[477,22737+53]..[477,22737+57])
                                                <label> ""
                                                  expression (compile_stream.ml[477,22737+58]..[477,22737+62])
                                                    Pexp_ident "spel" (compile_stream.ml[477,22737+58]..[477,22737+62])
                                              ]
                                        ]
                                  ]
                              <case>
                                pattern (compile_stream.ml[478,22801+19]..[478,22801+31])
                                  Ppat_tuple
                                  [
                                    pattern (compile_stream.ml[478,22801+20]..[478,22801+25])
                                      Ppat_var "tspel" (compile_stream.ml[478,22801+20]..[478,22801+25])
                                    pattern (compile_stream.ml[478,22801+26]..[478,22801+30])
                                      Ppat_var "spel" (compile_stream.ml[478,22801+26]..[478,22801+30])
                                  ]
                                expression (compile_stream.ml[479,22836+21]..[480,22883+69])
                                  Pexp_apply
                                  expression (compile_stream.ml[479,22836+21]..[479,22836+41])
                                    Pexp_ident "stream_patterns_term" (compile_stream.ml[479,22836+21]..[479,22836+41])
                                  [
                                    <label> ""
                                      expression (compile_stream.ml[479,22836+42]..[479,22836+46])
                                        Pexp_ident "_loc" (compile_stream.ml[479,22836+42]..[479,22836+46])
                                    <label> ""
                                      expression (compile_stream.ml[480,22883+24]..[480,22883+62])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (compile_stream.ml[480,22883+35]..[480,22883+36])
                                              Ppat_any
                                            expression (compile_stream.ml[480,22883+40]..[480,22883+62])
                                              Pexp_apply
                                              expression (compile_stream.ml[480,22883+40]..[480,22883+52])
                                                Pexp_ident "parser_cases" (compile_stream.ml[480,22883+40]..[480,22883+52])
                                              [
                                                <label> ""
                                                  expression (compile_stream.ml[480,22883+53]..[480,22883+57])
                                                    Pexp_ident "_loc" (compile_stream.ml[480,22883+53]..[480,22883+57])
                                                <label> ""
                                                  expression (compile_stream.ml[480,22883+58]..[480,22883+62])
                                                    Pexp_ident "spel" (compile_stream.ml[480,22883+58]..[480,22883+62])
                                              ]
                                        ]
                                    <label> ""
                                      expression (compile_stream.ml[480,22883+64]..[480,22883+69])
                                        Pexp_ident "tspel" (compile_stream.ml[480,22883+64]..[480,22883+69])
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (compile_stream.ml[481,22956+0]..[496,23450+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_stream.ml[481,22956+4]..[481,22956+11])
          Ppat_var "cparser" (compile_stream.ml[481,22956+4]..[481,22956+11])
        expression (compile_stream.ml[482,22970+2]..[496,23450+23])
          Pexp_function
          [
            <case>
              pattern (compile_stream.ml[483,22981+4]..[483,22981+8])
                Ppat_var "_loc" (compile_stream.ml[483,22981+4]..[483,22981+8])
              expression (compile_stream.ml[484,22993+7]..[496,23450+22])
                Pexp_function
                [
                  <case>
                    pattern (compile_stream.ml[485,23009+9]..[485,23009+11])
                      Ppat_var "pc" (compile_stream.ml[485,23009+9]..[485,23009+11])
                    expression (compile_stream.ml[486,23024+11]..[496,23450+22])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (compile_stream.ml[486,23024+15]..[486,23024+16])
                            Ppat_var "e" (compile_stream.ml[486,23024+15]..[486,23024+16])
                          expression (compile_stream.ml[486,23024+19]..[486,23024+39])
                            Pexp_apply
                            expression (compile_stream.ml[486,23024+19]..[486,23024+31])
                              Pexp_ident "parser_cases" (compile_stream.ml[486,23024+19]..[486,23024+31])
                            [
                              <label> ""
                                expression (compile_stream.ml[486,23024+32]..[486,23024+36])
                                  Pexp_ident "_loc" (compile_stream.ml[486,23024+32]..[486,23024+36])
                              <label> ""
                                expression (compile_stream.ml[486,23024+37]..[486,23024+39])
                                  Pexp_ident "pc" (compile_stream.ml[486,23024+37]..[486,23024+39])
                            ]
                      ]
                      expression (compile_stream.ml[487,23067+11]..[496,23450+22])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (compile_stream.ml[487,23067+15]..[487,23067+16])
                              Ppat_var "p" (compile_stream.ml[487,23067+15]..[487,23067+16])
                            expression (compile_stream.ml[488,23086+13]..[494,23318+50])
                              Pexp_coerce
                              expression (compile_stream.ml[488,23086+14]..[494,23318+37])
                                Pexp_variant "Constraint"
                                Some
                                  expression (compile_stream.ml[489,23112+16]..[494,23318+37])
                                    Pexp_tuple
                                    [
                                      expression (compile_stream.ml[489,23112+17]..[489,23112+21])
                                        Pexp_ident "_loc" (compile_stream.ml[489,23112+17]..[489,23112+21])
                                      expression (compile_stream.ml[489,23112+24]..[489,23112+43])
                                        Pexp_variant "Lid"
                                        Some
                                          expression (compile_stream.ml[489,23112+29]..[489,23112+43])
                                            Pexp_tuple
                                            [
                                              expression (compile_stream.ml[489,23112+30]..[489,23112+34])
                                                Pexp_ident "_loc" (compile_stream.ml[489,23112+30]..[489,23112+34])
                                              expression (compile_stream.ml[489,23112+36]..[489,23112+42])
                                                Pexp_ident "strm_n" (compile_stream.ml[489,23112+36]..[489,23112+42])
                                            ]
                                      expression (compile_stream.ml[490,23158+19]..[494,23318+35])
                                        Pexp_variant "App"
                                        Some
                                          expression (compile_stream.ml[491,23182+21]..[494,23318+35])
                                            Pexp_tuple
                                            [
                                              expression (compile_stream.ml[491,23182+22]..[491,23182+26])
                                                Pexp_ident "_loc" (compile_stream.ml[491,23182+22]..[491,23182+26])
                                              expression (compile_stream.ml[492,23210+24]..[493,23239+76])
                                                Pexp_variant "Dot"
                                                Some
                                                  expression (compile_stream.ml[493,23239+26]..[493,23239+76])
                                                    Pexp_tuple
                                                    [
                                                      expression (compile_stream.ml[493,23239+27]..[493,23239+31])
                                                        Pexp_ident "_loc" (compile_stream.ml[493,23239+27]..[493,23239+31])
                                                      expression (compile_stream.ml[493,23239+34]..[493,23239+54])
                                                        Pexp_variant "Uid"
                                                        Some
                                                          expression (compile_stream.ml[493,23239+39]..[493,23239+54])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_stream.ml[493,23239+40]..[493,23239+44])
                                                                Pexp_ident "_loc" (compile_stream.ml[493,23239+40]..[493,23239+44])
                                                              expression (compile_stream.ml[493,23239+47]..[493,23239+52])
                                                                Pexp_apply
                                                                expression (compile_stream.ml[493,23239+47]..[493,23239+49])
                                                                  Pexp_ident "gm" (compile_stream.ml[493,23239+47]..[493,23239+49])
                                                                [
                                                                  <label> ""
                                                                    expression (compile_stream.ml[493,23239+50]..[493,23239+52])
                                                                      Pexp_construct "()" (compile_stream.ml[493,23239+50]..[493,23239+52])
                                                                      None
                                                                ]
                                                            ]
                                                      expression (compile_stream.ml[493,23239+58]..[493,23239+74])
                                                        Pexp_variant "Lid"
                                                        Some
                                                          expression (compile_stream.ml[493,23239+63]..[493,23239+74])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_stream.ml[493,23239+64]..[493,23239+68])
                                                                Pexp_ident "_loc" (compile_stream.ml[493,23239+64]..[493,23239+68])
                                                              expression (compile_stream.ml[493,23239+70]..[493,23239+73])
                                                                Pexp_constant Const_string("t",None)
                                                            ]
                                                    ]
                                              expression (compile_stream.ml[494,23318+24]..[494,23318+33])
                                                Pexp_variant "Any"
                                                Some
                                                  expression (compile_stream.ml[494,23318+29]..[494,23318+33])
                                                    Pexp_ident "_loc" (compile_stream.ml[494,23318+29]..[494,23318+33])
                                            ]
                                    ]
                              None
                              core_type (compile_stream.ml[494,23318+41]..[494,23318+49])
                                Ptyp_constr "Astf.pat" (compile_stream.ml[494,23318+41]..[494,23318+49])
                                []
                        ]
                        expression (compile_stream.ml[495,23372+11]..[496,23450+22])
                          Pexp_coerce
                          expression (compile_stream.ml[495,23372+12]..[495,23372+73])
                            Pexp_variant "Fun"
                            Some
                              expression (compile_stream.ml[495,23372+17]..[495,23372+73])
                                Pexp_tuple
                                [
                                  expression (compile_stream.ml[495,23372+18]..[495,23372+22])
                                    Pexp_ident "_loc" (compile_stream.ml[495,23372+18]..[495,23372+22])
                                  expression (compile_stream.ml[495,23372+25]..[495,23372+71])
                                    Pexp_variant "Case"
                                    Some
                                      expression (compile_stream.ml[495,23372+31]..[495,23372+71])
                                        Pexp_tuple
                                        [
                                          expression (compile_stream.ml[495,23372+32]..[495,23372+36])
                                            Pexp_ident "_loc" (compile_stream.ml[495,23372+32]..[495,23372+36])
                                          expression (compile_stream.ml[495,23372+38]..[495,23372+53])
                                            Pexp_coerce
                                            expression (compile_stream.ml[495,23372+39]..[495,23372+40])
                                              Pexp_ident "p" (compile_stream.ml[495,23372+39]..[495,23372+40])
                                            None
                                            core_type (compile_stream.ml[495,23372+44]..[495,23372+52])
                                              Ptyp_constr "Astf.pat" (compile_stream.ml[495,23372+44]..[495,23372+52])
                                              []
                                          expression (compile_stream.ml[495,23372+55]..[495,23372+70])
                                            Pexp_coerce
                                            expression (compile_stream.ml[495,23372+56]..[495,23372+57])
                                              Pexp_ident "e" (compile_stream.ml[495,23372+56]..[495,23372+57])
                                            None
                                            core_type (compile_stream.ml[495,23372+61]..[495,23372+69])
                                              Ptyp_constr "Astf.exp" (compile_stream.ml[495,23372+61]..[495,23372+69])
                                              []
                                        ]
                                ]
                          None
                          core_type (compile_stream.ml[496,23450+13]..[496,23450+21])
                            Ptyp_constr "Astf.exp" (compile_stream.ml[496,23450+13]..[496,23450+21])
                            []
                ]
          ]
    ]
  structure_item (compile_stream.ml[497,23474+0]..[499,23511+19])
    Pstr_type
    [
      type_declaration "sexp_comp" (compile_stream.ml[497,23474+5]..[497,23474+14]) (compile_stream.ml[497,23474+5]..[499,23511+19])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (compile_stream.ml[498,23491+4]..[498,23491+19])
                "Trm" (compile_stream.ml[498,23491+4]..[498,23491+7])
                [
                  core_type (compile_stream.ml[498,23491+11]..[498,23491+14])
                    Ptyp_constr "loc" (compile_stream.ml[498,23491+11]..[498,23491+14])
                    []
                  core_type (compile_stream.ml[498,23491+16]..[498,23491+19])
                    Ptyp_constr "exp" (compile_stream.ml[498,23491+16]..[498,23491+19])
                    []
                ]
                None
              (compile_stream.ml[499,23511+4]..[499,23511+19])
                "Ntr" (compile_stream.ml[499,23511+4]..[499,23511+7])
                [
                  core_type (compile_stream.ml[499,23511+11]..[499,23511+14])
                    Ptyp_constr "loc" (compile_stream.ml[499,23511+11]..[499,23511+14])
                    []
                  core_type (compile_stream.ml[499,23511+16]..[499,23511+19])
                    Ptyp_constr "exp" (compile_stream.ml[499,23511+16]..[499,23511+19])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (compile_stream.ml[500,23531+0]..[519,24113+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_stream.ml[500,23531+4]..[500,23531+17])
          Ppat_var "not_computing" (compile_stream.ml[500,23531+4]..[500,23531+17])
        expression (compile_stream.ml[501,23551+2]..[519,24113+11])
          Pexp_function
          [
            <case>
              pattern (compile_stream.ml[502,23562+4]..[502,23562+5])
                Ppat_var "x" (compile_stream.ml[502,23562+4]..[502,23562+5])
              expression (compile_stream.ml[503,23571+6]..[519,24113+11])
                Pexp_let Rec
                [
                  <def>
                    pattern (compile_stream.ml[503,23571+14]..[503,23571+17])
                      Ppat_var "aux" (compile_stream.ml[503,23571+14]..[503,23571+17])
                    expression (compile_stream.ml[504,23591+8]..[511,23817+26])
                      Pexp_function
                      [
                        <case>
                          pattern (compile_stream.ml[505,23608+10]..[505,23608+11])
                            Ppat_var "x" (compile_stream.ml[505,23608+10]..[505,23608+11])
                          expression (compile_stream.ml[506,23623+13]..[511,23817+25])
                            Pexp_match
                            expression (compile_stream.ml[506,23623+19]..[506,23623+20])
                              Pexp_ident "x" (compile_stream.ml[506,23623+19]..[506,23623+20])
                            [
                              <case>
                                pattern (compile_stream.ml[507,23649+15]..[507,23649+23])
                                  Ppat_type
                                  "literal" (compile_stream.ml[507,23649+16]..[507,23649+23])
                                expression (compile_stream.ml[507,23649+27]..[507,23649+31])
                                  Pexp_construct "true" (compile_stream.ml[507,23649+27]..[507,23649+31])
                                  None
                              <case>
                                pattern (compile_stream.ml[508,23681+15]..[508,23681+20])
                                  Ppat_type
                                  "vid'" (compile_stream.ml[508,23681+16]..[508,23681+20])
                                expression (compile_stream.ml[508,23681+24]..[508,23681+28])
                                  Pexp_construct "true" (compile_stream.ml[508,23681+24]..[508,23681+28])
                                  None
                              <case>
                                pattern (compile_stream.ml[509,23710+15]..[509,23710+43])
                                  Ppat_constraint
                                  pattern (compile_stream.ml[509,23710+16]..[509,23710+31])
                                    Ppat_variant "App"
                                    Some
                                      pattern (compile_stream.ml[509,23710+16]..[509,23710+31])
                                        Ppat_tuple
                                        [
                                          pattern (compile_stream.ml[509,23710+22]..[509,23710+26])
                                            Ppat_var "_loc" (compile_stream.ml[509,23710+22]..[509,23710+26])
                                          pattern (compile_stream.ml[509,23710+27]..[509,23710+28])
                                            Ppat_var "x" (compile_stream.ml[509,23710+27]..[509,23710+28])
                                          pattern (compile_stream.ml[509,23710+29]..[509,23710+30])
                                            Ppat_var "y" (compile_stream.ml[509,23710+29]..[509,23710+30])
                                        ]
                                  core_type (compile_stream.ml[509,23710+34]..[509,23710+42])
                                    Ptyp_constr "Astf.exp" (compile_stream.ml[509,23710+34]..[509,23710+42])
                                    []
                                expression (compile_stream.ml[510,23757+17]..[510,23757+59])
                                  Pexp_apply
                                  expression (compile_stream.ml[510,23757+49]..[510,23757+51])
                                    Pexp_ident "&&" (compile_stream.ml[510,23757+49]..[510,23757+51])
                                  [
                                    <label> ""
                                      expression (compile_stream.ml[510,23757+18]..[510,23757+47])
                                        Pexp_apply
                                        expression (compile_stream.ml[510,23757+18]..[510,23757+45])
                                          Pexp_ident "is_cons_apply_not_computing" (compile_stream.ml[510,23757+18]..[510,23757+45])
                                        [
                                          <label> ""
                                            expression (compile_stream.ml[510,23757+46]..[510,23757+47])
                                              Pexp_ident "x" (compile_stream.ml[510,23757+46]..[510,23757+47])
                                        ]
                                    <label> ""
                                      expression (compile_stream.ml[510,23757+53]..[510,23757+58])
                                        Pexp_apply
                                        expression (compile_stream.ml[510,23757+53]..[510,23757+56])
                                          Pexp_ident "aux" (compile_stream.ml[510,23757+53]..[510,23757+56])
                                        [
                                          <label> ""
                                            expression (compile_stream.ml[510,23757+57]..[510,23757+58])
                                              Pexp_ident "y" (compile_stream.ml[510,23757+57]..[510,23757+58])
                                        ]
                                  ]
                              <case>
                                pattern (compile_stream.ml[511,23817+15]..[511,23817+16])
                                  Ppat_any
                                expression (compile_stream.ml[511,23817+20]..[511,23817+25])
                                  Pexp_construct "false" (compile_stream.ml[511,23817+20]..[511,23817+25])
                                  None
                            ]
                      ]
                  <def>
                    pattern (compile_stream.ml[512,23844+10]..[512,23844+37])
                      Ppat_var "is_cons_apply_not_computing" (compile_stream.ml[512,23844+10]..[512,23844+37])
                    expression (compile_stream.ml[513,23884+8]..[518,24089+20])
                      Pexp_function
                      [
                        <case>
                          pattern (compile_stream.ml[514,23901+10]..[514,23901+36])
                            Ppat_constraint
                            pattern (compile_stream.ml[514,23901+11]..[514,23901+24])
                              Ppat_variant "Uid"
                              Some
                                pattern (compile_stream.ml[514,23901+11]..[514,23901+24])
                                  Ppat_tuple
                                  [
                                    pattern (compile_stream.ml[514,23901+17]..[514,23901+21])
                                      Ppat_var "_loc" (compile_stream.ml[514,23901+17]..[514,23901+21])
                                    pattern (compile_stream.ml[514,23901+22]..[514,23901+23])
                                      Ppat_any
                                  ]
                            core_type (compile_stream.ml[514,23901+27]..[514,23901+35])
                              Ptyp_constr "Astf.exp" (compile_stream.ml[514,23901+27]..[514,23901+35])
                              []
                          expression (compile_stream.ml[514,23901+40]..[514,23901+44])
                            Pexp_construct "true" (compile_stream.ml[514,23901+40]..[514,23901+44])
                            None
                        <case>
                          pattern (compile_stream.ml[515,23946+10]..[515,23946+36])
                            Ppat_constraint
                            pattern (compile_stream.ml[515,23946+11]..[515,23946+24])
                              Ppat_variant "Lid"
                              Some
                                pattern (compile_stream.ml[515,23946+11]..[515,23946+24])
                                  Ppat_tuple
                                  [
                                    pattern (compile_stream.ml[515,23946+17]..[515,23946+21])
                                      Ppat_var "_loc" (compile_stream.ml[515,23946+17]..[515,23946+21])
                                    pattern (compile_stream.ml[515,23946+22]..[515,23946+23])
                                      Ppat_any
                                  ]
                            core_type (compile_stream.ml[515,23946+27]..[515,23946+35])
                              Ptyp_constr "Astf.exp" (compile_stream.ml[515,23946+27]..[515,23946+35])
                              []
                          expression (compile_stream.ml[515,23946+40]..[515,23946+45])
                            Pexp_construct "false" (compile_stream.ml[515,23946+40]..[515,23946+45])
                            None
                        <case>
                          pattern (compile_stream.ml[516,23992+10]..[516,23992+38])
                            Ppat_constraint
                            pattern (compile_stream.ml[516,23992+11]..[516,23992+26])
                              Ppat_variant "App"
                              Some
                                pattern (compile_stream.ml[516,23992+11]..[516,23992+26])
                                  Ppat_tuple
                                  [
                                    pattern (compile_stream.ml[516,23992+17]..[516,23992+21])
                                      Ppat_var "_loc" (compile_stream.ml[516,23992+17]..[516,23992+21])
                                    pattern (compile_stream.ml[516,23992+22]..[516,23992+23])
                                      Ppat_var "x" (compile_stream.ml[516,23992+22]..[516,23992+23])
                                    pattern (compile_stream.ml[516,23992+24]..[516,23992+25])
                                      Ppat_var "y" (compile_stream.ml[516,23992+24]..[516,23992+25])
                                  ]
                            core_type (compile_stream.ml[516,23992+29]..[516,23992+37])
                              Ptyp_constr "Astf.exp" (compile_stream.ml[516,23992+29]..[516,23992+37])
                              []
                          expression (compile_stream.ml[517,24034+12]..[517,24034+54])
                            Pexp_apply
                            expression (compile_stream.ml[517,24034+44]..[517,24034+46])
                              Pexp_ident "&&" (compile_stream.ml[517,24034+44]..[517,24034+46])
                            [
                              <label> ""
                                expression (compile_stream.ml[517,24034+13]..[517,24034+42])
                                  Pexp_apply
                                  expression (compile_stream.ml[517,24034+13]..[517,24034+40])
                                    Pexp_ident "is_cons_apply_not_computing" (compile_stream.ml[517,24034+13]..[517,24034+40])
                                  [
                                    <label> ""
                                      expression (compile_stream.ml[517,24034+41]..[517,24034+42])
                                        Pexp_ident "x" (compile_stream.ml[517,24034+41]..[517,24034+42])
                                  ]
                              <label> ""
                                expression (compile_stream.ml[517,24034+48]..[517,24034+53])
                                  Pexp_apply
                                  expression (compile_stream.ml[517,24034+48]..[517,24034+51])
                                    Pexp_ident "aux" (compile_stream.ml[517,24034+48]..[517,24034+51])
                                  [
                                    <label> ""
                                      expression (compile_stream.ml[517,24034+52]..[517,24034+53])
                                        Pexp_ident "y" (compile_stream.ml[517,24034+52]..[517,24034+53])
                                  ]
                            ]
                        <case>
                          pattern (compile_stream.ml[518,24089+10]..[518,24089+11])
                            Ppat_any
                          expression (compile_stream.ml[518,24089+15]..[518,24089+20])
                            Pexp_construct "false" (compile_stream.ml[518,24089+15]..[518,24089+20])
                            None
                      ]
                ]
                expression (compile_stream.ml[519,24113+6]..[519,24113+11])
                  Pexp_apply
                  expression (compile_stream.ml[519,24113+6]..[519,24113+9])
                    Pexp_ident "aux" (compile_stream.ml[519,24113+6]..[519,24113+9])
                  [
                    <label> ""
                      expression (compile_stream.ml[519,24113+10]..[519,24113+11])
                        Pexp_ident "x" (compile_stream.ml[519,24113+10]..[519,24113+11])
                  ]
          ]
    ]
  structure_item (compile_stream.ml[520,24125+0]..[535,24610+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_stream.ml[520,24125+4]..[520,24125+9])
          Ppat_var "slazy" (compile_stream.ml[520,24125+4]..[520,24125+9])
        expression (compile_stream.ml[521,24137+2]..[535,24610+27])
          Pexp_function
          [
            <case>
              pattern (compile_stream.ml[522,24148+4]..[522,24148+8])
                Ppat_var "_loc" (compile_stream.ml[522,24148+4]..[522,24148+8])
              expression (compile_stream.ml[523,24160+7]..[535,24610+26])
                Pexp_function
                [
                  <case>
                    pattern (compile_stream.ml[524,24176+9]..[524,24176+10])
                      Ppat_var "e" (compile_stream.ml[524,24176+9]..[524,24176+10])
                    expression (compile_stream.ml[525,24190+12]..[535,24610+25])
                      Pexp_match
                      expression (compile_stream.ml[525,24190+18]..[525,24190+19])
                        Pexp_ident "e" (compile_stream.ml[525,24190+18]..[525,24190+19])
                      [
                        <case>
                          pattern (compile_stream.ml[526,24215+14]..[526,24215+48])
                            Ppat_constraint
                            pattern (compile_stream.ml[526,24215+15]..[526,24215+36])
                              Ppat_variant "App"
                              Some
                                pattern (compile_stream.ml[526,24215+15]..[526,24215+36])
                                  Ppat_tuple
                                  [
                                    pattern (compile_stream.ml[526,24215+21]..[526,24215+25])
                                      Ppat_var "_loc" (compile_stream.ml[526,24215+21]..[526,24215+25])
                                    pattern (compile_stream.ml[526,24215+26]..[526,24215+27])
                                      Ppat_var "f" (compile_stream.ml[526,24215+26]..[526,24215+27])
                                    pattern (compile_stream.ml[526,24215+28]..[526,24215+35])
                                      Ppat_variant "Unit"
                                      Some
                                        pattern (compile_stream.ml[526,24215+34]..[526,24215+35])
                                          Ppat_any
                                  ]
                            core_type (compile_stream.ml[526,24215+39]..[526,24215+47])
                              Ptyp_constr "Astf.exp" (compile_stream.ml[526,24215+39]..[526,24215+47])
                              []
                          expression (compile_stream.ml[527,24267+17]..[532,24480+30])
                            Pexp_match
                            expression (compile_stream.ml[527,24267+23]..[527,24267+24])
                              Pexp_ident "f" (compile_stream.ml[527,24267+23]..[527,24267+24])
                            [
                              <case>
                                pattern (compile_stream.ml[528,24297+19]..[528,24297+45])
                                  Ppat_constraint
                                  pattern (compile_stream.ml[528,24297+20]..[528,24297+33])
                                    Ppat_variant "Lid"
                                    Some
                                      pattern (compile_stream.ml[528,24297+20]..[528,24297+33])
                                        Ppat_tuple
                                        [
                                          pattern (compile_stream.ml[528,24297+26]..[528,24297+30])
                                            Ppat_var "_loc" (compile_stream.ml[528,24297+26]..[528,24297+30])
                                          pattern (compile_stream.ml[528,24297+31]..[528,24297+32])
                                            Ppat_any
                                        ]
                                  core_type (compile_stream.ml[528,24297+36]..[528,24297+44])
                                    Ptyp_constr "Astf.exp" (compile_stream.ml[528,24297+36]..[528,24297+44])
                                    []
                                expression (compile_stream.ml[528,24297+49]..[528,24297+50])
                                  Pexp_ident "f" (compile_stream.ml[528,24297+49]..[528,24297+50])
                              <case>
                                pattern (compile_stream.ml[529,24348+19]..[529,24348+20])
                                  Ppat_any
                                expression (compile_stream.ml[530,24372+21]..[532,24480+30])
                                  Pexp_coerce
                                  expression (compile_stream.ml[530,24372+22]..[531,24399+76])
                                    Pexp_variant "Fun"
                                    Some
                                      expression (compile_stream.ml[531,24399+24]..[531,24399+76])
                                        Pexp_tuple
                                        [
                                          expression (compile_stream.ml[531,24399+25]..[531,24399+29])
                                            Pexp_ident "_loc" (compile_stream.ml[531,24399+25]..[531,24399+29])
                                          expression (compile_stream.ml[531,24399+32]..[531,24399+74])
                                            Pexp_variant "Case"
                                            Some
                                              expression (compile_stream.ml[531,24399+38]..[531,24399+74])
                                                Pexp_tuple
                                                [
                                                  expression (compile_stream.ml[531,24399+39]..[531,24399+43])
                                                    Pexp_ident "_loc" (compile_stream.ml[531,24399+39]..[531,24399+43])
                                                  expression (compile_stream.ml[531,24399+46]..[531,24399+55])
                                                    Pexp_variant "Any"
                                                    Some
                                                      expression (compile_stream.ml[531,24399+51]..[531,24399+55])
                                                        Pexp_ident "_loc" (compile_stream.ml[531,24399+51]..[531,24399+55])
                                                  expression (compile_stream.ml[531,24399+58]..[531,24399+73])
                                                    Pexp_coerce
                                                    expression (compile_stream.ml[531,24399+59]..[531,24399+60])
                                                      Pexp_ident "e" (compile_stream.ml[531,24399+59]..[531,24399+60])
                                                    None
                                                    core_type (compile_stream.ml[531,24399+64]..[531,24399+72])
                                                      Ptyp_constr "Astf.exp" (compile_stream.ml[531,24399+64]..[531,24399+72])
                                                      []
                                                ]
                                        ]
                                  None
                                  core_type (compile_stream.ml[532,24480+21]..[532,24480+29])
                                    Ptyp_constr "Astf.exp" (compile_stream.ml[532,24480+21]..[532,24480+29])
                                    []
                            ]
                        <case>
                          pattern (compile_stream.ml[533,24512+14]..[533,24512+15])
                            Ppat_any
                          expression (compile_stream.ml[534,24531+16]..[535,24610+25])
                            Pexp_coerce
                            expression (compile_stream.ml[534,24531+17]..[534,24531+74])
                              Pexp_variant "Fun"
                              Some
                                expression (compile_stream.ml[534,24531+22]..[534,24531+74])
                                  Pexp_tuple
                                  [
                                    expression (compile_stream.ml[534,24531+23]..[534,24531+27])
                                      Pexp_ident "_loc" (compile_stream.ml[534,24531+23]..[534,24531+27])
                                    expression (compile_stream.ml[534,24531+30]..[534,24531+72])
                                      Pexp_variant "Case"
                                      Some
                                        expression (compile_stream.ml[534,24531+36]..[534,24531+72])
                                          Pexp_tuple
                                          [
                                            expression (compile_stream.ml[534,24531+37]..[534,24531+41])
                                              Pexp_ident "_loc" (compile_stream.ml[534,24531+37]..[534,24531+41])
                                            expression (compile_stream.ml[534,24531+44]..[534,24531+53])
                                              Pexp_variant "Any"
                                              Some
                                                expression (compile_stream.ml[534,24531+49]..[534,24531+53])
                                                  Pexp_ident "_loc" (compile_stream.ml[534,24531+49]..[534,24531+53])
                                            expression (compile_stream.ml[534,24531+56]..[534,24531+71])
                                              Pexp_coerce
                                              expression (compile_stream.ml[534,24531+57]..[534,24531+58])
                                                Pexp_ident "e" (compile_stream.ml[534,24531+57]..[534,24531+58])
                                              None
                                              core_type (compile_stream.ml[534,24531+62]..[534,24531+70])
                                                Ptyp_constr "Astf.exp" (compile_stream.ml[534,24531+62]..[534,24531+70])
                                                []
                                          ]
                                  ]
                            None
                            core_type (compile_stream.ml[535,24610+16]..[535,24610+24])
                              Ptyp_constr "Astf.exp" (compile_stream.ml[535,24610+16]..[535,24610+24])
                              []
                      ]
                ]
          ]
    ]
  structure_item (compile_stream.ml[536,24638+0]..[608,27086+64])
    Pstr_value Rec
    [
      <def>
        pattern (compile_stream.ml[536,24638+8]..[536,24638+15])
          Ppat_var "cstream" (compile_stream.ml[536,24638+8]..[536,24638+15])
        expression (compile_stream.ml[537,24656+2]..[608,27086+64])
          Pexp_function
          [
            <case>
              pattern (compile_stream.ml[538,24667+4]..[538,24667+8])
                Ppat_var "gloc" (compile_stream.ml[538,24667+4]..[538,24667+8])
              expression (compile_stream.ml[539,24679+7]..[608,27086+63])
                Pexp_function
                [
                  <case>
                    pattern (compile_stream.ml[540,24695+9]..[540,24695+11])
                      Ppat_construct "[]" (compile_stream.ml[540,24695+9]..[540,24695+11])
                      None
                    expression (compile_stream.ml[541,24710+11]..[543,24817+22])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (compile_stream.ml[541,24710+15]..[541,24710+19])
                            Ppat_var "_loc" (compile_stream.ml[541,24710+15]..[541,24710+19])
                          expression (compile_stream.ml[541,24710+22]..[541,24710+26])
                            Pexp_ident "gloc" (compile_stream.ml[541,24710+22]..[541,24710+26])
                      ]
                      expression (compile_stream.ml[542,24740+11]..[543,24817+22])
                        Pexp_coerce
                        expression (compile_stream.ml[542,24740+12]..[542,24740+72])
                          Pexp_variant "Dot"
                          Some
                            expression (compile_stream.ml[542,24740+17]..[542,24740+72])
                              Pexp_tuple
                              [
                                expression (compile_stream.ml[542,24740+18]..[542,24740+22])
                                  Pexp_ident "_loc" (compile_stream.ml[542,24740+18]..[542,24740+22])
                                expression (compile_stream.ml[542,24740+25]..[542,24740+45])
                                  Pexp_variant "Uid"
                                  Some
                                    expression (compile_stream.ml[542,24740+30]..[542,24740+45])
                                      Pexp_tuple
                                      [
                                        expression (compile_stream.ml[542,24740+31]..[542,24740+35])
                                          Pexp_ident "_loc" (compile_stream.ml[542,24740+31]..[542,24740+35])
                                        expression (compile_stream.ml[542,24740+38]..[542,24740+43])
                                          Pexp_apply
                                          expression (compile_stream.ml[542,24740+38]..[542,24740+40])
                                            Pexp_ident "gm" (compile_stream.ml[542,24740+38]..[542,24740+40])
                                          [
                                            <label> ""
                                              expression (compile_stream.ml[542,24740+41]..[542,24740+43])
                                                Pexp_construct "()" (compile_stream.ml[542,24740+41]..[542,24740+43])
                                                None
                                          ]
                                      ]
                                expression (compile_stream.ml[542,24740+49]..[542,24740+70])
                                  Pexp_variant "Lid"
                                  Some
                                    expression (compile_stream.ml[542,24740+54]..[542,24740+70])
                                      Pexp_tuple
                                      [
                                        expression (compile_stream.ml[542,24740+55]..[542,24740+59])
                                          Pexp_ident "_loc" (compile_stream.ml[542,24740+55]..[542,24740+59])
                                        expression (compile_stream.ml[542,24740+61]..[542,24740+69])
                                          Pexp_constant Const_string("sempty",None)
                                      ]
                              ]
                        None
                        core_type (compile_stream.ml[543,24817+13]..[543,24817+21])
                          Ptyp_constr "Astf.exp" (compile_stream.ml[543,24817+13]..[543,24817+21])
                          []
                  <case>
                    pattern (compile_stream.ml[544,24840+9]..[544,24840+27])
                      Ppat_construct "::" (compile_stream.ml[544,24840+9]..[544,24840+27])
                      Some
                        pattern (compile_stream.ml[544,24840+9]..[544,24840+27])
                          Ppat_tuple
                          [
                            pattern (compile_stream.ml[544,24840+10]..[544,24840+22])
                              Ppat_construct "Trm" (compile_stream.ml[544,24840+10]..[544,24840+13])
                              Some
                                pattern (compile_stream.ml[544,24840+10]..[544,24840+22])
                                  Ppat_tuple
                                  [
                                    pattern (compile_stream.ml[544,24840+15]..[544,24840+19])
                                      Ppat_var "_loc" (compile_stream.ml[544,24840+15]..[544,24840+19])
                                    pattern (compile_stream.ml[544,24840+20]..[544,24840+21])
                                      Ppat_var "e" (compile_stream.ml[544,24840+20]..[544,24840+21])
                                  ]
                            pattern (compile_stream.ml[544,24840+25]..[544,24840+27])
                              Ppat_construct "[]" (compile_stream.ml[544,24840+25]..[544,24840+27])
                              None
                          ]
                    expression (compile_stream.ml[545,24871+11]..[557,25269+58])
                      Pexp_ifthenelse
                      expression (compile_stream.ml[545,24871+14]..[545,24871+29])
                        Pexp_apply
                        expression (compile_stream.ml[545,24871+14]..[545,24871+27])
                          Pexp_ident "not_computing" (compile_stream.ml[545,24871+14]..[545,24871+27])
                        [
                          <label> ""
                            expression (compile_stream.ml[545,24871+28]..[545,24871+29])
                              Pexp_ident "e" (compile_stream.ml[545,24871+28]..[545,24871+29])
                        ]
                      expression (compile_stream.ml[547,24917+13]..[551,25061+47])
                        Pexp_coerce
                        expression (compile_stream.ml[547,24917+14]..[551,25061+34])
                          Pexp_variant "App"
                          Some
                            expression (compile_stream.ml[548,24936+16]..[551,25061+34])
                              Pexp_tuple
                              [
                                expression (compile_stream.ml[548,24936+17]..[548,24936+21])
                                  Pexp_ident "_loc" (compile_stream.ml[548,24936+17]..[548,24936+21])
                                expression (compile_stream.ml[549,24959+19]..[550,24983+75])
                                  Pexp_variant "Dot"
                                  Some
                                    expression (compile_stream.ml[550,24983+21]..[550,24983+75])
                                      Pexp_tuple
                                      [
                                        expression (compile_stream.ml[550,24983+22]..[550,24983+26])
                                          Pexp_ident "_loc" (compile_stream.ml[550,24983+22]..[550,24983+26])
                                        expression (compile_stream.ml[550,24983+29]..[550,24983+49])
                                          Pexp_variant "Uid"
                                          Some
                                            expression (compile_stream.ml[550,24983+34]..[550,24983+49])
                                              Pexp_tuple
                                              [
                                                expression (compile_stream.ml[550,24983+35]..[550,24983+39])
                                                  Pexp_ident "_loc" (compile_stream.ml[550,24983+35]..[550,24983+39])
                                                expression (compile_stream.ml[550,24983+42]..[550,24983+47])
                                                  Pexp_apply
                                                  expression (compile_stream.ml[550,24983+42]..[550,24983+44])
                                                    Pexp_ident "gm" (compile_stream.ml[550,24983+42]..[550,24983+44])
                                                  [
                                                    <label> ""
                                                      expression (compile_stream.ml[550,24983+45]..[550,24983+47])
                                                        Pexp_construct "()" (compile_stream.ml[550,24983+45]..[550,24983+47])
                                                        None
                                                  ]
                                              ]
                                        expression (compile_stream.ml[550,24983+53]..[550,24983+73])
                                          Pexp_variant "Lid"
                                          Some
                                            expression (compile_stream.ml[550,24983+58]..[550,24983+73])
                                              Pexp_tuple
                                              [
                                                expression (compile_stream.ml[550,24983+59]..[550,24983+63])
                                                  Pexp_ident "_loc" (compile_stream.ml[550,24983+59]..[550,24983+63])
                                                expression (compile_stream.ml[550,24983+65]..[550,24983+72])
                                                  Pexp_constant Const_string("ising",None)
                                              ]
                                      ]
                                expression (compile_stream.ml[551,25061+18]..[551,25061+33])
                                  Pexp_coerce
                                  expression (compile_stream.ml[551,25061+19]..[551,25061+20])
                                    Pexp_ident "e" (compile_stream.ml[551,25061+19]..[551,25061+20])
                                  None
                                  core_type (compile_stream.ml[551,25061+24]..[551,25061+32])
                                    Ptyp_constr "Astf.exp" (compile_stream.ml[551,25061+24]..[551,25061+32])
                                    []
                              ]
                        None
                        core_type (compile_stream.ml[551,25061+38]..[551,25061+46])
                          Ptyp_constr "Astf.exp" (compile_stream.ml[551,25061+38]..[551,25061+46])
                          []
                      Some
                        expression (compile_stream.ml[553,25125+13]..[557,25269+58])
                          Pexp_coerce
                          expression (compile_stream.ml[553,25125+14]..[557,25269+45])
                            Pexp_variant "App"
                            Some
                              expression (compile_stream.ml[554,25144+16]..[557,25269+45])
                                Pexp_tuple
                                [
                                  expression (compile_stream.ml[554,25144+17]..[554,25144+21])
                                    Pexp_ident "_loc" (compile_stream.ml[554,25144+17]..[554,25144+21])
                                  expression (compile_stream.ml[555,25167+19]..[556,25191+75])
                                    Pexp_variant "Dot"
                                    Some
                                      expression (compile_stream.ml[556,25191+21]..[556,25191+75])
                                        Pexp_tuple
                                        [
                                          expression (compile_stream.ml[556,25191+22]..[556,25191+26])
                                            Pexp_ident "_loc" (compile_stream.ml[556,25191+22]..[556,25191+26])
                                          expression (compile_stream.ml[556,25191+29]..[556,25191+49])
                                            Pexp_variant "Uid"
                                            Some
                                              expression (compile_stream.ml[556,25191+34]..[556,25191+49])
                                                Pexp_tuple
                                                [
                                                  expression (compile_stream.ml[556,25191+35]..[556,25191+39])
                                                    Pexp_ident "_loc" (compile_stream.ml[556,25191+35]..[556,25191+39])
                                                  expression (compile_stream.ml[556,25191+42]..[556,25191+47])
                                                    Pexp_apply
                                                    expression (compile_stream.ml[556,25191+42]..[556,25191+44])
                                                      Pexp_ident "gm" (compile_stream.ml[556,25191+42]..[556,25191+44])
                                                    [
                                                      <label> ""
                                                        expression (compile_stream.ml[556,25191+45]..[556,25191+47])
                                                          Pexp_construct "()" (compile_stream.ml[556,25191+45]..[556,25191+47])
                                                          None
                                                    ]
                                                ]
                                          expression (compile_stream.ml[556,25191+53]..[556,25191+73])
                                            Pexp_variant "Lid"
                                            Some
                                              expression (compile_stream.ml[556,25191+58]..[556,25191+73])
                                                Pexp_tuple
                                                [
                                                  expression (compile_stream.ml[556,25191+59]..[556,25191+63])
                                                    Pexp_ident "_loc" (compile_stream.ml[556,25191+59]..[556,25191+63])
                                                  expression (compile_stream.ml[556,25191+65]..[556,25191+72])
                                                    Pexp_constant Const_string("lsing",None)
                                                ]
                                        ]
                                  expression (compile_stream.ml[557,25269+18]..[557,25269+44])
                                    Pexp_coerce
                                    expression (compile_stream.ml[557,25269+19]..[557,25269+31])
                                      Pexp_apply
                                      expression (compile_stream.ml[557,25269+19]..[557,25269+24])
                                        Pexp_ident "slazy" (compile_stream.ml[557,25269+19]..[557,25269+24])
                                      [
                                        <label> ""
                                          expression (compile_stream.ml[557,25269+25]..[557,25269+29])
                                            Pexp_ident "_loc" (compile_stream.ml[557,25269+25]..[557,25269+29])
                                        <label> ""
                                          expression (compile_stream.ml[557,25269+30]..[557,25269+31])
                                            Pexp_ident "e" (compile_stream.ml[557,25269+30]..[557,25269+31])
                                      ]
                                    None
                                    core_type (compile_stream.ml[557,25269+35]..[557,25269+43])
                                      Ptyp_constr "Astf.exp" (compile_stream.ml[557,25269+35]..[557,25269+43])
                                      []
                                ]
                          None
                          core_type (compile_stream.ml[557,25269+49]..[557,25269+57])
                            Ptyp_constr "Astf.exp" (compile_stream.ml[557,25269+49]..[557,25269+57])
                            []
                  <case>
                    pattern (compile_stream.ml[558,25328+9]..[558,25328+29])
                      Ppat_construct "::" (compile_stream.ml[558,25328+9]..[558,25328+29])
                      Some
                        pattern (compile_stream.ml[558,25328+9]..[558,25328+29])
                          Ppat_tuple
                          [
                            pattern (compile_stream.ml[558,25328+10]..[558,25328+22])
                              Ppat_construct "Trm" (compile_stream.ml[558,25328+10]..[558,25328+13])
                              Some
                                pattern (compile_stream.ml[558,25328+10]..[558,25328+22])
                                  Ppat_tuple
                                  [
                                    pattern (compile_stream.ml[558,25328+15]..[558,25328+19])
                                      Ppat_var "_loc" (compile_stream.ml[558,25328+15]..[558,25328+19])
                                    pattern (compile_stream.ml[558,25328+20]..[558,25328+21])
                                      Ppat_var "e" (compile_stream.ml[558,25328+20]..[558,25328+21])
                                  ]
                            pattern (compile_stream.ml[558,25328+25]..[558,25328+29])
                              Ppat_var "secl" (compile_stream.ml[558,25328+25]..[558,25328+29])
                          ]
                    expression (compile_stream.ml[559,25361+11]..[578,26027+63])
                      Pexp_ifthenelse
                      expression (compile_stream.ml[559,25361+14]..[559,25361+29])
                        Pexp_apply
                        expression (compile_stream.ml[559,25361+14]..[559,25361+27])
                          Pexp_ident "not_computing" (compile_stream.ml[559,25361+14]..[559,25361+27])
                        [
                          <label> ""
                            expression (compile_stream.ml[559,25361+28]..[559,25361+29])
                              Pexp_ident "e" (compile_stream.ml[559,25361+28]..[559,25361+29])
                        ]
                      expression (compile_stream.ml[561,25407+13]..[568,25660+63])
                        Pexp_coerce
                        expression (compile_stream.ml[561,25407+14]..[568,25660+50])
                          Pexp_variant "App"
                          Some
                            expression (compile_stream.ml[562,25426+16]..[568,25660+50])
                              Pexp_tuple
                              [
                                expression (compile_stream.ml[562,25426+17]..[562,25426+21])
                                  Pexp_ident "_loc" (compile_stream.ml[562,25426+17]..[562,25426+21])
                                expression (compile_stream.ml[563,25449+19]..[567,25587+70])
                                  Pexp_variant "App"
                                  Some
                                    expression (compile_stream.ml[564,25473+21]..[567,25587+70])
                                      Pexp_tuple
                                      [
                                        expression (compile_stream.ml[564,25473+22]..[564,25473+26])
                                          Pexp_ident "_loc" (compile_stream.ml[564,25473+22]..[564,25473+26])
                                        expression (compile_stream.ml[565,25501+24]..[567,25587+51])
                                          Pexp_variant "Dot"
                                          Some
                                            expression (compile_stream.ml[566,25530+26]..[567,25587+51])
                                              Pexp_tuple
                                              [
                                                expression (compile_stream.ml[566,25530+27]..[566,25530+31])
                                                  Pexp_ident "_loc" (compile_stream.ml[566,25530+27]..[566,25530+31])
                                                expression (compile_stream.ml[566,25530+34]..[566,25530+54])
                                                  Pexp_variant "Uid"
                                                  Some
                                                    expression (compile_stream.ml[566,25530+39]..[566,25530+54])
                                                      Pexp_tuple
                                                      [
                                                        expression (compile_stream.ml[566,25530+40]..[566,25530+44])
                                                          Pexp_ident "_loc" (compile_stream.ml[566,25530+40]..[566,25530+44])
                                                        expression (compile_stream.ml[566,25530+47]..[566,25530+52])
                                                          Pexp_apply
                                                          expression (compile_stream.ml[566,25530+47]..[566,25530+49])
                                                            Pexp_ident "gm" (compile_stream.ml[566,25530+47]..[566,25530+49])
                                                          [
                                                            <label> ""
                                                              expression (compile_stream.ml[566,25530+50]..[566,25530+52])
                                                                Pexp_construct "()" (compile_stream.ml[566,25530+50]..[566,25530+52])
                                                                None
                                                          ]
                                                      ]
                                                expression (compile_stream.ml[567,25587+29]..[567,25587+49])
                                                  Pexp_variant "Lid"
                                                  Some
                                                    expression (compile_stream.ml[567,25587+34]..[567,25587+49])
                                                      Pexp_tuple
                                                      [
                                                        expression (compile_stream.ml[567,25587+35]..[567,25587+39])
                                                          Pexp_ident "_loc" (compile_stream.ml[567,25587+35]..[567,25587+39])
                                                        expression (compile_stream.ml[567,25587+41]..[567,25587+48])
                                                          Pexp_constant Const_string("icons",None)
                                                      ]
                                              ]
                                        expression (compile_stream.ml[567,25587+54]..[567,25587+69])
                                          Pexp_coerce
                                          expression (compile_stream.ml[567,25587+55]..[567,25587+56])
                                            Pexp_ident "e" (compile_stream.ml[567,25587+55]..[567,25587+56])
                                          None
                                          core_type (compile_stream.ml[567,25587+60]..[567,25587+68])
                                            Ptyp_constr "Astf.exp" (compile_stream.ml[567,25587+60]..[567,25587+68])
                                            []
                                      ]
                                expression (compile_stream.ml[568,25660+18]..[568,25660+49])
                                  Pexp_coerce
                                  expression (compile_stream.ml[568,25660+19]..[568,25660+36])
                                    Pexp_apply
                                    expression (compile_stream.ml[568,25660+19]..[568,25660+26])
                                      Pexp_ident "cstream" (compile_stream.ml[568,25660+19]..[568,25660+26])
                                    [
                                      <label> ""
                                        expression (compile_stream.ml[568,25660+27]..[568,25660+31])
                                          Pexp_ident "gloc" (compile_stream.ml[568,25660+27]..[568,25660+31])
                                      <label> ""
                                        expression (compile_stream.ml[568,25660+32]..[568,25660+36])
                                          Pexp_ident "secl" (compile_stream.ml[568,25660+32]..[568,25660+36])
                                    ]
                                  None
                                  core_type (compile_stream.ml[568,25660+40]..[568,25660+48])
                                    Ptyp_constr "Astf.exp" (compile_stream.ml[568,25660+40]..[568,25660+48])
                                    []
                              ]
                        None
                        core_type (compile_stream.ml[568,25660+54]..[568,25660+62])
                          Ptyp_constr "Astf.exp" (compile_stream.ml[568,25660+54]..[568,25660+62])
                          []
                      Some
                        expression (compile_stream.ml[570,25740+13]..[578,26027+63])
                          Pexp_coerce
                          expression (compile_stream.ml[570,25740+14]..[578,26027+50])
                            Pexp_variant "App"
                            Some
                              expression (compile_stream.ml[571,25759+16]..[578,26027+50])
                                Pexp_tuple
                                [
                                  expression (compile_stream.ml[571,25759+17]..[571,25759+21])
                                    Pexp_ident "_loc" (compile_stream.ml[571,25759+17]..[571,25759+21])
                                  expression (compile_stream.ml[572,25782+19]..[577,25974+50])
                                    Pexp_variant "App"
                                    Some
                                      expression (compile_stream.ml[573,25806+21]..[577,25974+50])
                                        Pexp_tuple
                                        [
                                          expression (compile_stream.ml[573,25806+22]..[573,25806+26])
                                            Pexp_ident "_loc" (compile_stream.ml[573,25806+22]..[573,25806+26])
                                          expression (compile_stream.ml[574,25834+24]..[576,25920+51])
                                            Pexp_variant "Dot"
                                            Some
                                              expression (compile_stream.ml[575,25863+26]..[576,25920+51])
                                                Pexp_tuple
                                                [
                                                  expression (compile_stream.ml[575,25863+27]..[575,25863+31])
                                                    Pexp_ident "_loc" (compile_stream.ml[575,25863+27]..[575,25863+31])
                                                  expression (compile_stream.ml[575,25863+34]..[575,25863+54])
                                                    Pexp_variant "Uid"
                                                    Some
                                                      expression (compile_stream.ml[575,25863+39]..[575,25863+54])
                                                        Pexp_tuple
                                                        [
                                                          expression (compile_stream.ml[575,25863+40]..[575,25863+44])
                                                            Pexp_ident "_loc" (compile_stream.ml[575,25863+40]..[575,25863+44])
                                                          expression (compile_stream.ml[575,25863+47]..[575,25863+52])
                                                            Pexp_apply
                                                            expression (compile_stream.ml[575,25863+47]..[575,25863+49])
                                                              Pexp_ident "gm" (compile_stream.ml[575,25863+47]..[575,25863+49])
                                                            [
                                                              <label> ""
                                                                expression (compile_stream.ml[575,25863+50]..[575,25863+52])
                                                                  Pexp_construct "()" (compile_stream.ml[575,25863+50]..[575,25863+52])
                                                                  None
                                                            ]
                                                        ]
                                                  expression (compile_stream.ml[576,25920+29]..[576,25920+49])
                                                    Pexp_variant "Lid"
                                                    Some
                                                      expression (compile_stream.ml[576,25920+34]..[576,25920+49])
                                                        Pexp_tuple
                                                        [
                                                          expression (compile_stream.ml[576,25920+35]..[576,25920+39])
                                                            Pexp_ident "_loc" (compile_stream.ml[576,25920+35]..[576,25920+39])
                                                          expression (compile_stream.ml[576,25920+41]..[576,25920+48])
                                                            Pexp_constant Const_string("lcons",None)
                                                        ]
                                                ]
                                          expression (compile_stream.ml[577,25974+23]..[577,25974+49])
                                            Pexp_coerce
                                            expression (compile_stream.ml[577,25974+24]..[577,25974+36])
                                              Pexp_apply
                                              expression (compile_stream.ml[577,25974+24]..[577,25974+29])
                                                Pexp_ident "slazy" (compile_stream.ml[577,25974+24]..[577,25974+29])
                                              [
                                                <label> ""
                                                  expression (compile_stream.ml[577,25974+30]..[577,25974+34])
                                                    Pexp_ident "_loc" (compile_stream.ml[577,25974+30]..[577,25974+34])
                                                <label> ""
                                                  expression (compile_stream.ml[577,25974+35]..[577,25974+36])
                                                    Pexp_ident "e" (compile_stream.ml[577,25974+35]..[577,25974+36])
                                              ]
                                            None
                                            core_type (compile_stream.ml[577,25974+40]..[577,25974+48])
                                              Ptyp_constr "Astf.exp" (compile_stream.ml[577,25974+40]..[577,25974+48])
                                              []
                                        ]
                                  expression (compile_stream.ml[578,26027+18]..[578,26027+49])
                                    Pexp_coerce
                                    expression (compile_stream.ml[578,26027+19]..[578,26027+36])
                                      Pexp_apply
                                      expression (compile_stream.ml[578,26027+19]..[578,26027+26])
                                        Pexp_ident "cstream" (compile_stream.ml[578,26027+19]..[578,26027+26])
                                      [
                                        <label> ""
                                          expression (compile_stream.ml[578,26027+27]..[578,26027+31])
                                            Pexp_ident "gloc" (compile_stream.ml[578,26027+27]..[578,26027+31])
                                        <label> ""
                                          expression (compile_stream.ml[578,26027+32]..[578,26027+36])
                                            Pexp_ident "secl" (compile_stream.ml[578,26027+32]..[578,26027+36])
                                      ]
                                    None
                                    core_type (compile_stream.ml[578,26027+40]..[578,26027+48])
                                      Ptyp_constr "Astf.exp" (compile_stream.ml[578,26027+40]..[578,26027+48])
                                      []
                                ]
                          None
                          core_type (compile_stream.ml[578,26027+54]..[578,26027+62])
                            Ptyp_constr "Astf.exp" (compile_stream.ml[578,26027+54]..[578,26027+62])
                            []
                  <case>
                    pattern (compile_stream.ml[579,26091+9]..[579,26091+27])
                      Ppat_construct "::" (compile_stream.ml[579,26091+9]..[579,26091+27])
                      Some
                        pattern (compile_stream.ml[579,26091+9]..[579,26091+27])
                          Ppat_tuple
                          [
                            pattern (compile_stream.ml[579,26091+10]..[579,26091+22])
                              Ppat_construct "Ntr" (compile_stream.ml[579,26091+10]..[579,26091+13])
                              Some
                                pattern (compile_stream.ml[579,26091+10]..[579,26091+22])
                                  Ppat_tuple
                                  [
                                    pattern (compile_stream.ml[579,26091+15]..[579,26091+19])
                                      Ppat_var "_loc" (compile_stream.ml[579,26091+15]..[579,26091+19])
                                    pattern (compile_stream.ml[579,26091+20]..[579,26091+21])
                                      Ppat_var "e" (compile_stream.ml[579,26091+20]..[579,26091+21])
                                  ]
                            pattern (compile_stream.ml[579,26091+25]..[579,26091+27])
                              Ppat_construct "[]" (compile_stream.ml[579,26091+25]..[579,26091+27])
                              None
                          ]
                    expression (compile_stream.ml[580,26122+11]..[587,26330+58])
                      Pexp_ifthenelse
                      expression (compile_stream.ml[580,26122+14]..[580,26122+29])
                        Pexp_apply
                        expression (compile_stream.ml[580,26122+14]..[580,26122+27])
                          Pexp_ident "not_computing" (compile_stream.ml[580,26122+14]..[580,26122+27])
                        [
                          <label> ""
                            expression (compile_stream.ml[580,26122+28]..[580,26122+29])
                              Pexp_ident "e" (compile_stream.ml[580,26122+28]..[580,26122+29])
                        ]
                      expression (compile_stream.ml[581,26152+16]..[581,26152+17])
                        Pexp_ident "e" (compile_stream.ml[581,26152+16]..[581,26152+17])
                      Some
                        expression (compile_stream.ml[583,26186+13]..[587,26330+58])
                          Pexp_coerce
                          expression (compile_stream.ml[583,26186+14]..[587,26330+45])
                            Pexp_variant "App"
                            Some
                              expression (compile_stream.ml[584,26205+16]..[587,26330+45])
                                Pexp_tuple
                                [
                                  expression (compile_stream.ml[584,26205+17]..[584,26205+21])
                                    Pexp_ident "_loc" (compile_stream.ml[584,26205+17]..[584,26205+21])
                                  expression (compile_stream.ml[585,26228+19]..[586,26252+75])
                                    Pexp_variant "Dot"
                                    Some
                                      expression (compile_stream.ml[586,26252+21]..[586,26252+75])
                                        Pexp_tuple
                                        [
                                          expression (compile_stream.ml[586,26252+22]..[586,26252+26])
                                            Pexp_ident "_loc" (compile_stream.ml[586,26252+22]..[586,26252+26])
                                          expression (compile_stream.ml[586,26252+29]..[586,26252+49])
                                            Pexp_variant "Uid"
                                            Some
                                              expression (compile_stream.ml[586,26252+34]..[586,26252+49])
                                                Pexp_tuple
                                                [
                                                  expression (compile_stream.ml[586,26252+35]..[586,26252+39])
                                                    Pexp_ident "_loc" (compile_stream.ml[586,26252+35]..[586,26252+39])
                                                  expression (compile_stream.ml[586,26252+42]..[586,26252+47])
                                                    Pexp_apply
                                                    expression (compile_stream.ml[586,26252+42]..[586,26252+44])
                                                      Pexp_ident "gm" (compile_stream.ml[586,26252+42]..[586,26252+44])
                                                    [
                                                      <label> ""
                                                        expression (compile_stream.ml[586,26252+45]..[586,26252+47])
                                                          Pexp_construct "()" (compile_stream.ml[586,26252+45]..[586,26252+47])
                                                          None
                                                    ]
                                                ]
                                          expression (compile_stream.ml[586,26252+53]..[586,26252+73])
                                            Pexp_variant "Lid"
                                            Some
                                              expression (compile_stream.ml[586,26252+58]..[586,26252+73])
                                                Pexp_tuple
                                                [
                                                  expression (compile_stream.ml[586,26252+59]..[586,26252+63])
                                                    Pexp_ident "_loc" (compile_stream.ml[586,26252+59]..[586,26252+63])
                                                  expression (compile_stream.ml[586,26252+65]..[586,26252+72])
                                                    Pexp_constant Const_string("slazy",None)
                                                ]
                                        ]
                                  expression (compile_stream.ml[587,26330+18]..[587,26330+44])
                                    Pexp_coerce
                                    expression (compile_stream.ml[587,26330+19]..[587,26330+31])
                                      Pexp_apply
                                      expression (compile_stream.ml[587,26330+19]..[587,26330+24])
                                        Pexp_ident "slazy" (compile_stream.ml[587,26330+19]..[587,26330+24])
                                      [
                                        <label> ""
                                          expression (compile_stream.ml[587,26330+25]..[587,26330+29])
                                            Pexp_ident "_loc" (compile_stream.ml[587,26330+25]..[587,26330+29])
                                        <label> ""
                                          expression (compile_stream.ml[587,26330+30]..[587,26330+31])
                                            Pexp_ident "e" (compile_stream.ml[587,26330+30]..[587,26330+31])
                                      ]
                                    None
                                    core_type (compile_stream.ml[587,26330+35]..[587,26330+43])
                                      Ptyp_constr "Astf.exp" (compile_stream.ml[587,26330+35]..[587,26330+43])
                                      []
                                ]
                          None
                          core_type (compile_stream.ml[587,26330+49]..[587,26330+57])
                            Ptyp_constr "Astf.exp" (compile_stream.ml[587,26330+49]..[587,26330+57])
                            []
                  <case>
                    pattern (compile_stream.ml[588,26389+9]..[588,26389+29])
                      Ppat_construct "::" (compile_stream.ml[588,26389+9]..[588,26389+29])
                      Some
                        pattern (compile_stream.ml[588,26389+9]..[588,26389+29])
                          Ppat_tuple
                          [
                            pattern (compile_stream.ml[588,26389+10]..[588,26389+22])
                              Ppat_construct "Ntr" (compile_stream.ml[588,26389+10]..[588,26389+13])
                              Some
                                pattern (compile_stream.ml[588,26389+10]..[588,26389+22])
                                  Ppat_tuple
                                  [
                                    pattern (compile_stream.ml[588,26389+15]..[588,26389+19])
                                      Ppat_var "_loc" (compile_stream.ml[588,26389+15]..[588,26389+19])
                                    pattern (compile_stream.ml[588,26389+20]..[588,26389+21])
                                      Ppat_var "e" (compile_stream.ml[588,26389+20]..[588,26389+21])
                                  ]
                            pattern (compile_stream.ml[588,26389+25]..[588,26389+29])
                              Ppat_var "secl" (compile_stream.ml[588,26389+25]..[588,26389+29])
                          ]
                    expression (compile_stream.ml[589,26422+11]..[608,27086+63])
                      Pexp_ifthenelse
                      expression (compile_stream.ml[589,26422+14]..[589,26422+29])
                        Pexp_apply
                        expression (compile_stream.ml[589,26422+14]..[589,26422+27])
                          Pexp_ident "not_computing" (compile_stream.ml[589,26422+14]..[589,26422+27])
                        [
                          <label> ""
                            expression (compile_stream.ml[589,26422+28]..[589,26422+29])
                              Pexp_ident "e" (compile_stream.ml[589,26422+28]..[589,26422+29])
                        ]
                      expression (compile_stream.ml[591,26468+13]..[598,26720+63])
                        Pexp_coerce
                        expression (compile_stream.ml[591,26468+14]..[598,26720+50])
                          Pexp_variant "App"
                          Some
                            expression (compile_stream.ml[592,26487+16]..[598,26720+50])
                              Pexp_tuple
                              [
                                expression (compile_stream.ml[592,26487+17]..[592,26487+21])
                                  Pexp_ident "_loc" (compile_stream.ml[592,26487+17]..[592,26487+21])
                                expression (compile_stream.ml[593,26510+19]..[597,26648+69])
                                  Pexp_variant "App"
                                  Some
                                    expression (compile_stream.ml[594,26534+21]..[597,26648+69])
                                      Pexp_tuple
                                      [
                                        expression (compile_stream.ml[594,26534+22]..[594,26534+26])
                                          Pexp_ident "_loc" (compile_stream.ml[594,26534+22]..[594,26534+26])
                                        expression (compile_stream.ml[595,26562+24]..[597,26648+50])
                                          Pexp_variant "Dot"
                                          Some
                                            expression (compile_stream.ml[596,26591+26]..[597,26648+50])
                                              Pexp_tuple
                                              [
                                                expression (compile_stream.ml[596,26591+27]..[596,26591+31])
                                                  Pexp_ident "_loc" (compile_stream.ml[596,26591+27]..[596,26591+31])
                                                expression (compile_stream.ml[596,26591+34]..[596,26591+54])
                                                  Pexp_variant "Uid"
                                                  Some
                                                    expression (compile_stream.ml[596,26591+39]..[596,26591+54])
                                                      Pexp_tuple
                                                      [
                                                        expression (compile_stream.ml[596,26591+40]..[596,26591+44])
                                                          Pexp_ident "_loc" (compile_stream.ml[596,26591+40]..[596,26591+44])
                                                        expression (compile_stream.ml[596,26591+47]..[596,26591+52])
                                                          Pexp_apply
                                                          expression (compile_stream.ml[596,26591+47]..[596,26591+49])
                                                            Pexp_ident "gm" (compile_stream.ml[596,26591+47]..[596,26591+49])
                                                          [
                                                            <label> ""
                                                              expression (compile_stream.ml[596,26591+50]..[596,26591+52])
                                                                Pexp_construct "()" (compile_stream.ml[596,26591+50]..[596,26591+52])
                                                                None
                                                          ]
                                                      ]
                                                expression (compile_stream.ml[597,26648+29]..[597,26648+48])
                                                  Pexp_variant "Lid"
                                                  Some
                                                    expression (compile_stream.ml[597,26648+34]..[597,26648+48])
                                                      Pexp_tuple
                                                      [
                                                        expression (compile_stream.ml[597,26648+35]..[597,26648+39])
                                                          Pexp_ident "_loc" (compile_stream.ml[597,26648+35]..[597,26648+39])
                                                        expression (compile_stream.ml[597,26648+41]..[597,26648+47])
                                                          Pexp_constant Const_string("iapp",None)
                                                      ]
                                              ]
                                        expression (compile_stream.ml[597,26648+53]..[597,26648+68])
                                          Pexp_coerce
                                          expression (compile_stream.ml[597,26648+54]..[597,26648+55])
                                            Pexp_ident "e" (compile_stream.ml[597,26648+54]..[597,26648+55])
                                          None
                                          core_type (compile_stream.ml[597,26648+59]..[597,26648+67])
                                            Ptyp_constr "Astf.exp" (compile_stream.ml[597,26648+59]..[597,26648+67])
                                            []
                                      ]
                                expression (compile_stream.ml[598,26720+18]..[598,26720+49])
                                  Pexp_coerce
                                  expression (compile_stream.ml[598,26720+19]..[598,26720+36])
                                    Pexp_apply
                                    expression (compile_stream.ml[598,26720+19]..[598,26720+26])
                                      Pexp_ident "cstream" (compile_stream.ml[598,26720+19]..[598,26720+26])
                                    [
                                      <label> ""
                                        expression (compile_stream.ml[598,26720+27]..[598,26720+31])
                                          Pexp_ident "gloc" (compile_stream.ml[598,26720+27]..[598,26720+31])
                                      <label> ""
                                        expression (compile_stream.ml[598,26720+32]..[598,26720+36])
                                          Pexp_ident "secl" (compile_stream.ml[598,26720+32]..[598,26720+36])
                                    ]
                                  None
                                  core_type (compile_stream.ml[598,26720+40]..[598,26720+48])
                                    Ptyp_constr "Astf.exp" (compile_stream.ml[598,26720+40]..[598,26720+48])
                                    []
                              ]
                        None
                        core_type (compile_stream.ml[598,26720+54]..[598,26720+62])
                          Ptyp_constr "Astf.exp" (compile_stream.ml[598,26720+54]..[598,26720+62])
                          []
                      Some
                        expression (compile_stream.ml[600,26800+13]..[608,27086+63])
                          Pexp_coerce
                          expression (compile_stream.ml[600,26800+14]..[608,27086+50])
                            Pexp_variant "App"
                            Some
                              expression (compile_stream.ml[601,26819+16]..[608,27086+50])
                                Pexp_tuple
                                [
                                  expression (compile_stream.ml[601,26819+17]..[601,26819+21])
                                    Pexp_ident "_loc" (compile_stream.ml[601,26819+17]..[601,26819+21])
                                  expression (compile_stream.ml[602,26842+19]..[607,27033+50])
                                    Pexp_variant "App"
                                    Some
                                      expression (compile_stream.ml[603,26866+21]..[607,27033+50])
                                        Pexp_tuple
                                        [
                                          expression (compile_stream.ml[603,26866+22]..[603,26866+26])
                                            Pexp_ident "_loc" (compile_stream.ml[603,26866+22]..[603,26866+26])
                                          expression (compile_stream.ml[604,26894+24]..[606,26980+50])
                                            Pexp_variant "Dot"
                                            Some
                                              expression (compile_stream.ml[605,26923+26]..[606,26980+50])
                                                Pexp_tuple
                                                [
                                                  expression (compile_stream.ml[605,26923+27]..[605,26923+31])
                                                    Pexp_ident "_loc" (compile_stream.ml[605,26923+27]..[605,26923+31])
                                                  expression (compile_stream.ml[605,26923+34]..[605,26923+54])
                                                    Pexp_variant "Uid"
                                                    Some
                                                      expression (compile_stream.ml[605,26923+39]..[605,26923+54])
                                                        Pexp_tuple
                                                        [
                                                          expression (compile_stream.ml[605,26923+40]..[605,26923+44])
                                                            Pexp_ident "_loc" (compile_stream.ml[605,26923+40]..[605,26923+44])
                                                          expression (compile_stream.ml[605,26923+47]..[605,26923+52])
                                                            Pexp_apply
                                                            expression (compile_stream.ml[605,26923+47]..[605,26923+49])
                                                              Pexp_ident "gm" (compile_stream.ml[605,26923+47]..[605,26923+49])
                                                            [
                                                              <label> ""
                                                                expression (compile_stream.ml[605,26923+50]..[605,26923+52])
                                                                  Pexp_construct "()" (compile_stream.ml[605,26923+50]..[605,26923+52])
                                                                  None
                                                            ]
                                                        ]
                                                  expression (compile_stream.ml[606,26980+29]..[606,26980+48])
                                                    Pexp_variant "Lid"
                                                    Some
                                                      expression (compile_stream.ml[606,26980+34]..[606,26980+48])
                                                        Pexp_tuple
                                                        [
                                                          expression (compile_stream.ml[606,26980+35]..[606,26980+39])
                                                            Pexp_ident "_loc" (compile_stream.ml[606,26980+35]..[606,26980+39])
                                                          expression (compile_stream.ml[606,26980+41]..[606,26980+47])
                                                            Pexp_constant Const_string("lapp",None)
                                                        ]
                                                ]
                                          expression (compile_stream.ml[607,27033+23]..[607,27033+49])
                                            Pexp_coerce
                                            expression (compile_stream.ml[607,27033+24]..[607,27033+36])
                                              Pexp_apply
                                              expression (compile_stream.ml[607,27033+24]..[607,27033+29])
                                                Pexp_ident "slazy" (compile_stream.ml[607,27033+24]..[607,27033+29])
                                              [
                                                <label> ""
                                                  expression (compile_stream.ml[607,27033+30]..[607,27033+34])
                                                    Pexp_ident "_loc" (compile_stream.ml[607,27033+30]..[607,27033+34])
                                                <label> ""
                                                  expression (compile_stream.ml[607,27033+35]..[607,27033+36])
                                                    Pexp_ident "e" (compile_stream.ml[607,27033+35]..[607,27033+36])
                                              ]
                                            None
                                            core_type (compile_stream.ml[607,27033+40]..[607,27033+48])
                                              Ptyp_constr "Astf.exp" (compile_stream.ml[607,27033+40]..[607,27033+48])
                                              []
                                        ]
                                  expression (compile_stream.ml[608,27086+18]..[608,27086+49])
                                    Pexp_coerce
                                    expression (compile_stream.ml[608,27086+19]..[608,27086+36])
                                      Pexp_apply
                                      expression (compile_stream.ml[608,27086+19]..[608,27086+26])
                                        Pexp_ident "cstream" (compile_stream.ml[608,27086+19]..[608,27086+26])
                                      [
                                        <label> ""
                                          expression (compile_stream.ml[608,27086+27]..[608,27086+31])
                                            Pexp_ident "gloc" (compile_stream.ml[608,27086+27]..[608,27086+31])
                                        <label> ""
                                          expression (compile_stream.ml[608,27086+32]..[608,27086+36])
                                            Pexp_ident "secl" (compile_stream.ml[608,27086+32]..[608,27086+36])
                                      ]
                                    None
                                    core_type (compile_stream.ml[608,27086+40]..[608,27086+48])
                                      Ptyp_constr "Astf.exp" (compile_stream.ml[608,27086+40]..[608,27086+48])
                                      []
                                ]
                          None
                          core_type (compile_stream.ml[608,27086+54]..[608,27086+62])
                            Ptyp_constr "Astf.exp" (compile_stream.ml[608,27086+54]..[608,27086+62])
                            []
                ]
          ]
    ]
]
