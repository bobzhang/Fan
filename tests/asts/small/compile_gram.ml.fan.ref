[
  structure_item (compile_gram.ml[1,0+0]..[1,0+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[1,0+4]..[1,0+11])
          Ppat_var "eprintf" (compile_gram.ml[1,0+4]..[1,0+11])
        expression (compile_gram.ml[1,0+14]..[1,0+28])
          Pexp_ident "Format.eprintf" (compile_gram.ml[1,0+14]..[1,0+28])
    ]
  structure_item (compile_gram.ml[2,29+0]..[2,29+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[2,29+4]..[2,29+16])
          Ppat_var "list_of_list" (compile_gram.ml[2,29+4]..[2,29+16])
        expression (compile_gram.ml[2,29+19]..[2,29+39])
          Pexp_ident "Fan_ops.list_of_list" (compile_gram.ml[2,29+19]..[2,29+39])
    ]
  structure_item (compile_gram.ml[3,69+0]..[3,69+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[3,69+4]..[3,69+13])
          Ppat_var "tuple_com" (compile_gram.ml[3,69+4]..[3,69+13])
        expression (compile_gram.ml[3,69+16]..[3,69+33])
          Pexp_ident "Ast_gen.tuple_com" (compile_gram.ml[3,69+16]..[3,69+33])
    ]
  structure_item (compile_gram.ml[4,103+0]..[4,103+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[4,103+4]..[4,103+10])
          Ppat_var "typing" (compile_gram.ml[4,103+4]..[4,103+10])
        expression (compile_gram.ml[4,103+13]..[4,103+27])
          Pexp_ident "Ast_gen.typing" (compile_gram.ml[4,103+13]..[4,103+27])
    ]
  structure_item (compile_gram.ml[5,131+0]..[5,131+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[5,131+4]..[5,131+15])
          Ppat_var "and_of_list" (compile_gram.ml[5,131+4]..[5,131+15])
        expression (compile_gram.ml[5,131+18]..[5,131+37])
          Pexp_ident "Ast_gen.and_of_list" (compile_gram.ml[5,131+18]..[5,131+37])
    ]
  structure_item (compile_gram.ml[6,169+0]..[6,169+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[6,169+4]..[6,169+11])
          Ppat_var "seq_sem" (compile_gram.ml[6,169+4]..[6,169+11])
        expression (compile_gram.ml[6,169+14]..[6,169+29])
          Pexp_ident "Ast_gen.seq_sem" (compile_gram.ml[6,169+14]..[6,169+29])
    ]
  structure_item (compile_gram.ml[7,199+0]..[7,199+9])
    Pstr_open Fresh "Astf" (compile_gram.ml[7,199+5]..[7,199+9])
  structure_item (compile_gram.ml[8,209+0]..[8,209+9])
    Pstr_open Fresh "Util" (compile_gram.ml[8,209+5]..[8,209+9])
  structure_item (compile_gram.ml[9,219+0]..[9,219+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[9,219+4]..[9,219+17])
          Ppat_var "print_warning" (compile_gram.ml[9,219+4]..[9,219+17])
        expression (compile_gram.ml[9,219+20]..[9,219+50])
          Pexp_apply
          expression (compile_gram.ml[9,219+20]..[9,219+27])
            Pexp_ident "eprintf" (compile_gram.ml[9,219+20]..[9,219+27])
          [
            <label> ""
              expression (compile_gram.ml[9,219+28]..[9,219+39])
                Pexp_constant Const_string("%a:\n%s@.",None)
            <label> ""
              expression (compile_gram.ml[9,219+40]..[9,219+50])
                Pexp_ident "Locf.print" (compile_gram.ml[9,219+40]..[9,219+50])
          ]
    ]
  structure_item (compile_gram.ml[10,270+0]..[10,270+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[10,270+4]..[10,270+10])
          Ppat_var "prefix" (compile_gram.ml[10,270+4]..[10,270+10])
        expression (compile_gram.ml[10,270+13]..[10,270+21])
          Pexp_constant Const_string("__fan_",None)
    ]
  structure_item (compile_gram.ml[11,292+0]..[11,292+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[11,292+4]..[11,292+9])
          Ppat_var "ghost" (compile_gram.ml[11,292+4]..[11,292+9])
        expression (compile_gram.ml[11,292+12]..[11,292+22])
          Pexp_ident "Locf.ghost" (compile_gram.ml[11,292+12]..[11,292+22])
    ]
  structure_item (compile_gram.ml[12,315+0]..[12,315+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[12,315+4]..[12,315+15])
          Ppat_var "module_name" (compile_gram.ml[12,315+4]..[12,315+15])
        expression (compile_gram.ml[12,315+18]..[12,315+45])
          Pexp_apply
          expression (compile_gram.ml[12,315+18]..[12,315+21])
            Pexp_ident "ref" (compile_gram.ml[12,315+18]..[12,315+21])
          [
            <label> ""
              expression (compile_gram.ml[12,315+23]..[12,315+44])
                Pexp_variant "Uid"
                Some
                  expression (compile_gram.ml[12,315+28]..[12,315+44])
                    Pexp_tuple
                    [
                      expression (compile_gram.ml[12,315+29]..[12,315+34])
                        Pexp_ident "ghost" (compile_gram.ml[12,315+29]..[12,315+34])
                      expression (compile_gram.ml[12,315+36]..[12,315+43])
                        Pexp_constant Const_string("Gramf",None)
                    ]
          ]
    ]
  structure_item (compile_gram.ml[13,361+0]..[18,479+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[13,361+4]..[13,361+6])
          Ppat_var "gm" (compile_gram.ml[13,361+4]..[13,361+6])
        expression (compile_gram.ml[14,370+2]..[18,479+46])
          Pexp_function
          [
            <case>
              pattern (compile_gram.ml[15,381+4]..[15,381+6])
                Ppat_construct "()" (compile_gram.ml[15,381+4]..[15,381+6])
                None
              expression (compile_gram.ml[16,391+6]..[18,479+46])
                Pexp_constraint
                expression (compile_gram.ml[16,391+8]..[18,479+38])
                  Pexp_match
                  expression (compile_gram.ml[16,391+14]..[16,391+39])
                    Pexp_apply
                    expression (compile_gram.ml[16,391+14]..[16,391+15])
                      Pexp_ident "!" (compile_gram.ml[16,391+14]..[16,391+15])
                    [
                      <label> ""
                        expression (compile_gram.ml[16,391+15]..[16,391+39])
                          Pexp_ident "Configf.compilation_unit" (compile_gram.ml[16,391+15]..[16,391+39])
                    ]
                  [
                    <case>
                      pattern (compile_gram.ml[17,436+10]..[17,436+22])
                        Ppat_construct "Some" (compile_gram.ml[17,436+10]..[17,436+14])
                        Some
                          pattern (compile_gram.ml[17,436+15]..[17,436+22])
                            Ppat_constant Const_string("Gramf",None)
                      expression (compile_gram.ml[17,436+26]..[17,436+42])
                        Pexp_variant "Uid"
                        Some
                          expression (compile_gram.ml[17,436+31]..[17,436+42])
                            Pexp_tuple
                            [
                              expression (compile_gram.ml[17,436+32]..[17,436+37])
                                Pexp_ident "ghost" (compile_gram.ml[17,436+32]..[17,436+37])
                              expression (compile_gram.ml[17,436+39]..[17,436+41])
                                Pexp_constant Const_string("",None)
                            ]
                    <case>
                      pattern (compile_gram.ml[18,479+10]..[18,479+21])
                        Ppat_or
                        pattern (compile_gram.ml[18,479+10]..[18,479+16])
                          Ppat_construct "Some" (compile_gram.ml[18,479+10]..[18,479+14])
                          Some
                            pattern (compile_gram.ml[18,479+15]..[18,479+16])
                              Ppat_any
                        pattern (compile_gram.ml[18,479+17]..[18,479+21])
                          Ppat_construct "None" (compile_gram.ml[18,479+17]..[18,479+21])
                          None
                      expression (compile_gram.ml[18,479+26]..[18,479+38])
                        Pexp_apply
                        expression (compile_gram.ml[18,479+26]..[18,479+27])
                          Pexp_ident "!" (compile_gram.ml[18,479+26]..[18,479+27])
                        [
                          <label> ""
                            expression (compile_gram.ml[18,479+27]..[18,479+38])
                              Pexp_ident "module_name" (compile_gram.ml[18,479+27]..[18,479+38])
                        ]
                  ]
                core_type (compile_gram.ml[18,479+42]..[18,479+45])
                  Ptyp_constr "vid" (compile_gram.ml[18,479+42]..[18,479+45])
                  []
          ]
    ]
  structure_item (compile_gram.ml[19,526+0]..[26,768+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[19,526+4]..[19,526+7])
          Ppat_var "add" (compile_gram.ml[19,526+4]..[19,526+7])
        expression (compile_gram.ml[19,526+8]..[26,768+50])
          Pexp_fun "?check"
          Some
            expression (compile_gram.ml[19,526+17]..[19,526+21])
              Pexp_construct "true" (compile_gram.ml[19,526+17]..[19,526+21])
              None
          pattern (compile_gram.ml[19,526+10]..[19,526+15])
            Ppat_var "check" (compile_gram.ml[19,526+10]..[19,526+15])
          expression (compile_gram.ml[20,552+2]..[26,768+50])
            Pexp_function
            [
              <case>
                pattern (compile_gram.ml[21,563+4]..[21,563+16])
                  Ppat_tuple
                  [
                    pattern (compile_gram.ml[21,563+5]..[21,563+13])
                      Ppat_tuple
                      [
                        pattern (compile_gram.ml[21,563+6]..[21,563+9])
                          Ppat_var "loc" (compile_gram.ml[21,563+6]..[21,563+9])
                        pattern (compile_gram.ml[21,563+10]..[21,563+12])
                          Ppat_var "id" (compile_gram.ml[21,563+10]..[21,563+12])
                      ]
                    pattern (compile_gram.ml[21,563+14]..[21,563+15])
                      Ppat_var "v" (compile_gram.ml[21,563+14]..[21,563+15])
                  ]
                expression (compile_gram.ml[22,583+7]..[26,768+49])
                  Pexp_function
                  [
                    <case>
                      pattern (compile_gram.ml[23,599+9]..[23,599+12])
                        Ppat_var "env" (compile_gram.ml[23,599+9]..[23,599+12])
                      expression (compile_gram.ml[24,615+11]..[26,768+49])
                        Pexp_ifthenelse
                        expression (compile_gram.ml[24,615+14]..[24,615+76])
                          Pexp_apply
                          expression (compile_gram.ml[24,615+20]..[24,615+22])
                            Pexp_ident "&&" (compile_gram.ml[24,615+20]..[24,615+22])
                          [
                            <label> ""
                              expression (compile_gram.ml[24,615+14]..[24,615+19])
                                Pexp_ident "check" (compile_gram.ml[24,615+14]..[24,615+19])
                            <label> ""
                              expression (compile_gram.ml[24,615+24]..[24,615+75])
                                Pexp_apply
                                expression (compile_gram.ml[24,615+24]..[24,615+35])
                                  Pexp_ident "List.exists" (compile_gram.ml[24,615+24]..[24,615+35])
                                [
                                  <label> ""
                                    expression (compile_gram.ml[24,615+37]..[24,615+67])
                                      Pexp_function
                                      [
                                        <case>
                                          pattern (compile_gram.ml[24,615+48]..[24,615+57])
                                            Ppat_tuple
                                            [
                                              pattern (compile_gram.ml[24,615+49]..[24,615+54])
                                                Ppat_tuple
                                                [
                                                  pattern (compile_gram.ml[24,615+50]..[24,615+51])
                                                    Ppat_any
                                                  pattern (compile_gram.ml[24,615+52]..[24,615+53])
                                                    Ppat_var "i" (compile_gram.ml[24,615+52]..[24,615+53])
                                                ]
                                              pattern (compile_gram.ml[24,615+55]..[24,615+56])
                                                Ppat_any
                                            ]
                                          expression (compile_gram.ml[24,615+61]..[24,615+67])
                                            Pexp_apply
                                            expression (compile_gram.ml[24,615+63]..[24,615+64])
                                              Pexp_ident "=" (compile_gram.ml[24,615+63]..[24,615+64])
                                            [
                                              <label> ""
                                                expression (compile_gram.ml[24,615+61]..[24,615+62])
                                                  Pexp_ident "i" (compile_gram.ml[24,615+61]..[24,615+62])
                                              <label> ""
                                                expression (compile_gram.ml[24,615+65]..[24,615+67])
                                                  Pexp_ident "id" (compile_gram.ml[24,615+65]..[24,615+67])
                                            ]
                                      ]
                                  <label> ""
                                    expression (compile_gram.ml[24,615+70]..[24,615+74])
                                      Pexp_apply
                                      expression (compile_gram.ml[24,615+70]..[24,615+71])
                                        Pexp_ident "!" (compile_gram.ml[24,615+70]..[24,615+71])
                                      [
                                        <label> ""
                                          expression (compile_gram.ml[24,615+71]..[24,615+74])
                                            Pexp_ident "env" (compile_gram.ml[24,615+71]..[24,615+74])
                                      ]
                                ]
                          ]
                        expression (compile_gram.ml[25,692+16]..[25,692+75])
                          Pexp_apply
                          expression (compile_gram.ml[25,692+16]..[25,692+26])
                            Pexp_ident "Locf.failf" (compile_gram.ml[25,692+16]..[25,692+26])
                          [
                            <label> ""
                              expression (compile_gram.ml[25,692+27]..[25,692+30])
                                Pexp_ident "loc" (compile_gram.ml[25,692+27]..[25,692+30])
                            <label> ""
                              expression (compile_gram.ml[25,692+31]..[25,692+72])
                                Pexp_constant Const_string("This variable %s is bound several times",None)
                            <label> ""
                              expression (compile_gram.ml[25,692+73]..[25,692+75])
                                Pexp_ident "id" (compile_gram.ml[25,692+73]..[25,692+75])
                          ]
                        Some
                          expression (compile_gram.ml[26,768+16]..[26,768+49])
                            Pexp_apply
                            expression (compile_gram.ml[26,768+20]..[26,768+22])
                              Pexp_ident ":=" (compile_gram.ml[26,768+20]..[26,768+22])
                            [
                              <label> ""
                                expression (compile_gram.ml[26,768+16]..[26,768+19])
                                  Pexp_ident "env" (compile_gram.ml[26,768+16]..[26,768+19])
                              <label> ""
                                expression (compile_gram.ml[26,768+24]..[26,768+48])
                                  Pexp_construct "::" (compile_gram.ml[26,768+39]..[26,768+41])
                                  Some
                                    expression (compile_gram.ml[26,768+24]..[26,768+48])
                                      Pexp_tuple
                                      [
                                        expression (compile_gram.ml[26,768+24]..[26,768+38])
                                          Pexp_tuple
                                          [
                                            expression (compile_gram.ml[26,768+25]..[26,768+34])
                                              Pexp_tuple
                                              [
                                                expression (compile_gram.ml[26,768+26]..[26,768+29])
                                                  Pexp_ident "loc" (compile_gram.ml[26,768+26]..[26,768+29])
                                                expression (compile_gram.ml[26,768+31]..[26,768+33])
                                                  Pexp_ident "id" (compile_gram.ml[26,768+31]..[26,768+33])
                                              ]
                                            expression (compile_gram.ml[26,768+36]..[26,768+37])
                                              Pexp_ident "v" (compile_gram.ml[26,768+36]..[26,768+37])
                                          ]
                                        expression (compile_gram.ml[26,768+43]..[26,768+47])
                                          Pexp_apply
                                          expression (compile_gram.ml[26,768+43]..[26,768+44])
                                            Pexp_ident "!" (compile_gram.ml[26,768+43]..[26,768+44])
                                          [
                                            <label> ""
                                              expression (compile_gram.ml[26,768+44]..[26,768+47])
                                                Pexp_ident "env" (compile_gram.ml[26,768+44]..[26,768+47])
                                          ]
                                      ]
                            ]
                  ]
            ]
    ]
  structure_item (compile_gram.ml[27,819+0]..[46,1459+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[27,819+4]..[27,819+15])
          Ppat_var "enhance_env" (compile_gram.ml[27,819+4]..[27,819+15])
        expression (compile_gram.ml[28,837+2]..[46,1459+54])
          Pexp_function
          [
            <case>
              pattern (compile_gram.ml[29,848+4]..[29,848+16])
                Ppat_constraint
                pattern (compile_gram.ml[29,848+5]..[29,848+6])
                  Ppat_var "s" (compile_gram.ml[29,848+5]..[29,848+6])
                core_type (compile_gram.ml[29,848+9]..[29,848+15])
                  Ptyp_constr "string" (compile_gram.ml[29,848+9]..[29,848+15])
                  []
              expression (compile_gram.ml[30,868+7]..[46,1459+53])
                Pexp_function
                [
                  <case>
                    pattern (compile_gram.ml[31,884+9]..[31,884+11])
                      Ppat_var "xs" (compile_gram.ml[31,884+9]..[31,884+11])
                    expression (compile_gram.ml[32,899+12]..[46,1459+52])
                      Pexp_function
                      [
                        <case>
                          pattern (compile_gram.ml[33,920+14]..[33,920+17])
                            Ppat_var "env" (compile_gram.ml[33,920+14]..[33,920+17])
                          expression (compile_gram.ml[34,941+16]..[46,1459+52])
                            Pexp_apply
                            expression (compile_gram.ml[34,941+19]..[34,941+21])
                              Pexp_ident "|>" (compile_gram.ml[34,941+19]..[34,941+21])
                            [
                              <label> ""
                                expression (compile_gram.ml[34,941+16]..[34,941+18])
                                  Pexp_ident "xs" (compile_gram.ml[34,941+16]..[34,941+18])
                              <label> ""
                                expression (compile_gram.ml[35,963+19]..[46,1459+51])
                                  Pexp_apply
                                  expression (compile_gram.ml[35,963+19]..[35,963+28])
                                    Pexp_ident "List.iter" (compile_gram.ml[35,963+19]..[35,963+28])
                                  [
                                    <label> ""
                                      expression (compile_gram.ml[36,992+22]..[46,1459+50])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (compile_gram.ml[37,1023+24]..[37,1023+44])
                                              Ppat_tuple
                                              [
                                                pattern (compile_gram.ml[37,1023+25]..[37,1023+39])
                                                  Ppat_alias "v" (compile_gram.ml[37,1023+37]..[37,1023+38])
                                                  pattern (compile_gram.ml[37,1023+26]..[37,1023+33])
                                                    Ppat_tuple
                                                    [
                                                      pattern (compile_gram.ml[37,1023+27]..[37,1023+30])
                                                        Ppat_var "loc" (compile_gram.ml[37,1023+27]..[37,1023+30])
                                                      pattern (compile_gram.ml[37,1023+31]..[37,1023+32])
                                                        Ppat_any
                                                    ]
                                                pattern (compile_gram.ml[37,1023+40]..[37,1023+43])
                                                  Ppat_var "opt" (compile_gram.ml[37,1023+40]..[37,1023+43])
                                              ]
                                            expression (compile_gram.ml[38,1071+27]..[46,1459+49])
                                              Pexp_match
                                              expression (compile_gram.ml[38,1071+33]..[38,1071+36])
                                                Pexp_ident "opt" (compile_gram.ml[38,1071+33]..[38,1071+36])
                                              [
                                                <case>
                                                  pattern (compile_gram.ml[39,1113+29]..[39,1113+33])
                                                    Ppat_construct "None" (compile_gram.ml[39,1113+29]..[39,1113+33])
                                                    None
                                                  expression (compile_gram.ml[40,1151+31]..[40,1151+71])
                                                    Pexp_apply
                                                    expression (compile_gram.ml[40,1151+31]..[40,1151+34])
                                                      Pexp_ident "add" (compile_gram.ml[40,1151+31]..[40,1151+34])
                                                    [
                                                      <label> ""
                                                        expression (compile_gram.ml[40,1151+35]..[40,1151+67])
                                                          Pexp_tuple
                                                          [
                                                            expression (compile_gram.ml[40,1151+36]..[40,1151+37])
                                                              Pexp_ident "v" (compile_gram.ml[40,1151+36]..[40,1151+37])
                                                            expression (compile_gram.ml[40,1151+39]..[40,1151+66])
                                                              Pexp_coerce
                                                              expression (compile_gram.ml[40,1151+40]..[40,1151+53])
                                                                Pexp_variant "Lid"
                                                                Some
                                                                  expression (compile_gram.ml[40,1151+45]..[40,1151+53])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (compile_gram.ml[40,1151+46]..[40,1151+49])
Pexp_ident "loc" (compile_gram.ml[40,1151+46]..[40,1151+49])
                                                                      expression (compile_gram.ml[40,1151+51]..[40,1151+52])
Pexp_ident "s" (compile_gram.ml[40,1151+51]..[40,1151+52])
                                                                    ]
                                                              None
                                                              core_type (compile_gram.ml[40,1151+57]..[40,1151+65])
                                                                Ptyp_constr "Astf.exp" (compile_gram.ml[40,1151+57]..[40,1151+65])
                                                                []
                                                          ]
                                                      <label> ""
                                                        expression (compile_gram.ml[40,1151+68]..[40,1151+71])
                                                          Pexp_ident "env" (compile_gram.ml[40,1151+68]..[40,1151+71])
                                                    ]
                                                <case>
                                                  pattern (compile_gram.ml[41,1223+29]..[41,1223+35])
                                                    Ppat_construct "Some" (compile_gram.ml[41,1223+29]..[41,1223+33])
                                                    Some
                                                      pattern (compile_gram.ml[41,1223+34]..[41,1223+35])
                                                        Ppat_var "l" (compile_gram.ml[41,1223+34]..[41,1223+35])
                                                  expression (compile_gram.ml[42,1262+31]..[46,1459+49])
                                                    Pexp_apply
                                                    expression (compile_gram.ml[42,1262+31]..[42,1262+34])
                                                      Pexp_ident "add" (compile_gram.ml[42,1262+31]..[42,1262+34])
                                                    [
                                                      <label> ""
                                                        expression (compile_gram.ml[43,1297+33]..[46,1459+45])
                                                          Pexp_tuple
                                                          [
                                                            expression (compile_gram.ml[43,1297+34]..[43,1297+35])
                                                              Pexp_ident "v" (compile_gram.ml[43,1297+34]..[43,1297+35])
                                                            expression (compile_gram.ml[44,1334+35]..[46,1459+44])
                                                              Pexp_coerce
                                                              expression (compile_gram.ml[44,1334+36]..[45,1377+77])
                                                                Pexp_variant "Field"
                                                                Some
                                                                  expression (compile_gram.ml[45,1377+38]..[45,1377+77])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (compile_gram.ml[45,1377+39]..[45,1377+42])
Pexp_ident "loc" (compile_gram.ml[45,1377+39]..[45,1377+42])
                                                                      expression (compile_gram.ml[45,1377+45]..[45,1377+58])
Pexp_variant "Lid"
Some
  expression (compile_gram.ml[45,1377+50]..[45,1377+58])
    Pexp_tuple
    [
      expression (compile_gram.ml[45,1377+51]..[45,1377+54])
        Pexp_ident "loc" (compile_gram.ml[45,1377+51]..[45,1377+54])
      expression (compile_gram.ml[45,1377+56]..[45,1377+57])
        Pexp_ident "s" (compile_gram.ml[45,1377+56]..[45,1377+57])
    ]
                                                                      expression (compile_gram.ml[45,1377+62]..[45,1377+75])
Pexp_variant "Lid"
Some
  expression (compile_gram.ml[45,1377+67]..[45,1377+75])
    Pexp_tuple
    [
      expression (compile_gram.ml[45,1377+68]..[45,1377+71])
        Pexp_ident "loc" (compile_gram.ml[45,1377+68]..[45,1377+71])
      expression (compile_gram.ml[45,1377+73]..[45,1377+74])
        Pexp_ident "l" (compile_gram.ml[45,1377+73]..[45,1377+74])
    ]
                                                                    ]
                                                              None
                                                              core_type (compile_gram.ml[46,1459+35]..[46,1459+43])
                                                                Ptyp_constr "Astf.exp" (compile_gram.ml[46,1459+35]..[46,1459+43])
                                                                []
                                                          ]
                                                      <label> ""
                                                        expression (compile_gram.ml[46,1459+46]..[46,1459+49])
                                                          Pexp_ident "env" (compile_gram.ml[46,1459+46]..[46,1459+49])
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (compile_gram.ml[47,1514+0]..[133,5803+82])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[47,1514+4]..[47,1514+12])
          Ppat_var "mk_prule" (compile_gram.ml[47,1514+4]..[47,1514+12])
        expression (compile_gram.ml[47,1514+13]..[133,5803+82])
          Pexp_fun "prod"
          None
          pattern (compile_gram.ml[47,1514+14]..[47,1514+18])
            Ppat_var "prod" (compile_gram.ml[47,1514+14]..[47,1514+18])
          expression (compile_gram.ml[47,1514+20]..[133,5803+82])
            Pexp_fun "action"
            None
            pattern (compile_gram.ml[47,1514+21]..[47,1514+27])
              Ppat_var "action" (compile_gram.ml[47,1514+21]..[47,1514+27])
            expression (compile_gram.ml[48,1545+2]..[133,5803+82])
              Pexp_let Nonrec
              [
                <def>
                  pattern (compile_gram.ml[48,1545+6]..[48,1545+9])
                    Ppat_var "env" (compile_gram.ml[48,1545+6]..[48,1545+9])
                  expression (compile_gram.ml[48,1545+12]..[48,1545+18])
                    Pexp_apply
                    expression (compile_gram.ml[48,1545+12]..[48,1545+15])
                      Pexp_ident "ref" (compile_gram.ml[48,1545+12]..[48,1545+15])
                    [
                      <label> ""
                        expression (compile_gram.ml[48,1545+16]..[48,1545+18])
                          Pexp_construct "[]" (compile_gram.ml[48,1545+16]..[48,1545+18])
                          None
                    ]
              ]
              expression (compile_gram.ml[49,1567+2]..[133,5803+82])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (compile_gram.ml[49,1567+6]..[49,1567+7])
                      Ppat_var "i" (compile_gram.ml[49,1567+6]..[49,1567+7])
                    expression (compile_gram.ml[49,1567+10]..[49,1567+15])
                      Pexp_apply
                      expression (compile_gram.ml[49,1567+10]..[49,1567+13])
                        Pexp_ident "ref" (compile_gram.ml[49,1567+10]..[49,1567+13])
                      [
                        <label> ""
                          expression (compile_gram.ml[49,1567+14]..[49,1567+15])
                            Pexp_constant Const_int 0
                      ]
                ]
                expression (compile_gram.ml[50,1586+2]..[133,5803+82])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (compile_gram.ml[50,1586+6]..[50,1586+10])
                        Ppat_var "prod" (compile_gram.ml[50,1586+6]..[50,1586+10])
                      expression (compile_gram.ml[51,1599+4]..[132,5770+29])
                        Pexp_apply
                        expression (compile_gram.ml[51,1599+4]..[51,1599+20])
                          Pexp_ident "Listf.filter_map" (compile_gram.ml[51,1599+4]..[51,1599+20])
                        [
                          <label> ""
                            expression (compile_gram.ml[52,1620+7]..[132,5770+23])
                              Pexp_function
                              [
                                <case>
                                  pattern (compile_gram.ml[53,1636+9]..[53,1636+54])
                                    Ppat_constraint
                                    pattern (compile_gram.ml[53,1636+10]..[53,1636+11])
                                      Ppat_var "p" (compile_gram.ml[53,1636+10]..[53,1636+11])
                                    core_type (compile_gram.ml[53,1636+14]..[53,1636+53])
                                      Ptyp_constr "Gram_def.decorate" (compile_gram.ml[53,1636+36]..[53,1636+53])
                                      [
                                        core_type (compile_gram.ml[53,1636+14]..[53,1636+35])
                                          Ptyp_constr "list" (compile_gram.ml[53,1636+31]..[53,1636+35])
                                          [
                                            core_type (compile_gram.ml[53,1636+14]..[53,1636+30])
                                              Ptyp_constr "Gram_def.osymbol" (compile_gram.ml[53,1636+14]..[53,1636+30])
                                              []
                                          ]
                                      ]
                                  expression (compile_gram.ml[54,1694+12]..[132,5770+22])
                                    Pexp_match
                                    expression (compile_gram.ml[54,1694+18]..[54,1694+19])
                                      Pexp_ident "p" (compile_gram.ml[54,1694+18]..[54,1694+19])
                                    [
                                      <case>
                                        pattern (compile_gram.ml[55,1719+14]..[55,1719+36])
                                          Ppat_record Closed
                                          [
                                            "kind" (compile_gram.ml[55,1719+16]..[55,1719+20])
                                              pattern (compile_gram.ml[55,1719+23]..[55,1719+28])
                                                Ppat_construct "KSome" (compile_gram.ml[55,1719+23]..[55,1719+28])
                                                None
                                            "txt" (compile_gram.ml[55,1719+31]..[55,1719+34])
                                              pattern (compile_gram.ml[55,1719+31]..[55,1719+34])
                                                Ppat_var "txt" (compile_gram.ml[55,1719+31]..[55,1719+34])
                                          ]
                                        expression (compile_gram.ml[56,1759+16]..[97,4008+41])
                                          Pexp_construct "Some" (compile_gram.ml[56,1759+16]..[56,1759+20])
                                          Some
                                            expression (compile_gram.ml[57,1780+19]..[97,4008+40])
                                              Pexp_apply
                                              expression (compile_gram.ml[57,1780+23]..[57,1780+25])
                                                Pexp_ident "|>" (compile_gram.ml[57,1780+23]..[57,1780+25])
                                              [
                                                <label> ""
                                                  expression (compile_gram.ml[57,1780+19]..[57,1780+22])
                                                    Pexp_ident "txt" (compile_gram.ml[57,1780+19]..[57,1780+22])
                                                <label> ""
                                                  expression (compile_gram.ml[58,1806+22]..[97,4008+39])
                                                    Pexp_apply
                                                    expression (compile_gram.ml[58,1806+22]..[58,1806+30])
                                                      Pexp_ident "List.map" (compile_gram.ml[58,1806+22]..[58,1806+30])
                                                    [
                                                      <label> ""
                                                        expression (compile_gram.ml[59,1837+25]..[97,4008+38])
                                                          Pexp_function
                                                          [
                                                            <case>
                                                              pattern (compile_gram.ml[60,1871+27]..[60,1871+54])
                                                                Ppat_constraint
                                                                pattern (compile_gram.ml[60,1871+28]..[60,1871+34])
                                                                  Ppat_var "symbol" (compile_gram.ml[60,1871+28]..[60,1871+34])
                                                                core_type (compile_gram.ml[60,1871+37]..[60,1871+53])
                                                                  Ptyp_constr "Gram_def.osymbol" (compile_gram.ml[60,1871+37]..[60,1871+53])
                                                                  []
                                                              expression (compile_gram.ml[61,1929+30]..[97,4008+37])
                                                                Pexp_match
                                                                expression (compile_gram.ml[61,1929+36]..[61,1929+42])
                                                                  Pexp_ident "symbol" (compile_gram.ml[61,1929+36]..[61,1929+42])
                                                                [
                                                                  <case>
                                                                    pattern (compile_gram.ml[62,1977+32]..[62,1977+66])
                                                                      Ppat_record Open
                                                                      [
"outer_pattern" (compile_gram.ml[62,1977+34]..[62,1977+47])
  pattern (compile_gram.ml[62,1977+50]..[62,1977+54])
    Ppat_construct "None" (compile_gram.ml[62,1977+50]..[62,1977+54])
    None
"bounds" (compile_gram.ml[62,1977+57]..[62,1977+63])
  pattern (compile_gram.ml[62,1977+57]..[62,1977+63])
    Ppat_var "bounds" (compile_gram.ml[62,1977+57]..[62,1977+63])
                                                                      ]
                                                                    expression (compile_gram.ml[63,2047+34]..[76,2817+42])
                                                                      Pexp_let Nonrec
                                                                      [
<def>
  pattern (compile_gram.ml[63,2047+38]..[63,2047+40])
    Ppat_var "id" (compile_gram.ml[63,2047+38]..[63,2047+40])
  expression (compile_gram.ml[63,2047+43]..[63,2047+72])
    Pexp_apply
    expression (compile_gram.ml[63,2047+50]..[63,2047+51])
      Pexp_ident "^" (compile_gram.ml[63,2047+50]..[63,2047+51])
    [
      <label> ""
        expression (compile_gram.ml[63,2047+43]..[63,2047+49])
          Pexp_ident "prefix" (compile_gram.ml[63,2047+43]..[63,2047+49])
      <label> ""
        expression (compile_gram.ml[63,2047+53]..[63,2047+71])
          Pexp_apply
          expression (compile_gram.ml[63,2047+53]..[63,2047+66])
            Pexp_ident "string_of_int" (compile_gram.ml[63,2047+53]..[63,2047+66])
          [
            <label> ""
              expression (compile_gram.ml[63,2047+68]..[63,2047+70])
                Pexp_apply
                expression (compile_gram.ml[63,2047+68]..[63,2047+69])
                  Pexp_ident "!" (compile_gram.ml[63,2047+68]..[63,2047+69])
                [
                  <label> ""
                    expression (compile_gram.ml[63,2047+69]..[63,2047+70])
                      Pexp_ident "i" (compile_gram.ml[63,2047+69]..[63,2047+70])
                ]
          ]
    ]
                                                                      ]
                                                                      expression (compile_gram.ml[64,2123+34]..[76,2817+42])
Pexp_sequence
expression (compile_gram.ml[64,2123+35]..[64,2123+60])
  Pexp_apply
  expression (compile_gram.ml[64,2123+35]..[64,2123+46])
    Pexp_ident "enhance_env" (compile_gram.ml[64,2123+35]..[64,2123+46])
  [
    <label> ""
      expression (compile_gram.ml[64,2123+47]..[64,2123+49])
        Pexp_ident "id" (compile_gram.ml[64,2123+47]..[64,2123+49])
    <label> ""
      expression (compile_gram.ml[64,2123+50]..[64,2123+56])
        Pexp_ident "bounds" (compile_gram.ml[64,2123+50]..[64,2123+56])
    <label> ""
      expression (compile_gram.ml[64,2123+57]..[64,2123+60])
        Pexp_ident "env" (compile_gram.ml[64,2123+57]..[64,2123+60])
  ]
expression (compile_gram.ml[64,2123+34]..[76,2817+42])
  Pexp_sequence
  expression (compile_gram.ml[65,2185+35]..[74,2704+68])
    Pexp_apply
    expression (compile_gram.ml[65,2185+35]..[65,2185+44])
      Pexp_ident "List.iter" (compile_gram.ml[65,2185+35]..[65,2185+44])
    [
      <label> ""
        expression (compile_gram.ml[66,2230+38]..[74,2704+60])
          Pexp_function
          [
            <case>
              pattern (compile_gram.ml[67,2277+40]..[67,2277+60])
                Ppat_tuple
                [
                  pattern (compile_gram.ml[67,2277+41]..[67,2277+57])
                    Ppat_alias "z" (compile_gram.ml[67,2277+55]..[67,2277+56])
                    pattern (compile_gram.ml[67,2277+42]..[67,2277+51])
                      Ppat_tuple
                      [
                        pattern (compile_gram.ml[67,2277+43]..[67,2277+47])
                          Ppat_var "xloc" (compile_gram.ml[67,2277+43]..[67,2277+47])
                        pattern (compile_gram.ml[67,2277+48]..[67,2277+50])
                          Ppat_var "id" (compile_gram.ml[67,2277+48]..[67,2277+50])
                      ]
                  pattern (compile_gram.ml[67,2277+58]..[67,2277+59])
                    Ppat_any
                ]
              expression (compile_gram.ml[68,2341+42]..[74,2704+60])
                Pexp_apply
                expression (compile_gram.ml[68,2341+42]..[68,2341+45])
                  Pexp_ident "add" (compile_gram.ml[68,2341+42]..[68,2341+45])
                [
                  <label> "check"
                    expression (compile_gram.ml[68,2341+53]..[68,2341+58])
                      Pexp_construct "false" (compile_gram.ml[68,2341+53]..[68,2341+58])
                      None
                  <label> ""
                    expression (compile_gram.ml[69,2400+44]..[74,2704+56])
                      Pexp_tuple
                      [
                        expression (compile_gram.ml[69,2400+45]..[69,2400+46])
                          Pexp_ident "z" (compile_gram.ml[69,2400+45]..[69,2400+46])
                        expression (compile_gram.ml[70,2448+46]..[74,2704+55])
                          Pexp_coerce
                          expression (compile_gram.ml[70,2448+47]..[73,2630+69])
                            Pexp_variant "App"
                            Some
                              expression (compile_gram.ml[71,2500+49]..[73,2630+69])
                                Pexp_tuple
                                [
                                  expression (compile_gram.ml[71,2500+50]..[71,2500+54])
                                    Pexp_ident "xloc" (compile_gram.ml[71,2500+50]..[71,2500+54])
                                  expression (compile_gram.ml[72,2556+52]..[72,2556+71])
                                    Pexp_variant "Uid"
                                    Some
                                      expression (compile_gram.ml[72,2556+57]..[72,2556+71])
                                        Pexp_tuple
                                        [
                                          expression (compile_gram.ml[72,2556+58]..[72,2556+62])
                                            Pexp_ident "xloc" (compile_gram.ml[72,2556+58]..[72,2556+62])
                                          expression (compile_gram.ml[72,2556+64]..[72,2556+70])
                                            Pexp_constant Const_string("Some",None)
                                        ]
                                  expression (compile_gram.ml[73,2630+52]..[73,2630+67])
                                    Pexp_variant "Lid"
                                    Some
                                      expression (compile_gram.ml[73,2630+57]..[73,2630+67])
                                        Pexp_tuple
                                        [
                                          expression (compile_gram.ml[73,2630+58]..[73,2630+62])
                                            Pexp_ident "xloc" (compile_gram.ml[73,2630+58]..[73,2630+62])
                                          expression (compile_gram.ml[73,2630+64]..[73,2630+66])
                                            Pexp_ident "id" (compile_gram.ml[73,2630+64]..[73,2630+66])
                                        ]
                                ]
                          None
                          core_type (compile_gram.ml[74,2704+46]..[74,2704+54])
                            Ptyp_constr "Astf.exp" (compile_gram.ml[74,2704+46]..[74,2704+54])
                            []
                      ]
                  <label> ""
                    expression (compile_gram.ml[74,2704+57]..[74,2704+60])
                      Pexp_ident "env" (compile_gram.ml[74,2704+57]..[74,2704+60])
                ]
          ]
      <label> ""
        expression (compile_gram.ml[74,2704+62]..[74,2704+68])
          Pexp_ident "bounds" (compile_gram.ml[74,2704+62]..[74,2704+68])
    ]
  expression (compile_gram.ml[64,2123+34]..[76,2817+42])
    Pexp_sequence
    expression (compile_gram.ml[75,2774+35]..[75,2774+41])
      Pexp_apply
      expression (compile_gram.ml[75,2774+35]..[75,2774+39])
        Pexp_ident "incr" (compile_gram.ml[75,2774+35]..[75,2774+39])
      [
        <label> ""
          expression (compile_gram.ml[75,2774+40]..[75,2774+41])
            Pexp_ident "i" (compile_gram.ml[75,2774+40]..[75,2774+41])
      ]
    expression (compile_gram.ml[64,2123+34]..[76,2817+42])
      Pexp_ident "symbol" (compile_gram.ml[76,2817+35]..[76,2817+41])
                                                                  <case>
                                                                    pattern (compile_gram.ml[77,2860+32]..[78,2933+48])
                                                                      Ppat_alias "s" (compile_gram.ml[78,2933+47]..[78,2933+48])
                                                                      pattern (compile_gram.ml[77,2860+32]..[78,2933+43])
Ppat_record Open
[
  "outer_pattern" (compile_gram.ml[77,2860+34]..[77,2860+47])
    pattern (compile_gram.ml[77,2860+50]..[77,2860+71])
      Ppat_construct "Some" (compile_gram.ml[77,2860+50]..[77,2860+54])
      Some
        pattern (compile_gram.ml[77,2860+55]..[77,2860+71])
          Ppat_alias "z" (compile_gram.ml[77,2860+69]..[77,2860+70])
          pattern (compile_gram.ml[77,2860+56]..[77,2860+65])
            Ppat_tuple
            [
              pattern (compile_gram.ml[77,2860+57]..[77,2860+61])
                Ppat_var "xloc" (compile_gram.ml[77,2860+57]..[77,2860+61])
              pattern (compile_gram.ml[77,2860+62]..[77,2860+64])
                Ppat_var "id" (compile_gram.ml[77,2860+62]..[77,2860+64])
            ]
  "bounds" (compile_gram.ml[78,2933+34]..[78,2933+40])
    pattern (compile_gram.ml[78,2933+34]..[78,2933+40])
      Ppat_var "bounds" (compile_gram.ml[78,2933+34]..[78,2933+40])
]
                                                                    expression (compile_gram.ml[79,2985+34]..[97,4008+37])
                                                                      Pexp_sequence
                                                                      expression (compile_gram.ml[79,2985+35]..[79,2985+60])
Pexp_apply
expression (compile_gram.ml[79,2985+35]..[79,2985+46])
  Pexp_ident "enhance_env" (compile_gram.ml[79,2985+35]..[79,2985+46])
[
  <label> ""
    expression (compile_gram.ml[79,2985+47]..[79,2985+49])
      Pexp_ident "id" (compile_gram.ml[79,2985+47]..[79,2985+49])
  <label> ""
    expression (compile_gram.ml[79,2985+50]..[79,2985+56])
      Pexp_ident "bounds" (compile_gram.ml[79,2985+50]..[79,2985+56])
  <label> ""
    expression (compile_gram.ml[79,2985+57]..[79,2985+60])
      Pexp_ident "env" (compile_gram.ml[79,2985+57]..[79,2985+60])
]
                                                                      expression (compile_gram.ml[79,2985+34]..[97,4008+37])
Pexp_sequence
expression (compile_gram.ml[80,3047+35]..[85,3334+40])
  Pexp_apply
  expression (compile_gram.ml[80,3047+35]..[80,3047+38])
    Pexp_ident "add" (compile_gram.ml[80,3047+35]..[80,3047+38])
  [
    <label> "check"
      expression (compile_gram.ml[80,3047+46]..[80,3047+51])
        Pexp_construct "false" (compile_gram.ml[80,3047+46]..[80,3047+51])
        None
    <label> ""
      expression (compile_gram.ml[81,3099+37]..[84,3257+76])
        Pexp_tuple
        [
          expression (compile_gram.ml[81,3099+38]..[81,3099+39])
            Pexp_ident "z" (compile_gram.ml[81,3099+38]..[81,3099+39])
          expression (compile_gram.ml[82,3140+39]..[84,3257+75])
            Pexp_coerce
            expression (compile_gram.ml[82,3140+40]..[84,3257+62])
              Pexp_variant "App"
              Some
                expression (compile_gram.ml[83,3185+42]..[84,3257+62])
                  Pexp_tuple
                  [
                    expression (compile_gram.ml[83,3185+43]..[83,3185+47])
                      Pexp_ident "xloc" (compile_gram.ml[83,3185+43]..[83,3185+47])
                    expression (compile_gram.ml[83,3185+50]..[83,3185+69])
                      Pexp_variant "Uid"
                      Some
                        expression (compile_gram.ml[83,3185+55]..[83,3185+69])
                          Pexp_tuple
                          [
                            expression (compile_gram.ml[83,3185+56]..[83,3185+60])
                              Pexp_ident "xloc" (compile_gram.ml[83,3185+56]..[83,3185+60])
                            expression (compile_gram.ml[83,3185+62]..[83,3185+68])
                              Pexp_constant Const_string("Some",None)
                          ]
                    expression (compile_gram.ml[84,3257+45]..[84,3257+60])
                      Pexp_variant "Lid"
                      Some
                        expression (compile_gram.ml[84,3257+50]..[84,3257+60])
                          Pexp_tuple
                          [
                            expression (compile_gram.ml[84,3257+51]..[84,3257+55])
                              Pexp_ident "xloc" (compile_gram.ml[84,3257+51]..[84,3257+55])
                            expression (compile_gram.ml[84,3257+57]..[84,3257+59])
                              Pexp_ident "id" (compile_gram.ml[84,3257+57]..[84,3257+59])
                          ]
                  ]
            None
            core_type (compile_gram.ml[84,3257+66]..[84,3257+74])
              Ptyp_constr "Astf.exp" (compile_gram.ml[84,3257+66]..[84,3257+74])
              []
        ]
    <label> ""
      expression (compile_gram.ml[85,3334+37]..[85,3334+40])
        Pexp_ident "env" (compile_gram.ml[85,3334+37]..[85,3334+40])
  ]
expression (compile_gram.ml[79,2985+34]..[97,4008+37])
  Pexp_sequence
  expression (compile_gram.ml[86,3376+35]..[95,3895+68])
    Pexp_apply
    expression (compile_gram.ml[86,3376+35]..[86,3376+44])
      Pexp_ident "List.iter" (compile_gram.ml[86,3376+35]..[86,3376+44])
    [
      <label> ""
        expression (compile_gram.ml[87,3421+38]..[95,3895+60])
          Pexp_function
          [
            <case>
              pattern (compile_gram.ml[88,3468+40]..[88,3468+60])
                Ppat_tuple
                [
                  pattern (compile_gram.ml[88,3468+41]..[88,3468+57])
                    Ppat_alias "z" (compile_gram.ml[88,3468+55]..[88,3468+56])
                    pattern (compile_gram.ml[88,3468+42]..[88,3468+51])
                      Ppat_tuple
                      [
                        pattern (compile_gram.ml[88,3468+43]..[88,3468+47])
                          Ppat_var "xloc" (compile_gram.ml[88,3468+43]..[88,3468+47])
                        pattern (compile_gram.ml[88,3468+48]..[88,3468+50])
                          Ppat_var "id" (compile_gram.ml[88,3468+48]..[88,3468+50])
                      ]
                  pattern (compile_gram.ml[88,3468+58]..[88,3468+59])
                    Ppat_any
                ]
              expression (compile_gram.ml[89,3532+42]..[95,3895+60])
                Pexp_apply
                expression (compile_gram.ml[89,3532+42]..[89,3532+45])
                  Pexp_ident "add" (compile_gram.ml[89,3532+42]..[89,3532+45])
                [
                  <label> "check"
                    expression (compile_gram.ml[89,3532+53]..[89,3532+58])
                      Pexp_construct "false" (compile_gram.ml[89,3532+53]..[89,3532+58])
                      None
                  <label> ""
                    expression (compile_gram.ml[90,3591+44]..[95,3895+56])
                      Pexp_tuple
                      [
                        expression (compile_gram.ml[90,3591+45]..[90,3591+46])
                          Pexp_ident "z" (compile_gram.ml[90,3591+45]..[90,3591+46])
                        expression (compile_gram.ml[91,3639+46]..[95,3895+55])
                          Pexp_coerce
                          expression (compile_gram.ml[91,3639+47]..[94,3821+69])
                            Pexp_variant "App"
                            Some
                              expression (compile_gram.ml[92,3691+49]..[94,3821+69])
                                Pexp_tuple
                                [
                                  expression (compile_gram.ml[92,3691+50]..[92,3691+54])
                                    Pexp_ident "xloc" (compile_gram.ml[92,3691+50]..[92,3691+54])
                                  expression (compile_gram.ml[93,3747+52]..[93,3747+71])
                                    Pexp_variant "Uid"
                                    Some
                                      expression (compile_gram.ml[93,3747+57]..[93,3747+71])
                                        Pexp_tuple
                                        [
                                          expression (compile_gram.ml[93,3747+58]..[93,3747+62])
                                            Pexp_ident "xloc" (compile_gram.ml[93,3747+58]..[93,3747+62])
                                          expression (compile_gram.ml[93,3747+64]..[93,3747+70])
                                            Pexp_constant Const_string("Some",None)
                                        ]
                                  expression (compile_gram.ml[94,3821+52]..[94,3821+67])
                                    Pexp_variant "Lid"
                                    Some
                                      expression (compile_gram.ml[94,3821+57]..[94,3821+67])
                                        Pexp_tuple
                                        [
                                          expression (compile_gram.ml[94,3821+58]..[94,3821+62])
                                            Pexp_ident "xloc" (compile_gram.ml[94,3821+58]..[94,3821+62])
                                          expression (compile_gram.ml[94,3821+64]..[94,3821+66])
                                            Pexp_ident "id" (compile_gram.ml[94,3821+64]..[94,3821+66])
                                        ]
                                ]
                          None
                          core_type (compile_gram.ml[95,3895+46]..[95,3895+54])
                            Ptyp_constr "Astf.exp" (compile_gram.ml[95,3895+46]..[95,3895+54])
                            []
                      ]
                  <label> ""
                    expression (compile_gram.ml[95,3895+57]..[95,3895+60])
                      Pexp_ident "env" (compile_gram.ml[95,3895+57]..[95,3895+60])
                ]
          ]
      <label> ""
        expression (compile_gram.ml[95,3895+62]..[95,3895+68])
          Pexp_ident "bounds" (compile_gram.ml[95,3895+62]..[95,3895+68])
    ]
  expression (compile_gram.ml[79,2985+34]..[97,4008+37])
    Pexp_sequence
    expression (compile_gram.ml[96,3965+35]..[96,3965+41])
      Pexp_apply
      expression (compile_gram.ml[96,3965+35]..[96,3965+39])
        Pexp_ident "incr" (compile_gram.ml[96,3965+35]..[96,3965+39])
      [
        <label> ""
          expression (compile_gram.ml[96,3965+40]..[96,3965+41])
            Pexp_ident "i" (compile_gram.ml[96,3965+40]..[96,3965+41])
      ]
    expression (compile_gram.ml[79,2985+34]..[97,4008+37])
      Pexp_ident "s" (compile_gram.ml[97,4008+35]..[97,4008+36])
                                                                ]
                                                          ]
                                                    ]
                                              ]
                                      <case>
                                        pattern (compile_gram.ml[98,4050+14]..[98,4050+38])
                                          Ppat_record Closed
                                          [
                                            "kind" (compile_gram.ml[98,4050+16]..[98,4050+20])
                                              pattern (compile_gram.ml[98,4050+23]..[98,4050+30])
                                                Ppat_construct "KNormal" (compile_gram.ml[98,4050+23]..[98,4050+30])
                                                None
                                            "txt" (compile_gram.ml[98,4050+33]..[98,4050+36])
                                              pattern (compile_gram.ml[98,4050+33]..[98,4050+36])
                                                Ppat_var "txt" (compile_gram.ml[98,4050+33]..[98,4050+36])
                                          ]
                                        expression (compile_gram.ml[99,4092+16]..[110,4678+25])
                                          Pexp_construct "Some" (compile_gram.ml[99,4092+16]..[99,4092+20])
                                          Some
                                            expression (compile_gram.ml[100,4113+19]..[110,4678+24])
                                              Pexp_apply
                                              expression (compile_gram.ml[100,4113+19]..[100,4113+27])
                                                Pexp_ident "List.map" (compile_gram.ml[100,4113+19]..[100,4113+27])
                                              [
                                                <label> ""
                                                  expression (compile_gram.ml[101,4141+22]..[109,4601+75])
                                                    Pexp_function
                                                    [
                                                      <case>
                                                        pattern (compile_gram.ml[102,4172+24]..[102,4172+51])
                                                          Ppat_constraint
                                                          pattern (compile_gram.ml[102,4172+25]..[102,4172+31])
                                                            Ppat_var "symbol" (compile_gram.ml[102,4172+25]..[102,4172+31])
                                                          core_type (compile_gram.ml[102,4172+34]..[102,4172+50])
                                                            Ptyp_constr "Gram_def.osymbol" (compile_gram.ml[102,4172+34]..[102,4172+50])
                                                            []
                                                        expression (compile_gram.ml[103,4227+27]..[109,4601+74])
                                                          Pexp_match
                                                          expression (compile_gram.ml[103,4227+33]..[103,4227+39])
                                                            Pexp_ident "symbol" (compile_gram.ml[103,4227+33]..[103,4227+39])
                                                          [
                                                            <case>
                                                              pattern (compile_gram.ml[104,4272+29]..[104,4272+63])
                                                                Ppat_record Open
                                                                [
                                                                  "outer_pattern" (compile_gram.ml[104,4272+31]..[104,4272+44])
                                                                    pattern (compile_gram.ml[104,4272+47]..[104,4272+51])
                                                                      Ppat_construct "None" (compile_gram.ml[104,4272+47]..[104,4272+51])
                                                                      None
                                                                  "bounds" (compile_gram.ml[104,4272+54]..[104,4272+60])
                                                                    pattern (compile_gram.ml[104,4272+54]..[104,4272+60])
                                                                      Ppat_var "bounds" (compile_gram.ml[104,4272+54]..[104,4272+60])
                                                                ]
                                                              expression (compile_gram.ml[105,4339+31]..[106,4412+74])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (compile_gram.ml[105,4339+35]..[105,4339+37])
                                                                      Ppat_var "id" (compile_gram.ml[105,4339+35]..[105,4339+37])
                                                                    expression (compile_gram.ml[105,4339+40]..[105,4339+69])
                                                                      Pexp_apply
                                                                      expression (compile_gram.ml[105,4339+47]..[105,4339+48])
Pexp_ident "^" (compile_gram.ml[105,4339+47]..[105,4339+48])
                                                                      [
<label> ""
  expression (compile_gram.ml[105,4339+40]..[105,4339+46])
    Pexp_ident "prefix" (compile_gram.ml[105,4339+40]..[105,4339+46])
<label> ""
  expression (compile_gram.ml[105,4339+50]..[105,4339+68])
    Pexp_apply
    expression (compile_gram.ml[105,4339+50]..[105,4339+63])
      Pexp_ident "string_of_int" (compile_gram.ml[105,4339+50]..[105,4339+63])
    [
      <label> ""
        expression (compile_gram.ml[105,4339+65]..[105,4339+67])
          Pexp_apply
          expression (compile_gram.ml[105,4339+65]..[105,4339+66])
            Pexp_ident "!" (compile_gram.ml[105,4339+65]..[105,4339+66])
          [
            <label> ""
              expression (compile_gram.ml[105,4339+66]..[105,4339+67])
                Pexp_ident "i" (compile_gram.ml[105,4339+66]..[105,4339+67])
          ]
    ]
                                                                      ]
                                                                ]
                                                                expression (compile_gram.ml[106,4412+31]..[106,4412+74])
                                                                  Pexp_sequence
                                                                  expression (compile_gram.ml[106,4412+32]..[106,4412+57])
                                                                    Pexp_apply
                                                                    expression (compile_gram.ml[106,4412+32]..[106,4412+43])
                                                                      Pexp_ident "enhance_env" (compile_gram.ml[106,4412+32]..[106,4412+43])
                                                                    [
                                                                      <label> ""
expression (compile_gram.ml[106,4412+44]..[106,4412+46])
  Pexp_ident "id" (compile_gram.ml[106,4412+44]..[106,4412+46])
                                                                      <label> ""
expression (compile_gram.ml[106,4412+47]..[106,4412+53])
  Pexp_ident "bounds" (compile_gram.ml[106,4412+47]..[106,4412+53])
                                                                      <label> ""
expression (compile_gram.ml[106,4412+54]..[106,4412+57])
  Pexp_ident "env" (compile_gram.ml[106,4412+54]..[106,4412+57])
                                                                    ]
                                                                  expression (compile_gram.ml[106,4412+31]..[106,4412+74])
                                                                    Pexp_sequence
                                                                    expression (compile_gram.ml[106,4412+59]..[106,4412+65])
                                                                      Pexp_apply
                                                                      expression (compile_gram.ml[106,4412+59]..[106,4412+63])
Pexp_ident "incr" (compile_gram.ml[106,4412+59]..[106,4412+63])
                                                                      [
<label> ""
  expression (compile_gram.ml[106,4412+64]..[106,4412+65])
    Pexp_ident "i" (compile_gram.ml[106,4412+64]..[106,4412+65])
                                                                      ]
                                                                    expression (compile_gram.ml[106,4412+31]..[106,4412+74])
                                                                      Pexp_ident "symbol" (compile_gram.ml[106,4412+67]..[106,4412+73])
                                                            <case>
                                                              pattern (compile_gram.ml[107,4487+29]..[108,4560+37])
                                                                Ppat_alias "symbol" (compile_gram.ml[108,4560+31]..[108,4560+37])
                                                                pattern (compile_gram.ml[107,4487+29]..[107,4487+69])
                                                                  Ppat_record Open
                                                                  [
                                                                    "outer_pattern" (compile_gram.ml[107,4487+31]..[107,4487+44])
                                                                      pattern (compile_gram.ml[107,4487+47]..[107,4487+58])
Ppat_construct "Some" (compile_gram.ml[107,4487+47]..[107,4487+51])
Some
  pattern (compile_gram.ml[107,4487+47]..[107,4487+58])
    Ppat_tuple
    [
      pattern (compile_gram.ml[107,4487+53]..[107,4487+54])
        Ppat_any
      pattern (compile_gram.ml[107,4487+55]..[107,4487+57])
        Ppat_var "id" (compile_gram.ml[107,4487+55]..[107,4487+57])
    ]
                                                                    "bounds" (compile_gram.ml[107,4487+60]..[107,4487+66])
                                                                      pattern (compile_gram.ml[107,4487+60]..[107,4487+66])
Ppat_var "bounds" (compile_gram.ml[107,4487+60]..[107,4487+66])
                                                                  ]
                                                              expression (compile_gram.ml[109,4601+31]..[109,4601+74])
                                                                Pexp_sequence
                                                                expression (compile_gram.ml[109,4601+32]..[109,4601+57])
                                                                  Pexp_apply
                                                                  expression (compile_gram.ml[109,4601+32]..[109,4601+43])
                                                                    Pexp_ident "enhance_env" (compile_gram.ml[109,4601+32]..[109,4601+43])
                                                                  [
                                                                    <label> ""
                                                                      expression (compile_gram.ml[109,4601+44]..[109,4601+46])
Pexp_ident "id" (compile_gram.ml[109,4601+44]..[109,4601+46])
                                                                    <label> ""
                                                                      expression (compile_gram.ml[109,4601+47]..[109,4601+53])
Pexp_ident "bounds" (compile_gram.ml[109,4601+47]..[109,4601+53])
                                                                    <label> ""
                                                                      expression (compile_gram.ml[109,4601+54]..[109,4601+57])
Pexp_ident "env" (compile_gram.ml[109,4601+54]..[109,4601+57])
                                                                  ]
                                                                expression (compile_gram.ml[109,4601+31]..[109,4601+74])
                                                                  Pexp_sequence
                                                                  expression (compile_gram.ml[109,4601+59]..[109,4601+65])
                                                                    Pexp_apply
                                                                    expression (compile_gram.ml[109,4601+59]..[109,4601+63])
                                                                      Pexp_ident "incr" (compile_gram.ml[109,4601+59]..[109,4601+63])
                                                                    [
                                                                      <label> ""
expression (compile_gram.ml[109,4601+64]..[109,4601+65])
  Pexp_ident "i" (compile_gram.ml[109,4601+64]..[109,4601+65])
                                                                    ]
                                                                  expression (compile_gram.ml[109,4601+31]..[109,4601+74])
                                                                    Pexp_ident "symbol" (compile_gram.ml[109,4601+67]..[109,4601+73])
                                                          ]
                                                    ]
                                                <label> ""
                                                  expression (compile_gram.ml[110,4678+21]..[110,4678+24])
                                                    Pexp_ident "txt" (compile_gram.ml[110,4678+21]..[110,4678+24])
                                              ]
                                      <case>
                                        pattern (compile_gram.ml[111,4704+14]..[111,4704+36])
                                          Ppat_record Closed
                                          [
                                            "kind" (compile_gram.ml[111,4704+16]..[111,4704+20])
                                              pattern (compile_gram.ml[111,4704+23]..[111,4704+28])
                                                Ppat_construct "KNone" (compile_gram.ml[111,4704+23]..[111,4704+28])
                                                None
                                            "txt" (compile_gram.ml[111,4704+31]..[111,4704+34])
                                              pattern (compile_gram.ml[111,4704+31]..[111,4704+34])
                                                Ppat_var "txt" (compile_gram.ml[111,4704+31]..[111,4704+34])
                                          ]
                                        expression (compile_gram.ml[112,4744+16]..[132,5770+22])
                                          Pexp_sequence
                                          expression (compile_gram.ml[112,4744+17]..[131,5711+57])
                                            Pexp_apply
                                            expression (compile_gram.ml[112,4744+17]..[112,4744+26])
                                              Pexp_ident "List.iter" (compile_gram.ml[112,4744+17]..[112,4744+26])
                                            [
                                              <label> ""
                                                expression (compile_gram.ml[113,4771+20]..[131,5711+52])
                                                  Pexp_function
                                                  [
                                                    <case>
                                                      pattern (compile_gram.ml[114,4800+22]..[114,4800+49])
                                                        Ppat_constraint
                                                        pattern (compile_gram.ml[114,4800+23]..[114,4800+29])
                                                          Ppat_var "symbol" (compile_gram.ml[114,4800+23]..[114,4800+29])
                                                        core_type (compile_gram.ml[114,4800+32]..[114,4800+48])
                                                          Ptyp_constr "Gram_def.osymbol" (compile_gram.ml[114,4800+32]..[114,4800+48])
                                                          []
                                                      expression (compile_gram.ml[115,4853+25]..[131,5711+51])
                                                        Pexp_match
                                                        expression (compile_gram.ml[115,4853+31]..[115,4853+37])
                                                          Pexp_ident "symbol" (compile_gram.ml[115,4853+31]..[115,4853+37])
                                                        [
                                                          <case>
                                                            pattern (compile_gram.ml[116,4896+27]..[116,4896+61])
                                                              Ppat_record Open
                                                              [
                                                                "outer_pattern" (compile_gram.ml[116,4896+29]..[116,4896+42])
                                                                  pattern (compile_gram.ml[116,4896+45]..[116,4896+49])
                                                                    Ppat_construct "None" (compile_gram.ml[116,4896+45]..[116,4896+49])
                                                                    None
                                                                "bounds" (compile_gram.ml[116,4896+52]..[116,4896+58])
                                                                  pattern (compile_gram.ml[116,4896+52]..[116,4896+58])
                                                                    Ppat_var "bounds" (compile_gram.ml[116,4896+52]..[116,4896+58])
                                                              ]
                                                            expression (compile_gram.ml[117,4961+29]..[122,5215+49])
                                                              Pexp_apply
                                                              expression (compile_gram.ml[117,4961+29]..[117,4961+38])
                                                                Pexp_ident "List.iter" (compile_gram.ml[117,4961+29]..[117,4961+38])
                                                              [
                                                                <label> ""
                                                                  expression (compile_gram.ml[118,5000+32]..[122,5215+41])
                                                                    Pexp_function
                                                                    [
                                                                      <case>
pattern (compile_gram.ml[119,5041+34]..[119,5041+53])
  Ppat_tuple
  [
    pattern (compile_gram.ml[119,5041+35]..[119,5041+50])
      Ppat_alias "z" (compile_gram.ml[119,5041+48]..[119,5041+49])
      pattern (compile_gram.ml[119,5041+36]..[119,5041+44])
        Ppat_tuple
        [
          pattern (compile_gram.ml[119,5041+37]..[119,5041+41])
            Ppat_var "xloc" (compile_gram.ml[119,5041+37]..[119,5041+41])
          pattern (compile_gram.ml[119,5041+42]..[119,5041+43])
            Ppat_any
        ]
    pattern (compile_gram.ml[119,5041+51]..[119,5041+52])
      Ppat_any
  ]
expression (compile_gram.ml[120,5098+36]..[122,5215+41])
  Pexp_apply
  expression (compile_gram.ml[120,5098+36]..[120,5098+39])
    Pexp_ident "add" (compile_gram.ml[120,5098+36]..[120,5098+39])
  [
    <label> ""
      expression (compile_gram.ml[121,5138+38]..[121,5138+76])
        Pexp_tuple
        [
          expression (compile_gram.ml[121,5138+39]..[121,5138+40])
            Pexp_ident "z" (compile_gram.ml[121,5138+39]..[121,5138+40])
          expression (compile_gram.ml[121,5138+42]..[121,5138+75])
            Pexp_coerce
            expression (compile_gram.ml[121,5138+43]..[121,5138+62])
              Pexp_variant "Uid"
              Some
                expression (compile_gram.ml[121,5138+48]..[121,5138+62])
                  Pexp_tuple
                  [
                    expression (compile_gram.ml[121,5138+49]..[121,5138+53])
                      Pexp_ident "xloc" (compile_gram.ml[121,5138+49]..[121,5138+53])
                    expression (compile_gram.ml[121,5138+55]..[121,5138+61])
                      Pexp_constant Const_string("None",None)
                  ]
            None
            core_type (compile_gram.ml[121,5138+66]..[121,5138+74])
              Ptyp_constr "Astf.exp" (compile_gram.ml[121,5138+66]..[121,5138+74])
              []
        ]
    <label> ""
      expression (compile_gram.ml[122,5215+38]..[122,5215+41])
        Pexp_ident "env" (compile_gram.ml[122,5215+38]..[122,5215+41])
  ]
                                                                    ]
                                                                <label> ""
                                                                  expression (compile_gram.ml[122,5215+43]..[122,5215+49])
                                                                    Pexp_ident "bounds" (compile_gram.ml[122,5215+43]..[122,5215+49])
                                                              ]
                                                          <case>
                                                            pattern (compile_gram.ml[123,5265+27]..[123,5265+76])
                                                              Ppat_record Open
                                                              [
                                                                "outer_pattern" (compile_gram.ml[123,5265+29]..[123,5265+42])
                                                                  pattern (compile_gram.ml[123,5265+45]..[123,5265+65])
                                                                    Ppat_construct "Some" (compile_gram.ml[123,5265+45]..[123,5265+49])
                                                                    Some
                                                                      pattern (compile_gram.ml[123,5265+50]..[123,5265+65])
Ppat_alias "z" (compile_gram.ml[123,5265+63]..[123,5265+64])
pattern (compile_gram.ml[123,5265+51]..[123,5265+59])
  Ppat_tuple
  [
    pattern (compile_gram.ml[123,5265+52]..[123,5265+56])
      Ppat_var "xloc" (compile_gram.ml[123,5265+52]..[123,5265+56])
    pattern (compile_gram.ml[123,5265+57]..[123,5265+58])
      Ppat_any
  ]
                                                                "bounds" (compile_gram.ml[123,5265+67]..[123,5265+73])
                                                                  pattern (compile_gram.ml[123,5265+67]..[123,5265+73])
                                                                    Ppat_var "bounds" (compile_gram.ml[123,5265+67]..[123,5265+73])
                                                              ]
                                                            expression (compile_gram.ml[125,5374+29]..[131,5711+51])
                                                              Pexp_sequence
                                                              expression (compile_gram.ml[125,5374+30]..[125,5374+76])
                                                                Pexp_apply
                                                                expression (compile_gram.ml[125,5374+30]..[125,5374+33])
                                                                  Pexp_ident "add" (compile_gram.ml[125,5374+30]..[125,5374+33])
                                                                [
                                                                  <label> ""
                                                                    expression (compile_gram.ml[125,5374+34]..[125,5374+72])
                                                                      Pexp_tuple
                                                                      [
expression (compile_gram.ml[125,5374+35]..[125,5374+36])
  Pexp_ident "z" (compile_gram.ml[125,5374+35]..[125,5374+36])
expression (compile_gram.ml[125,5374+38]..[125,5374+71])
  Pexp_coerce
  expression (compile_gram.ml[125,5374+39]..[125,5374+58])
    Pexp_variant "Uid"
    Some
      expression (compile_gram.ml[125,5374+44]..[125,5374+58])
        Pexp_tuple
        [
          expression (compile_gram.ml[125,5374+45]..[125,5374+49])
            Pexp_ident "xloc" (compile_gram.ml[125,5374+45]..[125,5374+49])
          expression (compile_gram.ml[125,5374+51]..[125,5374+57])
            Pexp_constant Const_string("None",None)
        ]
  None
  core_type (compile_gram.ml[125,5374+62]..[125,5374+70])
    Ptyp_constr "Astf.exp" (compile_gram.ml[125,5374+62]..[125,5374+70])
    []
                                                                      ]
                                                                  <label> ""
                                                                    expression (compile_gram.ml[125,5374+73]..[125,5374+76])
                                                                      Pexp_ident "env" (compile_gram.ml[125,5374+73]..[125,5374+76])
                                                                ]
                                                              expression (compile_gram.ml[125,5374+29]..[131,5711+51])
                                                                Pexp_apply
                                                                expression (compile_gram.ml[126,5452+30]..[126,5452+39])
                                                                  Pexp_ident "List.iter" (compile_gram.ml[126,5452+30]..[126,5452+39])
                                                                [
                                                                  <label> ""
                                                                    expression (compile_gram.ml[127,5492+33]..[131,5711+42])
                                                                      Pexp_function
                                                                      [
<case>
  pattern (compile_gram.ml[128,5534+35]..[128,5534+54])
    Ppat_tuple
    [
      pattern (compile_gram.ml[128,5534+36]..[128,5534+51])
        Ppat_alias "z" (compile_gram.ml[128,5534+49]..[128,5534+50])
        pattern (compile_gram.ml[128,5534+37]..[128,5534+45])
          Ppat_tuple
          [
            pattern (compile_gram.ml[128,5534+38]..[128,5534+42])
              Ppat_var "xloc" (compile_gram.ml[128,5534+38]..[128,5534+42])
            pattern (compile_gram.ml[128,5534+43]..[128,5534+44])
              Ppat_any
          ]
      pattern (compile_gram.ml[128,5534+52]..[128,5534+53])
        Ppat_any
    ]
  expression (compile_gram.ml[129,5592+37]..[131,5711+42])
    Pexp_apply
    expression (compile_gram.ml[129,5592+37]..[129,5592+40])
      Pexp_ident "add" (compile_gram.ml[129,5592+37]..[129,5592+40])
    [
      <label> ""
        expression (compile_gram.ml[130,5633+39]..[130,5633+77])
          Pexp_tuple
          [
            expression (compile_gram.ml[130,5633+40]..[130,5633+41])
              Pexp_ident "z" (compile_gram.ml[130,5633+40]..[130,5633+41])
            expression (compile_gram.ml[130,5633+43]..[130,5633+76])
              Pexp_coerce
              expression (compile_gram.ml[130,5633+44]..[130,5633+63])
                Pexp_variant "Uid"
                Some
                  expression (compile_gram.ml[130,5633+49]..[130,5633+63])
                    Pexp_tuple
                    [
                      expression (compile_gram.ml[130,5633+50]..[130,5633+54])
                        Pexp_ident "xloc" (compile_gram.ml[130,5633+50]..[130,5633+54])
                      expression (compile_gram.ml[130,5633+56]..[130,5633+62])
                        Pexp_constant Const_string("None",None)
                    ]
              None
              core_type (compile_gram.ml[130,5633+67]..[130,5633+75])
                Ptyp_constr "Astf.exp" (compile_gram.ml[130,5633+67]..[130,5633+75])
                []
          ]
      <label> ""
        expression (compile_gram.ml[131,5711+39]..[131,5711+42])
          Pexp_ident "env" (compile_gram.ml[131,5711+39]..[131,5711+42])
    ]
                                                                      ]
                                                                  <label> ""
                                                                    expression (compile_gram.ml[131,5711+44]..[131,5711+50])
                                                                      Pexp_ident "bounds" (compile_gram.ml[131,5711+44]..[131,5711+50])
                                                                ]
                                                        ]
                                                  ]
                                              <label> ""
                                                expression (compile_gram.ml[131,5711+54]..[131,5711+57])
                                                  Pexp_ident "txt" (compile_gram.ml[131,5711+54]..[131,5711+57])
                                            ]
                                          expression (compile_gram.ml[112,4744+16]..[132,5770+22])
                                            Pexp_construct "None" (compile_gram.ml[112,4744+16]..[132,5770+22])
                                            None
                                    ]
                              ]
                          <label> ""
                            expression (compile_gram.ml[132,5770+25]..[132,5770+29])
                              Pexp_ident "prod" (compile_gram.ml[132,5770+25]..[132,5770+29])
                        ]
                  ]
                  expression (compile_gram.ml[133,5803+2]..[133,5803+82])
                    Pexp_constraint
                    expression (compile_gram.ml[133,5803+3]..[133,5803+65])
                      Pexp_record
                      [
                        "prod" (compile_gram.ml[133,5803+5]..[133,5803+9])
                          expression (compile_gram.ml[133,5803+13]..[133,5803+29])
                            Pexp_apply
                            expression (compile_gram.ml[133,5803+13]..[133,5803+24])
                              Pexp_ident "List.concat" (compile_gram.ml[133,5803+13]..[133,5803+24])
                            [
                              <label> ""
                                expression (compile_gram.ml[133,5803+25]..[133,5803+29])
                                  Pexp_ident "prod" (compile_gram.ml[133,5803+25]..[133,5803+29])
                            ]
                        "action" (compile_gram.ml[133,5803+32]..[133,5803+38])
                          expression (compile_gram.ml[133,5803+32]..[133,5803+38])
                            Pexp_ident "action" (compile_gram.ml[133,5803+32]..[133,5803+38])
                        "env" (compile_gram.ml[133,5803+40]..[133,5803+43])
                          expression (compile_gram.ml[133,5803+47]..[133,5803+62])
                            Pexp_apply
                            expression (compile_gram.ml[133,5803+47]..[133,5803+55])
                              Pexp_ident "List.rev" (compile_gram.ml[133,5803+47]..[133,5803+55])
                            [
                              <label> ""
                                expression (compile_gram.ml[133,5803+57]..[133,5803+61])
                                  Pexp_apply
                                  expression (compile_gram.ml[133,5803+57]..[133,5803+58])
                                    Pexp_ident "!" (compile_gram.ml[133,5803+57]..[133,5803+58])
                                  [
                                    <label> ""
                                      expression (compile_gram.ml[133,5803+58]..[133,5803+61])
                                        Pexp_ident "env" (compile_gram.ml[133,5803+58]..[133,5803+61])
                                  ]
                            ]
                      ]
                      None
                    core_type (compile_gram.ml[133,5803+68]..[133,5803+81])
                      Ptyp_constr "Gram_def.rule" (compile_gram.ml[133,5803+68]..[133,5803+81])
                      []
    ]
  structure_item (compile_gram.ml[134,5886+0]..[267,12287+29])
    Pstr_value Rec
    [
      <def>
        pattern (compile_gram.ml[134,5886+8]..[134,5886+16])
          Ppat_var "make_exp" (compile_gram.ml[134,5886+8]..[134,5886+16])
        expression (compile_gram.ml[135,5905+2]..[233,10812+22])
          Pexp_function
          [
            <case>
              pattern (compile_gram.ml[136,5916+4]..[136,5916+19])
                Ppat_constraint
                pattern (compile_gram.ml[136,5916+5]..[136,5916+9])
                  Ppat_var "tvar" (compile_gram.ml[136,5916+5]..[136,5916+9])
                core_type (compile_gram.ml[136,5916+12]..[136,5916+18])
                  Ptyp_constr "string" (compile_gram.ml[136,5916+12]..[136,5916+18])
                  []
              expression (compile_gram.ml[137,5939+7]..[233,10812+21])
                Pexp_function
                [
                  <case>
                    pattern (compile_gram.ml[138,5955+9]..[138,5955+28])
                      Ppat_constraint
                      pattern (compile_gram.ml[138,5955+10]..[138,5955+11])
                        Ppat_var "x" (compile_gram.ml[138,5955+10]..[138,5955+11])
                      core_type (compile_gram.ml[138,5955+14]..[138,5955+27])
                        Ptyp_constr "Gram_def.text" (compile_gram.ml[138,5955+14]..[138,5955+27])
                        []
                    expression (compile_gram.ml[139,5987+11]..[233,10812+21])
                      Pexp_let Rec
                      [
                        <def>
                          pattern (compile_gram.ml[139,5987+19]..[139,5987+22])
                            Ppat_var "aux" (compile_gram.ml[139,5987+19]..[139,5987+22])
                          expression (compile_gram.ml[140,6012+13]..[232,10742+66])
                            Pexp_function
                            [
                              <case>
                                pattern (compile_gram.ml[141,6034+15]..[141,6034+19])
                                  Ppat_var "tvar" (compile_gram.ml[141,6034+15]..[141,6034+19])
                                expression (compile_gram.ml[142,6057+18]..[232,10742+65])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (compile_gram.ml[143,6084+20]..[143,6084+39])
                                        Ppat_constraint
                                        pattern (compile_gram.ml[143,6084+21]..[143,6084+22])
                                          Ppat_var "x" (compile_gram.ml[143,6084+21]..[143,6084+22])
                                        core_type (compile_gram.ml[143,6084+25]..[143,6084+38])
                                          Ptyp_constr "Gram_def.text" (compile_gram.ml[143,6084+25]..[143,6084+38])
                                          []
                                      expression (compile_gram.ml[144,6127+23]..[232,10742+64])
                                        Pexp_match
                                        expression (compile_gram.ml[144,6127+29]..[144,6127+30])
                                          Pexp_ident "x" (compile_gram.ml[144,6127+29]..[144,6127+30])
                                        [
                                          <case>
                                            pattern (compile_gram.ml[145,6163+25]..[145,6163+45])
                                              Ppat_construct "List" (compile_gram.ml[145,6163+25]..[145,6163+29])
                                              Some
                                                pattern (compile_gram.ml[145,6163+25]..[145,6163+45])
                                                  Ppat_tuple
                                                  [
                                                    pattern (compile_gram.ml[145,6163+31]..[145,6163+35])
                                                      Ppat_var "_loc" (compile_gram.ml[145,6163+31]..[145,6163+35])
                                                    pattern (compile_gram.ml[145,6163+36]..[145,6163+39])
                                                      Ppat_var "min" (compile_gram.ml[145,6163+36]..[145,6163+39])
                                                    pattern (compile_gram.ml[145,6163+40]..[145,6163+41])
                                                      Ppat_var "t" (compile_gram.ml[145,6163+40]..[145,6163+41])
                                                    pattern (compile_gram.ml[145,6163+42]..[145,6163+44])
                                                      Ppat_var "ts" (compile_gram.ml[145,6163+42]..[145,6163+44])
                                                  ]
                                            expression (compile_gram.ml[146,6212+27]..[178,7878+44])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (compile_gram.ml[146,6212+31]..[146,6212+34])
                                                    Ppat_var "txt" (compile_gram.ml[146,6212+31]..[146,6212+34])
                                                  expression (compile_gram.ml[146,6212+37]..[146,6212+50])
                                                    Pexp_apply
                                                    expression (compile_gram.ml[146,6212+37]..[146,6212+40])
                                                      Pexp_ident "aux" (compile_gram.ml[146,6212+37]..[146,6212+40])
                                                    [
                                                      <label> ""
                                                        expression (compile_gram.ml[146,6212+41]..[146,6212+43])
                                                          Pexp_constant Const_string("",None)
                                                      <label> ""
                                                        expression (compile_gram.ml[146,6212+44]..[146,6212+50])
                                                          Pexp_field
                                                          expression (compile_gram.ml[146,6212+44]..[146,6212+45])
                                                            Pexp_ident "t" (compile_gram.ml[146,6212+44]..[146,6212+45])
                                                          "text" (compile_gram.ml[146,6212+46]..[146,6212+50])
                                                    ]
                                              ]
                                              expression (compile_gram.ml[147,6266+28]..[178,7878+43])
                                                Pexp_match
                                                expression (compile_gram.ml[147,6266+34]..[147,6266+36])
                                                  Pexp_ident "ts" (compile_gram.ml[147,6266+34]..[147,6266+36])
                                                [
                                                  <case>
                                                    pattern (compile_gram.ml[148,6308+30]..[148,6308+34])
                                                      Ppat_construct "None" (compile_gram.ml[148,6308+30]..[148,6308+34])
                                                      None
                                                    expression (compile_gram.ml[149,6347+32]..[157,6747+70])
                                                      Pexp_ifthenelse
                                                      expression (compile_gram.ml[149,6347+35]..[149,6347+38])
                                                        Pexp_ident "min" (compile_gram.ml[149,6347+35]..[149,6347+38])
                                                      expression (compile_gram.ml[151,6423+34]..[153,6531+70])
                                                        Pexp_coerce
                                                        expression (compile_gram.ml[151,6423+35]..[153,6531+57])
                                                          Pexp_variant "App"
                                                          Some
                                                            expression (compile_gram.ml[152,6463+37]..[153,6531+57])
                                                              Pexp_tuple
                                                              [
                                                                expression (compile_gram.ml[152,6463+38]..[152,6463+42])
                                                                  Pexp_ident "_loc" (compile_gram.ml[152,6463+38]..[152,6463+42])
                                                                expression (compile_gram.ml[152,6463+45]..[152,6463+65])
                                                                  Pexp_variant "Uid"
                                                                  Some
                                                                    expression (compile_gram.ml[152,6463+50]..[152,6463+65])
                                                                      Pexp_tuple
                                                                      [
expression (compile_gram.ml[152,6463+51]..[152,6463+55])
  Pexp_ident "_loc" (compile_gram.ml[152,6463+51]..[152,6463+55])
expression (compile_gram.ml[152,6463+57]..[152,6463+64])
  Pexp_constant Const_string("List1",None)
                                                                      ]
                                                                expression (compile_gram.ml[153,6531+39]..[153,6531+56])
                                                                  Pexp_coerce
                                                                  expression (compile_gram.ml[153,6531+40]..[153,6531+43])
                                                                    Pexp_ident "txt" (compile_gram.ml[153,6531+40]..[153,6531+43])
                                                                  None
                                                                  core_type (compile_gram.ml[153,6531+47]..[153,6531+55])
                                                                    Ptyp_constr "Astf.exp" (compile_gram.ml[153,6531+47]..[153,6531+55])
                                                                    []
                                                              ]
                                                        None
                                                        core_type (compile_gram.ml[153,6531+61]..[153,6531+69])
                                                          Ptyp_constr "Astf.exp" (compile_gram.ml[153,6531+61]..[153,6531+69])
                                                          []
                                                      Some
                                                        expression (compile_gram.ml[155,6639+34]..[157,6747+70])
                                                          Pexp_coerce
                                                          expression (compile_gram.ml[155,6639+35]..[157,6747+57])
                                                            Pexp_variant "App"
                                                            Some
                                                              expression (compile_gram.ml[156,6679+37]..[157,6747+57])
                                                                Pexp_tuple
                                                                [
                                                                  expression (compile_gram.ml[156,6679+38]..[156,6679+42])
                                                                    Pexp_ident "_loc" (compile_gram.ml[156,6679+38]..[156,6679+42])
                                                                  expression (compile_gram.ml[156,6679+45]..[156,6679+65])
                                                                    Pexp_variant "Uid"
                                                                    Some
                                                                      expression (compile_gram.ml[156,6679+50]..[156,6679+65])
Pexp_tuple
[
  expression (compile_gram.ml[156,6679+51]..[156,6679+55])
    Pexp_ident "_loc" (compile_gram.ml[156,6679+51]..[156,6679+55])
  expression (compile_gram.ml[156,6679+57]..[156,6679+64])
    Pexp_constant Const_string("List0",None)
]
                                                                  expression (compile_gram.ml[157,6747+39]..[157,6747+56])
                                                                    Pexp_coerce
                                                                    expression (compile_gram.ml[157,6747+40]..[157,6747+43])
                                                                      Pexp_ident "txt" (compile_gram.ml[157,6747+40]..[157,6747+43])
                                                                    None
                                                                    core_type (compile_gram.ml[157,6747+47]..[157,6747+55])
                                                                      Ptyp_constr "Astf.exp" (compile_gram.ml[157,6747+47]..[157,6747+55])
                                                                      []
                                                                ]
                                                          None
                                                          core_type (compile_gram.ml[157,6747+61]..[157,6747+69])
                                                            Ptyp_constr "Astf.exp" (compile_gram.ml[157,6747+61]..[157,6747+69])
                                                            []
                                                  <case>
                                                    pattern (compile_gram.ml[158,6818+30]..[158,6818+36])
                                                      Ppat_construct "Some" (compile_gram.ml[158,6818+30]..[158,6818+34])
                                                      Some
                                                        pattern (compile_gram.ml[158,6818+35]..[158,6818+36])
                                                          Ppat_var "s" (compile_gram.ml[158,6818+35]..[158,6818+36])
                                                    expression (compile_gram.ml[159,6858+32]..[178,7878+43])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (compile_gram.ml[159,6858+36]..[159,6858+37])
                                                            Ppat_var "x" (compile_gram.ml[159,6858+36]..[159,6858+37])
                                                          expression (compile_gram.ml[159,6858+40]..[159,6858+55])
                                                            Pexp_apply
                                                            expression (compile_gram.ml[159,6858+40]..[159,6858+43])
                                                              Pexp_ident "aux" (compile_gram.ml[159,6858+40]..[159,6858+43])
                                                            [
                                                              <label> ""
                                                                expression (compile_gram.ml[159,6858+44]..[159,6858+48])
                                                                  Pexp_ident "tvar" (compile_gram.ml[159,6858+44]..[159,6858+48])
                                                              <label> ""
                                                                expression (compile_gram.ml[159,6858+49]..[159,6858+55])
                                                                  Pexp_field
                                                                  expression (compile_gram.ml[159,6858+49]..[159,6858+50])
                                                                    Pexp_ident "s" (compile_gram.ml[159,6858+49]..[159,6858+50])
                                                                  "text" (compile_gram.ml[159,6858+51]..[159,6858+55])
                                                            ]
                                                      ]
                                                      expression (compile_gram.ml[160,6917+32]..[178,7878+43])
                                                        Pexp_ifthenelse
                                                        expression (compile_gram.ml[160,6917+35]..[160,6917+38])
                                                          Pexp_ident "min" (compile_gram.ml[160,6917+35]..[160,6917+38])
                                                        expression (compile_gram.ml[162,6993+34]..[169,7395+43])
                                                          Pexp_coerce
                                                          expression (compile_gram.ml[162,6993+35]..[168,7321+69])
                                                            Pexp_variant "App"
                                                            Some
                                                              expression (compile_gram.ml[163,7033+37]..[168,7321+69])
                                                                Pexp_tuple
                                                                [
                                                                  expression (compile_gram.ml[163,7033+38]..[163,7033+42])
                                                                    Pexp_ident "_loc" (compile_gram.ml[163,7033+38]..[163,7033+42])
                                                                  expression (compile_gram.ml[163,7033+45]..[163,7033+68])
                                                                    Pexp_variant "Uid"
                                                                    Some
                                                                      expression (compile_gram.ml[163,7033+50]..[163,7033+68])
Pexp_tuple
[
  expression (compile_gram.ml[163,7033+51]..[163,7033+55])
    Pexp_ident "_loc" (compile_gram.ml[163,7033+51]..[163,7033+55])
  expression (compile_gram.ml[163,7033+57]..[163,7033+67])
    Pexp_constant Const_string("List1sep",None)
]
                                                                  expression (compile_gram.ml[164,7104+40]..[168,7321+67])
                                                                    Pexp_variant "Par"
                                                                    Some
                                                                      expression (compile_gram.ml[165,7149+42]..[168,7321+67])
Pexp_tuple
[
  expression (compile_gram.ml[165,7149+43]..[165,7149+47])
    Pexp_ident "_loc" (compile_gram.ml[165,7149+43]..[165,7149+47])
  expression (compile_gram.ml[166,7198+45]..[168,7321+65])
    Pexp_variant "Com"
    Some
      expression (compile_gram.ml[167,7248+47]..[168,7321+65])
        Pexp_tuple
        [
          expression (compile_gram.ml[167,7248+48]..[167,7248+52])
            Pexp_ident "_loc" (compile_gram.ml[167,7248+48]..[167,7248+52])
          expression (compile_gram.ml[167,7248+54]..[167,7248+71])
            Pexp_coerce
            expression (compile_gram.ml[167,7248+55]..[167,7248+58])
              Pexp_ident "txt" (compile_gram.ml[167,7248+55]..[167,7248+58])
            None
            core_type (compile_gram.ml[167,7248+62]..[167,7248+70])
              Ptyp_constr "Astf.exp" (compile_gram.ml[167,7248+62]..[167,7248+70])
              []
          expression (compile_gram.ml[168,7321+49]..[168,7321+64])
            Pexp_coerce
            expression (compile_gram.ml[168,7321+50]..[168,7321+51])
              Pexp_ident "x" (compile_gram.ml[168,7321+50]..[168,7321+51])
            None
            core_type (compile_gram.ml[168,7321+55]..[168,7321+63])
              Ptyp_constr "Astf.exp" (compile_gram.ml[168,7321+55]..[168,7321+63])
              []
        ]
]
                                                                ]
                                                          None
                                                          core_type (compile_gram.ml[169,7395+34]..[169,7395+42])
                                                            Ptyp_constr "Astf.exp" (compile_gram.ml[169,7395+34]..[169,7395+42])
                                                            []
                                                        Some
                                                          expression (compile_gram.ml[171,7476+34]..[178,7878+43])
                                                            Pexp_coerce
                                                            expression (compile_gram.ml[171,7476+35]..[177,7804+69])
                                                              Pexp_variant "App"
                                                              Some
                                                                expression (compile_gram.ml[172,7516+37]..[177,7804+69])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (compile_gram.ml[172,7516+38]..[172,7516+42])
                                                                      Pexp_ident "_loc" (compile_gram.ml[172,7516+38]..[172,7516+42])
                                                                    expression (compile_gram.ml[172,7516+45]..[172,7516+68])
                                                                      Pexp_variant "Uid"
                                                                      Some
expression (compile_gram.ml[172,7516+50]..[172,7516+68])
  Pexp_tuple
  [
    expression (compile_gram.ml[172,7516+51]..[172,7516+55])
      Pexp_ident "_loc" (compile_gram.ml[172,7516+51]..[172,7516+55])
    expression (compile_gram.ml[172,7516+57]..[172,7516+67])
      Pexp_constant Const_string("List0sep",None)
  ]
                                                                    expression (compile_gram.ml[173,7587+40]..[177,7804+67])
                                                                      Pexp_variant "Par"
                                                                      Some
expression (compile_gram.ml[174,7632+42]..[177,7804+67])
  Pexp_tuple
  [
    expression (compile_gram.ml[174,7632+43]..[174,7632+47])
      Pexp_ident "_loc" (compile_gram.ml[174,7632+43]..[174,7632+47])
    expression (compile_gram.ml[175,7681+45]..[177,7804+65])
      Pexp_variant "Com"
      Some
        expression (compile_gram.ml[176,7731+47]..[177,7804+65])
          Pexp_tuple
          [
            expression (compile_gram.ml[176,7731+48]..[176,7731+52])
              Pexp_ident "_loc" (compile_gram.ml[176,7731+48]..[176,7731+52])
            expression (compile_gram.ml[176,7731+54]..[176,7731+71])
              Pexp_coerce
              expression (compile_gram.ml[176,7731+55]..[176,7731+58])
                Pexp_ident "txt" (compile_gram.ml[176,7731+55]..[176,7731+58])
              None
              core_type (compile_gram.ml[176,7731+62]..[176,7731+70])
                Ptyp_constr "Astf.exp" (compile_gram.ml[176,7731+62]..[176,7731+70])
                []
            expression (compile_gram.ml[177,7804+49]..[177,7804+64])
              Pexp_coerce
              expression (compile_gram.ml[177,7804+50]..[177,7804+51])
                Pexp_ident "x" (compile_gram.ml[177,7804+50]..[177,7804+51])
              None
              core_type (compile_gram.ml[177,7804+55]..[177,7804+63])
                Ptyp_constr "Astf.exp" (compile_gram.ml[177,7804+55]..[177,7804+63])
                []
          ]
  ]
                                                                  ]
                                                            None
                                                            core_type (compile_gram.ml[178,7878+34]..[178,7878+42])
                                                              Ptyp_constr "Astf.exp" (compile_gram.ml[178,7878+34]..[178,7878+42])
                                                              []
                                                ]
                                          <case>
                                            pattern (compile_gram.ml[179,7923+25]..[179,7923+34])
                                              Ppat_construct "Self" (compile_gram.ml[179,7923+25]..[179,7923+29])
                                              Some
                                                pattern (compile_gram.ml[179,7923+30]..[179,7923+34])
                                                  Ppat_var "_loc" (compile_gram.ml[179,7923+30]..[179,7923+34])
                                            expression (compile_gram.ml[179,7923+38]..[179,7923+71])
                                              Pexp_coerce
                                              expression (compile_gram.ml[179,7923+39]..[179,7923+58])
                                                Pexp_variant "Uid"
                                                Some
                                                  expression (compile_gram.ml[179,7923+44]..[179,7923+58])
                                                    Pexp_tuple
                                                    [
                                                      expression (compile_gram.ml[179,7923+45]..[179,7923+49])
                                                        Pexp_ident "_loc" (compile_gram.ml[179,7923+45]..[179,7923+49])
                                                      expression (compile_gram.ml[179,7923+51]..[179,7923+57])
                                                        Pexp_constant Const_string("Self",None)
                                                    ]
                                              None
                                              core_type (compile_gram.ml[179,7923+62]..[179,7923+70])
                                                Ptyp_constr "Astf.exp" (compile_gram.ml[179,7923+62]..[179,7923+70])
                                                []
                                          <case>
                                            pattern (compile_gram.ml[180,7995+25]..[180,7995+43])
                                              Ppat_construct "Keyword" (compile_gram.ml[180,7995+25]..[180,7995+32])
                                              Some
                                                pattern (compile_gram.ml[180,7995+25]..[180,7995+43])
                                                  Ppat_tuple
                                                  [
                                                    pattern (compile_gram.ml[180,7995+34]..[180,7995+38])
                                                      Ppat_var "_loc" (compile_gram.ml[180,7995+34]..[180,7995+38])
                                                    pattern (compile_gram.ml[180,7995+39]..[180,7995+42])
                                                      Ppat_var "kwd" (compile_gram.ml[180,7995+39]..[180,7995+42])
                                                  ]
                                            expression (compile_gram.ml[181,8042+27]..[183,8138+64])
                                              Pexp_coerce
                                              expression (compile_gram.ml[181,8042+28]..[183,8138+51])
                                                Pexp_variant "App"
                                                Some
                                                  expression (compile_gram.ml[182,8075+30]..[183,8138+51])
                                                    Pexp_tuple
                                                    [
                                                      expression (compile_gram.ml[182,8075+31]..[182,8075+35])
                                                        Pexp_ident "_loc" (compile_gram.ml[182,8075+31]..[182,8075+35])
                                                      expression (compile_gram.ml[182,8075+38]..[182,8075+60])
                                                        Pexp_variant "Vrn"
                                                        Some
                                                          expression (compile_gram.ml[182,8075+43]..[182,8075+60])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_gram.ml[182,8075+44]..[182,8075+48])
                                                                Pexp_ident "_loc" (compile_gram.ml[182,8075+44]..[182,8075+48])
                                                              expression (compile_gram.ml[182,8075+50]..[182,8075+59])
                                                                Pexp_constant Const_string("Keyword",None)
                                                            ]
                                                      expression (compile_gram.ml[183,8138+33]..[183,8138+49])
                                                        Pexp_variant "Str"
                                                        Some
                                                          expression (compile_gram.ml[183,8138+38]..[183,8138+49])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_gram.ml[183,8138+39]..[183,8138+43])
                                                                Pexp_ident "_loc" (compile_gram.ml[183,8138+39]..[183,8138+43])
                                                              expression (compile_gram.ml[183,8138+45]..[183,8138+48])
                                                                Pexp_ident "kwd" (compile_gram.ml[183,8138+45]..[183,8138+48])
                                                            ]
                                                    ]
                                              None
                                              core_type (compile_gram.ml[183,8138+55]..[183,8138+63])
                                                Ptyp_constr "Astf.exp" (compile_gram.ml[183,8138+55]..[183,8138+63])
                                                []
                                          <case>
                                            pattern (compile_gram.ml[184,8203+25]..[184,8203+43])
                                              Ppat_construct "Nterm" (compile_gram.ml[184,8203+25]..[184,8203+30])
                                              Some
                                                pattern (compile_gram.ml[184,8203+25]..[184,8203+43])
                                                  Ppat_tuple
                                                  [
                                                    pattern (compile_gram.ml[184,8203+32]..[184,8203+36])
                                                      Ppat_var "_loc" (compile_gram.ml[184,8203+32]..[184,8203+36])
                                                    pattern (compile_gram.ml[184,8203+37]..[184,8203+38])
                                                      Ppat_var "n" (compile_gram.ml[184,8203+37]..[184,8203+38])
                                                    pattern (compile_gram.ml[184,8203+39]..[184,8203+42])
                                                      Ppat_var "lev" (compile_gram.ml[184,8203+39]..[184,8203+42])
                                                  ]
                                            expression (compile_gram.ml[185,8250+27]..[220,10124+71])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (compile_gram.ml[185,8250+31]..[185,8250+34])
                                                    Ppat_var "obj" (compile_gram.ml[185,8250+31]..[185,8250+34])
                                                  expression (compile_gram.ml[186,8287+29]..[202,9195+38])
                                                    Pexp_coerce
                                                    expression (compile_gram.ml[186,8287+30]..[201,9111+79])
                                                      Pexp_variant "App"
                                                      Some
                                                        expression (compile_gram.ml[187,8322+32]..[201,9111+79])
                                                          Pexp_tuple
                                                          [
                                                            expression (compile_gram.ml[187,8322+33]..[187,8322+37])
                                                              Pexp_ident "_loc" (compile_gram.ml[187,8322+33]..[187,8322+37])
                                                            expression (compile_gram.ml[188,8361+35]..[190,8466+60])
                                                              Pexp_variant "Dot"
                                                              Some
                                                                expression (compile_gram.ml[189,8401+37]..[190,8466+60])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (compile_gram.ml[189,8401+38]..[189,8401+42])
                                                                      Pexp_ident "_loc" (compile_gram.ml[189,8401+38]..[189,8401+42])
                                                                    expression (compile_gram.ml[189,8401+44]..[189,8401+63])
                                                                      Pexp_coerce
                                                                      expression (compile_gram.ml[189,8401+45]..[189,8401+50])
Pexp_apply
expression (compile_gram.ml[189,8401+45]..[189,8401+47])
  Pexp_ident "gm" (compile_gram.ml[189,8401+45]..[189,8401+47])
[
  <label> ""
    expression (compile_gram.ml[189,8401+48]..[189,8401+50])
      Pexp_construct "()" (compile_gram.ml[189,8401+48]..[189,8401+50])
      None
]
                                                                      None
                                                                      core_type (compile_gram.ml[189,8401+54]..[189,8401+62])
Ptyp_constr "Astf.vid" (compile_gram.ml[189,8401+54]..[189,8401+62])
[]
                                                                    expression (compile_gram.ml[190,8466+40]..[190,8466+58])
                                                                      Pexp_variant "Lid"
                                                                      Some
expression (compile_gram.ml[190,8466+45]..[190,8466+58])
  Pexp_tuple
  [
    expression (compile_gram.ml[190,8466+46]..[190,8466+50])
      Pexp_ident "_loc" (compile_gram.ml[190,8466+46]..[190,8466+50])
    expression (compile_gram.ml[190,8466+52]..[190,8466+57])
      Pexp_constant Const_string("obj",None)
  ]
                                                                  ]
                                                            expression (compile_gram.ml[191,8529+35]..[201,9111+77])
                                                              Pexp_variant "Constraint"
                                                              Some
                                                                expression (compile_gram.ml[192,8576+37]..[201,9111+77])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (compile_gram.ml[192,8576+38]..[192,8576+42])
                                                                      Pexp_ident "_loc" (compile_gram.ml[192,8576+38]..[192,8576+42])
                                                                    expression (compile_gram.ml[192,8576+44]..[192,8576+62])
                                                                      Pexp_coerce
                                                                      expression (compile_gram.ml[192,8576+45]..[192,8576+49])
Pexp_field
expression (compile_gram.ml[192,8576+45]..[192,8576+46])
  Pexp_ident "n" (compile_gram.ml[192,8576+45]..[192,8576+46])
"id" (compile_gram.ml[192,8576+47]..[192,8576+49])
                                                                      None
                                                                      core_type (compile_gram.ml[192,8576+53]..[192,8576+61])
Ptyp_constr "Astf.exp" (compile_gram.ml[192,8576+53]..[192,8576+61])
[]
                                                                    expression (compile_gram.ml[193,8640+40]..[201,9111+75])
                                                                      Pexp_variant "App"
                                                                      Some
expression (compile_gram.ml[194,8685+42]..[201,9111+75])
  Pexp_tuple
  [
    expression (compile_gram.ml[194,8685+43]..[194,8685+47])
      Pexp_ident "_loc" (compile_gram.ml[194,8685+43]..[194,8685+47])
    expression (compile_gram.ml[195,8734+45]..[198,8918+68])
      Pexp_variant "Dot"
      Some
        expression (compile_gram.ml[196,8784+47]..[198,8918+68])
          Pexp_tuple
          [
            expression (compile_gram.ml[196,8784+48]..[196,8784+52])
              Pexp_ident "_loc" (compile_gram.ml[196,8784+48]..[196,8784+52])
            expression (compile_gram.ml[197,8838+49]..[197,8838+78])
              Pexp_coerce
              expression (compile_gram.ml[197,8838+50]..[197,8838+63])
                Pexp_constraint
                expression (compile_gram.ml[197,8838+51]..[197,8838+56])
                  Pexp_apply
                  expression (compile_gram.ml[197,8838+51]..[197,8838+53])
                    Pexp_ident "gm" (compile_gram.ml[197,8838+51]..[197,8838+53])
                  [
                    <label> ""
                      expression (compile_gram.ml[197,8838+54]..[197,8838+56])
                        Pexp_construct "()" (compile_gram.ml[197,8838+54]..[197,8838+56])
                        None
                  ]
                core_type (compile_gram.ml[197,8838+59]..[197,8838+62])
                  Ptyp_constr "vid" (compile_gram.ml[197,8838+59]..[197,8838+62])
                  []
              None
              core_type (compile_gram.ml[197,8838+67]..[197,8838+77])
                Ptyp_constr "Astf.ident" (compile_gram.ml[197,8838+67]..[197,8838+77])
                []
            expression (compile_gram.ml[198,8918+50]..[198,8918+66])
              Pexp_variant "Lid"
              Some
                expression (compile_gram.ml[198,8918+55]..[198,8918+66])
                  Pexp_tuple
                  [
                    expression (compile_gram.ml[198,8918+56]..[198,8918+60])
                      Pexp_ident "_loc" (compile_gram.ml[198,8918+56]..[198,8918+60])
                    expression (compile_gram.ml[198,8918+62]..[198,8918+65])
                      Pexp_constant Const_string("t",None)
                  ]
          ]
    expression (compile_gram.ml[199,8989+45]..[201,9111+73])
      Pexp_variant "Quote"
      Some
        expression (compile_gram.ml[200,9041+47]..[201,9111+73])
          Pexp_tuple
          [
            expression (compile_gram.ml[200,9041+48]..[200,9041+52])
              Pexp_ident "_loc" (compile_gram.ml[200,9041+48]..[200,9041+52])
            expression (compile_gram.ml[200,9041+55]..[200,9041+67])
              Pexp_variant "Normal"
              Some
                expression (compile_gram.ml[200,9041+63]..[200,9041+67])
                  Pexp_ident "_loc" (compile_gram.ml[200,9041+63]..[200,9041+67])
            expression (compile_gram.ml[201,9111+50]..[201,9111+71])
              Pexp_variant "Lid"
              Some
                expression (compile_gram.ml[201,9111+55]..[201,9111+71])
                  Pexp_tuple
                  [
                    expression (compile_gram.ml[201,9111+56]..[201,9111+60])
                      Pexp_ident "_loc" (compile_gram.ml[201,9111+56]..[201,9111+60])
                    expression (compile_gram.ml[201,9111+63]..[201,9111+69])
                      Pexp_field
                      expression (compile_gram.ml[201,9111+63]..[201,9111+64])
                        Pexp_ident "n" (compile_gram.ml[201,9111+63]..[201,9111+64])
                      "tvar" (compile_gram.ml[201,9111+65]..[201,9111+69])
                  ]
          ]
  ]
                                                                  ]
                                                          ]
                                                    None
                                                    core_type (compile_gram.ml[202,9195+29]..[202,9195+37])
                                                      Ptyp_constr "Astf.exp" (compile_gram.ml[202,9195+29]..[202,9195+37])
                                                      []
                                              ]
                                              expression (compile_gram.ml[203,9237+28]..[220,10124+70])
                                                Pexp_match
                                                expression (compile_gram.ml[203,9237+34]..[203,9237+37])
                                                  Pexp_ident "lev" (compile_gram.ml[203,9237+34]..[203,9237+37])
                                                [
                                                  <case>
                                                    pattern (compile_gram.ml[204,9280+30]..[204,9280+38])
                                                      Ppat_construct "Some" (compile_gram.ml[204,9280+30]..[204,9280+34])
                                                      Some
                                                        pattern (compile_gram.ml[204,9280+35]..[204,9280+38])
                                                          Ppat_var "lab" (compile_gram.ml[204,9280+35]..[204,9280+38])
                                                    expression (compile_gram.ml[205,9322+32]..[213,9778+41])
                                                      Pexp_coerce
                                                      expression (compile_gram.ml[205,9322+33]..[212,9690+83])
                                                        Pexp_variant "App"
                                                        Some
                                                          expression (compile_gram.ml[206,9360+35]..[212,9690+83])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_gram.ml[206,9360+36]..[206,9360+40])
                                                                Pexp_ident "_loc" (compile_gram.ml[206,9360+36]..[206,9360+40])
                                                              expression (compile_gram.ml[206,9360+43]..[206,9360+65])
                                                                Pexp_variant "Uid"
                                                                Some
                                                                  expression (compile_gram.ml[206,9360+48]..[206,9360+65])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (compile_gram.ml[206,9360+49]..[206,9360+53])
Pexp_ident "_loc" (compile_gram.ml[206,9360+49]..[206,9360+53])
                                                                      expression (compile_gram.ml[206,9360+55]..[206,9360+64])
Pexp_constant Const_string("Snterml",None)
                                                                    ]
                                                              expression (compile_gram.ml[207,9428+38]..[212,9690+81])
                                                                Pexp_variant "Par"
                                                                Some
                                                                  expression (compile_gram.ml[208,9471+40]..[212,9690+81])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (compile_gram.ml[208,9471+41]..[208,9471+45])
Pexp_ident "_loc" (compile_gram.ml[208,9471+41]..[208,9471+45])
                                                                      expression (compile_gram.ml[209,9518+43]..[212,9690+79])
Pexp_variant "Com"
Some
  expression (compile_gram.ml[210,9566+45]..[212,9690+79])
    Pexp_tuple
    [
      expression (compile_gram.ml[210,9566+46]..[210,9566+50])
        Pexp_ident "_loc" (compile_gram.ml[210,9566+46]..[210,9566+50])
      expression (compile_gram.ml[210,9566+52]..[210,9566+69])
        Pexp_coerce
        expression (compile_gram.ml[210,9566+53]..[210,9566+56])
          Pexp_ident "obj" (compile_gram.ml[210,9566+53]..[210,9566+56])
        None
        core_type (compile_gram.ml[210,9566+60]..[210,9566+68])
          Ptyp_constr "Astf.exp" (compile_gram.ml[210,9566+60]..[210,9566+68])
          []
      expression (compile_gram.ml[211,9637+48]..[212,9690+77])
        Pexp_variant "Int"
        Some
          expression (compile_gram.ml[212,9690+50]..[212,9690+77])
            Pexp_tuple
            [
              expression (compile_gram.ml[212,9690+51]..[212,9690+55])
                Pexp_ident "_loc" (compile_gram.ml[212,9690+51]..[212,9690+55])
              expression (compile_gram.ml[212,9690+58]..[212,9690+75])
                Pexp_apply
                expression (compile_gram.ml[212,9690+58]..[212,9690+71])
                  Pexp_ident "string_of_int" (compile_gram.ml[212,9690+58]..[212,9690+71])
                [
                  <label> ""
                    expression (compile_gram.ml[212,9690+72]..[212,9690+75])
                      Pexp_ident "lab" (compile_gram.ml[212,9690+72]..[212,9690+75])
                ]
            ]
    ]
                                                                    ]
                                                            ]
                                                      None
                                                      core_type (compile_gram.ml[213,9778+32]..[213,9778+40])
                                                        Ptyp_constr "Astf.exp" (compile_gram.ml[213,9778+32]..[213,9778+40])
                                                        []
                                                  <case>
                                                    pattern (compile_gram.ml[214,9820+30]..[214,9820+34])
                                                      Ppat_construct "None" (compile_gram.ml[214,9820+30]..[214,9820+34])
                                                      None
                                                    expression (compile_gram.ml[215,9859+32]..[220,10124+70])
                                                      Pexp_ifthenelse
                                                      expression (compile_gram.ml[215,9859+35]..[215,9859+48])
                                                        Pexp_apply
                                                        expression (compile_gram.ml[215,9859+42]..[215,9859+43])
                                                          Pexp_ident "=" (compile_gram.ml[215,9859+42]..[215,9859+43])
                                                        [
                                                          <label> ""
                                                            expression (compile_gram.ml[215,9859+35]..[215,9859+41])
                                                              Pexp_field
                                                              expression (compile_gram.ml[215,9859+35]..[215,9859+36])
                                                                Pexp_ident "n" (compile_gram.ml[215,9859+35]..[215,9859+36])
                                                              "tvar" (compile_gram.ml[215,9859+37]..[215,9859+41])
                                                          <label> ""
                                                            expression (compile_gram.ml[215,9859+44]..[215,9859+48])
                                                              Pexp_ident "tvar" (compile_gram.ml[215,9859+44]..[215,9859+48])
                                                        ]
                                                      expression (compile_gram.ml[216,9908+37]..[216,9908+70])
                                                        Pexp_coerce
                                                        expression (compile_gram.ml[216,9908+38]..[216,9908+57])
                                                          Pexp_variant "Uid"
                                                          Some
                                                            expression (compile_gram.ml[216,9908+43]..[216,9908+57])
                                                              Pexp_tuple
                                                              [
                                                                expression (compile_gram.ml[216,9908+44]..[216,9908+48])
                                                                  Pexp_ident "_loc" (compile_gram.ml[216,9908+44]..[216,9908+48])
                                                                expression (compile_gram.ml[216,9908+50]..[216,9908+56])
                                                                  Pexp_constant Const_string("Self",None)
                                                              ]
                                                        None
                                                        core_type (compile_gram.ml[216,9908+61]..[216,9908+69])
                                                          Ptyp_constr "Astf.exp" (compile_gram.ml[216,9908+61]..[216,9908+69])
                                                          []
                                                      Some
                                                        expression (compile_gram.ml[218,10016+34]..[220,10124+70])
                                                          Pexp_coerce
                                                          expression (compile_gram.ml[218,10016+35]..[220,10124+57])
                                                            Pexp_variant "App"
                                                            Some
                                                              expression (compile_gram.ml[219,10056+37]..[220,10124+57])
                                                                Pexp_tuple
                                                                [
                                                                  expression (compile_gram.ml[219,10056+38]..[219,10056+42])
                                                                    Pexp_ident "_loc" (compile_gram.ml[219,10056+38]..[219,10056+42])
                                                                  expression (compile_gram.ml[219,10056+45]..[219,10056+65])
                                                                    Pexp_variant "Uid"
                                                                    Some
                                                                      expression (compile_gram.ml[219,10056+50]..[219,10056+65])
Pexp_tuple
[
  expression (compile_gram.ml[219,10056+51]..[219,10056+55])
    Pexp_ident "_loc" (compile_gram.ml[219,10056+51]..[219,10056+55])
  expression (compile_gram.ml[219,10056+57]..[219,10056+64])
    Pexp_constant Const_string("Nterm",None)
]
                                                                  expression (compile_gram.ml[220,10124+39]..[220,10124+56])
                                                                    Pexp_coerce
                                                                    expression (compile_gram.ml[220,10124+40]..[220,10124+43])
                                                                      Pexp_ident "obj" (compile_gram.ml[220,10124+40]..[220,10124+43])
                                                                    None
                                                                    core_type (compile_gram.ml[220,10124+47]..[220,10124+55])
                                                                      Ptyp_constr "Astf.exp" (compile_gram.ml[220,10124+47]..[220,10124+55])
                                                                      []
                                                                ]
                                                          None
                                                          core_type (compile_gram.ml[220,10124+61]..[220,10124+69])
                                                            Ptyp_constr "Astf.exp" (compile_gram.ml[220,10124+61]..[220,10124+69])
                                                            []
                                                ]
                                          <case>
                                            pattern (compile_gram.ml[221,10196+25]..[221,10196+37])
                                              Ppat_construct "Try" (compile_gram.ml[221,10196+25]..[221,10196+28])
                                              Some
                                                pattern (compile_gram.ml[221,10196+25]..[221,10196+37])
                                                  Ppat_tuple
                                                  [
                                                    pattern (compile_gram.ml[221,10196+30]..[221,10196+34])
                                                      Ppat_var "_loc" (compile_gram.ml[221,10196+30]..[221,10196+34])
                                                    pattern (compile_gram.ml[221,10196+35]..[221,10196+36])
                                                      Ppat_var "t" (compile_gram.ml[221,10196+35]..[221,10196+36])
                                                  ]
                                            expression (compile_gram.ml[222,10237+27]..[224,10329+68])
                                              Pexp_coerce
                                              expression (compile_gram.ml[222,10237+28]..[224,10329+55])
                                                Pexp_variant "App"
                                                Some
                                                  expression (compile_gram.ml[223,10270+30]..[224,10329+55])
                                                    Pexp_tuple
                                                    [
                                                      expression (compile_gram.ml[223,10270+31]..[223,10270+35])
                                                        Pexp_ident "_loc" (compile_gram.ml[223,10270+31]..[223,10270+35])
                                                      expression (compile_gram.ml[223,10270+38]..[223,10270+56])
                                                        Pexp_variant "Uid"
                                                        Some
                                                          expression (compile_gram.ml[223,10270+43]..[223,10270+56])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_gram.ml[223,10270+44]..[223,10270+48])
                                                                Pexp_ident "_loc" (compile_gram.ml[223,10270+44]..[223,10270+48])
                                                              expression (compile_gram.ml[223,10270+50]..[223,10270+55])
                                                                Pexp_constant Const_string("Try",None)
                                                            ]
                                                      expression (compile_gram.ml[224,10329+32]..[224,10329+54])
                                                        Pexp_coerce
                                                        expression (compile_gram.ml[224,10329+33]..[224,10329+41])
                                                          Pexp_apply
                                                          expression (compile_gram.ml[224,10329+33]..[224,10329+36])
                                                            Pexp_ident "aux" (compile_gram.ml[224,10329+33]..[224,10329+36])
                                                          [
                                                            <label> ""
                                                              expression (compile_gram.ml[224,10329+37]..[224,10329+39])
                                                                Pexp_constant Const_string("",None)
                                                            <label> ""
                                                              expression (compile_gram.ml[224,10329+40]..[224,10329+41])
                                                                Pexp_ident "t" (compile_gram.ml[224,10329+40]..[224,10329+41])
                                                          ]
                                                        None
                                                        core_type (compile_gram.ml[224,10329+45]..[224,10329+53])
                                                          Ptyp_constr "Astf.exp" (compile_gram.ml[224,10329+45]..[224,10329+53])
                                                          []
                                                    ]
                                              None
                                              core_type (compile_gram.ml[224,10329+59]..[224,10329+67])
                                                Ptyp_constr "Astf.exp" (compile_gram.ml[224,10329+59]..[224,10329+67])
                                                []
                                          <case>
                                            pattern (compile_gram.ml[225,10398+25]..[225,10398+38])
                                              Ppat_construct "Peek" (compile_gram.ml[225,10398+25]..[225,10398+29])
                                              Some
                                                pattern (compile_gram.ml[225,10398+25]..[225,10398+38])
                                                  Ppat_tuple
                                                  [
                                                    pattern (compile_gram.ml[225,10398+31]..[225,10398+35])
                                                      Ppat_var "_loc" (compile_gram.ml[225,10398+31]..[225,10398+35])
                                                    pattern (compile_gram.ml[225,10398+36]..[225,10398+37])
                                                      Ppat_var "t" (compile_gram.ml[225,10398+36]..[225,10398+37])
                                                  ]
                                            expression (compile_gram.ml[226,10440+27]..[228,10533+68])
                                              Pexp_coerce
                                              expression (compile_gram.ml[226,10440+28]..[228,10533+55])
                                                Pexp_variant "App"
                                                Some
                                                  expression (compile_gram.ml[227,10473+30]..[228,10533+55])
                                                    Pexp_tuple
                                                    [
                                                      expression (compile_gram.ml[227,10473+31]..[227,10473+35])
                                                        Pexp_ident "_loc" (compile_gram.ml[227,10473+31]..[227,10473+35])
                                                      expression (compile_gram.ml[227,10473+38]..[227,10473+57])
                                                        Pexp_variant "Uid"
                                                        Some
                                                          expression (compile_gram.ml[227,10473+43]..[227,10473+57])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_gram.ml[227,10473+44]..[227,10473+48])
                                                                Pexp_ident "_loc" (compile_gram.ml[227,10473+44]..[227,10473+48])
                                                              expression (compile_gram.ml[227,10473+50]..[227,10473+56])
                                                                Pexp_constant Const_string("Peek",None)
                                                            ]
                                                      expression (compile_gram.ml[228,10533+32]..[228,10533+54])
                                                        Pexp_coerce
                                                        expression (compile_gram.ml[228,10533+33]..[228,10533+41])
                                                          Pexp_apply
                                                          expression (compile_gram.ml[228,10533+33]..[228,10533+36])
                                                            Pexp_ident "aux" (compile_gram.ml[228,10533+33]..[228,10533+36])
                                                          [
                                                            <label> ""
                                                              expression (compile_gram.ml[228,10533+37]..[228,10533+39])
                                                                Pexp_constant Const_string("",None)
                                                            <label> ""
                                                              expression (compile_gram.ml[228,10533+40]..[228,10533+41])
                                                                Pexp_ident "t" (compile_gram.ml[228,10533+40]..[228,10533+41])
                                                          ]
                                                        None
                                                        core_type (compile_gram.ml[228,10533+45]..[228,10533+53])
                                                          Ptyp_constr "Astf.exp" (compile_gram.ml[228,10533+45]..[228,10533+53])
                                                          []
                                                    ]
                                              None
                                              core_type (compile_gram.ml[228,10533+59]..[228,10533+67])
                                                Ptyp_constr "Astf.exp" (compile_gram.ml[228,10533+59]..[228,10533+67])
                                                []
                                          <case>
                                            pattern (compile_gram.ml[229,10602+25]..[229,10602+42])
                                              Ppat_construct "Token" (compile_gram.ml[229,10602+25]..[229,10602+30])
                                              Some
                                                pattern (compile_gram.ml[229,10602+25]..[229,10602+42])
                                                  Ppat_tuple
                                                  [
                                                    pattern (compile_gram.ml[229,10602+32]..[229,10602+36])
                                                      Ppat_var "_loc" (compile_gram.ml[229,10602+32]..[229,10602+36])
                                                    pattern (compile_gram.ml[229,10602+37]..[229,10602+41])
                                                      Ppat_var "meta" (compile_gram.ml[229,10602+37]..[229,10602+41])
                                                  ]
                                            expression (compile_gram.ml[230,10648+27]..[232,10742+64])
                                              Pexp_coerce
                                              expression (compile_gram.ml[230,10648+28]..[232,10742+51])
                                                Pexp_variant "App"
                                                Some
                                                  expression (compile_gram.ml[231,10681+30]..[232,10742+51])
                                                    Pexp_tuple
                                                    [
                                                      expression (compile_gram.ml[231,10681+31]..[231,10681+35])
                                                        Pexp_ident "_loc" (compile_gram.ml[231,10681+31]..[231,10681+35])
                                                      expression (compile_gram.ml[231,10681+38]..[231,10681+58])
                                                        Pexp_variant "Uid"
                                                        Some
                                                          expression (compile_gram.ml[231,10681+43]..[231,10681+58])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_gram.ml[231,10681+44]..[231,10681+48])
                                                                Pexp_ident "_loc" (compile_gram.ml[231,10681+44]..[231,10681+48])
                                                              expression (compile_gram.ml[231,10681+50]..[231,10681+57])
                                                                Pexp_constant Const_string("Token",None)
                                                            ]
                                                      expression (compile_gram.ml[232,10742+32]..[232,10742+50])
                                                        Pexp_coerce
                                                        expression (compile_gram.ml[232,10742+33]..[232,10742+37])
                                                          Pexp_ident "meta" (compile_gram.ml[232,10742+33]..[232,10742+37])
                                                        None
                                                        core_type (compile_gram.ml[232,10742+41]..[232,10742+49])
                                                          Ptyp_constr "Astf.exp" (compile_gram.ml[232,10742+41]..[232,10742+49])
                                                          []
                                                    ]
                                              None
                                              core_type (compile_gram.ml[232,10742+55]..[232,10742+63])
                                                Ptyp_constr "Astf.exp" (compile_gram.ml[232,10742+55]..[232,10742+63])
                                                []
                                        ]
                                  ]
                            ]
                      ]
                      expression (compile_gram.ml[233,10812+11]..[233,10812+21])
                        Pexp_apply
                        expression (compile_gram.ml[233,10812+11]..[233,10812+14])
                          Pexp_ident "aux" (compile_gram.ml[233,10812+11]..[233,10812+14])
                        [
                          <label> ""
                            expression (compile_gram.ml[233,10812+15]..[233,10812+19])
                              Pexp_ident "tvar" (compile_gram.ml[233,10812+15]..[233,10812+19])
                          <label> ""
                            expression (compile_gram.ml[233,10812+20]..[233,10812+21])
                              Pexp_ident "x" (compile_gram.ml[233,10812+20]..[233,10812+21])
                        ]
                ]
          ]
      <def>
        pattern (compile_gram.ml[234,10835+4]..[234,10835+18])
          Ppat_var "make_exp_rules" (compile_gram.ml[234,10835+4]..[234,10835+18])
        expression (compile_gram.ml[235,10856+2]..[267,12287+29])
          Pexp_function
          [
            <case>
              pattern (compile_gram.ml[236,10867+4]..[236,10867+58])
                Ppat_constraint
                pattern (compile_gram.ml[236,10867+5]..[236,10867+7])
                  Ppat_var "rl" (compile_gram.ml[236,10867+5]..[236,10867+7])
                core_type (compile_gram.ml[236,10867+10]..[236,10867+57])
                  Ptyp_constr "list" (compile_gram.ml[236,10867+53]..[236,10867+57])
                  [
                    core_type (compile_gram.ml[236,10867+10]..[236,10867+52])
                      Ptyp_tuple
                      [
                        core_type (compile_gram.ml[236,10867+11]..[236,10867+29])
                          Ptyp_constr "list" (compile_gram.ml[236,10867+25]..[236,10867+29])
                          [
                            core_type (compile_gram.ml[236,10867+11]..[236,10867+24])
                              Ptyp_constr "Gram_def.text" (compile_gram.ml[236,10867+11]..[236,10867+24])
                              []
                          ]
                        core_type (compile_gram.ml[236,10867+31]..[236,10867+34])
                          Ptyp_constr "exp" (compile_gram.ml[236,10867+31]..[236,10867+34])
                          []
                        core_type (compile_gram.ml[236,10867+36]..[236,10867+51])
                          Ptyp_constr "Gram_def.action" (compile_gram.ml[236,10867+36]..[236,10867+51])
                          []
                      ]
                  ]
              expression (compile_gram.ml[237,10929+7]..[267,12287+28])
                Pexp_function
                [
                  <case>
                    pattern (compile_gram.ml[238,10945+9]..[238,10945+24])
                      Ppat_constraint
                      pattern (compile_gram.ml[238,10945+10]..[238,10945+14])
                        Ppat_var "tvar" (compile_gram.ml[238,10945+10]..[238,10945+14])
                      core_type (compile_gram.ml[238,10945+17]..[238,10945+23])
                        Ptyp_constr "string" (compile_gram.ml[238,10945+17]..[238,10945+23])
                        []
                    expression (compile_gram.ml[239,10973+11]..[267,12287+28])
                      Pexp_apply
                      expression (compile_gram.ml[267,12287+13]..[267,12287+15])
                        Pexp_ident "|>" (compile_gram.ml[267,12287+13]..[267,12287+15])
                      [
                        <label> ""
                          expression (compile_gram.ml[239,10973+12]..[266,12250+35])
                            Pexp_apply
                            expression (compile_gram.ml[239,10973+15]..[239,10973+17])
                              Pexp_ident "|>" (compile_gram.ml[239,10973+15]..[239,10973+17])
                            [
                              <label> ""
                                expression (compile_gram.ml[239,10973+12]..[239,10973+14])
                                  Pexp_ident "rl" (compile_gram.ml[239,10973+12]..[239,10973+14])
                              <label> ""
                                expression (compile_gram.ml[240,10991+15]..[266,12250+34])
                                  Pexp_apply
                                  expression (compile_gram.ml[240,10991+15]..[240,10991+23])
                                    Pexp_ident "List.map" (compile_gram.ml[240,10991+15]..[240,10991+23])
                                  [
                                    <label> ""
                                      expression (compile_gram.ml[241,11015+18]..[266,12250+33])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (compile_gram.ml[242,11042+20]..[242,11042+55])
                                              Ppat_tuple
                                              [
                                                pattern (compile_gram.ml[242,11042+21]..[242,11042+23])
                                                  Ppat_var "sl" (compile_gram.ml[242,11042+21]..[242,11042+23])
                                                pattern (compile_gram.ml[242,11042+24]..[242,11042+30])
                                                  Ppat_var "action" (compile_gram.ml[242,11042+24]..[242,11042+30])
                                                pattern (compile_gram.ml[242,11042+31]..[242,11042+54])
                                                  Ppat_constraint
                                                  pattern (compile_gram.ml[242,11042+32]..[242,11042+35])
                                                    Ppat_var "raw" (compile_gram.ml[242,11042+32]..[242,11042+35])
                                                  core_type (compile_gram.ml[242,11042+38]..[242,11042+53])
                                                    Ptyp_constr "Gram_def.action" (compile_gram.ml[242,11042+38]..[242,11042+53])
                                                    []
                                              ]
                                            expression (compile_gram.ml[243,11101+22]..[266,12250+33])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (compile_gram.ml[243,11101+26]..[243,11101+39])
                                                    Ppat_var "action_string" (compile_gram.ml[243,11101+26]..[243,11101+39])
                                                  expression (compile_gram.ml[244,11143+24]..[247,11285+37])
                                                    Pexp_match
                                                    expression (compile_gram.ml[244,11143+30]..[244,11143+33])
                                                      Pexp_ident "raw" (compile_gram.ml[244,11143+30]..[244,11143+33])
                                                    [
                                                      <case>
                                                        pattern (compile_gram.ml[245,11182+26]..[245,11182+35])
                                                          Ppat_construct "E" (compile_gram.ml[245,11182+26]..[245,11182+27])
                                                          Some
                                                            pattern (compile_gram.ml[245,11182+29]..[245,11182+33])
                                                              Ppat_construct "None" (compile_gram.ml[245,11182+29]..[245,11182+33])
                                                              None
                                                        expression (compile_gram.ml[245,11182+39]..[245,11182+41])
                                                          Pexp_constant Const_string("",None)
                                                      <case>
                                                        pattern (compile_gram.ml[246,11224+26]..[246,11224+36])
                                                          Ppat_construct "E" (compile_gram.ml[246,11224+26]..[246,11224+27])
                                                          Some
                                                            pattern (compile_gram.ml[246,11224+29]..[246,11224+35])
                                                              Ppat_construct "Some" (compile_gram.ml[246,11224+29]..[246,11224+33])
                                                              Some
                                                                pattern (compile_gram.ml[246,11224+34]..[246,11224+35])
                                                                  Ppat_var "e" (compile_gram.ml[246,11224+34]..[246,11224+35])
                                                        expression (compile_gram.ml[246,11224+40]..[246,11224+60])
                                                          Pexp_apply
                                                          expression (compile_gram.ml[246,11224+40]..[246,11224+58])
                                                            Pexp_ident "Dump.exp_to_string" (compile_gram.ml[246,11224+40]..[246,11224+58])
                                                          [
                                                            <label> ""
                                                              expression (compile_gram.ml[246,11224+59]..[246,11224+60])
                                                                Pexp_ident "e" (compile_gram.ml[246,11224+59]..[246,11224+60])
                                                          ]
                                                      <case>
                                                        pattern (compile_gram.ml[247,11285+26]..[247,11285+31])
                                                          Ppat_construct "Ant" (compile_gram.ml[247,11285+26]..[247,11285+29])
                                                          Some
                                                            pattern (compile_gram.ml[247,11285+30]..[247,11285+31])
                                                              Ppat_any
                                                        expression (compile_gram.ml[247,11285+35]..[247,11285+37])
                                                          Pexp_constant Const_string("",None)
                                                    ]
                                              ]
                                              expression (compile_gram.ml[248,11326+22]..[266,12250+33])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (compile_gram.ml[248,11326+26]..[248,11326+28])
                                                      Ppat_var "sl" (compile_gram.ml[248,11326+26]..[248,11326+28])
                                                    expression (compile_gram.ml[249,11357+24]..[249,11357+74])
                                                      Pexp_apply
                                                      expression (compile_gram.ml[249,11357+59]..[249,11357+61])
                                                        Pexp_ident "|>" (compile_gram.ml[249,11357+59]..[249,11357+61])
                                                      [
                                                        <label> ""
                                                          expression (compile_gram.ml[249,11357+25]..[249,11357+57])
                                                            Pexp_apply
                                                            expression (compile_gram.ml[249,11357+28]..[249,11357+30])
                                                              Pexp_ident "|>" (compile_gram.ml[249,11357+28]..[249,11357+30])
                                                            [
                                                              <label> ""
                                                                expression (compile_gram.ml[249,11357+25]..[249,11357+27])
                                                                  Pexp_ident "sl" (compile_gram.ml[249,11357+25]..[249,11357+27])
                                                              <label> ""
                                                                expression (compile_gram.ml[249,11357+32]..[249,11357+56])
                                                                  Pexp_apply
                                                                  expression (compile_gram.ml[249,11357+32]..[249,11357+40])
                                                                    Pexp_ident "List.map" (compile_gram.ml[249,11357+32]..[249,11357+40])
                                                                  [
                                                                    <label> ""
                                                                      expression (compile_gram.ml[249,11357+42]..[249,11357+55])
Pexp_apply
expression (compile_gram.ml[249,11357+42]..[249,11357+50])
  Pexp_ident "make_exp" (compile_gram.ml[249,11357+42]..[249,11357+50])
[
  <label> ""
    expression (compile_gram.ml[249,11357+51]..[249,11357+55])
      Pexp_ident "tvar" (compile_gram.ml[249,11357+51]..[249,11357+55])
]
                                                                  ]
                                                            ]
                                                        <label> ""
                                                          expression (compile_gram.ml[249,11357+62]..[249,11357+74])
                                                            Pexp_ident "list_of_list" (compile_gram.ml[249,11357+62]..[249,11357+74])
                                                      ]
                                                ]
                                                expression (compile_gram.ml[250,11435+22]..[266,12250+33])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (compile_gram.ml[250,11435+26]..[250,11435+30])
                                                        Ppat_var "_loc" (compile_gram.ml[250,11435+26]..[250,11435+30])
                                                      expression (compile_gram.ml[250,11435+33]..[250,11435+50])
                                                        Pexp_apply
                                                        expression (compile_gram.ml[250,11435+33]..[250,11435+47])
                                                          Pexp_ident "Ast_loc.loc_of" (compile_gram.ml[250,11435+33]..[250,11435+47])
                                                        [
                                                          <label> ""
                                                            expression (compile_gram.ml[250,11435+48]..[250,11435+50])
                                                              Pexp_ident "sl" (compile_gram.ml[250,11435+48]..[250,11435+50])
                                                        ]
                                                  ]
                                                  expression (compile_gram.ml[251,11489+22]..[266,12250+33])
                                                    Pexp_coerce
                                                    expression (compile_gram.ml[251,11489+23]..[265,12176+69])
                                                      Pexp_variant "Record"
                                                      Some
                                                        expression (compile_gram.ml[252,11520+25]..[265,12176+69])
                                                          Pexp_tuple
                                                          [
                                                            expression (compile_gram.ml[252,11520+26]..[252,11520+30])
                                                              Pexp_ident "_loc" (compile_gram.ml[252,11520+26]..[252,11520+30])
                                                            expression (compile_gram.ml[253,11552+28]..[265,12176+67])
                                                              Pexp_variant "Sem"
                                                              Some
                                                                expression (compile_gram.ml[254,11585+30]..[265,12176+67])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (compile_gram.ml[254,11585+31]..[254,11585+35])
                                                                      Pexp_ident "_loc" (compile_gram.ml[254,11585+31]..[254,11585+35])
                                                                    expression (compile_gram.ml[255,11622+33]..[257,11732+54])
                                                                      Pexp_variant "RecBind"
                                                                      Some
expression (compile_gram.ml[256,11664+35]..[257,11732+54])
  Pexp_tuple
  [
    expression (compile_gram.ml[256,11664+36]..[256,11664+40])
      Pexp_ident "_loc" (compile_gram.ml[256,11664+36]..[256,11664+40])
    expression (compile_gram.ml[256,11664+43]..[256,11664+65])
      Pexp_variant "Lid"
      Some
        expression (compile_gram.ml[256,11664+48]..[256,11664+65])
          Pexp_tuple
          [
            expression (compile_gram.ml[256,11664+49]..[256,11664+53])
              Pexp_ident "_loc" (compile_gram.ml[256,11664+49]..[256,11664+53])
            expression (compile_gram.ml[256,11664+55]..[256,11664+64])
              Pexp_constant Const_string("symbols",None)
          ]
    expression (compile_gram.ml[257,11732+37]..[257,11732+53])
      Pexp_coerce
      expression (compile_gram.ml[257,11732+38]..[257,11732+40])
        Pexp_ident "sl" (compile_gram.ml[257,11732+38]..[257,11732+40])
      None
      core_type (compile_gram.ml[257,11732+44]..[257,11732+52])
        Ptyp_constr "Astf.exp" (compile_gram.ml[257,11732+44]..[257,11732+52])
        []
  ]
                                                                    expression (compile_gram.ml[258,11789+33]..[265,12176+65])
                                                                      Pexp_variant "Sem"
                                                                      Some
expression (compile_gram.ml[259,11827+35]..[265,12176+65])
  Pexp_tuple
  [
    expression (compile_gram.ml[259,11827+36]..[259,11827+40])
      Pexp_ident "_loc" (compile_gram.ml[259,11827+36]..[259,11827+40])
    expression (compile_gram.ml[260,11869+38]..[262,11987+71])
      Pexp_variant "RecBind"
      Some
        expression (compile_gram.ml[261,11916+40]..[262,11987+71])
          Pexp_tuple
          [
            expression (compile_gram.ml[261,11916+41]..[261,11916+45])
              Pexp_ident "_loc" (compile_gram.ml[261,11916+41]..[261,11916+45])
            expression (compile_gram.ml[261,11916+48]..[261,11916+68])
              Pexp_variant "Lid"
              Some
                expression (compile_gram.ml[261,11916+53]..[261,11916+68])
                  Pexp_tuple
                  [
                    expression (compile_gram.ml[261,11916+54]..[261,11916+58])
                      Pexp_ident "_loc" (compile_gram.ml[261,11916+54]..[261,11916+58])
                    expression (compile_gram.ml[261,11916+60]..[261,11916+67])
                      Pexp_constant Const_string("annot",None)
                  ]
            expression (compile_gram.ml[262,11987+43]..[262,11987+69])
              Pexp_variant "Str"
              Some
                expression (compile_gram.ml[262,11987+48]..[262,11987+69])
                  Pexp_tuple
                  [
                    expression (compile_gram.ml[262,11987+49]..[262,11987+53])
                      Pexp_ident "_loc" (compile_gram.ml[262,11987+49]..[262,11987+53])
                    expression (compile_gram.ml[262,11987+55]..[262,11987+68])
                      Pexp_ident "action_string" (compile_gram.ml[262,11987+55]..[262,11987+68])
                  ]
          ]
    expression (compile_gram.ml[263,12061+38]..[265,12176+63])
      Pexp_variant "RecBind"
      Some
        expression (compile_gram.ml[264,12108+40]..[265,12176+63])
          Pexp_tuple
          [
            expression (compile_gram.ml[264,12108+41]..[264,12108+45])
              Pexp_ident "_loc" (compile_gram.ml[264,12108+41]..[264,12108+45])
            expression (compile_gram.ml[264,12108+48]..[264,12108+65])
              Pexp_variant "Lid"
              Some
                expression (compile_gram.ml[264,12108+53]..[264,12108+65])
                  Pexp_tuple
                  [
                    expression (compile_gram.ml[264,12108+54]..[264,12108+58])
                      Pexp_ident "_loc" (compile_gram.ml[264,12108+54]..[264,12108+58])
                    expression (compile_gram.ml[264,12108+60]..[264,12108+64])
                      Pexp_constant Const_string("fn",None)
                  ]
            expression (compile_gram.ml[265,12176+42]..[265,12176+62])
              Pexp_coerce
              expression (compile_gram.ml[265,12176+43]..[265,12176+49])
                Pexp_ident "action" (compile_gram.ml[265,12176+43]..[265,12176+49])
              None
              core_type (compile_gram.ml[265,12176+53]..[265,12176+61])
                Ptyp_constr "Astf.exp" (compile_gram.ml[265,12176+53]..[265,12176+61])
                []
          ]
  ]
                                                                  ]
                                                          ]
                                                    None
                                                    core_type (compile_gram.ml[266,12250+24]..[266,12250+32])
                                                      Ptyp_constr "Astf.exp" (compile_gram.ml[266,12250+24]..[266,12250+32])
                                                      []
                                        ]
                                  ]
                            ]
                        <label> ""
                          expression (compile_gram.ml[267,12287+16]..[267,12287+28])
                            Pexp_ident "list_of_list" (compile_gram.ml[267,12287+16]..[267,12287+28])
                      ]
                ]
          ]
    ]
  structure_item (compile_gram.ml[268,12317+0]..[451,22223+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[268,12317+4]..[268,12317+15])
          Ppat_var "make_action" (compile_gram.ml[268,12317+4]..[268,12317+15])
        expression (compile_gram.ml[269,12335+2]..[451,22223+43])
          Pexp_function
          [
            <case>
              pattern (compile_gram.ml[270,12346+4]..[270,12346+16])
                Ppat_constraint
                pattern (compile_gram.ml[270,12346+5]..[270,12346+9])
                  Ppat_var "_loc" (compile_gram.ml[270,12346+5]..[270,12346+9])
                core_type (compile_gram.ml[270,12346+12]..[270,12346+15])
                  Ptyp_constr "loc" (compile_gram.ml[270,12346+12]..[270,12346+15])
                  []
              expression (compile_gram.ml[271,12366+7]..[451,22223+42])
                Pexp_function
                [
                  <case>
                    pattern (compile_gram.ml[272,12382+9]..[272,12382+28])
                      Ppat_constraint
                      pattern (compile_gram.ml[272,12382+10]..[272,12382+11])
                        Ppat_var "x" (compile_gram.ml[272,12382+10]..[272,12382+11])
                      core_type (compile_gram.ml[272,12382+14]..[272,12382+27])
                        Ptyp_constr "Gram_def.rule" (compile_gram.ml[272,12382+14]..[272,12382+27])
                        []
                    expression (compile_gram.ml[273,12414+12]..[451,22223+41])
                      Pexp_function
                      [
                        <case>
                          pattern (compile_gram.ml[274,12435+14]..[274,12435+30])
                            Ppat_constraint
                            pattern (compile_gram.ml[274,12435+15]..[274,12435+20])
                              Ppat_var "rtvar" (compile_gram.ml[274,12435+15]..[274,12435+20])
                            core_type (compile_gram.ml[274,12435+23]..[274,12435+29])
                              Ptyp_constr "string" (compile_gram.ml[274,12435+23]..[274,12435+29])
                              []
                          expression (compile_gram.ml[275,12469+16]..[451,22223+41])
                            Pexp_constraint
                            expression (compile_gram.ml[275,12469+17]..[451,22223+34])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (compile_gram.ml[275,12469+21]..[275,12469+26])
                                    Ppat_var "locid" (compile_gram.ml[275,12469+21]..[275,12469+26])
                                  expression (compile_gram.ml[275,12469+29]..[275,12469+68])
                                    Pexp_coerce
                                    expression (compile_gram.ml[275,12469+30]..[275,12469+55])
                                      Pexp_variant "Lid"
                                      Some
                                        expression (compile_gram.ml[275,12469+35]..[275,12469+55])
                                          Pexp_tuple
                                          [
                                            expression (compile_gram.ml[275,12469+36]..[275,12469+40])
                                              Pexp_ident "_loc" (compile_gram.ml[275,12469+36]..[275,12469+40])
                                            expression (compile_gram.ml[275,12469+43]..[275,12469+53])
                                              Pexp_apply
                                              expression (compile_gram.ml[275,12469+43]..[275,12469+44])
                                                Pexp_ident "!" (compile_gram.ml[275,12469+43]..[275,12469+44])
                                              [
                                                <label> ""
                                                  expression (compile_gram.ml[275,12469+44]..[275,12469+53])
                                                    Pexp_ident "Locf.name" (compile_gram.ml[275,12469+44]..[275,12469+53])
                                              ]
                                          ]
                                    None
                                    core_type (compile_gram.ml[275,12469+59]..[275,12469+67])
                                      Ptyp_constr "Astf.pat" (compile_gram.ml[275,12469+59]..[275,12469+67])
                                      []
                              ]
                              expression (compile_gram.ml[276,12541+17]..[451,22223+34])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (compile_gram.ml[276,12541+21]..[276,12541+30])
                                      Ppat_var "make_ctyp" (compile_gram.ml[276,12541+21]..[276,12541+30])
                                    expression (compile_gram.ml[277,12574+19]..[304,14035+46])
                                      Pexp_function
                                      [
                                        <case>
                                          pattern (compile_gram.ml[278,12602+21]..[278,12602+43])
                                            Ppat_constraint
                                            pattern (compile_gram.ml[278,12602+22]..[278,12602+26])
                                              Ppat_var "styp" (compile_gram.ml[278,12602+22]..[278,12602+26])
                                            core_type (compile_gram.ml[278,12602+29]..[278,12602+42])
                                              Ptyp_constr "Gram_def.styp" (compile_gram.ml[278,12602+29]..[278,12602+42])
                                              []
                                          expression (compile_gram.ml[279,12649+24]..[304,14035+45])
                                            Pexp_function
                                            [
                                              <case>
                                                pattern (compile_gram.ml[280,12682+26]..[280,12682+30])
                                                  Ppat_var "tvar" (compile_gram.ml[280,12682+26]..[280,12682+30])
                                                expression (compile_gram.ml[281,12716+28]..[304,14035+45])
                                                  Pexp_constraint
                                                  expression (compile_gram.ml[281,12716+29]..[304,14035+37])
                                                    Pexp_let Rec
                                                    [
                                                      <def>
                                                        pattern (compile_gram.ml[281,12716+37]..[281,12716+40])
                                                          Ppat_var "aux" (compile_gram.ml[281,12716+37]..[281,12716+40])
                                                        expression (compile_gram.ml[282,12759+31]..[303,13980+51])
                                                          Pexp_function
                                                          [
                                                            <case>
                                                              pattern (compile_gram.ml[283,12799+33]..[283,12799+34])
                                                                Ppat_var "v" (compile_gram.ml[283,12799+33]..[283,12799+34])
                                                              expression (compile_gram.ml[284,12837+36]..[303,13980+50])
                                                                Pexp_match
                                                                expression (compile_gram.ml[284,12837+42]..[284,12837+61])
                                                                  Pexp_constraint
                                                                  expression (compile_gram.ml[284,12837+43]..[284,12837+44])
                                                                    Pexp_ident "v" (compile_gram.ml[284,12837+43]..[284,12837+44])
                                                                  core_type (compile_gram.ml[284,12837+47]..[284,12837+60])
                                                                    Ptyp_constr "Gram_def.styp" (compile_gram.ml[284,12837+47]..[284,12837+60])
                                                                    []
                                                                [
                                                                  <case>
                                                                    pattern (compile_gram.ml[285,12904+38]..[285,12904+48])
                                                                      Ppat_alias "x" (compile_gram.ml[285,12904+47]..[285,12904+48])
                                                                      pattern (compile_gram.ml[285,12904+38]..[285,12904+43])
Ppat_type
"vid'" (compile_gram.ml[285,12904+39]..[285,12904+43])
                                                                    expression (compile_gram.ml[285,12904+52]..[285,12904+71])
                                                                      Pexp_coerce
                                                                      expression (compile_gram.ml[285,12904+53]..[285,12904+54])
Pexp_ident "x" (compile_gram.ml[285,12904+53]..[285,12904+54])
                                                                      Some
core_type (compile_gram.ml[285,12904+57]..[285,12904+61])
  Ptyp_constr "vid'" (compile_gram.ml[285,12904+57]..[285,12904+61])
  []
                                                                      core_type (compile_gram.ml[285,12904+66]..[285,12904+70])
Ptyp_constr "ctyp" (compile_gram.ml[285,12904+66]..[285,12904+70])
[]
                                                                  <case>
                                                                    pattern (compile_gram.ml[286,12976+38]..[286,12976+51])
                                                                      Ppat_alias "x" (compile_gram.ml[286,12976+50]..[286,12976+51])
                                                                      pattern (compile_gram.ml[286,12976+38]..[286,12976+46])
Ppat_variant "Quote"
Some
  pattern (compile_gram.ml[286,12976+45]..[286,12976+46])
    Ppat_any
                                                                    expression (compile_gram.ml[286,12976+55]..[286,12976+56])
                                                                      Pexp_ident "x" (compile_gram.ml[286,12976+55]..[286,12976+56])
                                                                  <case>
                                                                    pattern (compile_gram.ml[287,13033+38]..[287,13033+55])
                                                                      Ppat_variant "App"
                                                                      Some
pattern (compile_gram.ml[287,13033+38]..[287,13033+55])
  Ppat_tuple
  [
    pattern (compile_gram.ml[287,13033+44]..[287,13033+48])
      Ppat_var "_loc" (compile_gram.ml[287,13033+44]..[287,13033+48])
    pattern (compile_gram.ml[287,13033+49]..[287,13033+51])
      Ppat_var "t1" (compile_gram.ml[287,13033+49]..[287,13033+51])
    pattern (compile_gram.ml[287,13033+52]..[287,13033+54])
      Ppat_var "t2" (compile_gram.ml[287,13033+52]..[287,13033+54])
  ]
                                                                    expression (compile_gram.ml[288,13092+40]..[291,13283+50])
                                                                      Pexp_coerce
                                                                      expression (compile_gram.ml[288,13092+41]..[290,13211+67])
Pexp_variant "App"
Some
  expression (compile_gram.ml[289,13138+43]..[290,13211+67])
    Pexp_tuple
    [
      expression (compile_gram.ml[289,13138+44]..[289,13138+48])
        Pexp_ident "_loc" (compile_gram.ml[289,13138+44]..[289,13138+48])
      expression (compile_gram.ml[289,13138+50]..[289,13138+71])
        Pexp_coerce
        expression (compile_gram.ml[289,13138+51]..[289,13138+57])
          Pexp_apply
          expression (compile_gram.ml[289,13138+51]..[289,13138+54])
            Pexp_ident "aux" (compile_gram.ml[289,13138+51]..[289,13138+54])
          [
            <label> ""
              expression (compile_gram.ml[289,13138+55]..[289,13138+57])
                Pexp_ident "t1" (compile_gram.ml[289,13138+55]..[289,13138+57])
          ]
        None
        core_type (compile_gram.ml[289,13138+61]..[289,13138+70])
          Ptyp_constr "Astf.ctyp" (compile_gram.ml[289,13138+61]..[289,13138+70])
          []
      expression (compile_gram.ml[290,13211+45]..[290,13211+66])
        Pexp_coerce
        expression (compile_gram.ml[290,13211+46]..[290,13211+52])
          Pexp_apply
          expression (compile_gram.ml[290,13211+46]..[290,13211+49])
            Pexp_ident "aux" (compile_gram.ml[290,13211+46]..[290,13211+49])
          [
            <label> ""
              expression (compile_gram.ml[290,13211+50]..[290,13211+52])
                Pexp_ident "t2" (compile_gram.ml[290,13211+50]..[290,13211+52])
          ]
        None
        core_type (compile_gram.ml[290,13211+56]..[290,13211+65])
          Ptyp_constr "Astf.ctyp" (compile_gram.ml[290,13211+56]..[290,13211+65])
          []
    ]
                                                                      None
                                                                      core_type (compile_gram.ml[291,13283+40]..[291,13283+49])
Ptyp_constr "Astf.ctyp" (compile_gram.ml[291,13283+40]..[291,13283+49])
[]
                                                                  <case>
                                                                    pattern (compile_gram.ml[292,13334+38]..[292,13334+48])
                                                                      Ppat_variant "Self"
                                                                      Some
pattern (compile_gram.ml[292,13334+44]..[292,13334+48])
  Ppat_var "_loc" (compile_gram.ml[292,13334+44]..[292,13334+48])
                                                                    expression (compile_gram.ml[293,13386+40]..[302,13927+52])
                                                                      Pexp_ifthenelse
                                                                      expression (compile_gram.ml[293,13386+43]..[293,13386+52])
Pexp_apply
expression (compile_gram.ml[293,13386+48]..[293,13386+49])
  Pexp_ident "=" (compile_gram.ml[293,13386+48]..[293,13386+49])
[
  <label> ""
    expression (compile_gram.ml[293,13386+43]..[293,13386+47])
      Pexp_ident "tvar" (compile_gram.ml[293,13386+43]..[293,13386+47])
  <label> ""
    expression (compile_gram.ml[293,13386+50]..[293,13386+52])
      Pexp_constant Const_string("",None)
]
                                                                      expression (compile_gram.ml[295,13484+42]..[297,13606+85])
Pexp_apply
expression (compile_gram.ml[295,13484+60]..[295,13484+62])
  Pexp_ident "@@" (compile_gram.ml[295,13484+60]..[295,13484+62])
[
  <label> ""
    expression (compile_gram.ml[295,13484+43]..[295,13484+58])
      Pexp_apply
      expression (compile_gram.ml[295,13484+43]..[295,13484+53])
        Pexp_ident "Locf.raise" (compile_gram.ml[295,13484+43]..[295,13484+53])
      [
        <label> ""
          expression (compile_gram.ml[295,13484+54]..[295,13484+58])
            Pexp_ident "_loc" (compile_gram.ml[295,13484+54]..[295,13484+58])
      ]
  <label> ""
    expression (compile_gram.ml[296,13547+45]..[297,13606+84])
      Pexp_construct "Streamf.Error" (compile_gram.ml[296,13547+45]..[296,13547+58])
      Some
        expression (compile_gram.ml[297,13606+47]..[297,13606+84])
          Pexp_constant Const_string("S: illegal in anonymous entry level",None)
]
                                                                      Some
expression (compile_gram.ml[299,13737+42]..[302,13927+52])
  Pexp_coerce
  expression (compile_gram.ml[299,13737+43]..[301,13855+67])
    Pexp_variant "Quote"
    Some
      expression (compile_gram.ml[300,13787+45]..[301,13855+67])
        Pexp_tuple
        [
          expression (compile_gram.ml[300,13787+46]..[300,13787+50])
            Pexp_ident "_loc" (compile_gram.ml[300,13787+46]..[300,13787+50])
          expression (compile_gram.ml[300,13787+53]..[300,13787+65])
            Pexp_variant "Normal"
            Some
              expression (compile_gram.ml[300,13787+61]..[300,13787+65])
                Pexp_ident "_loc" (compile_gram.ml[300,13787+61]..[300,13787+65])
          expression (compile_gram.ml[301,13855+48]..[301,13855+65])
            Pexp_variant "Lid"
            Some
              expression (compile_gram.ml[301,13855+53]..[301,13855+65])
                Pexp_tuple
                [
                  expression (compile_gram.ml[301,13855+54]..[301,13855+58])
                    Pexp_ident "_loc" (compile_gram.ml[301,13855+54]..[301,13855+58])
                  expression (compile_gram.ml[301,13855+60]..[301,13855+64])
                    Pexp_ident "tvar" (compile_gram.ml[301,13855+60]..[301,13855+64])
                ]
        ]
  None
  core_type (compile_gram.ml[302,13927+42]..[302,13927+51])
    Ptyp_constr "Astf.ctyp" (compile_gram.ml[302,13927+42]..[302,13927+51])
    []
                                                                  <case>
                                                                    pattern (compile_gram.ml[303,13980+38]..[303,13980+45])
                                                                      Ppat_variant "Type"
                                                                      Some
pattern (compile_gram.ml[303,13980+44]..[303,13980+45])
  Ppat_var "t" (compile_gram.ml[303,13980+44]..[303,13980+45])
                                                                    expression (compile_gram.ml[303,13980+49]..[303,13980+50])
                                                                      Pexp_ident "t" (compile_gram.ml[303,13980+49]..[303,13980+50])
                                                                ]
                                                          ]
                                                    ]
                                                    expression (compile_gram.ml[304,14035+29]..[304,14035+37])
                                                      Pexp_apply
                                                      expression (compile_gram.ml[304,14035+29]..[304,14035+32])
                                                        Pexp_ident "aux" (compile_gram.ml[304,14035+29]..[304,14035+32])
                                                      [
                                                        <label> ""
                                                          expression (compile_gram.ml[304,14035+33]..[304,14035+37])
                                                            Pexp_ident "styp" (compile_gram.ml[304,14035+33]..[304,14035+37])
                                                      ]
                                                  core_type (compile_gram.ml[304,14035+40]..[304,14035+44])
                                                    Ptyp_constr "ctyp" (compile_gram.ml[304,14035+40]..[304,14035+44])
                                                    []
                                            ]
                                      ]
                                ]
                                expression (compile_gram.ml[305,14085+17]..[451,22223+34])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (compile_gram.ml[305,14085+21]..[305,14085+25])
                                        Ppat_var "+:" (compile_gram.ml[305,14085+21]..[305,14085+25])
                                      expression (compile_gram.ml[305,14085+28]..[305,14085+34])
                                        Pexp_ident "typing" (compile_gram.ml[305,14085+28]..[305,14085+34])
                                  ]
                                  expression (compile_gram.ml[306,14123+18]..[451,22223+33])
                                    Pexp_match
                                    expression (compile_gram.ml[306,14123+24]..[306,14123+32])
                                      Pexp_field
                                      expression (compile_gram.ml[306,14123+24]..[306,14123+25])
                                        Pexp_ident "x" (compile_gram.ml[306,14123+24]..[306,14123+25])
                                      "action" (compile_gram.ml[306,14123+26]..[306,14123+32])
                                    [
                                      <case>
                                        pattern (compile_gram.ml[307,14161+20]..[307,14161+25])
                                          Ppat_construct "Ant" (compile_gram.ml[307,14161+20]..[307,14161+23])
                                          Some
                                            pattern (compile_gram.ml[307,14161+24]..[307,14161+25])
                                              Ppat_var "v" (compile_gram.ml[307,14161+24]..[307,14161+25])
                                        expression (compile_gram.ml[308,14190+22]..[335,15517+33])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (compile_gram.ml[308,14190+26]..[308,14190+27])
                                                Ppat_var "e" (compile_gram.ml[308,14190+26]..[308,14190+27])
                                              expression (compile_gram.ml[308,14190+30]..[308,14190+60])
                                                Pexp_apply
                                                expression (compile_gram.ml[308,14190+30]..[308,14190+47])
                                                  Pexp_ident "Tokenf.ant_expand" (compile_gram.ml[308,14190+30]..[308,14190+47])
                                                [
                                                  <label> ""
                                                    expression (compile_gram.ml[308,14190+48]..[308,14190+58])
                                                      Pexp_ident "Parsef.exp" (compile_gram.ml[308,14190+48]..[308,14190+58])
                                                  <label> ""
                                                    expression (compile_gram.ml[308,14190+59]..[308,14190+60])
                                                      Pexp_ident "v" (compile_gram.ml[308,14190+59]..[308,14190+60])
                                                ]
                                          ]
                                          expression (compile_gram.ml[309,14254+22]..[335,15517+33])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (compile_gram.ml[309,14254+26]..[309,14254+28])
                                                  Ppat_var "ty" (compile_gram.ml[309,14254+26]..[309,14254+28])
                                                expression (compile_gram.ml[310,14285+24]..[327,15149+32])
                                                  Pexp_apply
                                                  expression (compile_gram.ml[310,14285+24]..[310,14285+38])
                                                    Pexp_ident "List.fold_left" (compile_gram.ml[310,14285+24]..[310,14285+38])
                                                  [
                                                    <label> ""
                                                      expression (compile_gram.ml[311,14324+27]..[318,14674+74])
                                                        Pexp_function
                                                        [
                                                          <case>
                                                            pattern (compile_gram.ml[312,14360+29]..[312,14360+31])
                                                              Ppat_var "ty" (compile_gram.ml[312,14360+29]..[312,14360+31])
                                                            expression (compile_gram.ml[313,14395+32]..[318,14674+73])
                                                              Pexp_function
                                                              [
                                                                <case>
                                                                  pattern (compile_gram.ml[314,14436+34]..[314,14436+56])
                                                                    Ppat_constraint
                                                                    pattern (compile_gram.ml[314,14436+35]..[314,14436+36])
                                                                      Ppat_var "s" (compile_gram.ml[314,14436+35]..[314,14436+36])
                                                                    core_type (compile_gram.ml[314,14436+39]..[314,14436+55])
                                                                      Ptyp_constr "Gram_def.osymbol" (compile_gram.ml[314,14436+39]..[314,14436+55])
                                                                      []
                                                                  expression (compile_gram.ml[315,14496+36]..[318,14674+73])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (compile_gram.ml[315,14496+40]..[315,14496+41])
  Ppat_var "t" (compile_gram.ml[315,14496+40]..[315,14496+41])
expression (compile_gram.ml[315,14496+44]..[315,14496+66])
  Pexp_apply
  expression (compile_gram.ml[315,14496+44]..[315,14496+53])
    Pexp_ident "make_ctyp" (compile_gram.ml[315,14496+44]..[315,14496+53])
  [
    <label> ""
      expression (compile_gram.ml[315,14496+54]..[315,14496+60])
        Pexp_field
        expression (compile_gram.ml[315,14496+54]..[315,14496+55])
          Pexp_ident "s" (compile_gram.ml[315,14496+54]..[315,14496+55])
        "styp" (compile_gram.ml[315,14496+56]..[315,14496+60])
    <label> ""
      expression (compile_gram.ml[315,14496+61]..[315,14496+66])
        Pexp_ident "rtvar" (compile_gram.ml[315,14496+61]..[315,14496+66])
  ]
                                                                    ]
                                                                    expression (compile_gram.ml[316,14566+36]..[318,14674+73])
                                                                      Pexp_coerce
                                                                      expression (compile_gram.ml[316,14566+37]..[318,14674+59])
Pexp_variant "Arrow"
Some
  expression (compile_gram.ml[317,14610+39]..[318,14674+59])
    Pexp_tuple
    [
      expression (compile_gram.ml[317,14610+40]..[317,14610+44])
        Pexp_ident "_loc" (compile_gram.ml[317,14610+40]..[317,14610+44])
      expression (compile_gram.ml[317,14610+46]..[317,14610+62])
        Pexp_coerce
        expression (compile_gram.ml[317,14610+47]..[317,14610+48])
          Pexp_ident "t" (compile_gram.ml[317,14610+47]..[317,14610+48])
        None
        core_type (compile_gram.ml[317,14610+52]..[317,14610+61])
          Ptyp_constr "Astf.ctyp" (compile_gram.ml[317,14610+52]..[317,14610+61])
          []
      expression (compile_gram.ml[318,14674+41]..[318,14674+58])
        Pexp_coerce
        expression (compile_gram.ml[318,14674+42]..[318,14674+44])
          Pexp_ident "ty" (compile_gram.ml[318,14674+42]..[318,14674+44])
        None
        core_type (compile_gram.ml[318,14674+48]..[318,14674+57])
          Ptyp_constr "Astf.ctyp" (compile_gram.ml[318,14674+48]..[318,14674+57])
          []
    ]
                                                                      None
                                                                      core_type (compile_gram.ml[318,14674+63]..[318,14674+72])
Ptyp_constr "Astf.ctyp" (compile_gram.ml[318,14674+63]..[318,14674+72])
[]
                                                              ]
                                                        ]
                                                    <label> ""
                                                      expression (compile_gram.ml[319,14750+26]..[326,15075+73])
                                                        Pexp_coerce
                                                        expression (compile_gram.ml[319,14750+27]..[326,15075+59])
                                                          Pexp_variant "Arrow"
                                                          Some
                                                            expression (compile_gram.ml[320,14784+29]..[326,15075+59])
                                                              Pexp_tuple
                                                              [
                                                                expression (compile_gram.ml[320,14784+30]..[320,14784+34])
                                                                  Pexp_ident "_loc" (compile_gram.ml[320,14784+30]..[320,14784+34])
                                                                expression (compile_gram.ml[321,14820+32]..[323,14921+55])
                                                                  Pexp_variant "Dot"
                                                                  Some
                                                                    expression (compile_gram.ml[322,14857+34]..[323,14921+55])
                                                                      Pexp_tuple
                                                                      [
expression (compile_gram.ml[322,14857+35]..[322,14857+39])
  Pexp_ident "_loc" (compile_gram.ml[322,14857+35]..[322,14857+39])
expression (compile_gram.ml[322,14857+42]..[322,14857+61])
  Pexp_variant "Uid"
  Some
    expression (compile_gram.ml[322,14857+47]..[322,14857+61])
      Pexp_tuple
      [
        expression (compile_gram.ml[322,14857+48]..[322,14857+52])
          Pexp_ident "_loc" (compile_gram.ml[322,14857+48]..[322,14857+52])
        expression (compile_gram.ml[322,14857+54]..[322,14857+60])
          Pexp_constant Const_string("Locf",None)
      ]
expression (compile_gram.ml[323,14921+37]..[323,14921+53])
  Pexp_variant "Lid"
  Some
    expression (compile_gram.ml[323,14921+42]..[323,14921+53])
      Pexp_tuple
      [
        expression (compile_gram.ml[323,14921+43]..[323,14921+47])
          Pexp_ident "_loc" (compile_gram.ml[323,14921+43]..[323,14921+47])
        expression (compile_gram.ml[323,14921+49]..[323,14921+52])
          Pexp_constant Const_string("t",None)
      ]
                                                                      ]
                                                                expression (compile_gram.ml[324,14979+32]..[326,15075+57])
                                                                  Pexp_variant "Quote"
                                                                  Some
                                                                    expression (compile_gram.ml[325,15018+34]..[326,15075+57])
                                                                      Pexp_tuple
                                                                      [
expression (compile_gram.ml[325,15018+35]..[325,15018+39])
  Pexp_ident "_loc" (compile_gram.ml[325,15018+35]..[325,15018+39])
expression (compile_gram.ml[325,15018+42]..[325,15018+54])
  Pexp_variant "Normal"
  Some
    expression (compile_gram.ml[325,15018+50]..[325,15018+54])
      Pexp_ident "_loc" (compile_gram.ml[325,15018+50]..[325,15018+54])
expression (compile_gram.ml[326,15075+37]..[326,15075+55])
  Pexp_variant "Lid"
  Some
    expression (compile_gram.ml[326,15075+42]..[326,15075+55])
      Pexp_tuple
      [
        expression (compile_gram.ml[326,15075+43]..[326,15075+47])
          Pexp_ident "_loc" (compile_gram.ml[326,15075+43]..[326,15075+47])
        expression (compile_gram.ml[326,15075+49]..[326,15075+54])
          Pexp_ident "rtvar" (compile_gram.ml[326,15075+49]..[326,15075+54])
      ]
                                                                      ]
                                                              ]
                                                        None
                                                        core_type (compile_gram.ml[326,15075+63]..[326,15075+72])
                                                          Ptyp_constr "Astf.ctyp" (compile_gram.ml[326,15075+63]..[326,15075+72])
                                                          []
                                                    <label> ""
                                                      expression (compile_gram.ml[327,15149+26]..[327,15149+32])
                                                        Pexp_field
                                                        expression (compile_gram.ml[327,15149+26]..[327,15149+27])
                                                          Pexp_ident "x" (compile_gram.ml[327,15149+26]..[327,15149+27])
                                                        "prod" (compile_gram.ml[327,15149+28]..[327,15149+32])
                                                  ]
                                            ]
                                            expression (compile_gram.ml[328,15185+22]..[335,15517+33])
                                              Pexp_coerce
                                              expression (compile_gram.ml[328,15185+23]..[334,15438+74])
                                                Pexp_variant "App"
                                                Some
                                                  expression (compile_gram.ml[329,15213+25]..[334,15438+74])
                                                    Pexp_tuple
                                                    [
                                                      expression (compile_gram.ml[329,15213+26]..[329,15213+30])
                                                        Pexp_ident "_loc" (compile_gram.ml[329,15213+26]..[329,15213+30])
                                                      expression (compile_gram.ml[330,15245+28]..[332,15336+59])
                                                        Pexp_variant "Dot"
                                                        Some
                                                          expression (compile_gram.ml[331,15278+30]..[332,15336+59])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_gram.ml[331,15278+31]..[331,15278+35])
                                                                Pexp_ident "_loc" (compile_gram.ml[331,15278+31]..[331,15278+35])
                                                              expression (compile_gram.ml[331,15278+37]..[331,15278+56])
                                                                Pexp_coerce
                                                                expression (compile_gram.ml[331,15278+38]..[331,15278+43])
                                                                  Pexp_apply
                                                                  expression (compile_gram.ml[331,15278+38]..[331,15278+40])
                                                                    Pexp_ident "gm" (compile_gram.ml[331,15278+38]..[331,15278+40])
                                                                  [
                                                                    <label> ""
                                                                      expression (compile_gram.ml[331,15278+41]..[331,15278+43])
Pexp_construct "()" (compile_gram.ml[331,15278+41]..[331,15278+43])
None
                                                                  ]
                                                                None
                                                                core_type (compile_gram.ml[331,15278+47]..[331,15278+55])
                                                                  Ptyp_constr "Astf.vid" (compile_gram.ml[331,15278+47]..[331,15278+55])
                                                                  []
                                                              expression (compile_gram.ml[332,15336+33]..[332,15336+57])
                                                                Pexp_variant "Lid"
                                                                Some
                                                                  expression (compile_gram.ml[332,15336+38]..[332,15336+57])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (compile_gram.ml[332,15336+39]..[332,15336+43])
Pexp_ident "_loc" (compile_gram.ml[332,15336+39]..[332,15336+43])
                                                                      expression (compile_gram.ml[332,15336+45]..[332,15336+56])
Pexp_constant Const_string("mk_action",None)
                                                                    ]
                                                            ]
                                                      expression (compile_gram.ml[333,15398+28]..[334,15438+72])
                                                        Pexp_variant "Constraint"
                                                        Some
                                                          expression (compile_gram.ml[334,15438+30]..[334,15438+72])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_gram.ml[334,15438+31]..[334,15438+35])
                                                                Pexp_ident "_loc" (compile_gram.ml[334,15438+31]..[334,15438+35])
                                                              expression (compile_gram.ml[334,15438+37]..[334,15438+52])
                                                                Pexp_coerce
                                                                expression (compile_gram.ml[334,15438+38]..[334,15438+39])
                                                                  Pexp_ident "e" (compile_gram.ml[334,15438+38]..[334,15438+39])
                                                                None
                                                                core_type (compile_gram.ml[334,15438+43]..[334,15438+51])
                                                                  Ptyp_constr "Astf.exp" (compile_gram.ml[334,15438+43]..[334,15438+51])
                                                                  []
                                                              expression (compile_gram.ml[334,15438+54]..[334,15438+71])
                                                                Pexp_coerce
                                                                expression (compile_gram.ml[334,15438+55]..[334,15438+57])
                                                                  Pexp_ident "ty" (compile_gram.ml[334,15438+55]..[334,15438+57])
                                                                None
                                                                core_type (compile_gram.ml[334,15438+61]..[334,15438+70])
                                                                  Ptyp_constr "Astf.ctyp" (compile_gram.ml[334,15438+61]..[334,15438+70])
                                                                  []
                                                            ]
                                                    ]
                                              None
                                              core_type (compile_gram.ml[335,15517+24]..[335,15517+32])
                                                Ptyp_constr "Astf.exp" (compile_gram.ml[335,15517+24]..[335,15517+32])
                                                []
                                      <case>
                                        pattern (compile_gram.ml[336,15551+20]..[336,15551+23])
                                          Ppat_construct "E" (compile_gram.ml[336,15551+20]..[336,15551+21])
                                          Some
                                            pattern (compile_gram.ml[336,15551+22]..[336,15551+23])
                                              Ppat_var "v" (compile_gram.ml[336,15551+22]..[336,15551+23])
                                        expression (compile_gram.ml[337,15578+22]..[451,22223+33])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (compile_gram.ml[337,15578+26]..[337,15578+27])
                                                Ppat_var "e" (compile_gram.ml[337,15578+26]..[337,15578+27])
                                              expression (compile_gram.ml[338,15608+24]..[368,17135+66])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (compile_gram.ml[338,15608+28]..[338,15608+31])
                                                      Ppat_var "act" (compile_gram.ml[338,15608+28]..[338,15608+31])
                                                    expression (compile_gram.ml[338,15608+34]..[338,15608+75])
                                                      Pexp_apply
                                                      expression (compile_gram.ml[338,15608+34]..[338,15608+48])
                                                        Pexp_ident "Option.default" (compile_gram.ml[338,15608+34]..[338,15608+48])
                                                      [
                                                        <label> ""
                                                          expression (compile_gram.ml[338,15608+49]..[338,15608+73])
                                                            Pexp_coerce
                                                            expression (compile_gram.ml[338,15608+50]..[338,15608+60])
                                                              Pexp_variant "Unit"
                                                              Some
                                                                expression (compile_gram.ml[338,15608+56]..[338,15608+60])
                                                                  Pexp_ident "_loc" (compile_gram.ml[338,15608+56]..[338,15608+60])
                                                            None
                                                            core_type (compile_gram.ml[338,15608+64]..[338,15608+72])
                                                              Ptyp_constr "Astf.exp" (compile_gram.ml[338,15608+64]..[338,15608+72])
                                                              []
                                                        <label> ""
                                                          expression (compile_gram.ml[338,15608+74]..[338,15608+75])
                                                            Pexp_ident "v" (compile_gram.ml[338,15608+74]..[338,15608+75])
                                                      ]
                                                ]
                                                expression (compile_gram.ml[339,15687+24]..[368,17135+66])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (compile_gram.ml[339,15687+28]..[339,15687+36])
                                                        Ppat_var "make_env" (compile_gram.ml[339,15687+28]..[339,15687+36])
                                                      expression (compile_gram.ml[340,15726+26]..[350,16227+52])
                                                        Pexp_function
                                                        [
                                                          <case>
                                                            pattern (compile_gram.ml[341,15761+28]..[341,15761+31])
                                                              Ppat_var "env" (compile_gram.ml[341,15761+28]..[341,15761+31])
                                                            expression (compile_gram.ml[342,15796+30]..[350,16227+52])
                                                              Pexp_apply
                                                              expression (compile_gram.ml[342,15796+34]..[342,15796+36])
                                                                Pexp_ident "|>" (compile_gram.ml[342,15796+34]..[342,15796+36])
                                                              [
                                                                <label> ""
                                                                  expression (compile_gram.ml[342,15796+30]..[342,15796+33])
                                                                    Pexp_ident "env" (compile_gram.ml[342,15796+30]..[342,15796+33])
                                                                <label> ""
                                                                  expression (compile_gram.ml[343,15833+33]..[350,16227+51])
                                                                    Pexp_apply
                                                                    expression (compile_gram.ml[343,15833+33]..[343,15833+41])
                                                                      Pexp_ident "List.map" (compile_gram.ml[343,15833+33]..[343,15833+41])
                                                                    [
                                                                      <label> ""
expression (compile_gram.ml[344,15875+36]..[350,16227+50])
  Pexp_function
  [
    <case>
      pattern (compile_gram.ml[345,15920+38]..[345,15920+50])
        Ppat_tuple
        [
          pattern (compile_gram.ml[345,15920+39]..[345,15920+47])
            Ppat_tuple
            [
              pattern (compile_gram.ml[345,15920+40]..[345,15920+43])
                Ppat_var "loc" (compile_gram.ml[345,15920+40]..[345,15920+43])
              pattern (compile_gram.ml[345,15920+44]..[345,15920+46])
                Ppat_var "id" (compile_gram.ml[345,15920+44]..[345,15920+46])
            ]
          pattern (compile_gram.ml[345,15920+48]..[345,15920+49])
            Ppat_var "e" (compile_gram.ml[345,15920+48]..[345,15920+49])
        ]
      expression (compile_gram.ml[346,15974+40]..[350,16227+50])
        Pexp_coerce
        expression (compile_gram.ml[346,15974+41]..[349,16150+72])
          Pexp_variant "Bind"
          Some
            expression (compile_gram.ml[347,16021+43]..[349,16150+72])
              Pexp_tuple
              [
                expression (compile_gram.ml[347,16021+44]..[347,16021+48])
                  Pexp_ident "_loc" (compile_gram.ml[347,16021+44]..[347,16021+48])
                expression (compile_gram.ml[348,16071+45]..[349,16150+54])
                  Pexp_coerce
                  expression (compile_gram.ml[348,16071+46]..[348,16071+74])
                    Pexp_coerce
                    expression (compile_gram.ml[348,16071+47]..[348,16071+61])
                      Pexp_variant "Lid"
                      Some
                        expression (compile_gram.ml[348,16071+52]..[348,16071+61])
                          Pexp_tuple
                          [
                            expression (compile_gram.ml[348,16071+53]..[348,16071+56])
                              Pexp_ident "loc" (compile_gram.ml[348,16071+53]..[348,16071+56])
                            expression (compile_gram.ml[348,16071+58]..[348,16071+60])
                              Pexp_ident "id" (compile_gram.ml[348,16071+58]..[348,16071+60])
                          ]
                    None
                    core_type (compile_gram.ml[348,16071+65]..[348,16071+73])
                      Ptyp_constr "Astf.pat" (compile_gram.ml[348,16071+65]..[348,16071+73])
                      []
                  None
                  core_type (compile_gram.ml[349,16150+45]..[349,16150+53])
                    Ptyp_constr "Astf.pat" (compile_gram.ml[349,16150+45]..[349,16150+53])
                    []
                expression (compile_gram.ml[349,16150+56]..[349,16150+71])
                  Pexp_coerce
                  expression (compile_gram.ml[349,16150+57]..[349,16150+58])
                    Pexp_ident "e" (compile_gram.ml[349,16150+57]..[349,16150+58])
                  None
                  core_type (compile_gram.ml[349,16150+62]..[349,16150+70])
                    Ptyp_constr "Astf.exp" (compile_gram.ml[349,16150+62]..[349,16150+70])
                    []
              ]
        None
        core_type (compile_gram.ml[350,16227+40]..[350,16227+49])
          Ptyp_constr "Astf.bind" (compile_gram.ml[350,16227+40]..[350,16227+49])
          []
  ]
                                                                    ]
                                                              ]
                                                        ]
                                                  ]
                                                  expression (compile_gram.ml[351,16283+24]..[368,17135+66])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (compile_gram.ml[351,16283+28]..[351,16283+33])
                                                          Ppat_var "binds" (compile_gram.ml[351,16283+28]..[351,16283+33])
                                                        expression (compile_gram.ml[351,16283+36]..[351,16283+50])
                                                          Pexp_apply
                                                          expression (compile_gram.ml[351,16283+36]..[351,16283+44])
                                                            Pexp_ident "make_env" (compile_gram.ml[351,16283+36]..[351,16283+44])
                                                          [
                                                            <label> ""
                                                              expression (compile_gram.ml[351,16283+45]..[351,16283+50])
                                                                Pexp_field
                                                                expression (compile_gram.ml[351,16283+45]..[351,16283+46])
                                                                  Pexp_ident "x" (compile_gram.ml[351,16283+45]..[351,16283+46])
                                                                "env" (compile_gram.ml[351,16283+47]..[351,16283+50])
                                                          ]
                                                    ]
                                                    expression (compile_gram.ml[352,16337+24]..[368,17135+66])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (compile_gram.ml[352,16337+28]..[352,16337+30])
                                                            Ppat_var "e1" (compile_gram.ml[352,16337+28]..[352,16337+30])
                                                          expression (compile_gram.ml[353,16370+26]..[357,16560+72])
                                                            Pexp_coerce
                                                            expression (compile_gram.ml[353,16370+27]..[357,16560+59])
                                                              Pexp_variant "Constraint"
                                                              Some
                                                                expression (compile_gram.ml[354,16409+29]..[357,16560+59])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (compile_gram.ml[354,16409+30]..[354,16409+34])
                                                                      Pexp_ident "_loc" (compile_gram.ml[354,16409+30]..[354,16409+34])
                                                                    expression (compile_gram.ml[354,16409+36]..[354,16409+53])
                                                                      Pexp_coerce
                                                                      expression (compile_gram.ml[354,16409+37]..[354,16409+40])
Pexp_ident "act" (compile_gram.ml[354,16409+37]..[354,16409+40])
                                                                      None
                                                                      core_type (compile_gram.ml[354,16409+44]..[354,16409+52])
Ptyp_constr "Astf.exp" (compile_gram.ml[354,16409+44]..[354,16409+52])
[]
                                                                    expression (compile_gram.ml[355,16464+32]..[357,16560+57])
                                                                      Pexp_variant "Quote"
                                                                      Some
expression (compile_gram.ml[356,16503+34]..[357,16560+57])
  Pexp_tuple
  [
    expression (compile_gram.ml[356,16503+35]..[356,16503+39])
      Pexp_ident "_loc" (compile_gram.ml[356,16503+35]..[356,16503+39])
    expression (compile_gram.ml[356,16503+42]..[356,16503+54])
      Pexp_variant "Normal"
      Some
        expression (compile_gram.ml[356,16503+50]..[356,16503+54])
          Pexp_ident "_loc" (compile_gram.ml[356,16503+50]..[356,16503+54])
    expression (compile_gram.ml[357,16560+37]..[357,16560+55])
      Pexp_variant "Lid"
      Some
        expression (compile_gram.ml[357,16560+42]..[357,16560+55])
          Pexp_tuple
          [
            expression (compile_gram.ml[357,16560+43]..[357,16560+47])
              Pexp_ident "_loc" (compile_gram.ml[357,16560+43]..[357,16560+47])
            expression (compile_gram.ml[357,16560+49]..[357,16560+54])
              Pexp_ident "rtvar" (compile_gram.ml[357,16560+49]..[357,16560+54])
          ]
  ]
                                                                  ]
                                                            None
                                                            core_type (compile_gram.ml[357,16560+63]..[357,16560+71])
                                                              Ptyp_constr "Astf.exp" (compile_gram.ml[357,16560+63]..[357,16560+71])
                                                              []
                                                      ]
                                                      expression (compile_gram.ml[358,16636+24]..[368,17135+66])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (compile_gram.ml[358,16636+28]..[358,16636+30])
                                                              Ppat_var "e1" (compile_gram.ml[358,16636+28]..[358,16636+30])
                                                            expression (compile_gram.ml[358,16636+33]..[358,16636+59])
                                                              Pexp_apply
                                                              expression (compile_gram.ml[358,16636+33]..[358,16636+50])
                                                                Pexp_ident "Ast_gen.seq_binds" (compile_gram.ml[358,16636+33]..[358,16636+50])
                                                              [
                                                                <label> ""
                                                                  expression (compile_gram.ml[358,16636+51]..[358,16636+56])
                                                                    Pexp_ident "binds" (compile_gram.ml[358,16636+51]..[358,16636+56])
                                                                <label> ""
                                                                  expression (compile_gram.ml[358,16636+57]..[358,16636+59])
                                                                    Pexp_ident "e1" (compile_gram.ml[358,16636+57]..[358,16636+59])
                                                              ]
                                                        ]
                                                        expression (compile_gram.ml[359,16699+24]..[368,17135+66])
                                                          Pexp_coerce
                                                          expression (compile_gram.ml[359,16699+25]..[368,17135+53])
                                                            Pexp_variant "Fun"
                                                            Some
                                                              expression (compile_gram.ml[360,16729+27]..[368,17135+53])
                                                                Pexp_tuple
                                                                [
                                                                  expression (compile_gram.ml[360,16729+28]..[360,16729+32])
                                                                    Pexp_ident "_loc" (compile_gram.ml[360,16729+28]..[360,16729+32])
                                                                  expression (compile_gram.ml[361,16763+30]..[368,17135+51])
                                                                    Pexp_variant "Case"
                                                                    Some
                                                                      expression (compile_gram.ml[362,16799+32]..[368,17135+51])
Pexp_tuple
[
  expression (compile_gram.ml[362,16799+33]..[362,16799+37])
    Pexp_ident "_loc" (compile_gram.ml[362,16799+33]..[362,16799+37])
  expression (compile_gram.ml[363,16838+35]..[367,17067+65])
    Pexp_variant "Constraint"
    Some
      expression (compile_gram.ml[364,16885+37]..[367,17067+65])
        Pexp_tuple
        [
          expression (compile_gram.ml[364,16885+38]..[364,16885+42])
            Pexp_ident "_loc" (compile_gram.ml[364,16885+38]..[364,16885+42])
          expression (compile_gram.ml[364,16885+44]..[364,16885+63])
            Pexp_coerce
            expression (compile_gram.ml[364,16885+45]..[364,16885+50])
              Pexp_ident "locid" (compile_gram.ml[364,16885+45]..[364,16885+50])
            None
            core_type (compile_gram.ml[364,16885+54]..[364,16885+62])
              Ptyp_constr "Astf.pat" (compile_gram.ml[364,16885+54]..[364,16885+62])
              []
          expression (compile_gram.ml[365,16950+40]..[367,17067+63])
            Pexp_variant "Dot"
            Some
              expression (compile_gram.ml[366,16995+42]..[367,17067+63])
                Pexp_tuple
                [
                  expression (compile_gram.ml[366,16995+43]..[366,16995+47])
                    Pexp_ident "_loc" (compile_gram.ml[366,16995+43]..[366,16995+47])
                  expression (compile_gram.ml[366,16995+50]..[366,16995+69])
                    Pexp_variant "Uid"
                    Some
                      expression (compile_gram.ml[366,16995+55]..[366,16995+69])
                        Pexp_tuple
                        [
                          expression (compile_gram.ml[366,16995+56]..[366,16995+60])
                            Pexp_ident "_loc" (compile_gram.ml[366,16995+56]..[366,16995+60])
                          expression (compile_gram.ml[366,16995+62]..[366,16995+68])
                            Pexp_constant Const_string("Locf",None)
                        ]
                  expression (compile_gram.ml[367,17067+45]..[367,17067+61])
                    Pexp_variant "Lid"
                    Some
                      expression (compile_gram.ml[367,17067+50]..[367,17067+61])
                        Pexp_tuple
                        [
                          expression (compile_gram.ml[367,17067+51]..[367,17067+55])
                            Pexp_ident "_loc" (compile_gram.ml[367,17067+51]..[367,17067+55])
                          expression (compile_gram.ml[367,17067+57]..[367,17067+60])
                            Pexp_constant Const_string("t",None)
                        ]
                ]
        ]
  expression (compile_gram.ml[368,17135+34]..[368,17135+50])
    Pexp_coerce
    expression (compile_gram.ml[368,17135+35]..[368,17135+37])
      Pexp_ident "e1" (compile_gram.ml[368,17135+35]..[368,17135+37])
    None
    core_type (compile_gram.ml[368,17135+41]..[368,17135+49])
      Ptyp_constr "Astf.exp" (compile_gram.ml[368,17135+41]..[368,17135+49])
      []
]
                                                                ]
                                                          None
                                                          core_type (compile_gram.ml[368,17135+57]..[368,17135+65])
                                                            Ptyp_constr "Astf.exp" (compile_gram.ml[368,17135+57]..[368,17135+65])
                                                            []
                                          ]
                                          expression (compile_gram.ml[369,17205+22]..[451,22223+33])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (compile_gram.ml[369,17205+26]..[369,17205+34])
                                                  Ppat_tuple
                                                  [
                                                    pattern (compile_gram.ml[369,17205+27]..[369,17205+29])
                                                      Ppat_var "ty" (compile_gram.ml[369,17205+27]..[369,17205+29])
                                                    pattern (compile_gram.ml[369,17205+30]..[369,17205+33])
                                                      Ppat_var "txt" (compile_gram.ml[369,17205+30]..[369,17205+33])
                                                  ]
                                                expression (compile_gram.ml[370,17242+24]..[443,21844+41])
                                                  Pexp_apply
                                                  expression (compile_gram.ml[370,17242+28]..[370,17242+30])
                                                    Pexp_ident "@@" (compile_gram.ml[370,17242+28]..[370,17242+30])
                                                  [
                                                    <label> ""
                                                      expression (compile_gram.ml[370,17242+24]..[370,17242+27])
                                                        Pexp_ident "snd" (compile_gram.ml[370,17242+24]..[370,17242+27])
                                                    <label> ""
                                                      expression (compile_gram.ml[371,17273+27]..[443,21844+40])
                                                        Pexp_apply
                                                        expression (compile_gram.ml[371,17273+27]..[371,17273+43])
                                                          Pexp_ident "Listf.fold_lefti" (compile_gram.ml[371,17273+27]..[371,17273+43])
                                                        [
                                                          <label> ""
                                                            expression (compile_gram.ml[372,17317+30]..[434,21346+64])
                                                              Pexp_function
                                                              [
                                                                <case>
                                                                  pattern (compile_gram.ml[373,17356+32]..[373,17356+33])
                                                                    Ppat_var "i" (compile_gram.ml[373,17356+32]..[373,17356+33])
                                                                  expression (compile_gram.ml[374,17393+35]..[434,21346+63])
                                                                    Pexp_function
                                                                    [
                                                                      <case>
pattern (compile_gram.ml[375,17437+37]..[375,17437+45])
  Ppat_tuple
  [
    pattern (compile_gram.ml[375,17437+38]..[375,17437+40])
      Ppat_var "ty" (compile_gram.ml[375,17437+38]..[375,17437+40])
    pattern (compile_gram.ml[375,17437+41]..[375,17437+44])
      Ppat_var "txt" (compile_gram.ml[375,17437+41]..[375,17437+44])
  ]
expression (compile_gram.ml[376,17486+40]..[434,21346+62])
  Pexp_function
  [
    <case>
      pattern (compile_gram.ml[377,17535+42]..[377,17535+64])
        Ppat_constraint
        pattern (compile_gram.ml[377,17535+43]..[377,17535+44])
          Ppat_var "s" (compile_gram.ml[377,17535+43]..[377,17535+44])
        core_type (compile_gram.ml[377,17535+47]..[377,17535+63])
          Ptyp_constr "Gram_def.osymbol" (compile_gram.ml[377,17535+47]..[377,17535+63])
          []
      expression (compile_gram.ml[378,17603+45]..[434,21346+61])
        Pexp_match
        expression (compile_gram.ml[378,17603+51]..[379,17674+64])
          Pexp_tuple
          [
            expression (compile_gram.ml[378,17603+53]..[378,17603+68])
              Pexp_field
              expression (compile_gram.ml[378,17603+53]..[378,17603+54])
                Pexp_ident "s" (compile_gram.ml[378,17603+53]..[378,17603+54])
              "outer_pattern" (compile_gram.ml[378,17603+55]..[378,17603+68])
            expression (compile_gram.ml[379,17674+54]..[379,17674+62])
              Pexp_field
              expression (compile_gram.ml[379,17674+54]..[379,17674+55])
                Pexp_ident "s" (compile_gram.ml[379,17674+54]..[379,17674+55])
              "bounds" (compile_gram.ml[379,17674+56]..[379,17674+62])
          ]
        [
          <case>
            pattern (compile_gram.ml[381,17789+47]..[381,17789+65])
              Ppat_tuple
              [
                pattern (compile_gram.ml[381,17789+48]..[381,17789+62])
                  Ppat_construct "Some" (compile_gram.ml[381,17789+48]..[381,17789+52])
                  Some
                    pattern (compile_gram.ml[381,17789+48]..[381,17789+62])
                      Ppat_tuple
                      [
                        pattern (compile_gram.ml[381,17789+54]..[381,17789+58])
                          Ppat_var "xloc" (compile_gram.ml[381,17789+54]..[381,17789+58])
                        pattern (compile_gram.ml[381,17789+59]..[381,17789+61])
                          Ppat_var "id" (compile_gram.ml[381,17789+59]..[381,17789+61])
                      ]
                pattern (compile_gram.ml[381,17789+63]..[381,17789+64])
                  Ppat_any
              ]
            expression (compile_gram.ml[382,17858+49]..[398,18942+61])
              Pexp_let Nonrec
              [
                <def>
                  pattern (compile_gram.ml[382,17858+53]..[382,17858+54])
                    Ppat_var "t" (compile_gram.ml[382,17858+53]..[382,17858+54])
                  expression (compile_gram.ml[383,17915+51]..[383,17915+73])
                    Pexp_apply
                    expression (compile_gram.ml[383,17915+51]..[383,17915+60])
                      Pexp_ident "make_ctyp" (compile_gram.ml[383,17915+51]..[383,17915+60])
                    [
                      <label> ""
                        expression (compile_gram.ml[383,17915+61]..[383,17915+67])
                          Pexp_field
                          expression (compile_gram.ml[383,17915+61]..[383,17915+62])
                            Pexp_ident "s" (compile_gram.ml[383,17915+61]..[383,17915+62])
                          "styp" (compile_gram.ml[383,17915+63]..[383,17915+67])
                      <label> ""
                        expression (compile_gram.ml[383,17915+68]..[383,17915+73])
                          Pexp_ident "rtvar" (compile_gram.ml[383,17915+68]..[383,17915+73])
                    ]
              ]
              expression (compile_gram.ml[384,17992+49]..[398,18942+61])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (compile_gram.ml[384,17992+53]..[384,17992+54])
                      Ppat_var "p" (compile_gram.ml[384,17992+53]..[384,17992+54])
                    expression (compile_gram.ml[385,18049+51]..[386,18121+67])
                      Pexp_apply
                      expression (compile_gram.ml[386,18121+63]..[386,18121+65])
                        Pexp_ident "+:" (compile_gram.ml[386,18121+63]..[386,18121+65])
                      [
                        <label> ""
                          expression (compile_gram.ml[385,18049+51]..[386,18121+62])
                            Pexp_coerce
                            expression (compile_gram.ml[385,18049+52]..[385,18049+67])
                              Pexp_variant "Lid"
                              Some
                                expression (compile_gram.ml[385,18049+57]..[385,18049+67])
                                  Pexp_tuple
                                  [
                                    expression (compile_gram.ml[385,18049+58]..[385,18049+62])
                                      Pexp_ident "xloc" (compile_gram.ml[385,18049+58]..[385,18049+62])
                                    expression (compile_gram.ml[385,18049+64]..[385,18049+66])
                                      Pexp_ident "id" (compile_gram.ml[385,18049+64]..[385,18049+66])
                                  ]
                            None
                            core_type (compile_gram.ml[386,18121+53]..[386,18121+61])
                              Ptyp_constr "Astf.pat" (compile_gram.ml[386,18121+53]..[386,18121+61])
                              []
                        <label> ""
                          expression (compile_gram.ml[386,18121+66]..[386,18121+67])
                            Pexp_ident "t" (compile_gram.ml[386,18121+66]..[386,18121+67])
                      ]
                ]
                expression (compile_gram.ml[387,18192+49]..[398,18942+61])
                  Pexp_tuple
                  [
                    expression (compile_gram.ml[387,18192+50]..[390,18406+61])
                      Pexp_coerce
                      expression (compile_gram.ml[387,18192+51]..[389,18328+73])
                        Pexp_variant "Arrow"
                        Some
                          expression (compile_gram.ml[388,18250+53]..[389,18328+73])
                            Pexp_tuple
                            [
                              expression (compile_gram.ml[388,18250+54]..[388,18250+58])
                                Pexp_ident "_loc" (compile_gram.ml[388,18250+54]..[388,18250+58])
                              expression (compile_gram.ml[388,18250+60]..[388,18250+76])
                                Pexp_coerce
                                expression (compile_gram.ml[388,18250+61]..[388,18250+62])
                                  Pexp_ident "t" (compile_gram.ml[388,18250+61]..[388,18250+62])
                                None
                                core_type (compile_gram.ml[388,18250+66]..[388,18250+75])
                                  Ptyp_constr "Astf.ctyp" (compile_gram.ml[388,18250+66]..[388,18250+75])
                                  []
                              expression (compile_gram.ml[389,18328+55]..[389,18328+72])
                                Pexp_coerce
                                expression (compile_gram.ml[389,18328+56]..[389,18328+58])
                                  Pexp_ident "ty" (compile_gram.ml[389,18328+56]..[389,18328+58])
                                None
                                core_type (compile_gram.ml[389,18328+62]..[389,18328+71])
                                  Ptyp_constr "Astf.ctyp" (compile_gram.ml[389,18328+62]..[389,18328+71])
                                  []
                            ]
                      None
                      core_type (compile_gram.ml[390,18406+51]..[390,18406+60])
                        Ptyp_constr "Astf.ctyp" (compile_gram.ml[390,18406+51]..[390,18406+60])
                        []
                    expression (compile_gram.ml[391,18469+51]..[398,18942+60])
                      Pexp_coerce
                      expression (compile_gram.ml[391,18469+52]..[397,18864+73])
                        Pexp_variant "Fun"
                        Some
                          expression (compile_gram.ml[392,18526+54]..[397,18864+73])
                            Pexp_tuple
                            [
                              expression (compile_gram.ml[392,18526+55]..[392,18526+59])
                                Pexp_ident "_loc" (compile_gram.ml[392,18526+55]..[392,18526+59])
                              expression (compile_gram.ml[393,18587+57]..[397,18864+71])
                                Pexp_variant "Case"
                                Some
                                  expression (compile_gram.ml[394,18650+59]..[397,18864+71])
                                    Pexp_tuple
                                    [
                                      expression (compile_gram.ml[394,18650+60]..[394,18650+64])
                                        Pexp_ident "_loc" (compile_gram.ml[394,18650+60]..[394,18650+64])
                                      expression (compile_gram.ml[395,18716+61]..[395,18716+76])
                                        Pexp_coerce
                                        expression (compile_gram.ml[395,18716+62]..[395,18716+63])
                                          Pexp_ident "p" (compile_gram.ml[395,18716+62]..[395,18716+63])
                                        None
                                        core_type (compile_gram.ml[395,18716+67]..[395,18716+75])
                                          Ptyp_constr "Astf.pat" (compile_gram.ml[395,18716+67]..[395,18716+75])
                                          []
                                      expression (compile_gram.ml[396,18794+61]..[397,18864+70])
                                        Pexp_coerce
                                        expression (compile_gram.ml[396,18794+62]..[396,18794+65])
                                          Pexp_ident "txt" (compile_gram.ml[396,18794+62]..[396,18794+65])
                                        None
                                        core_type (compile_gram.ml[397,18864+61]..[397,18864+69])
                                          Ptyp_constr "Astf.exp" (compile_gram.ml[397,18864+61]..[397,18864+69])
                                          []
                                    ]
                            ]
                      None
                      core_type (compile_gram.ml[398,18942+51]..[398,18942+59])
                        Ptyp_constr "Astf.exp" (compile_gram.ml[398,18942+51]..[398,18942+59])
                        []
                  ]
          <case>
            pattern (compile_gram.ml[399,19004+47]..[399,19004+57])
              Ppat_tuple
              [
                pattern (compile_gram.ml[399,19004+48]..[399,19004+52])
                  Ppat_construct "None" (compile_gram.ml[399,19004+48]..[399,19004+52])
                  None
                pattern (compile_gram.ml[399,19004+54]..[399,19004+56])
                  Ppat_construct "[]" (compile_gram.ml[399,19004+54]..[399,19004+56])
                  None
              ]
            expression (compile_gram.ml[400,19065+49]..[413,19945+61])
              Pexp_let Nonrec
              [
                <def>
                  pattern (compile_gram.ml[400,19065+53]..[400,19065+54])
                    Ppat_var "t" (compile_gram.ml[400,19065+53]..[400,19065+54])
                  expression (compile_gram.ml[401,19122+51]..[401,19122+73])
                    Pexp_apply
                    expression (compile_gram.ml[401,19122+51]..[401,19122+60])
                      Pexp_ident "make_ctyp" (compile_gram.ml[401,19122+51]..[401,19122+60])
                    [
                      <label> ""
                        expression (compile_gram.ml[401,19122+61]..[401,19122+67])
                          Pexp_field
                          expression (compile_gram.ml[401,19122+61]..[401,19122+62])
                            Pexp_ident "s" (compile_gram.ml[401,19122+61]..[401,19122+62])
                          "styp" (compile_gram.ml[401,19122+63]..[401,19122+67])
                      <label> ""
                        expression (compile_gram.ml[401,19122+68]..[401,19122+73])
                          Pexp_ident "rtvar" (compile_gram.ml[401,19122+68]..[401,19122+73])
                    ]
              ]
              expression (compile_gram.ml[402,19199+49]..[413,19945+61])
                Pexp_tuple
                [
                  expression (compile_gram.ml[402,19199+50]..[405,19413+61])
                    Pexp_coerce
                    expression (compile_gram.ml[402,19199+51]..[404,19335+73])
                      Pexp_variant "Arrow"
                      Some
                        expression (compile_gram.ml[403,19257+53]..[404,19335+73])
                          Pexp_tuple
                          [
                            expression (compile_gram.ml[403,19257+54]..[403,19257+58])
                              Pexp_ident "_loc" (compile_gram.ml[403,19257+54]..[403,19257+58])
                            expression (compile_gram.ml[403,19257+60]..[403,19257+76])
                              Pexp_coerce
                              expression (compile_gram.ml[403,19257+61]..[403,19257+62])
                                Pexp_ident "t" (compile_gram.ml[403,19257+61]..[403,19257+62])
                              None
                              core_type (compile_gram.ml[403,19257+66]..[403,19257+75])
                                Ptyp_constr "Astf.ctyp" (compile_gram.ml[403,19257+66]..[403,19257+75])
                                []
                            expression (compile_gram.ml[404,19335+55]..[404,19335+72])
                              Pexp_coerce
                              expression (compile_gram.ml[404,19335+56]..[404,19335+58])
                                Pexp_ident "ty" (compile_gram.ml[404,19335+56]..[404,19335+58])
                              None
                              core_type (compile_gram.ml[404,19335+62]..[404,19335+71])
                                Ptyp_constr "Astf.ctyp" (compile_gram.ml[404,19335+62]..[404,19335+71])
                                []
                          ]
                    None
                    core_type (compile_gram.ml[405,19413+51]..[405,19413+60])
                      Ptyp_constr "Astf.ctyp" (compile_gram.ml[405,19413+51]..[405,19413+60])
                      []
                  expression (compile_gram.ml[406,19476+51]..[413,19945+60])
                    Pexp_coerce
                    expression (compile_gram.ml[406,19476+52]..[412,19867+73])
                      Pexp_variant "Fun"
                      Some
                        expression (compile_gram.ml[407,19533+54]..[412,19867+73])
                          Pexp_tuple
                          [
                            expression (compile_gram.ml[407,19533+55]..[407,19533+59])
                              Pexp_ident "_loc" (compile_gram.ml[407,19533+55]..[407,19533+59])
                            expression (compile_gram.ml[408,19594+57]..[412,19867+71])
                              Pexp_variant "Case"
                              Some
                                expression (compile_gram.ml[409,19657+59]..[412,19867+71])
                                  Pexp_tuple
                                  [
                                    expression (compile_gram.ml[409,19657+60]..[409,19657+64])
                                      Pexp_ident "_loc" (compile_gram.ml[409,19657+60]..[409,19657+64])
                                    expression (compile_gram.ml[410,19723+62]..[410,19723+71])
                                      Pexp_variant "Any"
                                      Some
                                        expression (compile_gram.ml[410,19723+67]..[410,19723+71])
                                          Pexp_ident "_loc" (compile_gram.ml[410,19723+67]..[410,19723+71])
                                    expression (compile_gram.ml[411,19797+61]..[412,19867+70])
                                      Pexp_coerce
                                      expression (compile_gram.ml[411,19797+62]..[411,19797+65])
                                        Pexp_ident "txt" (compile_gram.ml[411,19797+62]..[411,19797+65])
                                      None
                                      core_type (compile_gram.ml[412,19867+61]..[412,19867+69])
                                        Ptyp_constr "Astf.exp" (compile_gram.ml[412,19867+61]..[412,19867+69])
                                        []
                                  ]
                          ]
                    None
                    core_type (compile_gram.ml[413,19945+51]..[413,19945+59])
                      Ptyp_constr "Astf.exp" (compile_gram.ml[413,19945+51]..[413,19945+59])
                      []
                ]
          <case>
            pattern (compile_gram.ml[414,20007+47]..[414,20007+56])
              Ppat_tuple
              [
                pattern (compile_gram.ml[414,20007+48]..[414,20007+52])
                  Ppat_construct "None" (compile_gram.ml[414,20007+48]..[414,20007+52])
                  None
                pattern (compile_gram.ml[414,20007+54]..[414,20007+55])
                  Ppat_any
              ]
            expression (compile_gram.ml[415,20067+49]..[434,21346+61])
              Pexp_let Nonrec
              [
                <def>
                  pattern (compile_gram.ml[415,20067+53]..[415,20067+54])
                    Ppat_var "t" (compile_gram.ml[415,20067+53]..[415,20067+54])
                  expression (compile_gram.ml[416,20124+51]..[416,20124+73])
                    Pexp_apply
                    expression (compile_gram.ml[416,20124+51]..[416,20124+60])
                      Pexp_ident "make_ctyp" (compile_gram.ml[416,20124+51]..[416,20124+60])
                    [
                      <label> ""
                        expression (compile_gram.ml[416,20124+61]..[416,20124+67])
                          Pexp_field
                          expression (compile_gram.ml[416,20124+61]..[416,20124+62])
                            Pexp_ident "s" (compile_gram.ml[416,20124+61]..[416,20124+62])
                          "styp" (compile_gram.ml[416,20124+63]..[416,20124+67])
                      <label> ""
                        expression (compile_gram.ml[416,20124+68]..[416,20124+73])
                          Pexp_ident "rtvar" (compile_gram.ml[416,20124+68]..[416,20124+73])
                    ]
              ]
              expression (compile_gram.ml[417,20201+49]..[434,21346+61])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (compile_gram.ml[417,20201+53]..[417,20201+54])
                      Ppat_var "p" (compile_gram.ml[417,20201+53]..[417,20201+54])
                    expression (compile_gram.ml[418,20258+51]..[422,20525+67])
                      Pexp_apply
                      expression (compile_gram.ml[422,20525+63]..[422,20525+65])
                        Pexp_ident "+:" (compile_gram.ml[422,20525+63]..[422,20525+65])
                      [
                        <label> ""
                          expression (compile_gram.ml[418,20258+51]..[422,20525+62])
                            Pexp_coerce
                            expression (compile_gram.ml[418,20258+52]..[421,20442+78])
                              Pexp_variant "Lid"
                              Some
                                expression (compile_gram.ml[419,20315+54]..[421,20442+78])
                                  Pexp_tuple
                                  [
                                    expression (compile_gram.ml[419,20315+55]..[419,20315+59])
                                      Pexp_ident "_loc" (compile_gram.ml[419,20315+55]..[419,20315+59])
                                    expression (compile_gram.ml[420,20376+57]..[421,20442+76])
                                      Pexp_apply
                                      expression (compile_gram.ml[420,20376+64]..[420,20376+65])
                                        Pexp_ident "^" (compile_gram.ml[420,20376+64]..[420,20376+65])
                                      [
                                        <label> ""
                                          expression (compile_gram.ml[420,20376+57]..[420,20376+63])
                                            Pexp_ident "prefix" (compile_gram.ml[420,20376+57]..[420,20376+63])
                                        <label> ""
                                          expression (compile_gram.ml[421,20442+60]..[421,20442+75])
                                            Pexp_apply
                                            expression (compile_gram.ml[421,20442+60]..[421,20442+73])
                                              Pexp_ident "string_of_int" (compile_gram.ml[421,20442+60]..[421,20442+73])
                                            [
                                              <label> ""
                                                expression (compile_gram.ml[421,20442+74]..[421,20442+75])
                                                  Pexp_ident "i" (compile_gram.ml[421,20442+74]..[421,20442+75])
                                            ]
                                      ]
                                  ]
                            None
                            core_type (compile_gram.ml[422,20525+53]..[422,20525+61])
                              Ptyp_constr "Astf.pat" (compile_gram.ml[422,20525+53]..[422,20525+61])
                              []
                        <label> ""
                          expression (compile_gram.ml[422,20525+66]..[422,20525+67])
                            Pexp_ident "t" (compile_gram.ml[422,20525+66]..[422,20525+67])
                      ]
                ]
                expression (compile_gram.ml[423,20596+49]..[434,21346+61])
                  Pexp_tuple
                  [
                    expression (compile_gram.ml[423,20596+50]..[426,20810+61])
                      Pexp_coerce
                      expression (compile_gram.ml[423,20596+51]..[425,20732+73])
                        Pexp_variant "Arrow"
                        Some
                          expression (compile_gram.ml[424,20654+53]..[425,20732+73])
                            Pexp_tuple
                            [
                              expression (compile_gram.ml[424,20654+54]..[424,20654+58])
                                Pexp_ident "_loc" (compile_gram.ml[424,20654+54]..[424,20654+58])
                              expression (compile_gram.ml[424,20654+60]..[424,20654+76])
                                Pexp_coerce
                                expression (compile_gram.ml[424,20654+61]..[424,20654+62])
                                  Pexp_ident "t" (compile_gram.ml[424,20654+61]..[424,20654+62])
                                None
                                core_type (compile_gram.ml[424,20654+66]..[424,20654+75])
                                  Ptyp_constr "Astf.ctyp" (compile_gram.ml[424,20654+66]..[424,20654+75])
                                  []
                              expression (compile_gram.ml[425,20732+55]..[425,20732+72])
                                Pexp_coerce
                                expression (compile_gram.ml[425,20732+56]..[425,20732+58])
                                  Pexp_ident "ty" (compile_gram.ml[425,20732+56]..[425,20732+58])
                                None
                                core_type (compile_gram.ml[425,20732+62]..[425,20732+71])
                                  Ptyp_constr "Astf.ctyp" (compile_gram.ml[425,20732+62]..[425,20732+71])
                                  []
                            ]
                      None
                      core_type (compile_gram.ml[426,20810+51]..[426,20810+60])
                        Ptyp_constr "Astf.ctyp" (compile_gram.ml[426,20810+51]..[426,20810+60])
                        []
                    expression (compile_gram.ml[427,20873+51]..[434,21346+60])
                      Pexp_coerce
                      expression (compile_gram.ml[427,20873+52]..[433,21268+73])
                        Pexp_variant "Fun"
                        Some
                          expression (compile_gram.ml[428,20930+54]..[433,21268+73])
                            Pexp_tuple
                            [
                              expression (compile_gram.ml[428,20930+55]..[428,20930+59])
                                Pexp_ident "_loc" (compile_gram.ml[428,20930+55]..[428,20930+59])
                              expression (compile_gram.ml[429,20991+57]..[433,21268+71])
                                Pexp_variant "Case"
                                Some
                                  expression (compile_gram.ml[430,21054+59]..[433,21268+71])
                                    Pexp_tuple
                                    [
                                      expression (compile_gram.ml[430,21054+60]..[430,21054+64])
                                        Pexp_ident "_loc" (compile_gram.ml[430,21054+60]..[430,21054+64])
                                      expression (compile_gram.ml[431,21120+61]..[431,21120+76])
                                        Pexp_coerce
                                        expression (compile_gram.ml[431,21120+62]..[431,21120+63])
                                          Pexp_ident "p" (compile_gram.ml[431,21120+62]..[431,21120+63])
                                        None
                                        core_type (compile_gram.ml[431,21120+67]..[431,21120+75])
                                          Ptyp_constr "Astf.pat" (compile_gram.ml[431,21120+67]..[431,21120+75])
                                          []
                                      expression (compile_gram.ml[432,21198+61]..[433,21268+70])
                                        Pexp_coerce
                                        expression (compile_gram.ml[432,21198+62]..[432,21198+65])
                                          Pexp_ident "txt" (compile_gram.ml[432,21198+62]..[432,21198+65])
                                        None
                                        core_type (compile_gram.ml[433,21268+61]..[433,21268+69])
                                          Ptyp_constr "Astf.exp" (compile_gram.ml[433,21268+61]..[433,21268+69])
                                          []
                                    ]
                            ]
                      None
                      core_type (compile_gram.ml[434,21346+51]..[434,21346+59])
                        Ptyp_constr "Astf.exp" (compile_gram.ml[434,21346+51]..[434,21346+59])
                        []
                  ]
        ]
  ]
                                                                    ]
                                                              ]
                                                          <label> ""
                                                            expression (compile_gram.ml[435,21412+29]..[443,21844+33])
                                                              Pexp_tuple
                                                              [
                                                                expression (compile_gram.ml[435,21412+30]..[442,21765+77])
                                                                  Pexp_coerce
                                                                  expression (compile_gram.ml[435,21412+31]..[442,21765+63])
                                                                    Pexp_variant "Arrow"
                                                                    Some
                                                                      expression (compile_gram.ml[436,21450+33]..[442,21765+63])
Pexp_tuple
[
  expression (compile_gram.ml[436,21450+34]..[436,21450+38])
    Pexp_ident "_loc" (compile_gram.ml[436,21450+34]..[436,21450+38])
  expression (compile_gram.ml[437,21490+36]..[439,21599+59])
    Pexp_variant "Dot"
    Some
      expression (compile_gram.ml[438,21531+38]..[439,21599+59])
        Pexp_tuple
        [
          expression (compile_gram.ml[438,21531+39]..[438,21531+43])
            Pexp_ident "_loc" (compile_gram.ml[438,21531+39]..[438,21531+43])
          expression (compile_gram.ml[438,21531+46]..[438,21531+65])
            Pexp_variant "Uid"
            Some
              expression (compile_gram.ml[438,21531+51]..[438,21531+65])
                Pexp_tuple
                [
                  expression (compile_gram.ml[438,21531+52]..[438,21531+56])
                    Pexp_ident "_loc" (compile_gram.ml[438,21531+52]..[438,21531+56])
                  expression (compile_gram.ml[438,21531+58]..[438,21531+64])
                    Pexp_constant Const_string("Locf",None)
                ]
          expression (compile_gram.ml[439,21599+41]..[439,21599+57])
            Pexp_variant "Lid"
            Some
              expression (compile_gram.ml[439,21599+46]..[439,21599+57])
                Pexp_tuple
                [
                  expression (compile_gram.ml[439,21599+47]..[439,21599+51])
                    Pexp_ident "_loc" (compile_gram.ml[439,21599+47]..[439,21599+51])
                  expression (compile_gram.ml[439,21599+53]..[439,21599+56])
                    Pexp_constant Const_string("t",None)
                ]
        ]
  expression (compile_gram.ml[440,21661+36]..[442,21765+61])
    Pexp_variant "Quote"
    Some
      expression (compile_gram.ml[441,21704+38]..[442,21765+61])
        Pexp_tuple
        [
          expression (compile_gram.ml[441,21704+39]..[441,21704+43])
            Pexp_ident "_loc" (compile_gram.ml[441,21704+39]..[441,21704+43])
          expression (compile_gram.ml[441,21704+46]..[441,21704+58])
            Pexp_variant "Normal"
            Some
              expression (compile_gram.ml[441,21704+54]..[441,21704+58])
                Pexp_ident "_loc" (compile_gram.ml[441,21704+54]..[441,21704+58])
          expression (compile_gram.ml[442,21765+41]..[442,21765+59])
            Pexp_variant "Lid"
            Some
              expression (compile_gram.ml[442,21765+46]..[442,21765+59])
                Pexp_tuple
                [
                  expression (compile_gram.ml[442,21765+47]..[442,21765+51])
                    Pexp_ident "_loc" (compile_gram.ml[442,21765+47]..[442,21765+51])
                  expression (compile_gram.ml[442,21765+53]..[442,21765+58])
                    Pexp_ident "rtvar" (compile_gram.ml[442,21765+53]..[442,21765+58])
                ]
        ]
]
                                                                  None
                                                                  core_type (compile_gram.ml[442,21765+67]..[442,21765+76])
                                                                    Ptyp_constr "Astf.ctyp" (compile_gram.ml[442,21765+67]..[442,21765+76])
                                                                    []
                                                                expression (compile_gram.ml[443,21844+31]..[443,21844+32])
                                                                  Pexp_ident "e" (compile_gram.ml[443,21844+31]..[443,21844+32])
                                                              ]
                                                          <label> ""
                                                            expression (compile_gram.ml[443,21844+34]..[443,21844+40])
                                                              Pexp_field
                                                              expression (compile_gram.ml[443,21844+34]..[443,21844+35])
                                                                Pexp_ident "x" (compile_gram.ml[443,21844+34]..[443,21844+35])
                                                              "prod" (compile_gram.ml[443,21844+36]..[443,21844+40])
                                                        ]
                                                  ]
                                            ]
                                            expression (compile_gram.ml[444,21889+22]..[451,22223+33])
                                              Pexp_coerce
                                              expression (compile_gram.ml[444,21889+23]..[450,22142+76])
                                                Pexp_variant "App"
                                                Some
                                                  expression (compile_gram.ml[445,21917+25]..[450,22142+76])
                                                    Pexp_tuple
                                                    [
                                                      expression (compile_gram.ml[445,21917+26]..[445,21917+30])
                                                        Pexp_ident "_loc" (compile_gram.ml[445,21917+26]..[445,21917+30])
                                                      expression (compile_gram.ml[446,21949+28]..[448,22040+59])
                                                        Pexp_variant "Dot"
                                                        Some
                                                          expression (compile_gram.ml[447,21982+30]..[448,22040+59])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_gram.ml[447,21982+31]..[447,21982+35])
                                                                Pexp_ident "_loc" (compile_gram.ml[447,21982+31]..[447,21982+35])
                                                              expression (compile_gram.ml[447,21982+37]..[447,21982+56])
                                                                Pexp_coerce
                                                                expression (compile_gram.ml[447,21982+38]..[447,21982+43])
                                                                  Pexp_apply
                                                                  expression (compile_gram.ml[447,21982+38]..[447,21982+40])
                                                                    Pexp_ident "gm" (compile_gram.ml[447,21982+38]..[447,21982+40])
                                                                  [
                                                                    <label> ""
                                                                      expression (compile_gram.ml[447,21982+41]..[447,21982+43])
Pexp_construct "()" (compile_gram.ml[447,21982+41]..[447,21982+43])
None
                                                                  ]
                                                                None
                                                                core_type (compile_gram.ml[447,21982+47]..[447,21982+55])
                                                                  Ptyp_constr "Astf.vid" (compile_gram.ml[447,21982+47]..[447,21982+55])
                                                                  []
                                                              expression (compile_gram.ml[448,22040+33]..[448,22040+57])
                                                                Pexp_variant "Lid"
                                                                Some
                                                                  expression (compile_gram.ml[448,22040+38]..[448,22040+57])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (compile_gram.ml[448,22040+39]..[448,22040+43])
Pexp_ident "_loc" (compile_gram.ml[448,22040+39]..[448,22040+43])
                                                                      expression (compile_gram.ml[448,22040+45]..[448,22040+56])
Pexp_constant Const_string("mk_action",None)
                                                                    ]
                                                            ]
                                                      expression (compile_gram.ml[449,22102+28]..[450,22142+74])
                                                        Pexp_variant "Constraint"
                                                        Some
                                                          expression (compile_gram.ml[450,22142+30]..[450,22142+74])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_gram.ml[450,22142+31]..[450,22142+35])
                                                                Pexp_ident "_loc" (compile_gram.ml[450,22142+31]..[450,22142+35])
                                                              expression (compile_gram.ml[450,22142+37]..[450,22142+54])
                                                                Pexp_coerce
                                                                expression (compile_gram.ml[450,22142+38]..[450,22142+41])
                                                                  Pexp_ident "txt" (compile_gram.ml[450,22142+38]..[450,22142+41])
                                                                None
                                                                core_type (compile_gram.ml[450,22142+45]..[450,22142+53])
                                                                  Ptyp_constr "Astf.exp" (compile_gram.ml[450,22142+45]..[450,22142+53])
                                                                  []
                                                              expression (compile_gram.ml[450,22142+56]..[450,22142+73])
                                                                Pexp_coerce
                                                                expression (compile_gram.ml[450,22142+57]..[450,22142+59])
                                                                  Pexp_ident "ty" (compile_gram.ml[450,22142+57]..[450,22142+59])
                                                                None
                                                                core_type (compile_gram.ml[450,22142+63]..[450,22142+72])
                                                                  Ptyp_constr "Astf.ctyp" (compile_gram.ml[450,22142+63]..[450,22142+72])
                                                                  []
                                                            ]
                                                    ]
                                              None
                                              core_type (compile_gram.ml[451,22223+24]..[451,22223+32])
                                                Ptyp_constr "Astf.exp" (compile_gram.ml[451,22223+24]..[451,22223+32])
                                                []
                                    ]
                            core_type (compile_gram.ml[451,22223+37]..[451,22223+40])
                              Ptyp_constr "exp" (compile_gram.ml[451,22223+37]..[451,22223+40])
                              []
                      ]
                ]
          ]
    ]
  structure_item (compile_gram.ml[452,22267+0]..[527,25181+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[452,22267+4]..[452,22267+32])
          Ppat_var "make_single_extend_statement" (compile_gram.ml[452,22267+4]..[452,22267+32])
        expression (compile_gram.ml[453,22302+2]..[527,25181+51])
          Pexp_function
          [
            <case>
              pattern (compile_gram.ml[454,22313+4]..[454,22313+24])
                Ppat_constraint
                pattern (compile_gram.ml[454,22313+5]..[454,22313+6])
                  Ppat_var "e" (compile_gram.ml[454,22313+5]..[454,22313+6])
                core_type (compile_gram.ml[454,22313+9]..[454,22313+23])
                  Ptyp_constr "Gram_def.entry" (compile_gram.ml[454,22313+9]..[454,22313+23])
                  []
              expression (compile_gram.ml[455,22341+6]..[527,25181+51])
                Pexp_constraint
                expression (compile_gram.ml[455,22341+7]..[527,25181+44])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (compile_gram.ml[455,22341+11]..[455,22341+15])
                        Ppat_var "_loc" (compile_gram.ml[455,22341+11]..[455,22341+15])
                      expression (compile_gram.ml[455,22341+18]..[455,22341+30])
                        Pexp_field
                        expression (compile_gram.ml[455,22341+19]..[455,22341+25])
                          Pexp_field
                          expression (compile_gram.ml[455,22341+19]..[455,22341+20])
                            Pexp_ident "e" (compile_gram.ml[455,22341+19]..[455,22341+20])
                          "name" (compile_gram.ml[455,22341+21]..[455,22341+25])
                        "loc" (compile_gram.ml[455,22341+27]..[455,22341+30])
                  ]
                  expression (compile_gram.ml[456,22375+7]..[527,25181+44])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (compile_gram.ml[456,22375+11]..[456,22375+15])
                          Ppat_var "gmid" (compile_gram.ml[456,22375+11]..[456,22375+15])
                        expression (compile_gram.ml[456,22375+18]..[456,22375+41])
                          Pexp_coerce
                          expression (compile_gram.ml[456,22375+19]..[456,22375+24])
                            Pexp_apply
                            expression (compile_gram.ml[456,22375+19]..[456,22375+21])
                              Pexp_ident "gm" (compile_gram.ml[456,22375+19]..[456,22375+21])
                            [
                              <label> ""
                                expression (compile_gram.ml[456,22375+22]..[456,22375+24])
                                  Pexp_construct "()" (compile_gram.ml[456,22375+22]..[456,22375+24])
                                  None
                            ]
                          Some
                            core_type (compile_gram.ml[456,22375+27]..[456,22375+30])
                              Ptyp_constr "vid" (compile_gram.ml[456,22375+27]..[456,22375+30])
                              []
                          core_type (compile_gram.ml[456,22375+35]..[456,22375+40])
                            Ptyp_constr "ident" (compile_gram.ml[456,22375+35]..[456,22375+40])
                            []
                    ]
                    expression (compile_gram.ml[457,22420+7]..[527,25181+44])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (compile_gram.ml[457,22420+11]..[457,22420+14])
                            Ppat_var "ent" (compile_gram.ml[457,22420+11]..[457,22420+14])
                          expression (compile_gram.ml[458,22437+9]..[465,22737+18])
                            Pexp_coerce
                            expression (compile_gram.ml[458,22437+10]..[464,22652+80])
                              Pexp_variant "Constraint"
                              Some
                                expression (compile_gram.ml[459,22459+12]..[464,22652+80])
                                  Pexp_tuple
                                  [
                                    expression (compile_gram.ml[459,22459+13]..[459,22459+17])
                                      Pexp_ident "_loc" (compile_gram.ml[459,22459+13]..[459,22459+17])
                                    expression (compile_gram.ml[459,22459+19]..[459,22459+44])
                                      Pexp_coerce
                                      expression (compile_gram.ml[459,22459+20]..[459,22459+31])
                                        Pexp_field
                                        expression (compile_gram.ml[459,22459+21]..[459,22459+27])
                                          Pexp_field
                                          expression (compile_gram.ml[459,22459+21]..[459,22459+22])
                                            Pexp_ident "e" (compile_gram.ml[459,22459+21]..[459,22459+22])
                                          "name" (compile_gram.ml[459,22459+23]..[459,22459+27])
                                        "id" (compile_gram.ml[459,22459+29]..[459,22459+31])
                                      None
                                      core_type (compile_gram.ml[459,22459+35]..[459,22459+43])
                                        Ptyp_constr "Astf.exp" (compile_gram.ml[459,22459+35]..[459,22459+43])
                                        []
                                    expression (compile_gram.ml[460,22505+15]..[464,22652+78])
                                      Pexp_variant "App"
                                      Some
                                        expression (compile_gram.ml[461,22525+17]..[464,22652+78])
                                          Pexp_tuple
                                          [
                                            expression (compile_gram.ml[461,22525+18]..[461,22525+22])
                                              Pexp_ident "_loc" (compile_gram.ml[461,22525+18]..[461,22525+22])
                                            expression (compile_gram.ml[462,22549+20]..[462,22549+73])
                                              Pexp_variant "Dot"
                                              Some
                                                expression (compile_gram.ml[462,22549+25]..[462,22549+73])
                                                  Pexp_tuple
                                                  [
                                                    expression (compile_gram.ml[462,22549+26]..[462,22549+30])
                                                      Pexp_ident "_loc" (compile_gram.ml[462,22549+26]..[462,22549+30])
                                                    expression (compile_gram.ml[462,22549+32]..[462,22549+52])
                                                      Pexp_coerce
                                                      expression (compile_gram.ml[462,22549+33]..[462,22549+37])
                                                        Pexp_ident "gmid" (compile_gram.ml[462,22549+33]..[462,22549+37])
                                                      None
                                                      core_type (compile_gram.ml[462,22549+41]..[462,22549+51])
                                                        Ptyp_constr "Astf.ident" (compile_gram.ml[462,22549+41]..[462,22549+51])
                                                        []
                                                    expression (compile_gram.ml[462,22549+55]..[462,22549+71])
                                                      Pexp_variant "Lid"
                                                      Some
                                                        expression (compile_gram.ml[462,22549+60]..[462,22549+71])
                                                          Pexp_tuple
                                                          [
                                                            expression (compile_gram.ml[462,22549+61]..[462,22549+65])
                                                              Pexp_ident "_loc" (compile_gram.ml[462,22549+61]..[462,22549+65])
                                                            expression (compile_gram.ml[462,22549+67]..[462,22549+70])
                                                              Pexp_constant Const_string("t",None)
                                                          ]
                                                  ]
                                            expression (compile_gram.ml[463,22625+20]..[464,22652+76])
                                              Pexp_variant "Quote"
                                              Some
                                                expression (compile_gram.ml[464,22652+22]..[464,22652+76])
                                                  Pexp_tuple
                                                  [
                                                    expression (compile_gram.ml[464,22652+23]..[464,22652+27])
                                                      Pexp_ident "_loc" (compile_gram.ml[464,22652+23]..[464,22652+27])
                                                    expression (compile_gram.ml[464,22652+30]..[464,22652+42])
                                                      Pexp_variant "Normal"
                                                      Some
                                                        expression (compile_gram.ml[464,22652+38]..[464,22652+42])
                                                          Pexp_ident "_loc" (compile_gram.ml[464,22652+38]..[464,22652+42])
                                                    expression (compile_gram.ml[464,22652+46]..[464,22652+74])
                                                      Pexp_variant "Lid"
                                                      Some
                                                        expression (compile_gram.ml[464,22652+51]..[464,22652+74])
                                                          Pexp_tuple
                                                          [
                                                            expression (compile_gram.ml[464,22652+52]..[464,22652+56])
                                                              Pexp_ident "_loc" (compile_gram.ml[464,22652+52]..[464,22652+56])
                                                            expression (compile_gram.ml[464,22652+59]..[464,22652+72])
                                                              Pexp_field
                                                              expression (compile_gram.ml[464,22652+60]..[464,22652+66])
                                                                Pexp_field
                                                                expression (compile_gram.ml[464,22652+60]..[464,22652+61])
                                                                  Pexp_ident "e" (compile_gram.ml[464,22652+60]..[464,22652+61])
                                                                "name" (compile_gram.ml[464,22652+62]..[464,22652+66])
                                                              "tvar" (compile_gram.ml[464,22652+68]..[464,22652+72])
                                                          ]
                                                  ]
                                          ]
                                  ]
                            None
                            core_type (compile_gram.ml[465,22737+9]..[465,22737+17])
                              Ptyp_constr "Astf.exp" (compile_gram.ml[465,22737+9]..[465,22737+17])
                              []
                      ]
                      expression (compile_gram.ml[466,22759+7]..[527,25181+44])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (compile_gram.ml[466,22759+11]..[466,22759+14])
                              Ppat_var "pos" (compile_gram.ml[466,22759+11]..[466,22759+14])
                            expression (compile_gram.ml[467,22776+9]..[471,22920+53])
                              Pexp_match
                              expression (compile_gram.ml[467,22776+15]..[467,22776+20])
                                Pexp_field
                                expression (compile_gram.ml[467,22776+15]..[467,22776+16])
                                  Pexp_ident "e" (compile_gram.ml[467,22776+15]..[467,22776+16])
                                "pos" (compile_gram.ml[467,22776+17]..[467,22776+20])
                              [
                                <case>
                                  pattern (compile_gram.ml[468,22802+11]..[468,22802+19])
                                    Ppat_construct "Some" (compile_gram.ml[468,22802+11]..[468,22802+15])
                                    Some
                                      pattern (compile_gram.ml[468,22802+16]..[468,22802+19])
                                        Ppat_var "pos" (compile_gram.ml[468,22802+16]..[468,22802+19])
                                  expression (compile_gram.ml[469,22825+13]..[470,22897+22])
                                    Pexp_coerce
                                    expression (compile_gram.ml[469,22825+14]..[469,22825+67])
                                      Pexp_variant "App"
                                      Some
                                        expression (compile_gram.ml[469,22825+19]..[469,22825+67])
                                          Pexp_tuple
                                          [
                                            expression (compile_gram.ml[469,22825+20]..[469,22825+24])
                                              Pexp_ident "_loc" (compile_gram.ml[469,22825+20]..[469,22825+24])
                                            expression (compile_gram.ml[469,22825+27]..[469,22825+46])
                                              Pexp_variant "Uid"
                                              Some
                                                expression (compile_gram.ml[469,22825+32]..[469,22825+46])
                                                  Pexp_tuple
                                                  [
                                                    expression (compile_gram.ml[469,22825+33]..[469,22825+37])
                                                      Pexp_ident "_loc" (compile_gram.ml[469,22825+33]..[469,22825+37])
                                                    expression (compile_gram.ml[469,22825+39]..[469,22825+45])
                                                      Pexp_constant Const_string("Some",None)
                                                  ]
                                            expression (compile_gram.ml[469,22825+49]..[469,22825+66])
                                              Pexp_coerce
                                              expression (compile_gram.ml[469,22825+50]..[469,22825+53])
                                                Pexp_ident "pos" (compile_gram.ml[469,22825+50]..[469,22825+53])
                                              None
                                              core_type (compile_gram.ml[469,22825+57]..[469,22825+65])
                                                Ptyp_constr "Astf.exp" (compile_gram.ml[469,22825+57]..[469,22825+65])
                                                []
                                          ]
                                    None
                                    core_type (compile_gram.ml[470,22897+13]..[470,22897+21])
                                      Ptyp_constr "Astf.exp" (compile_gram.ml[470,22897+13]..[470,22897+21])
                                      []
                                <case>
                                  pattern (compile_gram.ml[471,22920+11]..[471,22920+15])
                                    Ppat_construct "None" (compile_gram.ml[471,22920+11]..[471,22920+15])
                                    None
                                  expression (compile_gram.ml[471,22920+20]..[471,22920+53])
                                    Pexp_coerce
                                    expression (compile_gram.ml[471,22920+21]..[471,22920+40])
                                      Pexp_variant "Uid"
                                      Some
                                        expression (compile_gram.ml[471,22920+26]..[471,22920+40])
                                          Pexp_tuple
                                          [
                                            expression (compile_gram.ml[471,22920+27]..[471,22920+31])
                                              Pexp_ident "_loc" (compile_gram.ml[471,22920+27]..[471,22920+31])
                                            expression (compile_gram.ml[471,22920+33]..[471,22920+39])
                                              Pexp_constant Const_string("None",None)
                                          ]
                                    None
                                    core_type (compile_gram.ml[471,22920+44]..[471,22920+52])
                                      Ptyp_constr "Astf.exp" (compile_gram.ml[471,22920+44]..[471,22920+52])
                                      []
                              ]
                        ]
                        expression (compile_gram.ml[472,22977+7]..[527,25181+44])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (compile_gram.ml[472,22977+11]..[472,22977+16])
                                Ppat_var "apply" (compile_gram.ml[472,22977+11]..[472,22977+16])
                              expression (compile_gram.ml[473,22996+9]..[509,24525+62])
                                Pexp_function
                                [
                                  <case>
                                    pattern (compile_gram.ml[474,23014+11]..[474,23014+35])
                                      Ppat_constraint
                                      pattern (compile_gram.ml[474,23014+12]..[474,23014+17])
                                        Ppat_var "level" (compile_gram.ml[474,23014+12]..[474,23014+17])
                                      core_type (compile_gram.ml[474,23014+20]..[474,23014+34])
                                        Ptyp_constr "Gram_def.level" (compile_gram.ml[474,23014+20]..[474,23014+34])
                                        []
                                    expression (compile_gram.ml[475,23053+13]..[509,24525+62])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (compile_gram.ml[475,23053+17]..[475,23053+20])
                                            Ppat_var "ass" (compile_gram.ml[475,23053+17]..[475,23053+20])
                                          expression (compile_gram.ml[476,23076+15]..[478,23147+58])
                                            Pexp_match
                                            expression (compile_gram.ml[476,23076+21]..[476,23076+32])
                                              Pexp_field
                                              expression (compile_gram.ml[476,23076+21]..[476,23076+26])
                                                Pexp_ident "level" (compile_gram.ml[476,23076+21]..[476,23076+26])
                                              "assoc" (compile_gram.ml[476,23076+27]..[476,23076+32])
                                            [
                                              <case>
                                                pattern (compile_gram.ml[477,23114+17]..[477,23114+25])
                                                  Ppat_construct "Some" (compile_gram.ml[477,23114+17]..[477,23114+21])
                                                  Some
                                                    pattern (compile_gram.ml[477,23114+22]..[477,23114+25])
                                                      Ppat_var "ass" (compile_gram.ml[477,23114+22]..[477,23114+25])
                                                expression (compile_gram.ml[477,23114+29]..[477,23114+32])
                                                  Pexp_ident "ass" (compile_gram.ml[477,23114+29]..[477,23114+32])
                                              <case>
                                                pattern (compile_gram.ml[478,23147+17]..[478,23147+21])
                                                  Ppat_construct "None" (compile_gram.ml[478,23147+17]..[478,23147+21])
                                                  None
                                                expression (compile_gram.ml[478,23147+26]..[478,23147+58])
                                                  Pexp_coerce
                                                  expression (compile_gram.ml[478,23147+27]..[478,23147+45])
                                                    Pexp_variant "Bool"
                                                    Some
                                                      expression (compile_gram.ml[478,23147+33]..[478,23147+45])
                                                        Pexp_tuple
                                                        [
                                                          expression (compile_gram.ml[478,23147+34]..[478,23147+38])
                                                            Pexp_ident "_loc" (compile_gram.ml[478,23147+34]..[478,23147+38])
                                                          expression (compile_gram.ml[478,23147+40]..[478,23147+44])
                                                            Pexp_construct "true" (compile_gram.ml[478,23147+40]..[478,23147+44])
                                                            None
                                                        ]
                                                  None
                                                  core_type (compile_gram.ml[478,23147+49]..[478,23147+57])
                                                    Ptyp_constr "Astf.exp" (compile_gram.ml[478,23147+49]..[478,23147+57])
                                                    []
                                            ]
                                      ]
                                      expression (compile_gram.ml[479,23209+13]..[509,24525+62])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (compile_gram.ml[479,23209+17]..[479,23209+19])
                                              Ppat_var "rl" (compile_gram.ml[479,23209+17]..[479,23209+19])
                                            expression (compile_gram.ml[480,23231+15]..[488,23556+79])
                                              Pexp_apply
                                              expression (compile_gram.ml[480,23231+27]..[480,23231+29])
                                                Pexp_ident "|>" (compile_gram.ml[480,23231+27]..[480,23231+29])
                                              [
                                                <label> ""
                                                  expression (compile_gram.ml[480,23231+15]..[480,23231+26])
                                                    Pexp_field
                                                    expression (compile_gram.ml[480,23231+15]..[480,23231+20])
                                                      Pexp_ident "level" (compile_gram.ml[480,23231+15]..[480,23231+20])
                                                    "rules" (compile_gram.ml[480,23231+21]..[480,23231+26])
                                                <label> ""
                                                  expression (compile_gram.ml[481,23261+18]..[488,23556+78])
                                                    Pexp_apply
                                                    expression (compile_gram.ml[481,23261+18]..[481,23261+26])
                                                      Pexp_ident "List.map" (compile_gram.ml[481,23261+18]..[481,23261+26])
                                                    [
                                                      <label> ""
                                                        expression (compile_gram.ml[482,23288+21]..[488,23556+77])
                                                          Pexp_function
                                                          [
                                                            <case>
                                                              pattern (compile_gram.ml[483,23318+23]..[483,23318+42])
                                                                Ppat_constraint
                                                                pattern (compile_gram.ml[483,23318+24]..[483,23318+25])
                                                                  Ppat_var "r" (compile_gram.ml[483,23318+24]..[483,23318+25])
                                                                core_type (compile_gram.ml[483,23318+28]..[483,23318+41])
                                                                  Ptyp_constr "Gram_def.rule" (compile_gram.ml[483,23318+28]..[483,23318+41])
                                                                  []
                                                              expression (compile_gram.ml[484,23364+25]..[488,23556+77])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (compile_gram.ml[484,23364+29]..[484,23364+31])
                                                                      Ppat_var "sl" (compile_gram.ml[484,23364+29]..[484,23364+31])
                                                                    expression (compile_gram.ml[485,23398+27]..[487,23474+78])
                                                                      Pexp_apply
                                                                      expression (compile_gram.ml[485,23398+34]..[485,23398+36])
Pexp_ident "|>" (compile_gram.ml[485,23398+34]..[485,23398+36])
                                                                      [
<label> ""
  expression (compile_gram.ml[485,23398+27]..[485,23398+33])
    Pexp_field
    expression (compile_gram.ml[485,23398+27]..[485,23398+28])
      Pexp_ident "r" (compile_gram.ml[485,23398+27]..[485,23398+28])
    "prod" (compile_gram.ml[485,23398+29]..[485,23398+33])
<label> ""
  expression (compile_gram.ml[486,23435+30]..[487,23474+77])
    Pexp_apply
    expression (compile_gram.ml[486,23435+30]..[486,23435+38])
      Pexp_ident "List.map" (compile_gram.ml[486,23435+30]..[486,23435+38])
    [
      <label> ""
        expression (compile_gram.ml[487,23474+33]..[487,23474+76])
          Pexp_function
          [
            <case>
              pattern (compile_gram.ml[487,23474+44]..[487,23474+66])
                Ppat_constraint
                pattern (compile_gram.ml[487,23474+45]..[487,23474+46])
                  Ppat_var "s" (compile_gram.ml[487,23474+45]..[487,23474+46])
                core_type (compile_gram.ml[487,23474+49]..[487,23474+65])
                  Ptyp_constr "Gram_def.osymbol" (compile_gram.ml[487,23474+49]..[487,23474+65])
                  []
              expression (compile_gram.ml[487,23474+70]..[487,23474+76])
                Pexp_field
                expression (compile_gram.ml[487,23474+70]..[487,23474+71])
                  Pexp_ident "s" (compile_gram.ml[487,23474+70]..[487,23474+71])
                "text" (compile_gram.ml[487,23474+72]..[487,23474+76])
          ]
    ]
                                                                      ]
                                                                ]
                                                                expression (compile_gram.ml[488,23556+25]..[488,23556+77])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (compile_gram.ml[488,23556+26]..[488,23556+28])
                                                                      Pexp_ident "sl" (compile_gram.ml[488,23556+26]..[488,23556+28])
                                                                    expression (compile_gram.ml[488,23556+31]..[488,23556+63])
                                                                      Pexp_apply
                                                                      expression (compile_gram.ml[488,23556+31]..[488,23556+42])
Pexp_ident "make_action" (compile_gram.ml[488,23556+31]..[488,23556+42])
                                                                      [
<label> ""
  expression (compile_gram.ml[488,23556+43]..[488,23556+47])
    Pexp_ident "_loc" (compile_gram.ml[488,23556+43]..[488,23556+47])
<label> ""
  expression (compile_gram.ml[488,23556+48]..[488,23556+49])
    Pexp_ident "r" (compile_gram.ml[488,23556+48]..[488,23556+49])
<label> ""
  expression (compile_gram.ml[488,23556+50]..[488,23556+63])
    Pexp_field
    expression (compile_gram.ml[488,23556+51]..[488,23556+57])
      Pexp_field
      expression (compile_gram.ml[488,23556+51]..[488,23556+52])
        Pexp_ident "e" (compile_gram.ml[488,23556+51]..[488,23556+52])
      "name" (compile_gram.ml[488,23556+53]..[488,23556+57])
    "tvar" (compile_gram.ml[488,23556+59]..[488,23556+63])
                                                                      ]
                                                                    expression (compile_gram.ml[488,23556+67]..[488,23556+75])
                                                                      Pexp_field
                                                                      expression (compile_gram.ml[488,23556+67]..[488,23556+68])
Pexp_ident "r" (compile_gram.ml[488,23556+67]..[488,23556+68])
                                                                      "action" (compile_gram.ml[488,23556+69]..[488,23556+75])
                                                                  ]
                                                          ]
                                                    ]
                                              ]
                                        ]
                                        expression (compile_gram.ml[489,23639+13]..[509,24525+62])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (compile_gram.ml[489,23639+17]..[489,23639+21])
                                                Ppat_var "prod" (compile_gram.ml[489,23639+17]..[489,23639+21])
                                              expression (compile_gram.ml[489,23639+24]..[489,23639+55])
                                                Pexp_apply
                                                expression (compile_gram.ml[489,23639+24]..[489,23639+38])
                                                  Pexp_ident "make_exp_rules" (compile_gram.ml[489,23639+24]..[489,23639+38])
                                                [
                                                  <label> ""
                                                    expression (compile_gram.ml[489,23639+39]..[489,23639+41])
                                                      Pexp_ident "rl" (compile_gram.ml[489,23639+39]..[489,23639+41])
                                                  <label> ""
                                                    expression (compile_gram.ml[489,23639+42]..[489,23639+55])
                                                      Pexp_field
                                                      expression (compile_gram.ml[489,23639+43]..[489,23639+49])
                                                        Pexp_field
                                                        expression (compile_gram.ml[489,23639+43]..[489,23639+44])
                                                          Pexp_ident "e" (compile_gram.ml[489,23639+43]..[489,23639+44])
                                                        "name" (compile_gram.ml[489,23639+45]..[489,23639+49])
                                                      "tvar" (compile_gram.ml[489,23639+51]..[489,23639+55])
                                                ]
                                          ]
                                          expression (compile_gram.ml[490,23698+13]..[509,24525+62])
                                            Pexp_coerce
                                            expression (compile_gram.ml[490,23698+14]..[509,24525+49])
                                              Pexp_variant "Constraint"
                                              Some
                                                expression (compile_gram.ml[491,23724+16]..[509,24525+49])
                                                  Pexp_tuple
                                                  [
                                                    expression (compile_gram.ml[491,23724+17]..[491,23724+21])
                                                      Pexp_ident "_loc" (compile_gram.ml[491,23724+17]..[491,23724+21])
                                                    expression (compile_gram.ml[492,23747+19]..[506,24376+63])
                                                      Pexp_variant "Record"
                                                      Some
                                                        expression (compile_gram.ml[493,23774+21]..[506,24376+63])
                                                          Pexp_tuple
                                                          [
                                                            expression (compile_gram.ml[493,23774+22]..[493,23774+26])
                                                              Pexp_ident "_loc" (compile_gram.ml[493,23774+22]..[493,23774+26])
                                                            expression (compile_gram.ml[494,23802+24]..[506,24376+61])
                                                              Pexp_variant "Sem"
                                                              Some
                                                                expression (compile_gram.ml[495,23831+26]..[506,24376+61])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (compile_gram.ml[495,23831+27]..[495,23831+31])
                                                                      Pexp_ident "_loc" (compile_gram.ml[495,23831+27]..[495,23831+31])
                                                                    expression (compile_gram.ml[496,23864+29]..[498,23964+51])
                                                                      Pexp_variant "RecBind"
                                                                      Some
expression (compile_gram.ml[497,23902+31]..[498,23964+51])
  Pexp_tuple
  [
    expression (compile_gram.ml[497,23902+32]..[497,23902+36])
      Pexp_ident "_loc" (compile_gram.ml[497,23902+32]..[497,23902+36])
    expression (compile_gram.ml[497,23902+39]..[497,23902+59])
      Pexp_variant "Lid"
      Some
        expression (compile_gram.ml[497,23902+44]..[497,23902+59])
          Pexp_tuple
          [
            expression (compile_gram.ml[497,23902+45]..[497,23902+49])
              Pexp_ident "_loc" (compile_gram.ml[497,23902+45]..[497,23902+49])
            expression (compile_gram.ml[497,23902+51]..[497,23902+58])
              Pexp_constant Const_string("label",None)
          ]
    expression (compile_gram.ml[498,23964+33]..[498,23964+50])
      Pexp_coerce
      expression (compile_gram.ml[498,23964+34]..[498,23964+37])
        Pexp_ident "pos" (compile_gram.ml[498,23964+34]..[498,23964+37])
      None
      core_type (compile_gram.ml[498,23964+41]..[498,23964+49])
        Ptyp_constr "Astf.exp" (compile_gram.ml[498,23964+41]..[498,23964+49])
        []
  ]
                                                                    expression (compile_gram.ml[499,24018+29]..[506,24376+59])
                                                                      Pexp_variant "Sem"
                                                                      Some
expression (compile_gram.ml[500,24052+31]..[506,24376+59])
  Pexp_tuple
  [
    expression (compile_gram.ml[500,24052+32]..[500,24052+36])
      Pexp_ident "_loc" (compile_gram.ml[500,24052+32]..[500,24052+36])
    expression (compile_gram.ml[501,24090+34]..[503,24201+56])
      Pexp_variant "RecBind"
      Some
        expression (compile_gram.ml[502,24133+36]..[503,24201+56])
          Pexp_tuple
          [
            expression (compile_gram.ml[502,24133+37]..[502,24133+41])
              Pexp_ident "_loc" (compile_gram.ml[502,24133+37]..[502,24133+41])
            expression (compile_gram.ml[502,24133+44]..[502,24133+65])
              Pexp_variant "Lid"
              Some
                expression (compile_gram.ml[502,24133+49]..[502,24133+65])
                  Pexp_tuple
                  [
                    expression (compile_gram.ml[502,24133+50]..[502,24133+54])
                      Pexp_ident "_loc" (compile_gram.ml[502,24133+50]..[502,24133+54])
                    expression (compile_gram.ml[502,24133+56]..[502,24133+64])
                      Pexp_constant Const_string("lassoc",None)
                  ]
            expression (compile_gram.ml[503,24201+38]..[503,24201+55])
              Pexp_coerce
              expression (compile_gram.ml[503,24201+39]..[503,24201+42])
                Pexp_ident "ass" (compile_gram.ml[503,24201+39]..[503,24201+42])
              None
              core_type (compile_gram.ml[503,24201+46]..[503,24201+54])
                Ptyp_constr "Astf.exp" (compile_gram.ml[503,24201+46]..[503,24201+54])
                []
          ]
    expression (compile_gram.ml[504,24260+34]..[506,24376+57])
      Pexp_variant "RecBind"
      Some
        expression (compile_gram.ml[505,24303+36]..[506,24376+57])
          Pexp_tuple
          [
            expression (compile_gram.ml[505,24303+37]..[505,24303+41])
              Pexp_ident "_loc" (compile_gram.ml[505,24303+37]..[505,24303+41])
            expression (compile_gram.ml[505,24303+44]..[505,24303+70])
              Pexp_variant "Lid"
              Some
                expression (compile_gram.ml[505,24303+49]..[505,24303+70])
                  Pexp_tuple
                  [
                    expression (compile_gram.ml[505,24303+50]..[505,24303+54])
                      Pexp_ident "_loc" (compile_gram.ml[505,24303+50]..[505,24303+54])
                    expression (compile_gram.ml[505,24303+56]..[505,24303+69])
                      Pexp_constant Const_string("productions",None)
                  ]
            expression (compile_gram.ml[506,24376+38]..[506,24376+56])
              Pexp_coerce
              expression (compile_gram.ml[506,24376+39]..[506,24376+43])
                Pexp_ident "prod" (compile_gram.ml[506,24376+39]..[506,24376+43])
              None
              core_type (compile_gram.ml[506,24376+47]..[506,24376+55])
                Ptyp_constr "Astf.exp" (compile_gram.ml[506,24376+47]..[506,24376+55])
                []
          ]
  ]
                                                                  ]
                                                          ]
                                                    expression (compile_gram.ml[507,24442+19]..[509,24525+47])
                                                      Pexp_variant "Dot"
                                                      Some
                                                        expression (compile_gram.ml[508,24466+21]..[509,24525+47])
                                                          Pexp_tuple
                                                          [
                                                            expression (compile_gram.ml[508,24466+22]..[508,24466+26])
                                                              Pexp_ident "_loc" (compile_gram.ml[508,24466+22]..[508,24466+26])
                                                            expression (compile_gram.ml[508,24466+28]..[508,24466+57])
                                                              Pexp_coerce
                                                              expression (compile_gram.ml[508,24466+29]..[508,24466+42])
                                                                Pexp_constraint
                                                                expression (compile_gram.ml[508,24466+30]..[508,24466+35])
                                                                  Pexp_apply
                                                                  expression (compile_gram.ml[508,24466+30]..[508,24466+32])
                                                                    Pexp_ident "gm" (compile_gram.ml[508,24466+30]..[508,24466+32])
                                                                  [
                                                                    <label> ""
                                                                      expression (compile_gram.ml[508,24466+33]..[508,24466+35])
Pexp_construct "()" (compile_gram.ml[508,24466+33]..[508,24466+35])
None
                                                                  ]
                                                                core_type (compile_gram.ml[508,24466+38]..[508,24466+41])
                                                                  Ptyp_constr "vid" (compile_gram.ml[508,24466+38]..[508,24466+41])
                                                                  []
                                                              None
                                                              core_type (compile_gram.ml[508,24466+46]..[508,24466+56])
                                                                Ptyp_constr "Astf.ident" (compile_gram.ml[508,24466+46]..[508,24466+56])
                                                                []
                                                            expression (compile_gram.ml[509,24525+24]..[509,24525+45])
                                                              Pexp_variant "Lid"
                                                              Some
                                                                expression (compile_gram.ml[509,24525+29]..[509,24525+45])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (compile_gram.ml[509,24525+30]..[509,24525+34])
                                                                      Pexp_ident "_loc" (compile_gram.ml[509,24525+30]..[509,24525+34])
                                                                    expression (compile_gram.ml[509,24525+36]..[509,24525+44])
                                                                      Pexp_constant Const_string("olevel",None)
                                                                  ]
                                                          ]
                                                  ]
                                            None
                                            core_type (compile_gram.ml[509,24525+53]..[509,24525+61])
                                              Ptyp_constr "Astf.exp" (compile_gram.ml[509,24525+53]..[509,24525+61])
                                              []
                                ]
                          ]
                          expression (compile_gram.ml[510,24591+7]..[527,25181+44])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (compile_gram.ml[510,24591+11]..[510,24591+12])
                                  Ppat_var "l" (compile_gram.ml[510,24591+11]..[510,24591+12])
                                expression (compile_gram.ml[510,24591+15]..[510,24591+22])
                                  Pexp_field
                                  expression (compile_gram.ml[510,24591+15]..[510,24591+16])
                                    Pexp_ident "e" (compile_gram.ml[510,24591+15]..[510,24591+16])
                                  "level" (compile_gram.ml[510,24591+17]..[510,24591+22])
                            ]
                            expression (compile_gram.ml[511,24617+7]..[527,25181+44])
                              Pexp_coerce
                              expression (compile_gram.ml[511,24617+8]..[527,25181+31])
                                Pexp_variant "Constraint"
                                Some
                                  expression (compile_gram.ml[512,24637+10]..[527,25181+31])
                                    Pexp_tuple
                                    [
                                      expression (compile_gram.ml[512,24637+11]..[512,24637+15])
                                        Pexp_ident "_loc" (compile_gram.ml[512,24637+11]..[512,24637+15])
                                      expression (compile_gram.ml[513,24654+13]..[521,24945+53])
                                        Pexp_variant "Record"
                                        Some
                                          expression (compile_gram.ml[514,24675+15]..[521,24945+53])
                                            Pexp_tuple
                                            [
                                              expression (compile_gram.ml[514,24675+16]..[514,24675+20])
                                                Pexp_ident "_loc" (compile_gram.ml[514,24675+16]..[514,24675+20])
                                              expression (compile_gram.ml[515,24697+18]..[521,24945+51])
                                                Pexp_variant "Sem"
                                                Some
                                                  expression (compile_gram.ml[516,24720+20]..[521,24945+51])
                                                    Pexp_tuple
                                                    [
                                                      expression (compile_gram.ml[516,24720+21]..[516,24720+25])
                                                        Pexp_ident "_loc" (compile_gram.ml[516,24720+21]..[516,24720+25])
                                                      expression (compile_gram.ml[517,24747+23]..[518,24779+74])
                                                        Pexp_variant "RecBind"
                                                        Some
                                                          expression (compile_gram.ml[518,24779+25]..[518,24779+74])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_gram.ml[518,24779+26]..[518,24779+30])
                                                                Pexp_ident "_loc" (compile_gram.ml[518,24779+26]..[518,24779+30])
                                                              expression (compile_gram.ml[518,24779+33]..[518,24779+53])
                                                                Pexp_variant "Lid"
                                                                Some
                                                                  expression (compile_gram.ml[518,24779+38]..[518,24779+53])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (compile_gram.ml[518,24779+39]..[518,24779+43])
Pexp_ident "_loc" (compile_gram.ml[518,24779+39]..[518,24779+43])
                                                                      expression (compile_gram.ml[518,24779+45]..[518,24779+52])
Pexp_constant Const_string("entry",None)
                                                                    ]
                                                              expression (compile_gram.ml[518,24779+56]..[518,24779+73])
                                                                Pexp_coerce
                                                                expression (compile_gram.ml[518,24779+57]..[518,24779+60])
                                                                  Pexp_ident "ent" (compile_gram.ml[518,24779+57]..[518,24779+60])
                                                                None
                                                                core_type (compile_gram.ml[518,24779+64]..[518,24779+72])
                                                                  Ptyp_constr "Astf.exp" (compile_gram.ml[518,24779+64]..[518,24779+72])
                                                                  []
                                                            ]
                                                      expression (compile_gram.ml[519,24856+23]..[521,24945+49])
                                                        Pexp_variant "RecBind"
                                                        Some
                                                          expression (compile_gram.ml[520,24888+25]..[521,24945+49])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_gram.ml[520,24888+26]..[520,24888+30])
                                                                Pexp_ident "_loc" (compile_gram.ml[520,24888+26]..[520,24888+30])
                                                              expression (compile_gram.ml[520,24888+33]..[520,24888+54])
                                                                Pexp_variant "Lid"
                                                                Some
                                                                  expression (compile_gram.ml[520,24888+38]..[520,24888+54])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (compile_gram.ml[520,24888+39]..[520,24888+43])
Pexp_ident "_loc" (compile_gram.ml[520,24888+39]..[520,24888+43])
                                                                      expression (compile_gram.ml[520,24888+45]..[520,24888+53])
Pexp_constant Const_string("olevel",None)
                                                                    ]
                                                              expression (compile_gram.ml[521,24945+27]..[521,24945+48])
                                                                Pexp_coerce
                                                                expression (compile_gram.ml[521,24945+28]..[521,24945+35])
                                                                  Pexp_apply
                                                                  expression (compile_gram.ml[521,24945+28]..[521,24945+33])
                                                                    Pexp_ident "apply" (compile_gram.ml[521,24945+28]..[521,24945+33])
                                                                  [
                                                                    <label> ""
                                                                      expression (compile_gram.ml[521,24945+34]..[521,24945+35])
Pexp_ident "l" (compile_gram.ml[521,24945+34]..[521,24945+35])
                                                                  ]
                                                                None
                                                                core_type (compile_gram.ml[521,24945+39]..[521,24945+47])
                                                                  Ptyp_constr "Astf.exp" (compile_gram.ml[521,24945+39]..[521,24945+47])
                                                                  []
                                                            ]
                                                    ]
                                            ]
                                      expression (compile_gram.ml[522,25001+13]..[527,25181+29])
                                        Pexp_variant "App"
                                        Some
                                          expression (compile_gram.ml[523,25019+15]..[527,25181+29])
                                            Pexp_tuple
                                            [
                                              expression (compile_gram.ml[523,25019+16]..[523,25019+20])
                                                Pexp_ident "_loc" (compile_gram.ml[523,25019+16]..[523,25019+20])
                                              expression (compile_gram.ml[524,25041+18]..[526,25115+63])
                                                Pexp_variant "Dot"
                                                Some
                                                  expression (compile_gram.ml[525,25064+20]..[526,25115+63])
                                                    Pexp_tuple
                                                    [
                                                      expression (compile_gram.ml[525,25064+21]..[525,25064+25])
                                                        Pexp_ident "_loc" (compile_gram.ml[525,25064+21]..[525,25064+25])
                                                      expression (compile_gram.ml[525,25064+28]..[525,25064+48])
                                                        Pexp_variant "Uid"
                                                        Some
                                                          expression (compile_gram.ml[525,25064+33]..[525,25064+48])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_gram.ml[525,25064+34]..[525,25064+38])
                                                                Pexp_ident "_loc" (compile_gram.ml[525,25064+34]..[525,25064+38])
                                                              expression (compile_gram.ml[525,25064+40]..[525,25064+47])
                                                                Pexp_constant Const_string("Gramf",None)
                                                            ]
                                                      expression (compile_gram.ml[526,25115+23]..[526,25115+61])
                                                        Pexp_variant "Lid"
                                                        Some
                                                          expression (compile_gram.ml[526,25115+28]..[526,25115+61])
                                                            Pexp_tuple
                                                            [
                                                              expression (compile_gram.ml[526,25115+29]..[526,25115+33])
                                                                Pexp_ident "_loc" (compile_gram.ml[526,25115+29]..[526,25115+33])
                                                              expression (compile_gram.ml[526,25115+35]..[526,25115+60])
                                                                Pexp_constant Const_string("single_extend_statement",None)
                                                            ]
                                                    ]
                                              expression (compile_gram.ml[527,25181+18]..[527,25181+27])
                                                Pexp_variant "Any"
                                                Some
                                                  expression (compile_gram.ml[527,25181+23]..[527,25181+27])
                                                    Pexp_ident "_loc" (compile_gram.ml[527,25181+23]..[527,25181+27])
                                            ]
                                    ]
                              None
                              core_type (compile_gram.ml[527,25181+35]..[527,25181+43])
                                Ptyp_constr "Astf.exp" (compile_gram.ml[527,25181+35]..[527,25181+43])
                                []
                core_type (compile_gram.ml[527,25181+47]..[527,25181+50])
                  Ptyp_constr "exp" (compile_gram.ml[527,25181+47]..[527,25181+50])
                  []
          ]
    ]
  structure_item (compile_gram.ml[528,25233+0]..[547,25858+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[528,25233+4]..[528,25233+15])
          Ppat_var "make_extend" (compile_gram.ml[528,25233+4]..[528,25233+15])
        expression (compile_gram.ml[529,25251+2]..[547,25858+16])
          Pexp_function
          [
            <case>
              pattern (compile_gram.ml[530,25262+4]..[530,25262+8])
                Ppat_var "safe" (compile_gram.ml[530,25262+4]..[530,25262+8])
              expression (compile_gram.ml[531,25274+7]..[547,25858+15])
                Pexp_function
                [
                  <case>
                    pattern (compile_gram.ml[532,25290+9]..[532,25290+29])
                      Ppat_constraint
                      pattern (compile_gram.ml[532,25290+10]..[532,25290+11])
                        Ppat_var "e" (compile_gram.ml[532,25290+10]..[532,25290+11])
                      core_type (compile_gram.ml[532,25290+14]..[532,25290+28])
                        Ptyp_constr "Gram_def.entry" (compile_gram.ml[532,25290+14]..[532,25290+28])
                        []
                    expression (compile_gram.ml[533,25323+11]..[547,25858+15])
                      Pexp_constraint
                      expression (compile_gram.ml[533,25323+12]..[546,25779+75])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (compile_gram.ml[533,25323+16]..[533,25323+20])
                              Ppat_var "_loc" (compile_gram.ml[533,25323+16]..[533,25323+20])
                            expression (compile_gram.ml[533,25323+23]..[533,25323+35])
                              Pexp_field
                              expression (compile_gram.ml[533,25323+24]..[533,25323+30])
                                Pexp_field
                                expression (compile_gram.ml[533,25323+24]..[533,25323+25])
                                  Pexp_ident "e" (compile_gram.ml[533,25323+24]..[533,25323+25])
                                "name" (compile_gram.ml[533,25323+26]..[533,25323+30])
                              "loc" (compile_gram.ml[533,25323+32]..[533,25323+35])
                        ]
                        expression (compile_gram.ml[534,25362+12]..[546,25779+75])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (compile_gram.ml[534,25362+16]..[534,25362+17])
                                Ppat_var "f" (compile_gram.ml[534,25362+16]..[534,25362+17])
                              expression (compile_gram.ml[535,25382+14]..[543,25646+72])
                                Pexp_ifthenelse
                                expression (compile_gram.ml[535,25382+17]..[535,25382+21])
                                  Pexp_ident "safe" (compile_gram.ml[535,25382+17]..[535,25382+21])
                                expression (compile_gram.ml[537,25423+16]..[539,25492+65])
                                  Pexp_coerce
                                  expression (compile_gram.ml[537,25423+17]..[539,25492+52])
                                    Pexp_variant "Dot"
                                    Some
                                      expression (compile_gram.ml[538,25445+19]..[539,25492+52])
                                        Pexp_tuple
                                        [
                                          expression (compile_gram.ml[538,25445+20]..[538,25445+24])
                                            Pexp_ident "_loc" (compile_gram.ml[538,25445+20]..[538,25445+24])
                                          expression (compile_gram.ml[538,25445+26]..[538,25445+45])
                                            Pexp_coerce
                                            expression (compile_gram.ml[538,25445+27]..[538,25445+32])
                                              Pexp_apply
                                              expression (compile_gram.ml[538,25445+27]..[538,25445+29])
                                                Pexp_ident "gm" (compile_gram.ml[538,25445+27]..[538,25445+29])
                                              [
                                                <label> ""
                                                  expression (compile_gram.ml[538,25445+30]..[538,25445+32])
                                                    Pexp_construct "()" (compile_gram.ml[538,25445+30]..[538,25445+32])
                                                    None
                                              ]
                                            None
                                            core_type (compile_gram.ml[538,25445+36]..[538,25445+44])
                                              Ptyp_constr "Astf.vid" (compile_gram.ml[538,25445+36]..[538,25445+44])
                                              []
                                          expression (compile_gram.ml[539,25492+22]..[539,25492+50])
                                            Pexp_variant "Lid"
                                            Some
                                              expression (compile_gram.ml[539,25492+27]..[539,25492+50])
                                                Pexp_tuple
                                                [
                                                  expression (compile_gram.ml[539,25492+28]..[539,25492+32])
                                                    Pexp_ident "_loc" (compile_gram.ml[539,25492+28]..[539,25492+32])
                                                  expression (compile_gram.ml[539,25492+34]..[539,25492+49])
                                                    Pexp_constant Const_string("extend_single",None)
                                                ]
                                        ]
                                  None
                                  core_type (compile_gram.ml[539,25492+56]..[539,25492+64])
                                    Ptyp_constr "Astf.exp" (compile_gram.ml[539,25492+56]..[539,25492+64])
                                    []
                                Some
                                  expression (compile_gram.ml[541,25577+16]..[543,25646+72])
                                    Pexp_coerce
                                    expression (compile_gram.ml[541,25577+17]..[543,25646+59])
                                      Pexp_variant "Dot"
                                      Some
                                        expression (compile_gram.ml[542,25599+19]..[543,25646+59])
                                          Pexp_tuple
                                          [
                                            expression (compile_gram.ml[542,25599+20]..[542,25599+24])
                                              Pexp_ident "_loc" (compile_gram.ml[542,25599+20]..[542,25599+24])
                                            expression (compile_gram.ml[542,25599+26]..[542,25599+45])
                                              Pexp_coerce
                                              expression (compile_gram.ml[542,25599+27]..[542,25599+32])
                                                Pexp_apply
                                                expression (compile_gram.ml[542,25599+27]..[542,25599+29])
                                                  Pexp_ident "gm" (compile_gram.ml[542,25599+27]..[542,25599+29])
                                                [
                                                  <label> ""
                                                    expression (compile_gram.ml[542,25599+30]..[542,25599+32])
                                                      Pexp_construct "()" (compile_gram.ml[542,25599+30]..[542,25599+32])
                                                      None
                                                ]
                                              None
                                              core_type (compile_gram.ml[542,25599+36]..[542,25599+44])
                                                Ptyp_constr "Astf.vid" (compile_gram.ml[542,25599+36]..[542,25599+44])
                                                []
                                            expression (compile_gram.ml[543,25646+22]..[543,25646+57])
                                              Pexp_variant "Lid"
                                              Some
                                                expression (compile_gram.ml[543,25646+27]..[543,25646+57])
                                                  Pexp_tuple
                                                  [
                                                    expression (compile_gram.ml[543,25646+28]..[543,25646+32])
                                                      Pexp_ident "_loc" (compile_gram.ml[543,25646+28]..[543,25646+32])
                                                    expression (compile_gram.ml[543,25646+34]..[543,25646+56])
                                                      Pexp_constant Const_string("unsafe_extend_single",None)
                                                  ]
                                          ]
                                    None
                                    core_type (compile_gram.ml[543,25646+63]..[543,25646+71])
                                      Ptyp_constr "Astf.exp" (compile_gram.ml[543,25646+63]..[543,25646+71])
                                      []
                          ]
                          expression (compile_gram.ml[544,25722+12]..[546,25779+75])
                            Pexp_coerce
                            expression (compile_gram.ml[544,25722+13]..[546,25779+62])
                              Pexp_variant "App"
                              Some
                                expression (compile_gram.ml[545,25740+15]..[546,25779+62])
                                  Pexp_tuple
                                  [
                                    expression (compile_gram.ml[545,25740+16]..[545,25740+20])
                                      Pexp_ident "_loc" (compile_gram.ml[545,25740+16]..[545,25740+20])
                                    expression (compile_gram.ml[545,25740+22]..[545,25740+37])
                                      Pexp_coerce
                                      expression (compile_gram.ml[545,25740+23]..[545,25740+24])
                                        Pexp_ident "f" (compile_gram.ml[545,25740+23]..[545,25740+24])
                                      None
                                      core_type (compile_gram.ml[545,25740+28]..[545,25740+36])
                                        Ptyp_constr "Astf.exp" (compile_gram.ml[545,25740+28]..[545,25740+36])
                                        []
                                    expression (compile_gram.ml[546,25779+17]..[546,25779+61])
                                      Pexp_coerce
                                      expression (compile_gram.ml[546,25779+18]..[546,25779+48])
                                        Pexp_apply
                                        expression (compile_gram.ml[546,25779+18]..[546,25779+46])
                                          Pexp_ident "make_single_extend_statement" (compile_gram.ml[546,25779+18]..[546,25779+46])
                                        [
                                          <label> ""
                                            expression (compile_gram.ml[546,25779+47]..[546,25779+48])
                                              Pexp_ident "e" (compile_gram.ml[546,25779+47]..[546,25779+48])
                                        ]
                                      None
                                      core_type (compile_gram.ml[546,25779+52]..[546,25779+60])
                                        Ptyp_constr "Astf.exp" (compile_gram.ml[546,25779+52]..[546,25779+60])
                                        []
                                  ]
                            None
                            core_type (compile_gram.ml[546,25779+66]..[546,25779+74])
                              Ptyp_constr "Astf.exp" (compile_gram.ml[546,25779+66]..[546,25779+74])
                              []
                      core_type (compile_gram.ml[547,25858+11]..[547,25858+14])
                        Ptyp_constr "exp" (compile_gram.ml[547,25858+11]..[547,25858+14])
                        []
                ]
          ]
    ]
  structure_item (compile_gram.ml[548,25875+0]..[580,27264+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[548,25875+4]..[548,25875+19])
          Ppat_var "make_localbinds" (compile_gram.ml[548,25875+4]..[548,25875+19])
        expression (compile_gram.ml[549,25897+2]..[580,27264+46])
          Pexp_function
          [
            <case>
              pattern (compile_gram.ml[550,25908+4]..[550,25908+8])
                Ppat_var "_loc" (compile_gram.ml[550,25908+4]..[550,25908+8])
              expression (compile_gram.ml[551,25920+7]..[580,27264+45])
                Pexp_function
                [
                  <case>
                    pattern (compile_gram.ml[552,25936+9]..[552,25936+15])
                      Ppat_var "locals" (compile_gram.ml[552,25936+9]..[552,25936+15])
                    expression (compile_gram.ml[553,25955+11]..[580,27264+45])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (compile_gram.ml[553,25955+15]..[553,25955+33])
                            Ppat_var "local_bind_of_name" (compile_gram.ml[553,25955+15]..[553,25955+33])
                          expression (compile_gram.ml[554,25991+13]..[579,27215+45])
                            Pexp_function
                            [
                              <case>
                                pattern (compile_gram.ml[555,26013+15]..[555,26013+34])
                                  Ppat_constraint
                                  pattern (compile_gram.ml[555,26013+16]..[555,26013+17])
                                    Ppat_var "x" (compile_gram.ml[555,26013+16]..[555,26013+17])
                                  core_type (compile_gram.ml[555,26013+20]..[555,26013+33])
                                    Ptyp_constr "Gram_def.name" (compile_gram.ml[555,26013+20]..[555,26013+33])
                                    []
                                expression (compile_gram.ml[556,26051+18]..[579,27215+44])
                                  Pexp_match
                                  expression (compile_gram.ml[556,26051+24]..[556,26051+43])
                                    Pexp_constraint
                                    expression (compile_gram.ml[556,26051+25]..[556,26051+26])
                                      Pexp_ident "x" (compile_gram.ml[556,26051+25]..[556,26051+26])
                                    core_type (compile_gram.ml[556,26051+29]..[556,26051+42])
                                      Ptyp_constr "Gram_def.name" (compile_gram.ml[556,26051+29]..[556,26051+42])
                                      []
                                  [
                                    <case>
                                      pattern (compile_gram.ml[557,26100+20]..[557,26100+61])
                                        Ppat_record Closed
                                        [
                                          "id" (compile_gram.ml[557,26100+22]..[557,26100+24])
                                            pattern (compile_gram.ml[557,26100+27]..[557,26100+37])
                                              Ppat_variant "Lid"
                                              Some
                                                pattern (compile_gram.ml[557,26100+27]..[557,26100+37])
                                                  Ppat_tuple
                                                  [
                                                    pattern (compile_gram.ml[557,26100+33]..[557,26100+34])
                                                      Ppat_any
                                                    pattern (compile_gram.ml[557,26100+35]..[557,26100+36])
                                                      Ppat_var "i" (compile_gram.ml[557,26100+35]..[557,26100+36])
                                                  ]
                                          "tvar" (compile_gram.ml[557,26100+39]..[557,26100+43])
                                            pattern (compile_gram.ml[557,26100+46]..[557,26100+47])
                                              Ppat_var "x" (compile_gram.ml[557,26100+46]..[557,26100+47])
                                          "loc" (compile_gram.ml[557,26100+49]..[557,26100+52])
                                            pattern (compile_gram.ml[557,26100+55]..[557,26100+59])
                                              Ppat_var "_loc" (compile_gram.ml[557,26100+55]..[557,26100+59])
                                        ]
                                      expression (compile_gram.ml[558,26165+22]..[576,27080+32])
                                        Pexp_coerce
                                        expression (compile_gram.ml[558,26165+23]..[575,27010+65])
                                          Pexp_variant "Bind"
                                          Some
                                            expression (compile_gram.ml[559,26194+25]..[575,27010+65])
                                              Pexp_tuple
                                              [
                                                expression (compile_gram.ml[559,26194+26]..[559,26194+30])
                                                  Pexp_ident "_loc" (compile_gram.ml[559,26194+26]..[559,26194+30])
                                                expression (compile_gram.ml[559,26194+33]..[559,26194+47])
                                                  Pexp_variant "Lid"
                                                  Some
                                                    expression (compile_gram.ml[559,26194+38]..[559,26194+47])
                                                      Pexp_tuple
                                                      [
                                                        expression (compile_gram.ml[559,26194+39]..[559,26194+43])
                                                          Pexp_ident "_loc" (compile_gram.ml[559,26194+39]..[559,26194+43])
                                                        expression (compile_gram.ml[559,26194+45]..[559,26194+46])
                                                          Pexp_ident "i" (compile_gram.ml[559,26194+45]..[559,26194+46])
                                                      ]
                                                expression (compile_gram.ml[560,26244+28]..[575,27010+63])
                                                  Pexp_variant "Constraint"
                                                  Some
                                                    expression (compile_gram.ml[561,26284+30]..[575,27010+63])
                                                      Pexp_tuple
                                                      [
                                                        expression (compile_gram.ml[561,26284+31]..[561,26284+35])
                                                          Pexp_ident "_loc" (compile_gram.ml[561,26284+31]..[561,26284+35])
                                                        expression (compile_gram.ml[562,26321+33]..[567,26580+54])
                                                          Pexp_variant "App"
                                                          Some
                                                            expression (compile_gram.ml[563,26359+35]..[567,26580+54])
                                                              Pexp_tuple
                                                              [
                                                                expression (compile_gram.ml[563,26359+36]..[563,26359+40])
                                                                  Pexp_ident "_loc" (compile_gram.ml[563,26359+36]..[563,26359+40])
                                                                expression (compile_gram.ml[564,26401+38]..[566,26515+62])
                                                                  Pexp_variant "Dot"
                                                                  Some
                                                                    expression (compile_gram.ml[565,26444+40]..[566,26515+62])
                                                                      Pexp_tuple
                                                                      [
expression (compile_gram.ml[565,26444+41]..[565,26444+45])
  Pexp_ident "_loc" (compile_gram.ml[565,26444+41]..[565,26444+45])
expression (compile_gram.ml[565,26444+48]..[565,26444+68])
  Pexp_variant "Uid"
  Some
    expression (compile_gram.ml[565,26444+53]..[565,26444+68])
      Pexp_tuple
      [
        expression (compile_gram.ml[565,26444+54]..[565,26444+58])
          Pexp_ident "_loc" (compile_gram.ml[565,26444+54]..[565,26444+58])
        expression (compile_gram.ml[565,26444+60]..[565,26444+67])
          Pexp_constant Const_string("Gramf",None)
      ]
expression (compile_gram.ml[566,26515+43]..[566,26515+60])
  Pexp_variant "Lid"
  Some
    expression (compile_gram.ml[566,26515+48]..[566,26515+60])
      Pexp_tuple
      [
        expression (compile_gram.ml[566,26515+49]..[566,26515+53])
          Pexp_ident "_loc" (compile_gram.ml[566,26515+49]..[566,26515+53])
        expression (compile_gram.ml[566,26515+55]..[566,26515+59])
          Pexp_constant Const_string("mk",None)
      ]
                                                                      ]
                                                                expression (compile_gram.ml[567,26580+38]..[567,26580+52])
                                                                  Pexp_variant "Str"
                                                                  Some
                                                                    expression (compile_gram.ml[567,26580+43]..[567,26580+52])
                                                                      Pexp_tuple
                                                                      [
expression (compile_gram.ml[567,26580+44]..[567,26580+48])
  Pexp_ident "_loc" (compile_gram.ml[567,26580+44]..[567,26580+48])
expression (compile_gram.ml[567,26580+50]..[567,26580+51])
  Pexp_ident "i" (compile_gram.ml[567,26580+50]..[567,26580+51])
                                                                      ]
                                                              ]
                                                        expression (compile_gram.ml[568,26637+33]..[575,27010+61])
                                                          Pexp_variant "App"
                                                          Some
                                                            expression (compile_gram.ml[569,26675+35]..[575,27010+61])
                                                              Pexp_tuple
                                                              [
                                                                expression (compile_gram.ml[569,26675+36]..[569,26675+40])
                                                                  Pexp_ident "_loc" (compile_gram.ml[569,26675+36]..[569,26675+40])
                                                                expression (compile_gram.ml[570,26717+38]..[572,26838+61])
                                                                  Pexp_variant "Dot"
                                                                  Some
                                                                    expression (compile_gram.ml[571,26760+40]..[572,26838+61])
                                                                      Pexp_tuple
                                                                      [
expression (compile_gram.ml[571,26760+41]..[571,26760+45])
  Pexp_ident "_loc" (compile_gram.ml[571,26760+41]..[571,26760+45])
expression (compile_gram.ml[571,26760+47]..[571,26760+76])
  Pexp_coerce
  expression (compile_gram.ml[571,26760+48]..[571,26760+61])
    Pexp_constraint
    expression (compile_gram.ml[571,26760+49]..[571,26760+54])
      Pexp_apply
      expression (compile_gram.ml[571,26760+49]..[571,26760+51])
        Pexp_ident "gm" (compile_gram.ml[571,26760+49]..[571,26760+51])
      [
        <label> ""
          expression (compile_gram.ml[571,26760+52]..[571,26760+54])
            Pexp_construct "()" (compile_gram.ml[571,26760+52]..[571,26760+54])
            None
      ]
    core_type (compile_gram.ml[571,26760+57]..[571,26760+60])
      Ptyp_constr "vid" (compile_gram.ml[571,26760+57]..[571,26760+60])
      []
  None
  core_type (compile_gram.ml[571,26760+65]..[571,26760+75])
    Ptyp_constr "Astf.ident" (compile_gram.ml[571,26760+65]..[571,26760+75])
    []
expression (compile_gram.ml[572,26838+43]..[572,26838+59])
  Pexp_variant "Lid"
  Some
    expression (compile_gram.ml[572,26838+48]..[572,26838+59])
      Pexp_tuple
      [
        expression (compile_gram.ml[572,26838+49]..[572,26838+53])
          Pexp_ident "_loc" (compile_gram.ml[572,26838+49]..[572,26838+53])
        expression (compile_gram.ml[572,26838+55]..[572,26838+58])
          Pexp_constant Const_string("t",None)
      ]
                                                                      ]
                                                                expression (compile_gram.ml[573,26902+38]..[575,27010+59])
                                                                  Pexp_variant "Quote"
                                                                  Some
                                                                    expression (compile_gram.ml[574,26947+40]..[575,27010+59])
                                                                      Pexp_tuple
                                                                      [
expression (compile_gram.ml[574,26947+41]..[574,26947+45])
  Pexp_ident "_loc" (compile_gram.ml[574,26947+41]..[574,26947+45])
expression (compile_gram.ml[574,26947+48]..[574,26947+60])
  Pexp_variant "Normal"
  Some
    expression (compile_gram.ml[574,26947+56]..[574,26947+60])
      Pexp_ident "_loc" (compile_gram.ml[574,26947+56]..[574,26947+60])
expression (compile_gram.ml[575,27010+43]..[575,27010+57])
  Pexp_variant "Lid"
  Some
    expression (compile_gram.ml[575,27010+48]..[575,27010+57])
      Pexp_tuple
      [
        expression (compile_gram.ml[575,27010+49]..[575,27010+53])
          Pexp_ident "_loc" (compile_gram.ml[575,27010+49]..[575,27010+53])
        expression (compile_gram.ml[575,27010+55]..[575,27010+56])
          Pexp_ident "x" (compile_gram.ml[575,27010+55]..[575,27010+56])
      ]
                                                                      ]
                                                              ]
                                                      ]
                                              ]
                                        None
                                        core_type (compile_gram.ml[576,27080+22]..[576,27080+31])
                                          Ptyp_constr "Astf.bind" (compile_gram.ml[576,27080+22]..[576,27080+31])
                                          []
                                    <case>
                                      pattern (compile_gram.ml[577,27113+20]..[577,27113+21])
                                        Ppat_any
                                      expression (compile_gram.ml[578,27138+22]..[579,27215+44])
                                        Pexp_apply
                                        expression (compile_gram.ml[578,27138+22]..[578,27138+31])
                                          Pexp_ident "failwithf" (compile_gram.ml[578,27138+22]..[578,27138+31])
                                        [
                                          <label> ""
                                            expression (compile_gram.ml[578,27138+32]..[578,27138+76])
                                              Pexp_constant Const_string("internal error in the Grammar extension %s",None)
                                          <label> ""
                                            expression (compile_gram.ml[579,27215+25]..[579,27215+43])
                                              Pexp_apply
                                              expression (compile_gram.ml[579,27215+25]..[579,27215+38])
                                                Pexp_ident "Objs.dump_vid" (compile_gram.ml[579,27215+25]..[579,27215+38])
                                              [
                                                <label> ""
                                                  expression (compile_gram.ml[579,27215+39]..[579,27215+43])
                                                    Pexp_field
                                                    expression (compile_gram.ml[579,27215+39]..[579,27215+40])
                                                      Pexp_ident "x" (compile_gram.ml[579,27215+39]..[579,27215+40])
                                                    "id" (compile_gram.ml[579,27215+41]..[579,27215+43])
                                              ]
                                        ]
                                  ]
                            ]
                      ]
                      expression (compile_gram.ml[580,27264+11]..[580,27264+45])
                        Pexp_apply
                        expression (compile_gram.ml[580,27264+11]..[580,27264+19])
                          Pexp_ident "List.map" (compile_gram.ml[580,27264+11]..[580,27264+19])
                        [
                          <label> ""
                            expression (compile_gram.ml[580,27264+20]..[580,27264+38])
                              Pexp_ident "local_bind_of_name" (compile_gram.ml[580,27264+20]..[580,27264+38])
                          <label> ""
                            expression (compile_gram.ml[580,27264+39]..[580,27264+45])
                              Pexp_ident "locals" (compile_gram.ml[580,27264+39]..[580,27264+45])
                        ]
                ]
          ]
    ]
  structure_item (compile_gram.ml[581,27311+0]..[595,27792+63])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[581,27311+4]..[581,27311+8])
          Ppat_var "make" (compile_gram.ml[581,27311+4]..[581,27311+8])
        expression (compile_gram.ml[582,27322+2]..[595,27792+63])
          Pexp_function
          [
            <case>
              pattern (compile_gram.ml[583,27333+4]..[583,27333+8])
                Ppat_var "_loc" (compile_gram.ml[583,27333+4]..[583,27333+8])
              expression (compile_gram.ml[584,27345+7]..[595,27792+62])
                Pexp_function
                [
                  <case>
                    pattern (compile_gram.ml[585,27361+9]..[585,27361+31])
                      Ppat_constraint
                      pattern (compile_gram.ml[585,27361+10]..[585,27361+11])
                        Ppat_var "x" (compile_gram.ml[585,27361+10]..[585,27361+11])
                      core_type (compile_gram.ml[585,27361+14]..[585,27361+30])
                        Ptyp_constr "Gram_def.entries" (compile_gram.ml[585,27361+14]..[585,27361+30])
                        []
                    expression (compile_gram.ml[586,27396+11]..[595,27792+62])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (compile_gram.ml[586,27396+15]..[586,27396+22])
                            Ppat_var "extends" (compile_gram.ml[586,27396+15]..[586,27396+22])
                          expression (compile_gram.ml[587,27421+13]..[588,27489+77])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (compile_gram.ml[587,27421+17]..[587,27421+19])
                                  Ppat_var "el" (compile_gram.ml[587,27421+17]..[587,27421+19])
                                expression (compile_gram.ml[587,27421+22]..[587,27421+64])
                                  Pexp_apply
                                  expression (compile_gram.ml[587,27421+30]..[587,27421+32])
                                    Pexp_ident "|>" (compile_gram.ml[587,27421+30]..[587,27421+32])
                                  [
                                    <label> ""
                                      expression (compile_gram.ml[587,27421+22]..[587,27421+29])
                                        Pexp_field
                                        expression (compile_gram.ml[587,27421+22]..[587,27421+23])
                                          Pexp_ident "x" (compile_gram.ml[587,27421+22]..[587,27421+23])
                                        "items" (compile_gram.ml[587,27421+24]..[587,27421+29])
                                    <label> ""
                                      expression (compile_gram.ml[587,27421+34]..[587,27421+63])
                                        Pexp_apply
                                        expression (compile_gram.ml[587,27421+34]..[587,27421+42])
                                          Pexp_ident "List.map" (compile_gram.ml[587,27421+34]..[587,27421+42])
                                        [
                                          <label> ""
                                            expression (compile_gram.ml[587,27421+44]..[587,27421+62])
                                              Pexp_apply
                                              expression (compile_gram.ml[587,27421+44]..[587,27421+55])
                                                Pexp_ident "make_extend" (compile_gram.ml[587,27421+44]..[587,27421+55])
                                              [
                                                <label> ""
                                                  expression (compile_gram.ml[587,27421+56]..[587,27421+62])
                                                    Pexp_field
                                                    expression (compile_gram.ml[587,27421+56]..[587,27421+57])
                                                      Pexp_ident "x" (compile_gram.ml[587,27421+56]..[587,27421+57])
                                                    "safe" (compile_gram.ml[587,27421+58]..[587,27421+62])
                                              ]
                                        ]
                                  ]
                            ]
                            expression (compile_gram.ml[588,27489+13]..[588,27489+77])
                              Pexp_match
                              expression (compile_gram.ml[588,27489+19]..[588,27489+21])
                                Pexp_ident "el" (compile_gram.ml[588,27489+19]..[588,27489+21])
                              [
                                <case>
                                  pattern (compile_gram.ml[588,27489+29]..[588,27489+31])
                                    Ppat_construct "[]" (compile_gram.ml[588,27489+29]..[588,27489+31])
                                    None
                                  expression (compile_gram.ml[588,27489+35]..[588,27489+59])
                                    Pexp_coerce
                                    expression (compile_gram.ml[588,27489+36]..[588,27489+46])
                                      Pexp_variant "Unit"
                                      Some
                                        expression (compile_gram.ml[588,27489+42]..[588,27489+46])
                                          Pexp_ident "_loc" (compile_gram.ml[588,27489+42]..[588,27489+46])
                                    None
                                    core_type (compile_gram.ml[588,27489+50]..[588,27489+58])
                                      Ptyp_constr "Astf.exp" (compile_gram.ml[588,27489+50]..[588,27489+58])
                                      []
                                <case>
                                  pattern (compile_gram.ml[588,27489+62]..[588,27489+63])
                                    Ppat_any
                                  expression (compile_gram.ml[588,27489+67]..[588,27489+77])
                                    Pexp_apply
                                    expression (compile_gram.ml[588,27489+67]..[588,27489+74])
                                      Pexp_ident "seq_sem" (compile_gram.ml[588,27489+67]..[588,27489+74])
                                    [
                                      <label> ""
                                        expression (compile_gram.ml[588,27489+75]..[588,27489+77])
                                          Pexp_ident "el" (compile_gram.ml[588,27489+75]..[588,27489+77])
                                    ]
                              ]
                      ]
                      expression (compile_gram.ml[589,27570+11]..[595,27792+62])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (compile_gram.ml[589,27570+15]..[589,27570+21])
                              Ppat_var "locals" (compile_gram.ml[589,27570+15]..[589,27570+21])
                            expression (compile_gram.ml[590,27594+13]..[594,27724+64])
                              Pexp_apply
                              expression (compile_gram.ml[590,27594+21]..[590,27594+23])
                                Pexp_ident "|>" (compile_gram.ml[590,27594+21]..[590,27594+23])
                              [
                                <label> ""
                                  expression (compile_gram.ml[590,27594+13]..[590,27594+20])
                                    Pexp_field
                                    expression (compile_gram.ml[590,27594+13]..[590,27594+14])
                                      Pexp_ident "x" (compile_gram.ml[590,27594+13]..[590,27594+14])
                                    "items" (compile_gram.ml[590,27594+15]..[590,27594+20])
                                <label> ""
                                  expression (compile_gram.ml[591,27618+16]..[594,27724+63])
                                    Pexp_apply
                                    expression (compile_gram.ml[591,27618+16]..[591,27618+32])
                                      Pexp_ident "Listf.filter_map" (compile_gram.ml[591,27618+16]..[591,27618+32])
                                    [
                                      <label> ""
                                        expression (compile_gram.ml[592,27651+19]..[594,27724+62])
                                          Pexp_function
                                          [
                                            <case>
                                              pattern (compile_gram.ml[593,27679+21]..[593,27679+41])
                                                Ppat_constraint
                                                pattern (compile_gram.ml[593,27679+22]..[593,27679+23])
                                                  Ppat_var "x" (compile_gram.ml[593,27679+22]..[593,27679+23])
                                                core_type (compile_gram.ml[593,27679+26]..[593,27679+40])
                                                  Ptyp_constr "Gram_def.entry" (compile_gram.ml[593,27679+26]..[593,27679+40])
                                                  []
                                              expression (compile_gram.ml[594,27724+23]..[594,27724+62])
                                                Pexp_ifthenelse
                                                expression (compile_gram.ml[594,27724+26]..[594,27724+33])
                                                  Pexp_field
                                                  expression (compile_gram.ml[594,27724+26]..[594,27724+27])
                                                    Pexp_ident "x" (compile_gram.ml[594,27724+26]..[594,27724+27])
                                                  "local" (compile_gram.ml[594,27724+28]..[594,27724+33])
                                                expression (compile_gram.ml[594,27724+39]..[594,27724+52])
                                                  Pexp_construct "Some" (compile_gram.ml[594,27724+39]..[594,27724+43])
                                                  Some
                                                    expression (compile_gram.ml[594,27724+45]..[594,27724+51])
                                                      Pexp_field
                                                      expression (compile_gram.ml[594,27724+45]..[594,27724+46])
                                                        Pexp_ident "x" (compile_gram.ml[594,27724+45]..[594,27724+46])
                                                      "name" (compile_gram.ml[594,27724+47]..[594,27724+51])
                                                Some
                                                  expression (compile_gram.ml[594,27724+58]..[594,27724+62])
                                                    Pexp_construct "None" (compile_gram.ml[594,27724+58]..[594,27724+62])
                                                    None
                                          ]
                                    ]
                              ]
                        ]
                        expression (compile_gram.ml[595,27792+11]..[595,27792+62])
                          Pexp_apply
                          expression (compile_gram.ml[595,27792+11]..[595,27792+24])
                            Pexp_ident "Ast_gen.binds" (compile_gram.ml[595,27792+11]..[595,27792+24])
                          [
                            <label> ""
                              expression (compile_gram.ml[595,27792+26]..[595,27792+53])
                                Pexp_apply
                                expression (compile_gram.ml[595,27792+26]..[595,27792+41])
                                  Pexp_ident "make_localbinds" (compile_gram.ml[595,27792+26]..[595,27792+41])
                                [
                                  <label> ""
                                    expression (compile_gram.ml[595,27792+42]..[595,27792+46])
                                      Pexp_ident "_loc" (compile_gram.ml[595,27792+42]..[595,27792+46])
                                  <label> ""
                                    expression (compile_gram.ml[595,27792+47]..[595,27792+53])
                                      Pexp_ident "locals" (compile_gram.ml[595,27792+47]..[595,27792+53])
                                ]
                            <label> ""
                              expression (compile_gram.ml[595,27792+55]..[595,27792+62])
                                Pexp_ident "extends" (compile_gram.ml[595,27792+55]..[595,27792+62])
                          ]
                ]
          ]
    ]
  structure_item (compile_gram.ml[596,27856+0]..[666,30983+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (compile_gram.ml[596,27856+4]..[596,27856+17])
          Ppat_var "make_protects" (compile_gram.ml[596,27856+4]..[596,27856+17])
        expression (compile_gram.ml[597,27876+2]..[666,30983+29])
          Pexp_function
          [
            <case>
              pattern (compile_gram.ml[598,27887+4]..[598,27887+8])
                Ppat_var "_loc" (compile_gram.ml[598,27887+4]..[598,27887+8])
              expression (compile_gram.ml[599,27899+7]..[666,30983+28])
                Pexp_function
                [
                  <case>
                    pattern (compile_gram.ml[600,27915+9]..[600,27915+31])
                      Ppat_constraint
                      pattern (compile_gram.ml[600,27915+10]..[600,27915+11])
                        Ppat_var "x" (compile_gram.ml[600,27915+10]..[600,27915+11])
                      core_type (compile_gram.ml[600,27915+14]..[600,27915+30])
                        Ptyp_constr "Gram_def.entries" (compile_gram.ml[600,27915+14]..[600,27915+30])
                        []
                    expression (compile_gram.ml[601,27950+12]..[666,30983+27])
                      Pexp_function
                      [
                        <case>
                          pattern (compile_gram.ml[602,27971+14]..[602,27971+20])
                            Ppat_var "action" (compile_gram.ml[602,27971+14]..[602,27971+20])
                          expression (compile_gram.ml[603,27995+16]..[666,30983+27])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (compile_gram.ml[603,27995+20]..[603,27995+31])
                                  Ppat_tuple
                                  [
                                    pattern (compile_gram.ml[603,27995+21]..[603,27995+22])
                                      Ppat_any
                                    pattern (compile_gram.ml[603,27995+23]..[603,27995+30])
                                      Ppat_var "globals" (compile_gram.ml[603,27995+23]..[603,27995+30])
                                  ]
                                expression (compile_gram.ml[604,28029+18]..[605,28107+27])
                                  Pexp_apply
                                  expression (compile_gram.ml[604,28029+18]..[604,28029+32])
                                    Pexp_ident "List.partition" (compile_gram.ml[604,28029+18]..[604,28029+32])
                                  [
                                    <label> ""
                                      expression (compile_gram.ml[604,28029+34]..[604,28029+76])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (compile_gram.ml[604,28029+45]..[604,28029+65])
                                              Ppat_constraint
                                              pattern (compile_gram.ml[604,28029+46]..[604,28029+47])
                                                Ppat_var "x" (compile_gram.ml[604,28029+46]..[604,28029+47])
                                              core_type (compile_gram.ml[604,28029+50]..[604,28029+64])
                                                Ptyp_constr "Gram_def.entry" (compile_gram.ml[604,28029+50]..[604,28029+64])
                                                []
                                            expression (compile_gram.ml[604,28029+69]..[604,28029+76])
                                              Pexp_field
                                              expression (compile_gram.ml[604,28029+69]..[604,28029+70])
                                                Pexp_ident "x" (compile_gram.ml[604,28029+69]..[604,28029+70])
                                              "local" (compile_gram.ml[604,28029+71]..[604,28029+76])
                                        ]
                                    <label> ""
                                      expression (compile_gram.ml[605,28107+20]..[605,28107+27])
                                        Pexp_field
                                        expression (compile_gram.ml[605,28107+20]..[605,28107+21])
                                          Pexp_ident "x" (compile_gram.ml[605,28107+20]..[605,28107+21])
                                        "items" (compile_gram.ml[605,28107+22]..[605,28107+27])
                                  ]
                            ]
                            expression (compile_gram.ml[606,28138+16]..[666,30983+27])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (compile_gram.ml[606,28138+20]..[606,28138+25])
                                    Ppat_var "binds" (compile_gram.ml[606,28138+20]..[606,28138+25])
                                  expression (compile_gram.ml[607,28166+18]..[611,28335+76])
                                    Pexp_apply
                                    expression (compile_gram.ml[607,28166+18]..[607,28166+26])
                                      Pexp_ident "List.map" (compile_gram.ml[607,28166+18]..[607,28166+26])
                                    [
                                      <label> ""
                                        expression (compile_gram.ml[608,28193+21]..[611,28335+67])
                                          Pexp_function
                                          [
                                            <case>
                                              pattern (compile_gram.ml[609,28223+23]..[609,28223+43])
                                                Ppat_constraint
                                                pattern (compile_gram.ml[609,28223+24]..[609,28223+25])
                                                  Ppat_var "x" (compile_gram.ml[609,28223+24]..[609,28223+25])
                                                core_type (compile_gram.ml[609,28223+28]..[609,28223+42])
                                                  Ptyp_constr "Gram_def.entry" (compile_gram.ml[609,28223+28]..[609,28223+42])
                                                  []
                                              expression (compile_gram.ml[610,28270+25]..[611,28335+67])
                                                Pexp_tuple
                                                [
                                                  expression (compile_gram.ml[610,28270+27]..[610,28270+62])
                                                    Pexp_apply
                                                    expression (compile_gram.ml[610,28270+27]..[610,28270+39])
                                                      Pexp_ident "Gensym.fresh" (compile_gram.ml[610,28270+27]..[610,28270+39])
                                                    [
                                                      <label> "prefix"
                                                        expression (compile_gram.ml[610,28270+48]..[610,28270+59])
                                                          Pexp_constant Const_string("tmp_entry",None)
                                                      <label> ""
                                                        expression (compile_gram.ml[610,28270+60]..[610,28270+62])
                                                          Pexp_construct "()" (compile_gram.ml[610,28270+60]..[610,28270+62])
                                                          None
                                                    ]
                                                  expression (compile_gram.ml[611,28335+27]..[611,28335+66])
                                                    Pexp_coerce
                                                    expression (compile_gram.ml[611,28335+28]..[611,28335+53])
                                                      Pexp_coerce
                                                      expression (compile_gram.ml[611,28335+29]..[611,28335+40])
                                                        Pexp_field
                                                        expression (compile_gram.ml[611,28335+30]..[611,28335+36])
                                                          Pexp_field
                                                          expression (compile_gram.ml[611,28335+30]..[611,28335+31])
                                                            Pexp_ident "x" (compile_gram.ml[611,28335+30]..[611,28335+31])
                                                          "name" (compile_gram.ml[611,28335+32]..[611,28335+36])
                                                        "id" (compile_gram.ml[611,28335+38]..[611,28335+40])
                                                      None
                                                      core_type (compile_gram.ml[611,28335+44]..[611,28335+52])
                                                        Ptyp_constr "Astf.exp" (compile_gram.ml[611,28335+44]..[611,28335+52])
                                                        []
                                                    None
                                                    core_type (compile_gram.ml[611,28335+57]..[611,28335+65])
                                                      Ptyp_constr "Astf.exp" (compile_gram.ml[611,28335+57]..[611,28335+65])
                                                      []
                                                ]
                                          ]
                                      <label> ""
                                        expression (compile_gram.ml[611,28335+69]..[611,28335+76])
                                          Pexp_ident "globals" (compile_gram.ml[611,28335+69]..[611,28335+76])
                                    ]
                              ]
                              expression (compile_gram.ml[612,28415+16]..[666,30983+27])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (compile_gram.ml[612,28415+20]..[612,28415+30])
                                      Ppat_var "save_binds" (compile_gram.ml[612,28415+20]..[612,28415+30])
                                    expression (compile_gram.ml[613,28448+18]..[623,28883+74])
                                      Pexp_apply
                                      expression (compile_gram.ml[613,28448+18]..[613,28448+26])
                                        Pexp_ident "List.map" (compile_gram.ml[613,28448+18]..[613,28448+26])
                                      [
                                        <label> ""
                                          expression (compile_gram.ml[614,28475+21]..[623,28883+67])
                                            Pexp_function
                                            [
                                              <case>
                                                pattern (compile_gram.ml[615,28505+23]..[615,28505+30])
                                                  Ppat_tuple
                                                  [
                                                    pattern (compile_gram.ml[615,28505+24]..[615,28505+27])
                                                      Ppat_var "tmp" (compile_gram.ml[615,28505+24]..[615,28505+27])
                                                    pattern (compile_gram.ml[615,28505+28]..[615,28505+29])
                                                      Ppat_var "e" (compile_gram.ml[615,28505+28]..[615,28505+29])
                                                  ]
                                                expression (compile_gram.ml[616,28539+25]..[623,28883+67])
                                                  Pexp_coerce
                                                  expression (compile_gram.ml[616,28539+26]..[623,28883+53])
                                                    Pexp_variant "Bind"
                                                    Some
                                                      expression (compile_gram.ml[617,28571+28]..[623,28883+53])
                                                        Pexp_tuple
                                                        [
                                                          expression (compile_gram.ml[617,28571+29]..[617,28571+33])
                                                            Pexp_ident "_loc" (compile_gram.ml[617,28571+29]..[617,28571+33])
                                                          expression (compile_gram.ml[617,28571+36]..[617,28571+52])
                                                            Pexp_variant "Lid"
                                                            Some
                                                              expression (compile_gram.ml[617,28571+41]..[617,28571+52])
                                                                Pexp_tuple
                                                                [
                                                                  expression (compile_gram.ml[617,28571+42]..[617,28571+46])
                                                                    Pexp_ident "_loc" (compile_gram.ml[617,28571+42]..[617,28571+46])
                                                                  expression (compile_gram.ml[617,28571+48]..[617,28571+51])
                                                                    Pexp_ident "tmp" (compile_gram.ml[617,28571+48]..[617,28571+51])
                                                                ]
                                                          expression (compile_gram.ml[618,28626+31]..[623,28883+51])
                                                            Pexp_variant "App"
                                                            Some
                                                              expression (compile_gram.ml[619,28662+33]..[623,28883+51])
                                                                Pexp_tuple
                                                                [
                                                                  expression (compile_gram.ml[619,28662+34]..[619,28662+38])
                                                                    Pexp_ident "_loc" (compile_gram.ml[619,28662+34]..[619,28662+38])
                                                                  expression (compile_gram.ml[620,28702+36]..[622,28812+68])
                                                                    Pexp_variant "Dot"
                                                                    Some
                                                                      expression (compile_gram.ml[621,28743+38]..[622,28812+68])
Pexp_tuple
[
  expression (compile_gram.ml[621,28743+39]..[621,28743+43])
    Pexp_ident "_loc" (compile_gram.ml[621,28743+39]..[621,28743+43])
  expression (compile_gram.ml[621,28743+46]..[621,28743+66])
    Pexp_variant "Uid"
    Some
      expression (compile_gram.ml[621,28743+51]..[621,28743+66])
        Pexp_tuple
        [
          expression (compile_gram.ml[621,28743+52]..[621,28743+56])
            Pexp_ident "_loc" (compile_gram.ml[621,28743+52]..[621,28743+56])
          expression (compile_gram.ml[621,28743+58]..[621,28743+65])
            Pexp_constant Const_string("Gramf",None)
        ]
  expression (compile_gram.ml[622,28812+41]..[622,28812+66])
    Pexp_variant "Lid"
    Some
      expression (compile_gram.ml[622,28812+46]..[622,28812+66])
        Pexp_tuple
        [
          expression (compile_gram.ml[622,28812+47]..[622,28812+51])
            Pexp_ident "_loc" (compile_gram.ml[622,28812+47]..[622,28812+51])
          expression (compile_gram.ml[622,28812+53]..[622,28812+65])
            Pexp_constant Const_string("get_levels",None)
        ]
]
                                                                  expression (compile_gram.ml[623,28883+35]..[623,28883+50])
                                                                    Pexp_coerce
                                                                    expression (compile_gram.ml[623,28883+36]..[623,28883+37])
                                                                      Pexp_ident "e" (compile_gram.ml[623,28883+36]..[623,28883+37])
                                                                    None
                                                                    core_type (compile_gram.ml[623,28883+41]..[623,28883+49])
                                                                      Ptyp_constr "Astf.exp" (compile_gram.ml[623,28883+41]..[623,28883+49])
                                                                      []
                                                                ]
                                                        ]
                                                  None
                                                  core_type (compile_gram.ml[623,28883+57]..[623,28883+66])
                                                    Ptyp_constr "Astf.bind" (compile_gram.ml[623,28883+57]..[623,28883+66])
                                                    []
                                            ]
                                        <label> ""
                                          expression (compile_gram.ml[623,28883+69]..[623,28883+74])
                                            Pexp_ident "binds" (compile_gram.ml[623,28883+69]..[623,28883+74])
                                      ]
                                ]
                                expression (compile_gram.ml[624,28961+16]..[666,30983+27])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (compile_gram.ml[624,28961+20]..[624,28961+31])
                                        Ppat_var "pop_actions" (compile_gram.ml[624,28961+20]..[624,28961+31])
                                      expression (compile_gram.ml[625,28995+18]..[637,29557+45])
                                        Pexp_apply
                                        expression (compile_gram.ml[625,28995+26]..[625,28995+28])
                                          Pexp_ident "@@" (compile_gram.ml[625,28995+26]..[625,28995+28])
                                        [
                                          <label> ""
                                            expression (compile_gram.ml[625,28995+18]..[625,28995+25])
                                              Pexp_ident "seq_sem" (compile_gram.ml[625,28995+18]..[625,28995+25])
                                          <label> ""
                                            expression (compile_gram.ml[626,29024+21]..[637,29557+44])
                                              Pexp_apply
                                              expression (compile_gram.ml[626,29024+21]..[626,29024+30])
                                                Pexp_ident "Listf.map" (compile_gram.ml[626,29024+21]..[626,29024+30])
                                              [
                                                <label> ""
                                                  expression (compile_gram.ml[627,29055+24]..[637,29557+37])
                                                    Pexp_function
                                                    [
                                                      <case>
                                                        pattern (compile_gram.ml[628,29088+26]..[628,29088+33])
                                                          Ppat_tuple
                                                          [
                                                            pattern (compile_gram.ml[628,29088+27]..[628,29088+30])
                                                              Ppat_var "tmp" (compile_gram.ml[628,29088+27]..[628,29088+30])
                                                            pattern (compile_gram.ml[628,29088+31]..[628,29088+32])
                                                              Ppat_var "e" (compile_gram.ml[628,29088+31]..[628,29088+32])
                                                          ]
                                                        expression (compile_gram.ml[629,29125+28]..[637,29557+37])
                                                          Pexp_coerce
                                                          expression (compile_gram.ml[629,29125+29]..[636,29476+76])
                                                            Pexp_variant "App"
                                                            Some
                                                              expression (compile_gram.ml[630,29159+31]..[636,29476+76])
                                                                Pexp_tuple
                                                                [
                                                                  expression (compile_gram.ml[630,29159+32]..[630,29159+36])
                                                                    Pexp_ident "_loc" (compile_gram.ml[630,29159+32]..[630,29159+36])
                                                                  expression (compile_gram.ml[631,29197+34]..[636,29476+54])
                                                                    Pexp_variant "App"
                                                                    Some
                                                                      expression (compile_gram.ml[632,29236+36]..[636,29476+54])
Pexp_tuple
[
  expression (compile_gram.ml[632,29236+37]..[632,29236+41])
    Pexp_ident "_loc" (compile_gram.ml[632,29236+37]..[632,29236+41])
  expression (compile_gram.ml[633,29279+39]..[635,29395+78])
    Pexp_variant "Dot"
    Some
      expression (compile_gram.ml[634,29323+41]..[635,29395+78])
        Pexp_tuple
        [
          expression (compile_gram.ml[634,29323+42]..[634,29323+46])
            Pexp_ident "_loc" (compile_gram.ml[634,29323+42]..[634,29323+46])
          expression (compile_gram.ml[634,29323+49]..[634,29323+69])
            Pexp_variant "Uid"
            Some
              expression (compile_gram.ml[634,29323+54]..[634,29323+69])
                Pexp_tuple
                [
                  expression (compile_gram.ml[634,29323+55]..[634,29323+59])
                    Pexp_ident "_loc" (compile_gram.ml[634,29323+55]..[634,29323+59])
                  expression (compile_gram.ml[634,29323+61]..[634,29323+68])
                    Pexp_constant Const_string("Gramf",None)
                ]
          expression (compile_gram.ml[635,29395+44]..[635,29395+76])
            Pexp_variant "Lid"
            Some
              expression (compile_gram.ml[635,29395+49]..[635,29395+76])
                Pexp_tuple
                [
                  expression (compile_gram.ml[635,29395+50]..[635,29395+54])
                    Pexp_ident "_loc" (compile_gram.ml[635,29395+50]..[635,29395+54])
                  expression (compile_gram.ml[635,29395+56]..[635,29395+75])
                    Pexp_constant Const_string("fresh_with_levels",None)
                ]
        ]
  expression (compile_gram.ml[636,29476+38]..[636,29476+53])
    Pexp_coerce
    expression (compile_gram.ml[636,29476+39]..[636,29476+40])
      Pexp_ident "e" (compile_gram.ml[636,29476+39]..[636,29476+40])
    None
    core_type (compile_gram.ml[636,29476+44]..[636,29476+52])
      Ptyp_constr "Astf.exp" (compile_gram.ml[636,29476+44]..[636,29476+52])
      []
]
                                                                  expression (compile_gram.ml[636,29476+58]..[636,29476+74])
                                                                    Pexp_variant "Lid"
                                                                    Some
                                                                      expression (compile_gram.ml[636,29476+63]..[636,29476+74])
Pexp_tuple
[
  expression (compile_gram.ml[636,29476+64]..[636,29476+68])
    Pexp_ident "_loc" (compile_gram.ml[636,29476+64]..[636,29476+68])
  expression (compile_gram.ml[636,29476+70]..[636,29476+73])
    Pexp_ident "tmp" (compile_gram.ml[636,29476+70]..[636,29476+73])
]
                                                                ]
                                                          None
                                                          core_type (compile_gram.ml[637,29557+28]..[637,29557+36])
                                                            Ptyp_constr "Astf.exp" (compile_gram.ml[637,29557+28]..[637,29557+36])
                                                            []
                                                    ]
                                                <label> ""
                                                  expression (compile_gram.ml[637,29557+39]..[637,29557+44])
                                                    Pexp_ident "binds" (compile_gram.ml[637,29557+39]..[637,29557+44])
                                              ]
                                        ]
                                  ]
                                  expression (compile_gram.ml[638,29606+16]..[666,30983+27])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (compile_gram.ml[638,29606+20]..[638,29606+21])
                                          Ppat_var "e" (compile_gram.ml[638,29606+20]..[638,29606+21])
                                        expression (compile_gram.ml[638,29606+24]..[638,29606+35])
                                          Pexp_apply
                                          expression (compile_gram.ml[638,29606+24]..[638,29606+28])
                                            Pexp_ident "make" (compile_gram.ml[638,29606+24]..[638,29606+28])
                                          [
                                            <label> ""
                                              expression (compile_gram.ml[638,29606+29]..[638,29606+33])
                                                Pexp_ident "_loc" (compile_gram.ml[638,29606+29]..[638,29606+33])
                                            <label> ""
                                              expression (compile_gram.ml[638,29606+34]..[638,29606+35])
                                                Pexp_ident "x" (compile_gram.ml[638,29606+34]..[638,29606+35])
                                          ]
                                    ]
                                    expression (compile_gram.ml[639,29645+16]..[666,30983+27])
                                      Pexp_apply
                                      expression (compile_gram.ml[639,29645+16]..[639,29645+29])
                                        Pexp_ident "Ast_gen.binds" (compile_gram.ml[639,29645+16]..[639,29645+29])
                                      [
                                        <label> ""
                                          expression (compile_gram.ml[639,29645+30]..[639,29645+40])
                                            Pexp_ident "save_binds" (compile_gram.ml[639,29645+30]..[639,29645+40])
                                        <label> ""
                                          expression (compile_gram.ml[640,29686+18]..[666,30983+27])
                                            Pexp_coerce
                                            expression (compile_gram.ml[640,29686+19]..[665,30908+70])
                                              Pexp_variant "Try"
                                              Some
                                                expression (compile_gram.ml[641,29710+21]..[665,30908+70])
                                                  Pexp_tuple
                                                  [
                                                    expression (compile_gram.ml[641,29710+22]..[641,29710+26])
                                                      Pexp_ident "_loc" (compile_gram.ml[641,29710+22]..[641,29710+26])
                                                    expression (compile_gram.ml[642,29738+24]..[656,30445+80])
                                                      Pexp_variant "Seq"
                                                      Some
                                                        expression (compile_gram.ml[643,29767+26]..[656,30445+80])
                                                          Pexp_tuple
                                                          [
                                                            expression (compile_gram.ml[643,29767+27]..[643,29767+31])
                                                              Pexp_ident "_loc" (compile_gram.ml[643,29767+27]..[643,29767+31])
                                                            expression (compile_gram.ml[644,29800+29]..[656,30445+78])
                                                              Pexp_variant "Sem"
                                                              Some
                                                                expression (compile_gram.ml[645,29834+31]..[656,30445+78])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (compile_gram.ml[645,29834+32]..[645,29834+36])
                                                                      Pexp_ident "_loc" (compile_gram.ml[645,29834+32]..[645,29834+36])
                                                                    expression (compile_gram.ml[645,29834+38]..[645,29834+53])
                                                                      Pexp_coerce
                                                                      expression (compile_gram.ml[645,29834+39]..[645,29834+40])
Pexp_ident "e" (compile_gram.ml[645,29834+39]..[645,29834+40])
                                                                      None
                                                                      core_type (compile_gram.ml[645,29834+44]..[645,29834+52])
Ptyp_constr "Astf.exp" (compile_gram.ml[645,29834+44]..[645,29834+52])
[]
                                                                    expression (compile_gram.ml[646,29889+34]..[656,30445+76])
                                                                      Pexp_variant "LetIn"
                                                                      Some
expression (compile_gram.ml[647,29930+36]..[656,30445+76])
  Pexp_tuple
  [
    expression (compile_gram.ml[647,29930+37]..[647,29930+41])
      Pexp_ident "_loc" (compile_gram.ml[647,29930+37]..[647,29930+41])
    expression (compile_gram.ml[647,29930+44]..[647,29930+58])
      Pexp_variant "Negative"
      Some
        expression (compile_gram.ml[647,29930+54]..[647,29930+58])
          Pexp_ident "_loc" (compile_gram.ml[647,29930+54]..[647,29930+58])
    expression (compile_gram.ml[648,29991+39]..[650,30109+64])
      Pexp_variant "Bind"
      Some
        expression (compile_gram.ml[649,30036+41]..[650,30109+64])
          Pexp_tuple
          [
            expression (compile_gram.ml[649,30036+42]..[649,30036+46])
              Pexp_ident "_loc" (compile_gram.ml[649,30036+42]..[649,30036+46])
            expression (compile_gram.ml[649,30036+49]..[649,30036+70])
              Pexp_variant "Lid"
              Some
                expression (compile_gram.ml[649,30036+54]..[649,30036+70])
                  Pexp_tuple
                  [
                    expression (compile_gram.ml[649,30036+55]..[649,30036+59])
                      Pexp_ident "_loc" (compile_gram.ml[649,30036+55]..[649,30036+59])
                    expression (compile_gram.ml[649,30036+61]..[649,30036+69])
                      Pexp_constant Const_string("result",None)
                  ]
            expression (compile_gram.ml[650,30109+43]..[650,30109+63])
              Pexp_coerce
              expression (compile_gram.ml[650,30109+44]..[650,30109+50])
                Pexp_ident "action" (compile_gram.ml[650,30109+44]..[650,30109+50])
              None
              core_type (compile_gram.ml[650,30109+54]..[650,30109+62])
                Ptyp_constr "Astf.exp" (compile_gram.ml[650,30109+54]..[650,30109+62])
                []
          ]
    expression (compile_gram.ml[651,30176+39]..[656,30445+74])
      Pexp_variant "Seq"
      Some
        expression (compile_gram.ml[652,30220+41]..[656,30445+74])
          Pexp_tuple
          [
            expression (compile_gram.ml[652,30220+42]..[652,30220+46])
              Pexp_ident "_loc" (compile_gram.ml[652,30220+42]..[652,30220+46])
            expression (compile_gram.ml[653,30268+44]..[656,30445+72])
              Pexp_variant "Sem"
              Some
                expression (compile_gram.ml[654,30317+46]..[656,30445+72])
                  Pexp_tuple
                  [
                    expression (compile_gram.ml[654,30317+47]..[654,30317+51])
                      Pexp_ident "_loc" (compile_gram.ml[654,30317+47]..[654,30317+51])
                    expression (compile_gram.ml[655,30370+48]..[655,30370+73])
                      Pexp_coerce
                      expression (compile_gram.ml[655,30370+49]..[655,30370+60])
                        Pexp_ident "pop_actions" (compile_gram.ml[655,30370+49]..[655,30370+60])
                      None
                      core_type (compile_gram.ml[655,30370+64]..[655,30370+72])
                        Ptyp_constr "Astf.exp" (compile_gram.ml[655,30370+64]..[655,30370+72])
                        []
                    expression (compile_gram.ml[656,30445+49]..[656,30445+70])
                      Pexp_variant "Lid"
                      Some
                        expression (compile_gram.ml[656,30445+54]..[656,30445+70])
                          Pexp_tuple
                          [
                            expression (compile_gram.ml[656,30445+55]..[656,30445+59])
                              Pexp_ident "_loc" (compile_gram.ml[656,30445+55]..[656,30445+59])
                            expression (compile_gram.ml[656,30445+61]..[656,30445+69])
                              Pexp_constant Const_string("result",None)
                          ]
                  ]
          ]
  ]
                                                                  ]
                                                          ]
                                                    expression (compile_gram.ml[657,30528+24]..[665,30908+68])
                                                      Pexp_variant "Case"
                                                      Some
                                                        expression (compile_gram.ml[658,30558+26]..[665,30908+68])
                                                          Pexp_tuple
                                                          [
                                                            expression (compile_gram.ml[658,30558+27]..[658,30558+31])
                                                              Pexp_ident "_loc" (compile_gram.ml[658,30558+27]..[658,30558+31])
                                                            expression (compile_gram.ml[658,30558+34]..[658,30558+50])
                                                              Pexp_variant "Lid"
                                                              Some
                                                                expression (compile_gram.ml[658,30558+39]..[658,30558+50])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (compile_gram.ml[658,30558+40]..[658,30558+44])
                                                                      Pexp_ident "_loc" (compile_gram.ml[658,30558+40]..[658,30558+44])
                                                                    expression (compile_gram.ml[658,30558+46]..[658,30558+49])
                                                                      Pexp_constant Const_string("x",None)
                                                                  ]
                                                            expression (compile_gram.ml[659,30611+29]..[665,30908+66])
                                                              Pexp_variant "Seq"
                                                              Some
                                                                expression (compile_gram.ml[660,30645+31]..[665,30908+66])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (compile_gram.ml[660,30645+32]..[660,30645+36])
                                                                      Pexp_ident "_loc" (compile_gram.ml[660,30645+32]..[660,30645+36])
                                                                    expression (compile_gram.ml[661,30683+34]..[665,30908+64])
                                                                      Pexp_variant "Sem"
                                                                      Some
expression (compile_gram.ml[662,30722+36]..[665,30908+64])
  Pexp_tuple
  [
    expression (compile_gram.ml[662,30722+37]..[662,30722+41])
      Pexp_ident "_loc" (compile_gram.ml[662,30722+37]..[662,30722+41])
    expression (compile_gram.ml[662,30722+43]..[662,30722+68])
      Pexp_coerce
      expression (compile_gram.ml[662,30722+44]..[662,30722+55])
        Pexp_ident "pop_actions" (compile_gram.ml[662,30722+44]..[662,30722+55])
      None
      core_type (compile_gram.ml[662,30722+59]..[662,30722+67])
        Ptyp_constr "Astf.exp" (compile_gram.ml[662,30722+59]..[662,30722+67])
        []
    expression (compile_gram.ml[663,30792+39]..[665,30908+62])
      Pexp_variant "App"
      Some
        expression (compile_gram.ml[664,30836+41]..[665,30908+62])
          Pexp_tuple
          [
            expression (compile_gram.ml[664,30836+42]..[664,30836+46])
              Pexp_ident "_loc" (compile_gram.ml[664,30836+42]..[664,30836+46])
            expression (compile_gram.ml[664,30836+49]..[664,30836+69])
              Pexp_variant "Lid"
              Some
                expression (compile_gram.ml[664,30836+54]..[664,30836+69])
                  Pexp_tuple
                  [
                    expression (compile_gram.ml[664,30836+55]..[664,30836+59])
                      Pexp_ident "_loc" (compile_gram.ml[664,30836+55]..[664,30836+59])
                    expression (compile_gram.ml[664,30836+61]..[664,30836+68])
                      Pexp_constant Const_string("raise",None)
                  ]
            expression (compile_gram.ml[665,30908+44]..[665,30908+60])
              Pexp_variant "Lid"
              Some
                expression (compile_gram.ml[665,30908+49]..[665,30908+60])
                  Pexp_tuple
                  [
                    expression (compile_gram.ml[665,30908+50]..[665,30908+54])
                      Pexp_ident "_loc" (compile_gram.ml[665,30908+50]..[665,30908+54])
                    expression (compile_gram.ml[665,30908+56]..[665,30908+59])
                      Pexp_constant Const_string("x",None)
                  ]
          ]
  ]
                                                                  ]
                                                          ]
                                                  ]
                                            None
                                            core_type (compile_gram.ml[666,30983+18]..[666,30983+26])
                                              Ptyp_constr "Astf.exp" (compile_gram.ml[666,30983+18]..[666,30983+26])
                                              []
                                      ]
                      ]
                ]
          ]
    ]
]
