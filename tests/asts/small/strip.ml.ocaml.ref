[
  structure_item (strip.ml[1,0+0]..[1,0+9])
    Pstr_open Fresh "Astf" (strip.ml[1,0+5]..[1,0+9])
  structure_item (strip.ml[2,10+0]..[2,10+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (strip.ml[2,10+4]..[2,10+7])
          Ppat_var "ant" (strip.ml[2,10+4]..[2,10+7])
        expression (strip.ml[2,10+10]..[2,10+27])
          Pexp_function
          [
            <case>
              pattern (strip.ml[2,10+21]..[2,10+22])
                Ppat_var "x" (strip.ml[2,10+21]..[2,10+22])
              expression (strip.ml[2,10+26]..[2,10+27])
                Pexp_ident "x" (strip.ml[2,10+26]..[2,10+27])
          ]
    ]
  structure_item (strip.ml[3,38+0]..[13,364+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (strip.ml[3,38+4]..[3,38+11])
          Ppat_var "literal" (strip.ml[3,38+4]..[3,38+11])
        expression (strip.ml[3,38+11]..[13,364+22]) ghost
          Pexp_constraint
          expression (strip.ml[4,83+2]..[13,364+22])
            Pexp_function
            [
              <case>
                pattern (strip.ml[5,94+4]..[5,94+18])
                  Ppat_variant "Chr"
                  Some
                    pattern (strip.ml[5,94+9]..[5,94+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[5,94+10]..[5,94+13])
                          Ppat_var "_a0" (strip.ml[5,94+10]..[5,94+13])
                        pattern (strip.ml[5,94+14]..[5,94+17])
                          Ppat_var "_a1" (strip.ml[5,94+14]..[5,94+17])
                      ]
                expression (strip.ml[5,94+22]..[5,94+30])
                  Pexp_variant "Chr"
                  Some
                    expression (strip.ml[5,94+27]..[5,94+30])
                      Pexp_ident "_a1" (strip.ml[5,94+27]..[5,94+30])
              <case>
                pattern (strip.ml[6,125+4]..[6,125+18])
                  Ppat_variant "Int"
                  Some
                    pattern (strip.ml[6,125+9]..[6,125+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[6,125+10]..[6,125+13])
                          Ppat_var "_a0" (strip.ml[6,125+10]..[6,125+13])
                        pattern (strip.ml[6,125+14]..[6,125+17])
                          Ppat_var "_a1" (strip.ml[6,125+14]..[6,125+17])
                      ]
                expression (strip.ml[6,125+22]..[6,125+30])
                  Pexp_variant "Int"
                  Some
                    expression (strip.ml[6,125+27]..[6,125+30])
                      Pexp_ident "_a1" (strip.ml[6,125+27]..[6,125+30])
              <case>
                pattern (strip.ml[7,156+4]..[7,156+20])
                  Ppat_variant "Int32"
                  Some
                    pattern (strip.ml[7,156+11]..[7,156+20])
                      Ppat_tuple
                      [
                        pattern (strip.ml[7,156+12]..[7,156+15])
                          Ppat_var "_a0" (strip.ml[7,156+12]..[7,156+15])
                        pattern (strip.ml[7,156+16]..[7,156+19])
                          Ppat_var "_a1" (strip.ml[7,156+16]..[7,156+19])
                      ]
                expression (strip.ml[7,156+24]..[7,156+34])
                  Pexp_variant "Int32"
                  Some
                    expression (strip.ml[7,156+31]..[7,156+34])
                      Pexp_ident "_a1" (strip.ml[7,156+31]..[7,156+34])
              <case>
                pattern (strip.ml[8,191+4]..[8,191+20])
                  Ppat_variant "Int64"
                  Some
                    pattern (strip.ml[8,191+11]..[8,191+20])
                      Ppat_tuple
                      [
                        pattern (strip.ml[8,191+12]..[8,191+15])
                          Ppat_var "_a0" (strip.ml[8,191+12]..[8,191+15])
                        pattern (strip.ml[8,191+16]..[8,191+19])
                          Ppat_var "_a1" (strip.ml[8,191+16]..[8,191+19])
                      ]
                expression (strip.ml[8,191+24]..[8,191+34])
                  Pexp_variant "Int64"
                  Some
                    expression (strip.ml[8,191+31]..[8,191+34])
                      Pexp_ident "_a1" (strip.ml[8,191+31]..[8,191+34])
              <case>
                pattern (strip.ml[9,226+4]..[9,226+18])
                  Ppat_variant "Flo"
                  Some
                    pattern (strip.ml[9,226+9]..[9,226+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[9,226+10]..[9,226+13])
                          Ppat_var "_a0" (strip.ml[9,226+10]..[9,226+13])
                        pattern (strip.ml[9,226+14]..[9,226+17])
                          Ppat_var "_a1" (strip.ml[9,226+14]..[9,226+17])
                      ]
                expression (strip.ml[9,226+22]..[9,226+30])
                  Pexp_variant "Flo"
                  Some
                    expression (strip.ml[9,226+27]..[9,226+30])
                      Pexp_ident "_a1" (strip.ml[9,226+27]..[9,226+30])
              <case>
                pattern (strip.ml[10,257+4]..[10,257+24])
                  Ppat_variant "Nativeint"
                  Some
                    pattern (strip.ml[10,257+15]..[10,257+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[10,257+16]..[10,257+19])
                          Ppat_var "_a0" (strip.ml[10,257+16]..[10,257+19])
                        pattern (strip.ml[10,257+20]..[10,257+23])
                          Ppat_var "_a1" (strip.ml[10,257+20]..[10,257+23])
                      ]
                expression (strip.ml[10,257+28]..[10,257+42])
                  Pexp_variant "Nativeint"
                  Some
                    expression (strip.ml[10,257+39]..[10,257+42])
                      Pexp_ident "_a1" (strip.ml[10,257+39]..[10,257+42])
              <case>
                pattern (strip.ml[11,300+4]..[11,300+18])
                  Ppat_variant "Str"
                  Some
                    pattern (strip.ml[11,300+9]..[11,300+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[11,300+10]..[11,300+13])
                          Ppat_var "_a0" (strip.ml[11,300+10]..[11,300+13])
                        pattern (strip.ml[11,300+14]..[11,300+17])
                          Ppat_var "_a1" (strip.ml[11,300+14]..[11,300+17])
                      ]
                expression (strip.ml[11,300+22]..[11,300+30])
                  Pexp_variant "Str"
                  Some
                    expression (strip.ml[11,300+27]..[11,300+30])
                      Pexp_ident "_a1" (strip.ml[11,300+27]..[11,300+30])
              <case>
                pattern (strip.ml[12,331+4]..[12,331+19])
                  Ppat_variant "Bool"
                  Some
                    pattern (strip.ml[12,331+10]..[12,331+19])
                      Ppat_tuple
                      [
                        pattern (strip.ml[12,331+11]..[12,331+14])
                          Ppat_var "_a0" (strip.ml[12,331+11]..[12,331+14])
                        pattern (strip.ml[12,331+15]..[12,331+18])
                          Ppat_var "_a1" (strip.ml[12,331+15]..[12,331+18])
                      ]
                expression (strip.ml[12,331+23]..[12,331+32])
                  Pexp_variant "Bool"
                  Some
                    expression (strip.ml[12,331+29]..[12,331+32])
                      Pexp_ident "_a1" (strip.ml[12,331+29]..[12,331+32])
              <case>
                pattern (strip.ml[13,364+4]..[13,364+13])
                  Ppat_variant "Unit"
                  Some
                    pattern (strip.ml[13,364+10]..[13,364+13])
                      Ppat_var "_a0" (strip.ml[13,364+10]..[13,364+13])
                expression (strip.ml[13,364+17]..[13,364+22])
                  Pexp_variant "Unit"
                  None
            ]
          core_type (strip.ml[3,38+13]..[3,38+42])
            Ptyp_arrow
            ""
            core_type (strip.ml[3,38+13]..[3,38+25])
              Ptyp_constr "Astf.literal" (strip.ml[3,38+13]..[3,38+25])
              []
            core_type (strip.ml[3,38+29]..[3,38+42])
              Ptyp_constr "Astfn.literal" (strip.ml[3,38+29]..[3,38+42])
              []
    ]
  structure_item (strip.ml[14,387+0]..[18,496+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (strip.ml[14,387+4]..[14,387+8])
          Ppat_var "flag" (strip.ml[14,387+4]..[14,387+8])
        expression (strip.ml[14,387+8]..[18,496+42]) ghost
          Pexp_constraint
          expression (strip.ml[15,423+2]..[18,496+42])
            Pexp_function
            [
              <case>
                pattern (strip.ml[16,434+4]..[16,434+17])
                  Ppat_variant "Positive"
                  Some
                    pattern (strip.ml[16,434+14]..[16,434+17])
                      Ppat_var "_a0" (strip.ml[16,434+14]..[16,434+17])
                expression (strip.ml[16,434+21]..[16,434+30])
                  Pexp_variant "Positive"
                  None
              <case>
                pattern (strip.ml[17,465+4]..[17,465+17])
                  Ppat_variant "Negative"
                  Some
                    pattern (strip.ml[17,465+14]..[17,465+17])
                      Ppat_var "_a0" (strip.ml[17,465+14]..[17,465+17])
                expression (strip.ml[17,465+21]..[17,465+30])
                  Pexp_variant "Negative"
                  None
              <case>
                pattern (strip.ml[18,496+4]..[18,496+15])
                  Ppat_alias "_a0" (strip.ml[18,496+12]..[18,496+15])
                  pattern (strip.ml[18,496+4]..[18,496+8])
                    Ppat_type
                    "ant" (strip.ml[18,496+5]..[18,496+8])
                expression (strip.ml[18,496+19]..[18,496+42]) ghost
                  Pexp_coerce
                  expression (strip.ml[18,496+20]..[18,496+27])
                    Pexp_apply
                    expression (strip.ml[18,496+20]..[18,496+23])
                      Pexp_ident "ant" (strip.ml[18,496+20]..[18,496+23])
                    [
                      <label> ""
                        expression (strip.ml[18,496+24]..[18,496+27])
                          Pexp_ident "_a0" (strip.ml[18,496+24]..[18,496+27])
                    ]
                  None
                  core_type (strip.ml[18,496+31]..[18,496+41])
                    Ptyp_constr "Astfn.flag" (strip.ml[18,496+31]..[18,496+41])
                    []
            ]
          core_type (strip.ml[14,387+10]..[14,387+33])
            Ptyp_arrow
            ""
            core_type (strip.ml[14,387+10]..[14,387+19])
              Ptyp_constr "Astf.flag" (strip.ml[14,387+10]..[14,387+19])
              []
            core_type (strip.ml[14,387+23]..[14,387+33])
              Ptyp_constr "Astfn.flag" (strip.ml[14,387+23]..[14,387+33])
              []
    ]
  structure_item (strip.ml[19,539+0]..[24,702+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (strip.ml[19,539+4]..[19,539+17])
          Ppat_var "position_flag" (strip.ml[19,539+4]..[19,539+17])
        expression (strip.ml[19,539+17]..[24,702+51]) ghost
          Pexp_constraint
          expression (strip.ml[20,602+2]..[24,702+51])
            Pexp_function
            [
              <case>
                pattern (strip.ml[21,613+4]..[21,613+17])
                  Ppat_variant "Positive"
                  Some
                    pattern (strip.ml[21,613+14]..[21,613+17])
                      Ppat_var "_a0" (strip.ml[21,613+14]..[21,613+17])
                expression (strip.ml[21,613+21]..[21,613+30])
                  Pexp_variant "Positive"
                  None
              <case>
                pattern (strip.ml[22,644+4]..[22,644+17])
                  Ppat_variant "Negative"
                  Some
                    pattern (strip.ml[22,644+14]..[22,644+17])
                      Ppat_var "_a0" (strip.ml[22,644+14]..[22,644+17])
                expression (strip.ml[22,644+21]..[22,644+30])
                  Pexp_variant "Negative"
                  None
              <case>
                pattern (strip.ml[23,675+4]..[23,675+15])
                  Ppat_variant "Normal"
                  Some
                    pattern (strip.ml[23,675+12]..[23,675+15])
                      Ppat_var "_a0" (strip.ml[23,675+12]..[23,675+15])
                expression (strip.ml[23,675+19]..[23,675+26])
                  Pexp_variant "Normal"
                  None
              <case>
                pattern (strip.ml[24,702+4]..[24,702+15])
                  Ppat_alias "_a0" (strip.ml[24,702+12]..[24,702+15])
                  pattern (strip.ml[24,702+4]..[24,702+8])
                    Ppat_type
                    "ant" (strip.ml[24,702+5]..[24,702+8])
                expression (strip.ml[24,702+19]..[24,702+51]) ghost
                  Pexp_coerce
                  expression (strip.ml[24,702+20]..[24,702+27])
                    Pexp_apply
                    expression (strip.ml[24,702+20]..[24,702+23])
                      Pexp_ident "ant" (strip.ml[24,702+20]..[24,702+23])
                    [
                      <label> ""
                        expression (strip.ml[24,702+24]..[24,702+27])
                          Pexp_ident "_a0" (strip.ml[24,702+24]..[24,702+27])
                    ]
                  None
                  core_type (strip.ml[24,702+31]..[24,702+50])
                    Ptyp_constr "Astfn.position_flag" (strip.ml[24,702+31]..[24,702+50])
                    []
            ]
          core_type (strip.ml[19,539+19]..[19,539+60])
            Ptyp_arrow
            ""
            core_type (strip.ml[19,539+19]..[19,539+37])
              Ptyp_constr "Astf.position_flag" (strip.ml[19,539+19]..[19,539+37])
              []
            core_type (strip.ml[19,539+41]..[19,539+60])
              Ptyp_constr "Astfn.position_flag" (strip.ml[19,539+41]..[19,539+60])
              []
    ]
  structure_item (strip.ml[25,754+0]..[30,943+45])
    Pstr_value Rec
    [
      <def>
        pattern (strip.ml[25,754+8]..[25,754+15])
          Ppat_var "strings" (strip.ml[25,754+8]..[25,754+15])
        expression (strip.ml[25,754+15]..[30,943+45]) ghost
          Pexp_constraint
          expression (strip.ml[26,803+2]..[30,943+45])
            Pexp_function
            [
              <case>
                pattern (strip.ml[27,814+4]..[27,814+22])
                  Ppat_variant "App"
                  Some
                    pattern (strip.ml[27,814+9]..[27,814+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[27,814+10]..[27,814+13])
                          Ppat_var "_a0" (strip.ml[27,814+10]..[27,814+13])
                        pattern (strip.ml[27,814+14]..[27,814+17])
                          Ppat_var "_a1" (strip.ml[27,814+14]..[27,814+17])
                        pattern (strip.ml[27,814+18]..[27,814+21])
                          Ppat_var "_a2" (strip.ml[27,814+18]..[27,814+21])
                      ]
                expression (strip.ml[28,840+6]..[28,840+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[28,840+10]..[28,840+13])
                        Ppat_var "_a1" (strip.ml[28,840+10]..[28,840+13])
                      expression (strip.ml[28,840+16]..[28,840+27])
                        Pexp_apply
                        expression (strip.ml[28,840+16]..[28,840+23])
                          Pexp_ident "strings" (strip.ml[28,840+16]..[28,840+23])
                        [
                          <label> ""
                            expression (strip.ml[28,840+24]..[28,840+27])
                              Pexp_ident "_a1" (strip.ml[28,840+24]..[28,840+27])
                        ]
                  ]
                  expression (strip.ml[28,840+31]..[28,840+71])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[28,840+35]..[28,840+38])
                          Ppat_var "_a2" (strip.ml[28,840+35]..[28,840+38])
                        expression (strip.ml[28,840+41]..[28,840+52])
                          Pexp_apply
                          expression (strip.ml[28,840+41]..[28,840+48])
                            Pexp_ident "strings" (strip.ml[28,840+41]..[28,840+48])
                          [
                            <label> ""
                              expression (strip.ml[28,840+49]..[28,840+52])
                                Pexp_ident "_a2" (strip.ml[28,840+49]..[28,840+52])
                          ]
                    ]
                    expression (strip.ml[28,840+56]..[28,840+71])
                      Pexp_variant "App"
                      Some
                        expression (strip.ml[28,840+61]..[28,840+71])
                          Pexp_tuple
                          [
                            expression (strip.ml[28,840+62]..[28,840+65])
                              Pexp_ident "_a1" (strip.ml[28,840+62]..[28,840+65])
                            expression (strip.ml[28,840+67]..[28,840+70])
                              Pexp_ident "_a2" (strip.ml[28,840+67]..[28,840+70])
                          ]
              <case>
                pattern (strip.ml[29,912+4]..[29,912+18])
                  Ppat_variant "Str"
                  Some
                    pattern (strip.ml[29,912+9]..[29,912+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[29,912+10]..[29,912+13])
                          Ppat_var "_a0" (strip.ml[29,912+10]..[29,912+13])
                        pattern (strip.ml[29,912+14]..[29,912+17])
                          Ppat_var "_a1" (strip.ml[29,912+14]..[29,912+17])
                      ]
                expression (strip.ml[29,912+22]..[29,912+30])
                  Pexp_variant "Str"
                  Some
                    expression (strip.ml[29,912+27]..[29,912+30])
                      Pexp_ident "_a1" (strip.ml[29,912+27]..[29,912+30])
              <case>
                pattern (strip.ml[30,943+4]..[30,943+15])
                  Ppat_alias "_a0" (strip.ml[30,943+12]..[30,943+15])
                  pattern (strip.ml[30,943+4]..[30,943+8])
                    Ppat_type
                    "ant" (strip.ml[30,943+5]..[30,943+8])
                expression (strip.ml[30,943+19]..[30,943+45]) ghost
                  Pexp_coerce
                  expression (strip.ml[30,943+20]..[30,943+27])
                    Pexp_apply
                    expression (strip.ml[30,943+20]..[30,943+23])
                      Pexp_ident "ant" (strip.ml[30,943+20]..[30,943+23])
                    [
                      <label> ""
                        expression (strip.ml[30,943+24]..[30,943+27])
                          Pexp_ident "_a0" (strip.ml[30,943+24]..[30,943+27])
                    ]
                  None
                  core_type (strip.ml[30,943+31]..[30,943+44])
                    Ptyp_constr "Astfn.strings" (strip.ml[30,943+31]..[30,943+44])
                    []
            ]
          core_type (strip.ml[25,754+17]..[25,754+46])
            Ptyp_arrow
            ""
            core_type (strip.ml[25,754+17]..[25,754+29])
              Ptyp_constr "Astf.strings" (strip.ml[25,754+17]..[25,754+29])
              []
            core_type (strip.ml[25,754+33]..[25,754+46])
              Ptyp_constr "Astfn.strings" (strip.ml[25,754+33]..[25,754+46])
              []
    ]
  structure_item (strip.ml[31,989+0]..[32,1031+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (strip.ml[31,989+4]..[31,989+10])
          Ppat_var "lident" (strip.ml[31,989+4]..[31,989+10])
        expression (strip.ml[31,989+10]..[32,1031+39]) ghost
          Pexp_constraint
          expression (strip.ml[32,1031+2]..[32,1031+39])
            Pexp_function
            [
              <case>
                pattern (strip.ml[32,1031+13]..[32,1031+27])
                  Ppat_variant "Lid"
                  Some
                    pattern (strip.ml[32,1031+18]..[32,1031+27])
                      Ppat_tuple
                      [
                        pattern (strip.ml[32,1031+19]..[32,1031+22])
                          Ppat_var "_a0" (strip.ml[32,1031+19]..[32,1031+22])
                        pattern (strip.ml[32,1031+23]..[32,1031+26])
                          Ppat_var "_a1" (strip.ml[32,1031+23]..[32,1031+26])
                      ]
                expression (strip.ml[32,1031+31]..[32,1031+39])
                  Pexp_variant "Lid"
                  Some
                    expression (strip.ml[32,1031+36]..[32,1031+39])
                      Pexp_ident "_a1" (strip.ml[32,1031+36]..[32,1031+39])
            ]
          core_type (strip.ml[31,989+12]..[31,989+39])
            Ptyp_arrow
            ""
            core_type (strip.ml[31,989+12]..[31,989+23])
              Ptyp_constr "Astf.lident" (strip.ml[31,989+12]..[31,989+23])
              []
            core_type (strip.ml[31,989+27]..[31,989+39])
              Ptyp_constr "Astfn.lident" (strip.ml[31,989+27]..[31,989+39])
              []
    ]
  structure_item (strip.ml[33,1071+0]..[36,1158+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (strip.ml[33,1071+4]..[33,1071+11])
          Ppat_var "alident" (strip.ml[33,1071+4]..[33,1071+11])
        expression (strip.ml[33,1071+11]..[36,1158+45]) ghost
          Pexp_constraint
          expression (strip.ml[34,1116+2]..[36,1158+45])
            Pexp_function
            [
              <case>
                pattern (strip.ml[35,1127+4]..[35,1127+18])
                  Ppat_variant "Lid"
                  Some
                    pattern (strip.ml[35,1127+9]..[35,1127+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[35,1127+10]..[35,1127+13])
                          Ppat_var "_a0" (strip.ml[35,1127+10]..[35,1127+13])
                        pattern (strip.ml[35,1127+14]..[35,1127+17])
                          Ppat_var "_a1" (strip.ml[35,1127+14]..[35,1127+17])
                      ]
                expression (strip.ml[35,1127+22]..[35,1127+30])
                  Pexp_variant "Lid"
                  Some
                    expression (strip.ml[35,1127+27]..[35,1127+30])
                      Pexp_ident "_a1" (strip.ml[35,1127+27]..[35,1127+30])
              <case>
                pattern (strip.ml[36,1158+4]..[36,1158+15])
                  Ppat_alias "_a0" (strip.ml[36,1158+12]..[36,1158+15])
                  pattern (strip.ml[36,1158+4]..[36,1158+8])
                    Ppat_type
                    "ant" (strip.ml[36,1158+5]..[36,1158+8])
                expression (strip.ml[36,1158+19]..[36,1158+45]) ghost
                  Pexp_coerce
                  expression (strip.ml[36,1158+20]..[36,1158+27])
                    Pexp_apply
                    expression (strip.ml[36,1158+20]..[36,1158+23])
                      Pexp_ident "ant" (strip.ml[36,1158+20]..[36,1158+23])
                    [
                      <label> ""
                        expression (strip.ml[36,1158+24]..[36,1158+27])
                          Pexp_ident "_a0" (strip.ml[36,1158+24]..[36,1158+27])
                    ]
                  None
                  core_type (strip.ml[36,1158+31]..[36,1158+44])
                    Ptyp_constr "Astfn.alident" (strip.ml[36,1158+31]..[36,1158+44])
                    []
            ]
          core_type (strip.ml[33,1071+13]..[33,1071+42])
            Ptyp_arrow
            ""
            core_type (strip.ml[33,1071+13]..[33,1071+25])
              Ptyp_constr "Astf.alident" (strip.ml[33,1071+13]..[33,1071+25])
              []
            core_type (strip.ml[33,1071+29]..[33,1071+42])
              Ptyp_constr "Astfn.alident" (strip.ml[33,1071+29]..[33,1071+42])
              []
    ]
  structure_item (strip.ml[37,1204+0]..[40,1291+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (strip.ml[37,1204+4]..[37,1204+11])
          Ppat_var "auident" (strip.ml[37,1204+4]..[37,1204+11])
        expression (strip.ml[37,1204+11]..[40,1291+45]) ghost
          Pexp_constraint
          expression (strip.ml[38,1249+2]..[40,1291+45])
            Pexp_function
            [
              <case>
                pattern (strip.ml[39,1260+4]..[39,1260+18])
                  Ppat_variant "Uid"
                  Some
                    pattern (strip.ml[39,1260+9]..[39,1260+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[39,1260+10]..[39,1260+13])
                          Ppat_var "_a0" (strip.ml[39,1260+10]..[39,1260+13])
                        pattern (strip.ml[39,1260+14]..[39,1260+17])
                          Ppat_var "_a1" (strip.ml[39,1260+14]..[39,1260+17])
                      ]
                expression (strip.ml[39,1260+22]..[39,1260+30])
                  Pexp_variant "Uid"
                  Some
                    expression (strip.ml[39,1260+27]..[39,1260+30])
                      Pexp_ident "_a1" (strip.ml[39,1260+27]..[39,1260+30])
              <case>
                pattern (strip.ml[40,1291+4]..[40,1291+15])
                  Ppat_alias "_a0" (strip.ml[40,1291+12]..[40,1291+15])
                  pattern (strip.ml[40,1291+4]..[40,1291+8])
                    Ppat_type
                    "ant" (strip.ml[40,1291+5]..[40,1291+8])
                expression (strip.ml[40,1291+19]..[40,1291+45]) ghost
                  Pexp_coerce
                  expression (strip.ml[40,1291+20]..[40,1291+27])
                    Pexp_apply
                    expression (strip.ml[40,1291+20]..[40,1291+23])
                      Pexp_ident "ant" (strip.ml[40,1291+20]..[40,1291+23])
                    [
                      <label> ""
                        expression (strip.ml[40,1291+24]..[40,1291+27])
                          Pexp_ident "_a0" (strip.ml[40,1291+24]..[40,1291+27])
                    ]
                  None
                  core_type (strip.ml[40,1291+31]..[40,1291+44])
                    Ptyp_constr "Astfn.auident" (strip.ml[40,1291+31]..[40,1291+44])
                    []
            ]
          core_type (strip.ml[37,1204+13]..[37,1204+42])
            Ptyp_arrow
            ""
            core_type (strip.ml[37,1204+13]..[37,1204+25])
              Ptyp_constr "Astf.auident" (strip.ml[37,1204+13]..[37,1204+25])
              []
            core_type (strip.ml[37,1204+29]..[37,1204+42])
              Ptyp_constr "Astfn.auident" (strip.ml[37,1204+29]..[37,1204+42])
              []
    ]
  structure_item (strip.ml[41,1337+0]..[44,1443+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (strip.ml[41,1337+4]..[41,1337+10])
          Ppat_var "aident" (strip.ml[41,1337+4]..[41,1337+10])
        expression (strip.ml[41,1337+10]..[44,1443+52]) ghost
          Pexp_constraint
          expression (strip.ml[42,1379+2]..[44,1443+52])
            Pexp_function
            [
              <case>
                pattern (strip.ml[43,1390+4]..[43,1390+19])
                  Ppat_alias "_a0" (strip.ml[43,1390+16]..[43,1390+19])
                  pattern (strip.ml[43,1390+4]..[43,1390+12])
                    Ppat_type
                    "alident" (strip.ml[43,1390+5]..[43,1390+12])
                expression (strip.ml[43,1390+23]..[43,1390+52]) ghost
                  Pexp_coerce
                  expression (strip.ml[43,1390+24]..[43,1390+35])
                    Pexp_apply
                    expression (strip.ml[43,1390+24]..[43,1390+31])
                      Pexp_ident "alident" (strip.ml[43,1390+24]..[43,1390+31])
                    [
                      <label> ""
                        expression (strip.ml[43,1390+32]..[43,1390+35])
                          Pexp_ident "_a0" (strip.ml[43,1390+32]..[43,1390+35])
                    ]
                  None
                  core_type (strip.ml[43,1390+39]..[43,1390+51])
                    Ptyp_constr "Astfn.aident" (strip.ml[43,1390+39]..[43,1390+51])
                    []
              <case>
                pattern (strip.ml[44,1443+4]..[44,1443+19])
                  Ppat_alias "_a0" (strip.ml[44,1443+16]..[44,1443+19])
                  pattern (strip.ml[44,1443+4]..[44,1443+12])
                    Ppat_type
                    "auident" (strip.ml[44,1443+5]..[44,1443+12])
                expression (strip.ml[44,1443+23]..[44,1443+52]) ghost
                  Pexp_coerce
                  expression (strip.ml[44,1443+24]..[44,1443+35])
                    Pexp_apply
                    expression (strip.ml[44,1443+24]..[44,1443+31])
                      Pexp_ident "auident" (strip.ml[44,1443+24]..[44,1443+31])
                    [
                      <label> ""
                        expression (strip.ml[44,1443+32]..[44,1443+35])
                          Pexp_ident "_a0" (strip.ml[44,1443+32]..[44,1443+35])
                    ]
                  None
                  core_type (strip.ml[44,1443+39]..[44,1443+51])
                    Ptyp_constr "Astfn.aident" (strip.ml[44,1443+39]..[44,1443+51])
                    []
            ]
          core_type (strip.ml[41,1337+12]..[41,1337+39])
            Ptyp_arrow
            ""
            core_type (strip.ml[41,1337+12]..[41,1337+23])
              Ptyp_constr "Astf.aident" (strip.ml[41,1337+12]..[41,1337+23])
              []
            core_type (strip.ml[41,1337+27]..[41,1337+39])
              Ptyp_constr "Astfn.aident" (strip.ml[41,1337+27]..[41,1337+39])
              []
    ]
  structure_item (strip.ml[45,1496+0]..[48,1579+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (strip.ml[45,1496+4]..[45,1496+11])
          Ppat_var "astring" (strip.ml[45,1496+4]..[45,1496+11])
        expression (strip.ml[45,1496+11]..[48,1579+45]) ghost
          Pexp_constraint
          expression (strip.ml[46,1541+2]..[48,1579+45])
            Pexp_function
            [
              <case>
                pattern (strip.ml[47,1552+4]..[47,1552+16])
                  Ppat_variant "C"
                  Some
                    pattern (strip.ml[47,1552+7]..[47,1552+16])
                      Ppat_tuple
                      [
                        pattern (strip.ml[47,1552+8]..[47,1552+11])
                          Ppat_var "_a0" (strip.ml[47,1552+8]..[47,1552+11])
                        pattern (strip.ml[47,1552+12]..[47,1552+15])
                          Ppat_var "_a1" (strip.ml[47,1552+12]..[47,1552+15])
                      ]
                expression (strip.ml[47,1552+20]..[47,1552+26])
                  Pexp_variant "C"
                  Some
                    expression (strip.ml[47,1552+23]..[47,1552+26])
                      Pexp_ident "_a1" (strip.ml[47,1552+23]..[47,1552+26])
              <case>
                pattern (strip.ml[48,1579+4]..[48,1579+15])
                  Ppat_alias "_a0" (strip.ml[48,1579+12]..[48,1579+15])
                  pattern (strip.ml[48,1579+4]..[48,1579+8])
                    Ppat_type
                    "ant" (strip.ml[48,1579+5]..[48,1579+8])
                expression (strip.ml[48,1579+19]..[48,1579+45]) ghost
                  Pexp_coerce
                  expression (strip.ml[48,1579+20]..[48,1579+27])
                    Pexp_apply
                    expression (strip.ml[48,1579+20]..[48,1579+23])
                      Pexp_ident "ant" (strip.ml[48,1579+20]..[48,1579+23])
                    [
                      <label> ""
                        expression (strip.ml[48,1579+24]..[48,1579+27])
                          Pexp_ident "_a0" (strip.ml[48,1579+24]..[48,1579+27])
                    ]
                  None
                  core_type (strip.ml[48,1579+31]..[48,1579+44])
                    Ptyp_constr "Astfn.astring" (strip.ml[48,1579+31]..[48,1579+44])
                    []
            ]
          core_type (strip.ml[45,1496+13]..[45,1496+42])
            Ptyp_arrow
            ""
            core_type (strip.ml[45,1496+13]..[45,1496+25])
              Ptyp_constr "Astf.astring" (strip.ml[45,1496+13]..[45,1496+25])
              []
            core_type (strip.ml[45,1496+29]..[45,1496+42])
              Ptyp_constr "Astfn.astring" (strip.ml[45,1496+29]..[45,1496+42])
              []
    ]
  structure_item (strip.ml[49,1625+0]..[55,1874+52])
    Pstr_value Rec
    [
      <def>
        pattern (strip.ml[49,1625+8]..[49,1625+14])
          Ppat_var "uident" (strip.ml[49,1625+8]..[49,1625+14])
        expression (strip.ml[49,1625+14]..[55,1874+52]) ghost
          Pexp_constraint
          expression (strip.ml[50,1671+2]..[55,1874+52])
            Pexp_function
            [
              <case>
                pattern (strip.ml[51,1682+4]..[51,1682+22])
                  Ppat_variant "Dot"
                  Some
                    pattern (strip.ml[51,1682+9]..[51,1682+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[51,1682+10]..[51,1682+13])
                          Ppat_var "_a0" (strip.ml[51,1682+10]..[51,1682+13])
                        pattern (strip.ml[51,1682+14]..[51,1682+17])
                          Ppat_var "_a1" (strip.ml[51,1682+14]..[51,1682+17])
                        pattern (strip.ml[51,1682+18]..[51,1682+21])
                          Ppat_var "_a2" (strip.ml[51,1682+18]..[51,1682+21])
                      ]
                expression (strip.ml[52,1708+6]..[52,1708+69])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[52,1708+10]..[52,1708+13])
                        Ppat_var "_a1" (strip.ml[52,1708+10]..[52,1708+13])
                      expression (strip.ml[52,1708+16]..[52,1708+26])
                        Pexp_apply
                        expression (strip.ml[52,1708+16]..[52,1708+22])
                          Pexp_ident "uident" (strip.ml[52,1708+16]..[52,1708+22])
                        [
                          <label> ""
                            expression (strip.ml[52,1708+23]..[52,1708+26])
                              Pexp_ident "_a1" (strip.ml[52,1708+23]..[52,1708+26])
                        ]
                  ]
                  expression (strip.ml[52,1708+30]..[52,1708+69])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[52,1708+34]..[52,1708+37])
                          Ppat_var "_a2" (strip.ml[52,1708+34]..[52,1708+37])
                        expression (strip.ml[52,1708+40]..[52,1708+50])
                          Pexp_apply
                          expression (strip.ml[52,1708+40]..[52,1708+46])
                            Pexp_ident "uident" (strip.ml[52,1708+40]..[52,1708+46])
                          [
                            <label> ""
                              expression (strip.ml[52,1708+47]..[52,1708+50])
                                Pexp_ident "_a2" (strip.ml[52,1708+47]..[52,1708+50])
                          ]
                    ]
                    expression (strip.ml[52,1708+54]..[52,1708+69])
                      Pexp_variant "Dot"
                      Some
                        expression (strip.ml[52,1708+59]..[52,1708+69])
                          Pexp_tuple
                          [
                            expression (strip.ml[52,1708+60]..[52,1708+63])
                              Pexp_ident "_a1" (strip.ml[52,1708+60]..[52,1708+63])
                            expression (strip.ml[52,1708+65]..[52,1708+68])
                              Pexp_ident "_a2" (strip.ml[52,1708+65]..[52,1708+68])
                          ]
              <case>
                pattern (strip.ml[53,1778+4]..[53,1778+22])
                  Ppat_variant "App"
                  Some
                    pattern (strip.ml[53,1778+9]..[53,1778+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[53,1778+10]..[53,1778+13])
                          Ppat_var "_a0" (strip.ml[53,1778+10]..[53,1778+13])
                        pattern (strip.ml[53,1778+14]..[53,1778+17])
                          Ppat_var "_a1" (strip.ml[53,1778+14]..[53,1778+17])
                        pattern (strip.ml[53,1778+18]..[53,1778+21])
                          Ppat_var "_a2" (strip.ml[53,1778+18]..[53,1778+21])
                      ]
                expression (strip.ml[54,1804+6]..[54,1804+69])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[54,1804+10]..[54,1804+13])
                        Ppat_var "_a1" (strip.ml[54,1804+10]..[54,1804+13])
                      expression (strip.ml[54,1804+16]..[54,1804+26])
                        Pexp_apply
                        expression (strip.ml[54,1804+16]..[54,1804+22])
                          Pexp_ident "uident" (strip.ml[54,1804+16]..[54,1804+22])
                        [
                          <label> ""
                            expression (strip.ml[54,1804+23]..[54,1804+26])
                              Pexp_ident "_a1" (strip.ml[54,1804+23]..[54,1804+26])
                        ]
                  ]
                  expression (strip.ml[54,1804+30]..[54,1804+69])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[54,1804+34]..[54,1804+37])
                          Ppat_var "_a2" (strip.ml[54,1804+34]..[54,1804+37])
                        expression (strip.ml[54,1804+40]..[54,1804+50])
                          Pexp_apply
                          expression (strip.ml[54,1804+40]..[54,1804+46])
                            Pexp_ident "uident" (strip.ml[54,1804+40]..[54,1804+46])
                          [
                            <label> ""
                              expression (strip.ml[54,1804+47]..[54,1804+50])
                                Pexp_ident "_a2" (strip.ml[54,1804+47]..[54,1804+50])
                          ]
                    ]
                    expression (strip.ml[54,1804+54]..[54,1804+69])
                      Pexp_variant "App"
                      Some
                        expression (strip.ml[54,1804+59]..[54,1804+69])
                          Pexp_tuple
                          [
                            expression (strip.ml[54,1804+60]..[54,1804+63])
                              Pexp_ident "_a1" (strip.ml[54,1804+60]..[54,1804+63])
                            expression (strip.ml[54,1804+65]..[54,1804+68])
                              Pexp_ident "_a2" (strip.ml[54,1804+65]..[54,1804+68])
                          ]
              <case>
                pattern (strip.ml[55,1874+4]..[55,1874+19])
                  Ppat_alias "_a0" (strip.ml[55,1874+16]..[55,1874+19])
                  pattern (strip.ml[55,1874+4]..[55,1874+12])
                    Ppat_type
                    "auident" (strip.ml[55,1874+5]..[55,1874+12])
                expression (strip.ml[55,1874+23]..[55,1874+52]) ghost
                  Pexp_coerce
                  expression (strip.ml[55,1874+24]..[55,1874+35])
                    Pexp_apply
                    expression (strip.ml[55,1874+24]..[55,1874+31])
                      Pexp_ident "auident" (strip.ml[55,1874+24]..[55,1874+31])
                    [
                      <label> ""
                        expression (strip.ml[55,1874+32]..[55,1874+35])
                          Pexp_ident "_a0" (strip.ml[55,1874+32]..[55,1874+35])
                    ]
                  None
                  core_type (strip.ml[55,1874+39]..[55,1874+51])
                    Ptyp_constr "Astfn.uident" (strip.ml[55,1874+39]..[55,1874+51])
                    []
            ]
          core_type (strip.ml[49,1625+16]..[49,1625+43])
            Ptyp_arrow
            ""
            core_type (strip.ml[49,1625+16]..[49,1625+27])
              Ptyp_constr "Astf.uident" (strip.ml[49,1625+16]..[49,1625+27])
              []
            core_type (strip.ml[49,1625+31]..[49,1625+43])
              Ptyp_constr "Astfn.uident" (strip.ml[49,1625+31]..[49,1625+43])
              []
    ]
  structure_item (strip.ml[56,1927+0]..[63,2225+51])
    Pstr_value Rec
    [
      <def>
        pattern (strip.ml[56,1927+8]..[56,1927+13])
          Ppat_var "ident" (strip.ml[56,1927+8]..[56,1927+13])
        expression (strip.ml[56,1927+13]..[63,2225+51]) ghost
          Pexp_constraint
          expression (strip.ml[57,1970+2]..[63,2225+51])
            Pexp_function
            [
              <case>
                pattern (strip.ml[58,1981+4]..[58,1981+22])
                  Ppat_variant "Dot"
                  Some
                    pattern (strip.ml[58,1981+9]..[58,1981+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[58,1981+10]..[58,1981+13])
                          Ppat_var "_a0" (strip.ml[58,1981+10]..[58,1981+13])
                        pattern (strip.ml[58,1981+14]..[58,1981+17])
                          Ppat_var "_a1" (strip.ml[58,1981+14]..[58,1981+17])
                        pattern (strip.ml[58,1981+18]..[58,1981+21])
                          Ppat_var "_a2" (strip.ml[58,1981+18]..[58,1981+21])
                      ]
                expression (strip.ml[59,2007+6]..[59,2007+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[59,2007+10]..[59,2007+13])
                        Ppat_var "_a1" (strip.ml[59,2007+10]..[59,2007+13])
                      expression (strip.ml[59,2007+16]..[59,2007+25])
                        Pexp_apply
                        expression (strip.ml[59,2007+16]..[59,2007+21])
                          Pexp_ident "ident" (strip.ml[59,2007+16]..[59,2007+21])
                        [
                          <label> ""
                            expression (strip.ml[59,2007+22]..[59,2007+25])
                              Pexp_ident "_a1" (strip.ml[59,2007+22]..[59,2007+25])
                        ]
                  ]
                  expression (strip.ml[59,2007+29]..[59,2007+67])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[59,2007+33]..[59,2007+36])
                          Ppat_var "_a2" (strip.ml[59,2007+33]..[59,2007+36])
                        expression (strip.ml[59,2007+39]..[59,2007+48])
                          Pexp_apply
                          expression (strip.ml[59,2007+39]..[59,2007+44])
                            Pexp_ident "ident" (strip.ml[59,2007+39]..[59,2007+44])
                          [
                            <label> ""
                              expression (strip.ml[59,2007+45]..[59,2007+48])
                                Pexp_ident "_a2" (strip.ml[59,2007+45]..[59,2007+48])
                          ]
                    ]
                    expression (strip.ml[59,2007+52]..[59,2007+67])
                      Pexp_variant "Dot"
                      Some
                        expression (strip.ml[59,2007+57]..[59,2007+67])
                          Pexp_tuple
                          [
                            expression (strip.ml[59,2007+58]..[59,2007+61])
                              Pexp_ident "_a1" (strip.ml[59,2007+58]..[59,2007+61])
                            expression (strip.ml[59,2007+63]..[59,2007+66])
                              Pexp_ident "_a2" (strip.ml[59,2007+63]..[59,2007+66])
                          ]
              <case>
                pattern (strip.ml[60,2075+4]..[60,2075+24])
                  Ppat_variant "Apply"
                  Some
                    pattern (strip.ml[60,2075+11]..[60,2075+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[60,2075+12]..[60,2075+15])
                          Ppat_var "_a0" (strip.ml[60,2075+12]..[60,2075+15])
                        pattern (strip.ml[60,2075+16]..[60,2075+19])
                          Ppat_var "_a1" (strip.ml[60,2075+16]..[60,2075+19])
                        pattern (strip.ml[60,2075+20]..[60,2075+23])
                          Ppat_var "_a2" (strip.ml[60,2075+20]..[60,2075+23])
                      ]
                expression (strip.ml[61,2103+6]..[61,2103+69])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[61,2103+10]..[61,2103+13])
                        Ppat_var "_a1" (strip.ml[61,2103+10]..[61,2103+13])
                      expression (strip.ml[61,2103+16]..[61,2103+25])
                        Pexp_apply
                        expression (strip.ml[61,2103+16]..[61,2103+21])
                          Pexp_ident "ident" (strip.ml[61,2103+16]..[61,2103+21])
                        [
                          <label> ""
                            expression (strip.ml[61,2103+22]..[61,2103+25])
                              Pexp_ident "_a1" (strip.ml[61,2103+22]..[61,2103+25])
                        ]
                  ]
                  expression (strip.ml[61,2103+29]..[61,2103+69])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[61,2103+33]..[61,2103+36])
                          Ppat_var "_a2" (strip.ml[61,2103+33]..[61,2103+36])
                        expression (strip.ml[61,2103+39]..[61,2103+48])
                          Pexp_apply
                          expression (strip.ml[61,2103+39]..[61,2103+44])
                            Pexp_ident "ident" (strip.ml[61,2103+39]..[61,2103+44])
                          [
                            <label> ""
                              expression (strip.ml[61,2103+45]..[61,2103+48])
                                Pexp_ident "_a2" (strip.ml[61,2103+45]..[61,2103+48])
                          ]
                    ]
                    expression (strip.ml[61,2103+52]..[61,2103+69])
                      Pexp_variant "Apply"
                      Some
                        expression (strip.ml[61,2103+59]..[61,2103+69])
                          Pexp_tuple
                          [
                            expression (strip.ml[61,2103+60]..[61,2103+63])
                              Pexp_ident "_a1" (strip.ml[61,2103+60]..[61,2103+63])
                            expression (strip.ml[61,2103+65]..[61,2103+68])
                              Pexp_ident "_a2" (strip.ml[61,2103+65]..[61,2103+68])
                          ]
              <case>
                pattern (strip.ml[62,2173+4]..[62,2173+19])
                  Ppat_alias "_a0" (strip.ml[62,2173+16]..[62,2173+19])
                  pattern (strip.ml[62,2173+4]..[62,2173+12])
                    Ppat_type
                    "alident" (strip.ml[62,2173+5]..[62,2173+12])
                expression (strip.ml[62,2173+23]..[62,2173+51]) ghost
                  Pexp_coerce
                  expression (strip.ml[62,2173+24]..[62,2173+35])
                    Pexp_apply
                    expression (strip.ml[62,2173+24]..[62,2173+31])
                      Pexp_ident "alident" (strip.ml[62,2173+24]..[62,2173+31])
                    [
                      <label> ""
                        expression (strip.ml[62,2173+32]..[62,2173+35])
                          Pexp_ident "_a0" (strip.ml[62,2173+32]..[62,2173+35])
                    ]
                  None
                  core_type (strip.ml[62,2173+39]..[62,2173+50])
                    Ptyp_constr "Astfn.ident" (strip.ml[62,2173+39]..[62,2173+50])
                    []
              <case>
                pattern (strip.ml[63,2225+4]..[63,2225+19])
                  Ppat_alias "_a0" (strip.ml[63,2225+16]..[63,2225+19])
                  pattern (strip.ml[63,2225+4]..[63,2225+12])
                    Ppat_type
                    "auident" (strip.ml[63,2225+5]..[63,2225+12])
                expression (strip.ml[63,2225+23]..[63,2225+51]) ghost
                  Pexp_coerce
                  expression (strip.ml[63,2225+24]..[63,2225+35])
                    Pexp_apply
                    expression (strip.ml[63,2225+24]..[63,2225+31])
                      Pexp_ident "auident" (strip.ml[63,2225+24]..[63,2225+31])
                    [
                      <label> ""
                        expression (strip.ml[63,2225+32]..[63,2225+35])
                          Pexp_ident "_a0" (strip.ml[63,2225+32]..[63,2225+35])
                    ]
                  None
                  core_type (strip.ml[63,2225+39]..[63,2225+50])
                    Ptyp_constr "Astfn.ident" (strip.ml[63,2225+39]..[63,2225+50])
                    []
            ]
          core_type (strip.ml[56,1927+15]..[56,1927+40])
            Ptyp_arrow
            ""
            core_type (strip.ml[56,1927+15]..[56,1927+25])
              Ptyp_constr "Astf.ident" (strip.ml[56,1927+15]..[56,1927+25])
              []
            core_type (strip.ml[56,1927+29]..[56,1927+40])
              Ptyp_constr "Astfn.ident" (strip.ml[56,1927+29]..[56,1927+40])
              []
    ]
  structure_item (strip.ml[64,2277+0]..[71,2553+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (strip.ml[64,2277+4]..[64,2277+10])
          Ppat_var "ident'" (strip.ml[64,2277+4]..[64,2277+10])
        expression (strip.ml[64,2277+10]..[71,2553+30]) ghost
          Pexp_constraint
          expression (strip.ml[65,2319+2]..[71,2553+30])
            Pexp_function
            [
              <case>
                pattern (strip.ml[66,2330+4]..[66,2330+22])
                  Ppat_variant "Dot"
                  Some
                    pattern (strip.ml[66,2330+9]..[66,2330+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[66,2330+10]..[66,2330+13])
                          Ppat_var "_a0" (strip.ml[66,2330+10]..[66,2330+13])
                        pattern (strip.ml[66,2330+14]..[66,2330+17])
                          Ppat_var "_a1" (strip.ml[66,2330+14]..[66,2330+17])
                        pattern (strip.ml[66,2330+18]..[66,2330+21])
                          Ppat_var "_a2" (strip.ml[66,2330+18]..[66,2330+21])
                      ]
                expression (strip.ml[67,2356+6]..[67,2356+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[67,2356+10]..[67,2356+13])
                        Ppat_var "_a1" (strip.ml[67,2356+10]..[67,2356+13])
                      expression (strip.ml[67,2356+16]..[67,2356+25])
                        Pexp_apply
                        expression (strip.ml[67,2356+16]..[67,2356+21])
                          Pexp_ident "ident" (strip.ml[67,2356+16]..[67,2356+21])
                        [
                          <label> ""
                            expression (strip.ml[67,2356+22]..[67,2356+25])
                              Pexp_ident "_a1" (strip.ml[67,2356+22]..[67,2356+25])
                        ]
                  ]
                  expression (strip.ml[67,2356+29]..[67,2356+67])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[67,2356+33]..[67,2356+36])
                          Ppat_var "_a2" (strip.ml[67,2356+33]..[67,2356+36])
                        expression (strip.ml[67,2356+39]..[67,2356+48])
                          Pexp_apply
                          expression (strip.ml[67,2356+39]..[67,2356+44])
                            Pexp_ident "ident" (strip.ml[67,2356+39]..[67,2356+44])
                          [
                            <label> ""
                              expression (strip.ml[67,2356+45]..[67,2356+48])
                                Pexp_ident "_a2" (strip.ml[67,2356+45]..[67,2356+48])
                          ]
                    ]
                    expression (strip.ml[67,2356+52]..[67,2356+67])
                      Pexp_variant "Dot"
                      Some
                        expression (strip.ml[67,2356+57]..[67,2356+67])
                          Pexp_tuple
                          [
                            expression (strip.ml[67,2356+58]..[67,2356+61])
                              Pexp_ident "_a1" (strip.ml[67,2356+58]..[67,2356+61])
                            expression (strip.ml[67,2356+63]..[67,2356+66])
                              Pexp_ident "_a2" (strip.ml[67,2356+63]..[67,2356+66])
                          ]
              <case>
                pattern (strip.ml[68,2424+4]..[68,2424+24])
                  Ppat_variant "Apply"
                  Some
                    pattern (strip.ml[68,2424+11]..[68,2424+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[68,2424+12]..[68,2424+15])
                          Ppat_var "_a0" (strip.ml[68,2424+12]..[68,2424+15])
                        pattern (strip.ml[68,2424+16]..[68,2424+19])
                          Ppat_var "_a1" (strip.ml[68,2424+16]..[68,2424+19])
                        pattern (strip.ml[68,2424+20]..[68,2424+23])
                          Ppat_var "_a2" (strip.ml[68,2424+20]..[68,2424+23])
                      ]
                expression (strip.ml[69,2452+6]..[69,2452+69])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[69,2452+10]..[69,2452+13])
                        Ppat_var "_a1" (strip.ml[69,2452+10]..[69,2452+13])
                      expression (strip.ml[69,2452+16]..[69,2452+25])
                        Pexp_apply
                        expression (strip.ml[69,2452+16]..[69,2452+21])
                          Pexp_ident "ident" (strip.ml[69,2452+16]..[69,2452+21])
                        [
                          <label> ""
                            expression (strip.ml[69,2452+22]..[69,2452+25])
                              Pexp_ident "_a1" (strip.ml[69,2452+22]..[69,2452+25])
                        ]
                  ]
                  expression (strip.ml[69,2452+29]..[69,2452+69])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[69,2452+33]..[69,2452+36])
                          Ppat_var "_a2" (strip.ml[69,2452+33]..[69,2452+36])
                        expression (strip.ml[69,2452+39]..[69,2452+48])
                          Pexp_apply
                          expression (strip.ml[69,2452+39]..[69,2452+44])
                            Pexp_ident "ident" (strip.ml[69,2452+39]..[69,2452+44])
                          [
                            <label> ""
                              expression (strip.ml[69,2452+45]..[69,2452+48])
                                Pexp_ident "_a2" (strip.ml[69,2452+45]..[69,2452+48])
                          ]
                    ]
                    expression (strip.ml[69,2452+52]..[69,2452+69])
                      Pexp_variant "Apply"
                      Some
                        expression (strip.ml[69,2452+59]..[69,2452+69])
                          Pexp_tuple
                          [
                            expression (strip.ml[69,2452+60]..[69,2452+63])
                              Pexp_ident "_a1" (strip.ml[69,2452+60]..[69,2452+63])
                            expression (strip.ml[69,2452+65]..[69,2452+68])
                              Pexp_ident "_a2" (strip.ml[69,2452+65]..[69,2452+68])
                          ]
              <case>
                pattern (strip.ml[70,2522+4]..[70,2522+18])
                  Ppat_variant "Lid"
                  Some
                    pattern (strip.ml[70,2522+9]..[70,2522+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[70,2522+10]..[70,2522+13])
                          Ppat_var "_a0" (strip.ml[70,2522+10]..[70,2522+13])
                        pattern (strip.ml[70,2522+14]..[70,2522+17])
                          Ppat_var "_a1" (strip.ml[70,2522+14]..[70,2522+17])
                      ]
                expression (strip.ml[70,2522+22]..[70,2522+30])
                  Pexp_variant "Lid"
                  Some
                    expression (strip.ml[70,2522+27]..[70,2522+30])
                      Pexp_ident "_a1" (strip.ml[70,2522+27]..[70,2522+30])
              <case>
                pattern (strip.ml[71,2553+4]..[71,2553+18])
                  Ppat_variant "Uid"
                  Some
                    pattern (strip.ml[71,2553+9]..[71,2553+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[71,2553+10]..[71,2553+13])
                          Ppat_var "_a0" (strip.ml[71,2553+10]..[71,2553+13])
                        pattern (strip.ml[71,2553+14]..[71,2553+17])
                          Ppat_var "_a1" (strip.ml[71,2553+14]..[71,2553+17])
                      ]
                expression (strip.ml[71,2553+22]..[71,2553+30])
                  Pexp_variant "Uid"
                  Some
                    expression (strip.ml[71,2553+27]..[71,2553+30])
                      Pexp_ident "_a1" (strip.ml[71,2553+27]..[71,2553+30])
            ]
          core_type (strip.ml[64,2277+12]..[64,2277+39])
            Ptyp_arrow
            ""
            core_type (strip.ml[64,2277+12]..[64,2277+23])
              Ptyp_constr "Astf.ident'" (strip.ml[64,2277+12]..[64,2277+23])
              []
            core_type (strip.ml[64,2277+27]..[64,2277+39])
              Ptyp_constr "Astfn.ident'" (strip.ml[64,2277+27]..[64,2277+39])
              []
    ]
  structure_item (strip.ml[72,2584+0]..[78,2784+41])
    Pstr_value Rec
    [
      <def>
        pattern (strip.ml[72,2584+8]..[72,2584+11])
          Ppat_var "vid" (strip.ml[72,2584+8]..[72,2584+11])
        expression (strip.ml[72,2584+11]..[78,2784+41]) ghost
          Pexp_constraint
          expression (strip.ml[73,2621+2]..[78,2784+41])
            Pexp_function
            [
              <case>
                pattern (strip.ml[74,2632+4]..[74,2632+22])
                  Ppat_variant "Dot"
                  Some
                    pattern (strip.ml[74,2632+9]..[74,2632+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[74,2632+10]..[74,2632+13])
                          Ppat_var "_a0" (strip.ml[74,2632+10]..[74,2632+13])
                        pattern (strip.ml[74,2632+14]..[74,2632+17])
                          Ppat_var "_a1" (strip.ml[74,2632+14]..[74,2632+17])
                        pattern (strip.ml[74,2632+18]..[74,2632+21])
                          Ppat_var "_a2" (strip.ml[74,2632+18]..[74,2632+21])
                      ]
                expression (strip.ml[75,2658+6]..[75,2658+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[75,2658+10]..[75,2658+13])
                        Ppat_var "_a1" (strip.ml[75,2658+10]..[75,2658+13])
                      expression (strip.ml[75,2658+16]..[75,2658+23])
                        Pexp_apply
                        expression (strip.ml[75,2658+16]..[75,2658+19])
                          Pexp_ident "vid" (strip.ml[75,2658+16]..[75,2658+19])
                        [
                          <label> ""
                            expression (strip.ml[75,2658+20]..[75,2658+23])
                              Pexp_ident "_a1" (strip.ml[75,2658+20]..[75,2658+23])
                        ]
                  ]
                  expression (strip.ml[75,2658+27]..[75,2658+63])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[75,2658+31]..[75,2658+34])
                          Ppat_var "_a2" (strip.ml[75,2658+31]..[75,2658+34])
                        expression (strip.ml[75,2658+37]..[75,2658+44])
                          Pexp_apply
                          expression (strip.ml[75,2658+37]..[75,2658+40])
                            Pexp_ident "vid" (strip.ml[75,2658+37]..[75,2658+40])
                          [
                            <label> ""
                              expression (strip.ml[75,2658+41]..[75,2658+44])
                                Pexp_ident "_a2" (strip.ml[75,2658+41]..[75,2658+44])
                          ]
                    ]
                    expression (strip.ml[75,2658+48]..[75,2658+63])
                      Pexp_variant "Dot"
                      Some
                        expression (strip.ml[75,2658+53]..[75,2658+63])
                          Pexp_tuple
                          [
                            expression (strip.ml[75,2658+54]..[75,2658+57])
                              Pexp_ident "_a1" (strip.ml[75,2658+54]..[75,2658+57])
                            expression (strip.ml[75,2658+59]..[75,2658+62])
                              Pexp_ident "_a2" (strip.ml[75,2658+59]..[75,2658+62])
                          ]
              <case>
                pattern (strip.ml[76,2722+4]..[76,2722+18])
                  Ppat_variant "Lid"
                  Some
                    pattern (strip.ml[76,2722+9]..[76,2722+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[76,2722+10]..[76,2722+13])
                          Ppat_var "_a0" (strip.ml[76,2722+10]..[76,2722+13])
                        pattern (strip.ml[76,2722+14]..[76,2722+17])
                          Ppat_var "_a1" (strip.ml[76,2722+14]..[76,2722+17])
                      ]
                expression (strip.ml[76,2722+22]..[76,2722+30])
                  Pexp_variant "Lid"
                  Some
                    expression (strip.ml[76,2722+27]..[76,2722+30])
                      Pexp_ident "_a1" (strip.ml[76,2722+27]..[76,2722+30])
              <case>
                pattern (strip.ml[77,2753+4]..[77,2753+18])
                  Ppat_variant "Uid"
                  Some
                    pattern (strip.ml[77,2753+9]..[77,2753+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[77,2753+10]..[77,2753+13])
                          Ppat_var "_a0" (strip.ml[77,2753+10]..[77,2753+13])
                        pattern (strip.ml[77,2753+14]..[77,2753+17])
                          Ppat_var "_a1" (strip.ml[77,2753+14]..[77,2753+17])
                      ]
                expression (strip.ml[77,2753+22]..[77,2753+30])
                  Pexp_variant "Uid"
                  Some
                    expression (strip.ml[77,2753+27]..[77,2753+30])
                      Pexp_ident "_a1" (strip.ml[77,2753+27]..[77,2753+30])
              <case>
                pattern (strip.ml[78,2784+4]..[78,2784+15])
                  Ppat_alias "_a0" (strip.ml[78,2784+12]..[78,2784+15])
                  pattern (strip.ml[78,2784+4]..[78,2784+8])
                    Ppat_type
                    "ant" (strip.ml[78,2784+5]..[78,2784+8])
                expression (strip.ml[78,2784+19]..[78,2784+41]) ghost
                  Pexp_coerce
                  expression (strip.ml[78,2784+20]..[78,2784+27])
                    Pexp_apply
                    expression (strip.ml[78,2784+20]..[78,2784+23])
                      Pexp_ident "ant" (strip.ml[78,2784+20]..[78,2784+23])
                    [
                      <label> ""
                        expression (strip.ml[78,2784+24]..[78,2784+27])
                          Pexp_ident "_a0" (strip.ml[78,2784+24]..[78,2784+27])
                    ]
                  None
                  core_type (strip.ml[78,2784+31]..[78,2784+40])
                    Ptyp_constr "Astfn.vid" (strip.ml[78,2784+31]..[78,2784+40])
                    []
            ]
          core_type (strip.ml[72,2584+13]..[72,2584+34])
            Ptyp_arrow
            ""
            core_type (strip.ml[72,2584+13]..[72,2584+21])
              Ptyp_constr "Astf.vid" (strip.ml[72,2584+13]..[72,2584+21])
              []
            core_type (strip.ml[72,2584+25]..[72,2584+34])
              Ptyp_constr "Astfn.vid" (strip.ml[72,2584+25]..[72,2584+34])
              []
    ]
  structure_item (strip.ml[79,2826+0]..[84,2994+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (strip.ml[79,2826+4]..[79,2826+8])
          Ppat_var "vid'" (strip.ml[79,2826+4]..[79,2826+8])
        expression (strip.ml[79,2826+8]..[84,2994+30]) ghost
          Pexp_constraint
          expression (strip.ml[80,2862+2]..[84,2994+30])
            Pexp_function
            [
              <case>
                pattern (strip.ml[81,2873+4]..[81,2873+22])
                  Ppat_variant "Dot"
                  Some
                    pattern (strip.ml[81,2873+9]..[81,2873+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[81,2873+10]..[81,2873+13])
                          Ppat_var "_a0" (strip.ml[81,2873+10]..[81,2873+13])
                        pattern (strip.ml[81,2873+14]..[81,2873+17])
                          Ppat_var "_a1" (strip.ml[81,2873+14]..[81,2873+17])
                        pattern (strip.ml[81,2873+18]..[81,2873+21])
                          Ppat_var "_a2" (strip.ml[81,2873+18]..[81,2873+21])
                      ]
                expression (strip.ml[82,2899+6]..[82,2899+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[82,2899+10]..[82,2899+13])
                        Ppat_var "_a1" (strip.ml[82,2899+10]..[82,2899+13])
                      expression (strip.ml[82,2899+16]..[82,2899+23])
                        Pexp_apply
                        expression (strip.ml[82,2899+16]..[82,2899+19])
                          Pexp_ident "vid" (strip.ml[82,2899+16]..[82,2899+19])
                        [
                          <label> ""
                            expression (strip.ml[82,2899+20]..[82,2899+23])
                              Pexp_ident "_a1" (strip.ml[82,2899+20]..[82,2899+23])
                        ]
                  ]
                  expression (strip.ml[82,2899+27]..[82,2899+63])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[82,2899+31]..[82,2899+34])
                          Ppat_var "_a2" (strip.ml[82,2899+31]..[82,2899+34])
                        expression (strip.ml[82,2899+37]..[82,2899+44])
                          Pexp_apply
                          expression (strip.ml[82,2899+37]..[82,2899+40])
                            Pexp_ident "vid" (strip.ml[82,2899+37]..[82,2899+40])
                          [
                            <label> ""
                              expression (strip.ml[82,2899+41]..[82,2899+44])
                                Pexp_ident "_a2" (strip.ml[82,2899+41]..[82,2899+44])
                          ]
                    ]
                    expression (strip.ml[82,2899+48]..[82,2899+63])
                      Pexp_variant "Dot"
                      Some
                        expression (strip.ml[82,2899+53]..[82,2899+63])
                          Pexp_tuple
                          [
                            expression (strip.ml[82,2899+54]..[82,2899+57])
                              Pexp_ident "_a1" (strip.ml[82,2899+54]..[82,2899+57])
                            expression (strip.ml[82,2899+59]..[82,2899+62])
                              Pexp_ident "_a2" (strip.ml[82,2899+59]..[82,2899+62])
                          ]
              <case>
                pattern (strip.ml[83,2963+4]..[83,2963+18])
                  Ppat_variant "Lid"
                  Some
                    pattern (strip.ml[83,2963+9]..[83,2963+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[83,2963+10]..[83,2963+13])
                          Ppat_var "_a0" (strip.ml[83,2963+10]..[83,2963+13])
                        pattern (strip.ml[83,2963+14]..[83,2963+17])
                          Ppat_var "_a1" (strip.ml[83,2963+14]..[83,2963+17])
                      ]
                expression (strip.ml[83,2963+22]..[83,2963+30])
                  Pexp_variant "Lid"
                  Some
                    expression (strip.ml[83,2963+27]..[83,2963+30])
                      Pexp_ident "_a1" (strip.ml[83,2963+27]..[83,2963+30])
              <case>
                pattern (strip.ml[84,2994+4]..[84,2994+18])
                  Ppat_variant "Uid"
                  Some
                    pattern (strip.ml[84,2994+9]..[84,2994+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[84,2994+10]..[84,2994+13])
                          Ppat_var "_a0" (strip.ml[84,2994+10]..[84,2994+13])
                        pattern (strip.ml[84,2994+14]..[84,2994+17])
                          Ppat_var "_a1" (strip.ml[84,2994+14]..[84,2994+17])
                      ]
                expression (strip.ml[84,2994+22]..[84,2994+30])
                  Pexp_variant "Uid"
                  Some
                    expression (strip.ml[84,2994+27]..[84,2994+30])
                      Pexp_ident "_a1" (strip.ml[84,2994+27]..[84,2994+30])
            ]
          core_type (strip.ml[79,2826+10]..[79,2826+33])
            Ptyp_arrow
            ""
            core_type (strip.ml[79,2826+10]..[79,2826+19])
              Ptyp_constr "Astf.vid'" (strip.ml[79,2826+10]..[79,2826+19])
              []
            core_type (strip.ml[79,2826+23]..[79,2826+33])
              Ptyp_constr "Astfn.vid'" (strip.ml[79,2826+23]..[79,2826+33])
              []
    ]
  structure_item (strip.ml[85,3025+0]..[89,3178+52])
    Pstr_value Rec
    [
      <def>
        pattern (strip.ml[85,3025+8]..[85,3025+14])
          Ppat_var "dupath" (strip.ml[85,3025+8]..[85,3025+14])
        expression (strip.ml[85,3025+14]..[89,3178+52]) ghost
          Pexp_constraint
          expression (strip.ml[86,3071+2]..[89,3178+52])
            Pexp_function
            [
              <case>
                pattern (strip.ml[87,3082+4]..[87,3082+22])
                  Ppat_variant "Dot"
                  Some
                    pattern (strip.ml[87,3082+9]..[87,3082+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[87,3082+10]..[87,3082+13])
                          Ppat_var "_a0" (strip.ml[87,3082+10]..[87,3082+13])
                        pattern (strip.ml[87,3082+14]..[87,3082+17])
                          Ppat_var "_a1" (strip.ml[87,3082+14]..[87,3082+17])
                        pattern (strip.ml[87,3082+18]..[87,3082+21])
                          Ppat_var "_a2" (strip.ml[87,3082+18]..[87,3082+21])
                      ]
                expression (strip.ml[88,3108+6]..[88,3108+69])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[88,3108+10]..[88,3108+13])
                        Ppat_var "_a1" (strip.ml[88,3108+10]..[88,3108+13])
                      expression (strip.ml[88,3108+16]..[88,3108+26])
                        Pexp_apply
                        expression (strip.ml[88,3108+16]..[88,3108+22])
                          Pexp_ident "dupath" (strip.ml[88,3108+16]..[88,3108+22])
                        [
                          <label> ""
                            expression (strip.ml[88,3108+23]..[88,3108+26])
                              Pexp_ident "_a1" (strip.ml[88,3108+23]..[88,3108+26])
                        ]
                  ]
                  expression (strip.ml[88,3108+30]..[88,3108+69])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[88,3108+34]..[88,3108+37])
                          Ppat_var "_a2" (strip.ml[88,3108+34]..[88,3108+37])
                        expression (strip.ml[88,3108+40]..[88,3108+50])
                          Pexp_apply
                          expression (strip.ml[88,3108+40]..[88,3108+46])
                            Pexp_ident "dupath" (strip.ml[88,3108+40]..[88,3108+46])
                          [
                            <label> ""
                              expression (strip.ml[88,3108+47]..[88,3108+50])
                                Pexp_ident "_a2" (strip.ml[88,3108+47]..[88,3108+50])
                          ]
                    ]
                    expression (strip.ml[88,3108+54]..[88,3108+69])
                      Pexp_variant "Dot"
                      Some
                        expression (strip.ml[88,3108+59]..[88,3108+69])
                          Pexp_tuple
                          [
                            expression (strip.ml[88,3108+60]..[88,3108+63])
                              Pexp_ident "_a1" (strip.ml[88,3108+60]..[88,3108+63])
                            expression (strip.ml[88,3108+65]..[88,3108+68])
                              Pexp_ident "_a2" (strip.ml[88,3108+65]..[88,3108+68])
                          ]
              <case>
                pattern (strip.ml[89,3178+4]..[89,3178+19])
                  Ppat_alias "_a0" (strip.ml[89,3178+16]..[89,3178+19])
                  pattern (strip.ml[89,3178+4]..[89,3178+12])
                    Ppat_type
                    "auident" (strip.ml[89,3178+5]..[89,3178+12])
                expression (strip.ml[89,3178+23]..[89,3178+52]) ghost
                  Pexp_coerce
                  expression (strip.ml[89,3178+24]..[89,3178+35])
                    Pexp_apply
                    expression (strip.ml[89,3178+24]..[89,3178+31])
                      Pexp_ident "auident" (strip.ml[89,3178+24]..[89,3178+31])
                    [
                      <label> ""
                        expression (strip.ml[89,3178+32]..[89,3178+35])
                          Pexp_ident "_a0" (strip.ml[89,3178+32]..[89,3178+35])
                    ]
                  None
                  core_type (strip.ml[89,3178+39]..[89,3178+51])
                    Ptyp_constr "Astfn.dupath" (strip.ml[89,3178+39]..[89,3178+51])
                    []
            ]
          core_type (strip.ml[85,3025+16]..[85,3025+43])
            Ptyp_arrow
            ""
            core_type (strip.ml[85,3025+16]..[85,3025+27])
              Ptyp_constr "Astf.dupath" (strip.ml[85,3025+16]..[85,3025+27])
              []
            core_type (strip.ml[85,3025+31]..[85,3025+43])
              Ptyp_constr "Astfn.dupath" (strip.ml[85,3025+31]..[85,3025+43])
              []
    ]
  structure_item (strip.ml[90,3231+0]..[94,3381+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (strip.ml[90,3231+4]..[90,3231+10])
          Ppat_var "dlpath" (strip.ml[90,3231+4]..[90,3231+10])
        expression (strip.ml[90,3231+10]..[94,3381+52]) ghost
          Pexp_constraint
          expression (strip.ml[91,3273+2]..[94,3381+52])
            Pexp_function
            [
              <case>
                pattern (strip.ml[92,3284+4]..[92,3284+22])
                  Ppat_variant "Dot"
                  Some
                    pattern (strip.ml[92,3284+9]..[92,3284+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[92,3284+10]..[92,3284+13])
                          Ppat_var "_a0" (strip.ml[92,3284+10]..[92,3284+13])
                        pattern (strip.ml[92,3284+14]..[92,3284+17])
                          Ppat_var "_a1" (strip.ml[92,3284+14]..[92,3284+17])
                        pattern (strip.ml[92,3284+18]..[92,3284+21])
                          Ppat_var "_a2" (strip.ml[92,3284+18]..[92,3284+21])
                      ]
                expression (strip.ml[93,3310+6]..[93,3310+70])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[93,3310+10]..[93,3310+13])
                        Ppat_var "_a1" (strip.ml[93,3310+10]..[93,3310+13])
                      expression (strip.ml[93,3310+16]..[93,3310+26])
                        Pexp_apply
                        expression (strip.ml[93,3310+16]..[93,3310+22])
                          Pexp_ident "dupath" (strip.ml[93,3310+16]..[93,3310+22])
                        [
                          <label> ""
                            expression (strip.ml[93,3310+23]..[93,3310+26])
                              Pexp_ident "_a1" (strip.ml[93,3310+23]..[93,3310+26])
                        ]
                  ]
                  expression (strip.ml[93,3310+30]..[93,3310+70])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[93,3310+34]..[93,3310+37])
                          Ppat_var "_a2" (strip.ml[93,3310+34]..[93,3310+37])
                        expression (strip.ml[93,3310+40]..[93,3310+51])
                          Pexp_apply
                          expression (strip.ml[93,3310+40]..[93,3310+47])
                            Pexp_ident "alident" (strip.ml[93,3310+40]..[93,3310+47])
                          [
                            <label> ""
                              expression (strip.ml[93,3310+48]..[93,3310+51])
                                Pexp_ident "_a2" (strip.ml[93,3310+48]..[93,3310+51])
                          ]
                    ]
                    expression (strip.ml[93,3310+55]..[93,3310+70])
                      Pexp_variant "Dot"
                      Some
                        expression (strip.ml[93,3310+60]..[93,3310+70])
                          Pexp_tuple
                          [
                            expression (strip.ml[93,3310+61]..[93,3310+64])
                              Pexp_ident "_a1" (strip.ml[93,3310+61]..[93,3310+64])
                            expression (strip.ml[93,3310+66]..[93,3310+69])
                              Pexp_ident "_a2" (strip.ml[93,3310+66]..[93,3310+69])
                          ]
              <case>
                pattern (strip.ml[94,3381+4]..[94,3381+19])
                  Ppat_alias "_a0" (strip.ml[94,3381+16]..[94,3381+19])
                  pattern (strip.ml[94,3381+4]..[94,3381+12])
                    Ppat_type
                    "alident" (strip.ml[94,3381+5]..[94,3381+12])
                expression (strip.ml[94,3381+23]..[94,3381+52]) ghost
                  Pexp_coerce
                  expression (strip.ml[94,3381+24]..[94,3381+35])
                    Pexp_apply
                    expression (strip.ml[94,3381+24]..[94,3381+31])
                      Pexp_ident "alident" (strip.ml[94,3381+24]..[94,3381+31])
                    [
                      <label> ""
                        expression (strip.ml[94,3381+32]..[94,3381+35])
                          Pexp_ident "_a0" (strip.ml[94,3381+32]..[94,3381+35])
                    ]
                  None
                  core_type (strip.ml[94,3381+39]..[94,3381+51])
                    Ptyp_constr "Astfn.dlpath" (strip.ml[94,3381+39]..[94,3381+51])
                    []
            ]
          core_type (strip.ml[90,3231+12]..[90,3231+39])
            Ptyp_arrow
            ""
            core_type (strip.ml[90,3231+12]..[90,3231+23])
              Ptyp_constr "Astf.dlpath" (strip.ml[90,3231+12]..[90,3231+23])
              []
            core_type (strip.ml[90,3231+27]..[90,3231+39])
              Ptyp_constr "Astfn.dlpath" (strip.ml[90,3231+27]..[90,3231+39])
              []
    ]
  structure_item (strip.ml[95,3434+0]..[95,3434+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (strip.ml[95,3434+4]..[95,3434+7])
          Ppat_var "any" (strip.ml[95,3434+4]..[95,3434+7])
        expression (strip.ml[95,3434+7]..[95,3434+60]) ghost
          Pexp_constraint
          expression (strip.ml[95,3434+33]..[95,3434+60])
            Pexp_function
            [
              <case>
                pattern (strip.ml[95,3434+44]..[95,3434+52])
                  Ppat_variant "Any"
                  Some
                    pattern (strip.ml[95,3434+49]..[95,3434+52])
                      Ppat_var "_a0" (strip.ml[95,3434+49]..[95,3434+52])
                expression (strip.ml[95,3434+56]..[95,3434+60])
                  Pexp_variant "Any"
                  None
            ]
          core_type (strip.ml[95,3434+9]..[95,3434+30])
            Ptyp_arrow
            ""
            core_type (strip.ml[95,3434+9]..[95,3434+17])
              Ptyp_constr "Astf.any" (strip.ml[95,3434+9]..[95,3434+17])
              []
            core_type (strip.ml[95,3434+21]..[95,3434+30])
              Ptyp_constr "Astfn.any" (strip.ml[95,3434+21]..[95,3434+30])
              []
    ]
  structure_item (strip.ml[96,3495+0]..[628,27574+45])
    Pstr_value Rec
    [
      <def>
        pattern (strip.ml[96,3495+8]..[96,3495+12])
          Ppat_var "ctyp" (strip.ml[96,3495+8]..[96,3495+12])
        expression (strip.ml[96,3495+12]..[135,5422+42]) ghost
          Pexp_constraint
          expression (strip.ml[97,3535+2]..[135,5422+42])
            Pexp_function
            [
              <case>
                pattern (strip.ml[98,3546+4]..[98,3546+24])
                  Ppat_variant "Alias"
                  Some
                    pattern (strip.ml[98,3546+11]..[98,3546+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[98,3546+12]..[98,3546+15])
                          Ppat_var "_a0" (strip.ml[98,3546+12]..[98,3546+15])
                        pattern (strip.ml[98,3546+16]..[98,3546+19])
                          Ppat_var "_a1" (strip.ml[98,3546+16]..[98,3546+19])
                        pattern (strip.ml[98,3546+20]..[98,3546+23])
                          Ppat_var "_a2" (strip.ml[98,3546+20]..[98,3546+23])
                      ]
                expression (strip.ml[99,3574+6]..[99,3574+70])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[99,3574+10]..[99,3574+13])
                        Ppat_var "_a1" (strip.ml[99,3574+10]..[99,3574+13])
                      expression (strip.ml[99,3574+16]..[99,3574+24])
                        Pexp_apply
                        expression (strip.ml[99,3574+16]..[99,3574+20])
                          Pexp_ident "ctyp" (strip.ml[99,3574+16]..[99,3574+20])
                        [
                          <label> ""
                            expression (strip.ml[99,3574+21]..[99,3574+24])
                              Pexp_ident "_a1" (strip.ml[99,3574+21]..[99,3574+24])
                        ]
                  ]
                  expression (strip.ml[99,3574+28]..[99,3574+70])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[99,3574+32]..[99,3574+35])
                          Ppat_var "_a2" (strip.ml[99,3574+32]..[99,3574+35])
                        expression (strip.ml[99,3574+38]..[99,3574+49])
                          Pexp_apply
                          expression (strip.ml[99,3574+38]..[99,3574+45])
                            Pexp_ident "alident" (strip.ml[99,3574+38]..[99,3574+45])
                          [
                            <label> ""
                              expression (strip.ml[99,3574+46]..[99,3574+49])
                                Pexp_ident "_a2" (strip.ml[99,3574+46]..[99,3574+49])
                          ]
                    ]
                    expression (strip.ml[99,3574+53]..[99,3574+70])
                      Pexp_variant "Alias"
                      Some
                        expression (strip.ml[99,3574+60]..[99,3574+70])
                          Pexp_tuple
                          [
                            expression (strip.ml[99,3574+61]..[99,3574+64])
                              Pexp_ident "_a1" (strip.ml[99,3574+61]..[99,3574+64])
                            expression (strip.ml[99,3574+66]..[99,3574+69])
                              Pexp_ident "_a2" (strip.ml[99,3574+66]..[99,3574+69])
                          ]
              <case>
                pattern (strip.ml[100,3645+4]..[100,3645+15])
                  Ppat_alias "_a0" (strip.ml[100,3645+12]..[100,3645+15])
                  pattern (strip.ml[100,3645+4]..[100,3645+8])
                    Ppat_type
                    "any" (strip.ml[100,3645+5]..[100,3645+8])
                expression (strip.ml[100,3645+19]..[100,3645+42]) ghost
                  Pexp_coerce
                  expression (strip.ml[100,3645+20]..[100,3645+27])
                    Pexp_apply
                    expression (strip.ml[100,3645+20]..[100,3645+23])
                      Pexp_ident "any" (strip.ml[100,3645+20]..[100,3645+23])
                    [
                      <label> ""
                        expression (strip.ml[100,3645+24]..[100,3645+27])
                          Pexp_ident "_a0" (strip.ml[100,3645+24]..[100,3645+27])
                    ]
                  None
                  core_type (strip.ml[100,3645+31]..[100,3645+41])
                    Ptyp_constr "Astfn.ctyp" (strip.ml[100,3645+31]..[100,3645+41])
                    []
              <case>
                pattern (strip.ml[101,3688+4]..[101,3688+22])
                  Ppat_variant "App"
                  Some
                    pattern (strip.ml[101,3688+9]..[101,3688+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[101,3688+10]..[101,3688+13])
                          Ppat_var "_a0" (strip.ml[101,3688+10]..[101,3688+13])
                        pattern (strip.ml[101,3688+14]..[101,3688+17])
                          Ppat_var "_a1" (strip.ml[101,3688+14]..[101,3688+17])
                        pattern (strip.ml[101,3688+18]..[101,3688+21])
                          Ppat_var "_a2" (strip.ml[101,3688+18]..[101,3688+21])
                      ]
                expression (strip.ml[102,3714+6]..[102,3714+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[102,3714+10]..[102,3714+13])
                        Ppat_var "_a1" (strip.ml[102,3714+10]..[102,3714+13])
                      expression (strip.ml[102,3714+16]..[102,3714+24])
                        Pexp_apply
                        expression (strip.ml[102,3714+16]..[102,3714+20])
                          Pexp_ident "ctyp" (strip.ml[102,3714+16]..[102,3714+20])
                        [
                          <label> ""
                            expression (strip.ml[102,3714+21]..[102,3714+24])
                              Pexp_ident "_a1" (strip.ml[102,3714+21]..[102,3714+24])
                        ]
                  ]
                  expression (strip.ml[102,3714+28]..[102,3714+65])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[102,3714+32]..[102,3714+35])
                          Ppat_var "_a2" (strip.ml[102,3714+32]..[102,3714+35])
                        expression (strip.ml[102,3714+38]..[102,3714+46])
                          Pexp_apply
                          expression (strip.ml[102,3714+38]..[102,3714+42])
                            Pexp_ident "ctyp" (strip.ml[102,3714+38]..[102,3714+42])
                          [
                            <label> ""
                              expression (strip.ml[102,3714+43]..[102,3714+46])
                                Pexp_ident "_a2" (strip.ml[102,3714+43]..[102,3714+46])
                          ]
                    ]
                    expression (strip.ml[102,3714+50]..[102,3714+65])
                      Pexp_variant "App"
                      Some
                        expression (strip.ml[102,3714+55]..[102,3714+65])
                          Pexp_tuple
                          [
                            expression (strip.ml[102,3714+56]..[102,3714+59])
                              Pexp_ident "_a1" (strip.ml[102,3714+56]..[102,3714+59])
                            expression (strip.ml[102,3714+61]..[102,3714+64])
                              Pexp_ident "_a2" (strip.ml[102,3714+61]..[102,3714+64])
                          ]
              <case>
                pattern (strip.ml[103,3780+4]..[103,3780+24])
                  Ppat_variant "Arrow"
                  Some
                    pattern (strip.ml[103,3780+11]..[103,3780+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[103,3780+12]..[103,3780+15])
                          Ppat_var "_a0" (strip.ml[103,3780+12]..[103,3780+15])
                        pattern (strip.ml[103,3780+16]..[103,3780+19])
                          Ppat_var "_a1" (strip.ml[103,3780+16]..[103,3780+19])
                        pattern (strip.ml[103,3780+20]..[103,3780+23])
                          Ppat_var "_a2" (strip.ml[103,3780+20]..[103,3780+23])
                      ]
                expression (strip.ml[104,3808+6]..[104,3808+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[104,3808+10]..[104,3808+13])
                        Ppat_var "_a1" (strip.ml[104,3808+10]..[104,3808+13])
                      expression (strip.ml[104,3808+16]..[104,3808+24])
                        Pexp_apply
                        expression (strip.ml[104,3808+16]..[104,3808+20])
                          Pexp_ident "ctyp" (strip.ml[104,3808+16]..[104,3808+20])
                        [
                          <label> ""
                            expression (strip.ml[104,3808+21]..[104,3808+24])
                              Pexp_ident "_a1" (strip.ml[104,3808+21]..[104,3808+24])
                        ]
                  ]
                  expression (strip.ml[104,3808+28]..[104,3808+67])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[104,3808+32]..[104,3808+35])
                          Ppat_var "_a2" (strip.ml[104,3808+32]..[104,3808+35])
                        expression (strip.ml[104,3808+38]..[104,3808+46])
                          Pexp_apply
                          expression (strip.ml[104,3808+38]..[104,3808+42])
                            Pexp_ident "ctyp" (strip.ml[104,3808+38]..[104,3808+42])
                          [
                            <label> ""
                              expression (strip.ml[104,3808+43]..[104,3808+46])
                                Pexp_ident "_a2" (strip.ml[104,3808+43]..[104,3808+46])
                          ]
                    ]
                    expression (strip.ml[104,3808+50]..[104,3808+67])
                      Pexp_variant "Arrow"
                      Some
                        expression (strip.ml[104,3808+57]..[104,3808+67])
                          Pexp_tuple
                          [
                            expression (strip.ml[104,3808+58]..[104,3808+61])
                              Pexp_ident "_a1" (strip.ml[104,3808+58]..[104,3808+61])
                            expression (strip.ml[104,3808+63]..[104,3808+66])
                              Pexp_ident "_a2" (strip.ml[104,3808+63]..[104,3808+66])
                          ]
              <case>
                pattern (strip.ml[105,3876+4]..[105,3876+24])
                  Ppat_variant "ClassPath"
                  Some
                    pattern (strip.ml[105,3876+15]..[105,3876+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[105,3876+16]..[105,3876+19])
                          Ppat_var "_a0" (strip.ml[105,3876+16]..[105,3876+19])
                        pattern (strip.ml[105,3876+20]..[105,3876+23])
                          Ppat_var "_a1" (strip.ml[105,3876+20]..[105,3876+23])
                      ]
                expression (strip.ml[105,3876+28]..[105,3876+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[105,3876+32]..[105,3876+35])
                        Ppat_var "_a1" (strip.ml[105,3876+32]..[105,3876+35])
                      expression (strip.ml[105,3876+38]..[105,3876+47])
                        Pexp_apply
                        expression (strip.ml[105,3876+38]..[105,3876+43])
                          Pexp_ident "ident" (strip.ml[105,3876+38]..[105,3876+43])
                        [
                          <label> ""
                            expression (strip.ml[105,3876+44]..[105,3876+47])
                              Pexp_ident "_a1" (strip.ml[105,3876+44]..[105,3876+47])
                        ]
                  ]
                  expression (strip.ml[105,3876+51]..[105,3876+65])
                    Pexp_variant "ClassPath"
                    Some
                      expression (strip.ml[105,3876+62]..[105,3876+65])
                        Pexp_ident "_a1" (strip.ml[105,3876+62]..[105,3876+65])
              <case>
                pattern (strip.ml[106,3942+4]..[106,3942+24])
                  Ppat_variant "Label"
                  Some
                    pattern (strip.ml[106,3942+11]..[106,3942+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[106,3942+12]..[106,3942+15])
                          Ppat_var "_a0" (strip.ml[106,3942+12]..[106,3942+15])
                        pattern (strip.ml[106,3942+16]..[106,3942+19])
                          Ppat_var "_a1" (strip.ml[106,3942+16]..[106,3942+19])
                        pattern (strip.ml[106,3942+20]..[106,3942+23])
                          Ppat_var "_a2" (strip.ml[106,3942+20]..[106,3942+23])
                      ]
                expression (strip.ml[107,3970+6]..[107,3970+70])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[107,3970+10]..[107,3970+13])
                        Ppat_var "_a1" (strip.ml[107,3970+10]..[107,3970+13])
                      expression (strip.ml[107,3970+16]..[107,3970+27])
                        Pexp_apply
                        expression (strip.ml[107,3970+16]..[107,3970+23])
                          Pexp_ident "alident" (strip.ml[107,3970+16]..[107,3970+23])
                        [
                          <label> ""
                            expression (strip.ml[107,3970+24]..[107,3970+27])
                              Pexp_ident "_a1" (strip.ml[107,3970+24]..[107,3970+27])
                        ]
                  ]
                  expression (strip.ml[107,3970+31]..[107,3970+70])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[107,3970+35]..[107,3970+38])
                          Ppat_var "_a2" (strip.ml[107,3970+35]..[107,3970+38])
                        expression (strip.ml[107,3970+41]..[107,3970+49])
                          Pexp_apply
                          expression (strip.ml[107,3970+41]..[107,3970+45])
                            Pexp_ident "ctyp" (strip.ml[107,3970+41]..[107,3970+45])
                          [
                            <label> ""
                              expression (strip.ml[107,3970+46]..[107,3970+49])
                                Pexp_ident "_a2" (strip.ml[107,3970+46]..[107,3970+49])
                          ]
                    ]
                    expression (strip.ml[107,3970+53]..[107,3970+70])
                      Pexp_variant "Label"
                      Some
                        expression (strip.ml[107,3970+60]..[107,3970+70])
                          Pexp_tuple
                          [
                            expression (strip.ml[107,3970+61]..[107,3970+64])
                              Pexp_ident "_a1" (strip.ml[107,3970+61]..[107,3970+64])
                            expression (strip.ml[107,3970+66]..[107,3970+69])
                              Pexp_ident "_a2" (strip.ml[107,3970+66]..[107,3970+69])
                          ]
              <case>
                pattern (strip.ml[108,4041+4]..[108,4041+26])
                  Ppat_variant "OptLabl"
                  Some
                    pattern (strip.ml[108,4041+13]..[108,4041+26])
                      Ppat_tuple
                      [
                        pattern (strip.ml[108,4041+14]..[108,4041+17])
                          Ppat_var "_a0" (strip.ml[108,4041+14]..[108,4041+17])
                        pattern (strip.ml[108,4041+18]..[108,4041+21])
                          Ppat_var "_a1" (strip.ml[108,4041+18]..[108,4041+21])
                        pattern (strip.ml[108,4041+22]..[108,4041+25])
                          Ppat_var "_a2" (strip.ml[108,4041+22]..[108,4041+25])
                      ]
                expression (strip.ml[109,4071+6]..[109,4071+72])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[109,4071+10]..[109,4071+13])
                        Ppat_var "_a1" (strip.ml[109,4071+10]..[109,4071+13])
                      expression (strip.ml[109,4071+16]..[109,4071+27])
                        Pexp_apply
                        expression (strip.ml[109,4071+16]..[109,4071+23])
                          Pexp_ident "alident" (strip.ml[109,4071+16]..[109,4071+23])
                        [
                          <label> ""
                            expression (strip.ml[109,4071+24]..[109,4071+27])
                              Pexp_ident "_a1" (strip.ml[109,4071+24]..[109,4071+27])
                        ]
                  ]
                  expression (strip.ml[109,4071+31]..[109,4071+72])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[109,4071+35]..[109,4071+38])
                          Ppat_var "_a2" (strip.ml[109,4071+35]..[109,4071+38])
                        expression (strip.ml[109,4071+41]..[109,4071+49])
                          Pexp_apply
                          expression (strip.ml[109,4071+41]..[109,4071+45])
                            Pexp_ident "ctyp" (strip.ml[109,4071+41]..[109,4071+45])
                          [
                            <label> ""
                              expression (strip.ml[109,4071+46]..[109,4071+49])
                                Pexp_ident "_a2" (strip.ml[109,4071+46]..[109,4071+49])
                          ]
                    ]
                    expression (strip.ml[109,4071+53]..[109,4071+72])
                      Pexp_variant "OptLabl"
                      Some
                        expression (strip.ml[109,4071+62]..[109,4071+72])
                          Pexp_tuple
                          [
                            expression (strip.ml[109,4071+63]..[109,4071+66])
                              Pexp_ident "_a1" (strip.ml[109,4071+63]..[109,4071+66])
                            expression (strip.ml[109,4071+68]..[109,4071+71])
                              Pexp_ident "_a2" (strip.ml[109,4071+68]..[109,4071+71])
                          ]
              <case>
                pattern (strip.ml[110,4144+4]..[110,4144+18])
                  Ppat_alias "_a0" (strip.ml[110,4144+15]..[110,4144+18])
                  pattern (strip.ml[110,4144+4]..[110,4144+11])
                    Ppat_type
                    "ident'" (strip.ml[110,4144+5]..[110,4144+11])
                expression (strip.ml[110,4144+22]..[110,4144+48]) ghost
                  Pexp_coerce
                  expression (strip.ml[110,4144+23]..[110,4144+33])
                    Pexp_apply
                    expression (strip.ml[110,4144+23]..[110,4144+29])
                      Pexp_ident "ident'" (strip.ml[110,4144+23]..[110,4144+29])
                    [
                      <label> ""
                        expression (strip.ml[110,4144+30]..[110,4144+33])
                          Pexp_ident "_a0" (strip.ml[110,4144+30]..[110,4144+33])
                    ]
                  None
                  core_type (strip.ml[110,4144+37]..[110,4144+47])
                    Ptyp_constr "Astfn.ctyp" (strip.ml[110,4144+37]..[110,4144+47])
                    []
              <case>
                pattern (strip.ml[111,4193+4]..[111,4193+24])
                  Ppat_variant "TyObj"
                  Some
                    pattern (strip.ml[111,4193+11]..[111,4193+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[111,4193+12]..[111,4193+15])
                          Ppat_var "_a0" (strip.ml[111,4193+12]..[111,4193+15])
                        pattern (strip.ml[111,4193+16]..[111,4193+19])
                          Ppat_var "_a1" (strip.ml[111,4193+16]..[111,4193+19])
                        pattern (strip.ml[111,4193+20]..[111,4193+23])
                          Ppat_var "_a2" (strip.ml[111,4193+20]..[111,4193+23])
                      ]
                expression (strip.ml[112,4221+6]..[112,4221+72])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[112,4221+10]..[112,4221+13])
                        Ppat_var "_a1" (strip.ml[112,4221+10]..[112,4221+13])
                      expression (strip.ml[112,4221+16]..[112,4221+29])
                        Pexp_apply
                        expression (strip.ml[112,4221+16]..[112,4221+25])
                          Pexp_ident "name_ctyp" (strip.ml[112,4221+16]..[112,4221+25])
                        [
                          <label> ""
                            expression (strip.ml[112,4221+26]..[112,4221+29])
                              Pexp_ident "_a1" (strip.ml[112,4221+26]..[112,4221+29])
                        ]
                  ]
                  expression (strip.ml[112,4221+33]..[112,4221+72])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[112,4221+37]..[112,4221+40])
                          Ppat_var "_a2" (strip.ml[112,4221+37]..[112,4221+40])
                        expression (strip.ml[112,4221+43]..[112,4221+51])
                          Pexp_apply
                          expression (strip.ml[112,4221+43]..[112,4221+47])
                            Pexp_ident "flag" (strip.ml[112,4221+43]..[112,4221+47])
                          [
                            <label> ""
                              expression (strip.ml[112,4221+48]..[112,4221+51])
                                Pexp_ident "_a2" (strip.ml[112,4221+48]..[112,4221+51])
                          ]
                    ]
                    expression (strip.ml[112,4221+55]..[112,4221+72])
                      Pexp_variant "TyObj"
                      Some
                        expression (strip.ml[112,4221+62]..[112,4221+72])
                          Pexp_tuple
                          [
                            expression (strip.ml[112,4221+63]..[112,4221+66])
                              Pexp_ident "_a1" (strip.ml[112,4221+63]..[112,4221+66])
                            expression (strip.ml[112,4221+68]..[112,4221+71])
                              Pexp_ident "_a2" (strip.ml[112,4221+68]..[112,4221+71])
                          ]
              <case>
                pattern (strip.ml[113,4294+4]..[113,4294+23])
                  Ppat_variant "TyObjEnd"
                  Some
                    pattern (strip.ml[113,4294+14]..[113,4294+23])
                      Ppat_tuple
                      [
                        pattern (strip.ml[113,4294+15]..[113,4294+18])
                          Ppat_var "_a0" (strip.ml[113,4294+15]..[113,4294+18])
                        pattern (strip.ml[113,4294+19]..[113,4294+22])
                          Ppat_var "_a1" (strip.ml[113,4294+19]..[113,4294+22])
                      ]
                expression (strip.ml[113,4294+27]..[113,4294+62])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[113,4294+31]..[113,4294+34])
                        Ppat_var "_a1" (strip.ml[113,4294+31]..[113,4294+34])
                      expression (strip.ml[113,4294+37]..[113,4294+45])
                        Pexp_apply
                        expression (strip.ml[113,4294+37]..[113,4294+41])
                          Pexp_ident "flag" (strip.ml[113,4294+37]..[113,4294+41])
                        [
                          <label> ""
                            expression (strip.ml[113,4294+42]..[113,4294+45])
                              Pexp_ident "_a1" (strip.ml[113,4294+42]..[113,4294+45])
                        ]
                  ]
                  expression (strip.ml[113,4294+49]..[113,4294+62])
                    Pexp_variant "TyObjEnd"
                    Some
                      expression (strip.ml[113,4294+59]..[113,4294+62])
                        Pexp_ident "_a1" (strip.ml[113,4294+59]..[113,4294+62])
              <case>
                pattern (strip.ml[114,4357+4]..[114,4357+24])
                  Ppat_variant "TyPol"
                  Some
                    pattern (strip.ml[114,4357+11]..[114,4357+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[114,4357+12]..[114,4357+15])
                          Ppat_var "_a0" (strip.ml[114,4357+12]..[114,4357+15])
                        pattern (strip.ml[114,4357+16]..[114,4357+19])
                          Ppat_var "_a1" (strip.ml[114,4357+16]..[114,4357+19])
                        pattern (strip.ml[114,4357+20]..[114,4357+23])
                          Ppat_var "_a2" (strip.ml[114,4357+20]..[114,4357+23])
                      ]
                expression (strip.ml[115,4385+6]..[115,4385+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[115,4385+10]..[115,4385+13])
                        Ppat_var "_a1" (strip.ml[115,4385+10]..[115,4385+13])
                      expression (strip.ml[115,4385+16]..[115,4385+24])
                        Pexp_apply
                        expression (strip.ml[115,4385+16]..[115,4385+20])
                          Pexp_ident "ctyp" (strip.ml[115,4385+16]..[115,4385+20])
                        [
                          <label> ""
                            expression (strip.ml[115,4385+21]..[115,4385+24])
                              Pexp_ident "_a1" (strip.ml[115,4385+21]..[115,4385+24])
                        ]
                  ]
                  expression (strip.ml[115,4385+28]..[115,4385+67])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[115,4385+32]..[115,4385+35])
                          Ppat_var "_a2" (strip.ml[115,4385+32]..[115,4385+35])
                        expression (strip.ml[115,4385+38]..[115,4385+46])
                          Pexp_apply
                          expression (strip.ml[115,4385+38]..[115,4385+42])
                            Pexp_ident "ctyp" (strip.ml[115,4385+38]..[115,4385+42])
                          [
                            <label> ""
                              expression (strip.ml[115,4385+43]..[115,4385+46])
                                Pexp_ident "_a2" (strip.ml[115,4385+43]..[115,4385+46])
                          ]
                    ]
                    expression (strip.ml[115,4385+50]..[115,4385+67])
                      Pexp_variant "TyPol"
                      Some
                        expression (strip.ml[115,4385+57]..[115,4385+67])
                          Pexp_tuple
                          [
                            expression (strip.ml[115,4385+58]..[115,4385+61])
                              Pexp_ident "_a1" (strip.ml[115,4385+58]..[115,4385+61])
                            expression (strip.ml[115,4385+63]..[115,4385+66])
                              Pexp_ident "_a2" (strip.ml[115,4385+63]..[115,4385+66])
                          ]
              <case>
                pattern (strip.ml[116,4453+4]..[116,4453+23])
                  Ppat_variant "TyPolEnd"
                  Some
                    pattern (strip.ml[116,4453+14]..[116,4453+23])
                      Ppat_tuple
                      [
                        pattern (strip.ml[116,4453+15]..[116,4453+18])
                          Ppat_var "_a0" (strip.ml[116,4453+15]..[116,4453+18])
                        pattern (strip.ml[116,4453+19]..[116,4453+22])
                          Ppat_var "_a1" (strip.ml[116,4453+19]..[116,4453+22])
                      ]
                expression (strip.ml[116,4453+27]..[116,4453+62])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[116,4453+31]..[116,4453+34])
                        Ppat_var "_a1" (strip.ml[116,4453+31]..[116,4453+34])
                      expression (strip.ml[116,4453+37]..[116,4453+45])
                        Pexp_apply
                        expression (strip.ml[116,4453+37]..[116,4453+41])
                          Pexp_ident "ctyp" (strip.ml[116,4453+37]..[116,4453+41])
                        [
                          <label> ""
                            expression (strip.ml[116,4453+42]..[116,4453+45])
                              Pexp_ident "_a1" (strip.ml[116,4453+42]..[116,4453+45])
                        ]
                  ]
                  expression (strip.ml[116,4453+49]..[116,4453+62])
                    Pexp_variant "TyPolEnd"
                    Some
                      expression (strip.ml[116,4453+59]..[116,4453+62])
                        Pexp_ident "_a1" (strip.ml[116,4453+59]..[116,4453+62])
              <case>
                pattern (strip.ml[117,4516+4]..[117,4516+28])
                  Ppat_variant "TyTypePol"
                  Some
                    pattern (strip.ml[117,4516+15]..[117,4516+28])
                      Ppat_tuple
                      [
                        pattern (strip.ml[117,4516+16]..[117,4516+19])
                          Ppat_var "_a0" (strip.ml[117,4516+16]..[117,4516+19])
                        pattern (strip.ml[117,4516+20]..[117,4516+23])
                          Ppat_var "_a1" (strip.ml[117,4516+20]..[117,4516+23])
                        pattern (strip.ml[117,4516+24]..[117,4516+27])
                          Ppat_var "_a2" (strip.ml[117,4516+24]..[117,4516+27])
                      ]
                expression (strip.ml[118,4548+6]..[118,4548+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[118,4548+10]..[118,4548+13])
                        Ppat_var "_a1" (strip.ml[118,4548+10]..[118,4548+13])
                      expression (strip.ml[118,4548+16]..[118,4548+24])
                        Pexp_apply
                        expression (strip.ml[118,4548+16]..[118,4548+20])
                          Pexp_ident "ctyp" (strip.ml[118,4548+16]..[118,4548+20])
                        [
                          <label> ""
                            expression (strip.ml[118,4548+21]..[118,4548+24])
                              Pexp_ident "_a1" (strip.ml[118,4548+21]..[118,4548+24])
                        ]
                  ]
                  expression (strip.ml[118,4548+28]..[118,4548+71])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[118,4548+32]..[118,4548+35])
                          Ppat_var "_a2" (strip.ml[118,4548+32]..[118,4548+35])
                        expression (strip.ml[118,4548+38]..[118,4548+46])
                          Pexp_apply
                          expression (strip.ml[118,4548+38]..[118,4548+42])
                            Pexp_ident "ctyp" (strip.ml[118,4548+38]..[118,4548+42])
                          [
                            <label> ""
                              expression (strip.ml[118,4548+43]..[118,4548+46])
                                Pexp_ident "_a2" (strip.ml[118,4548+43]..[118,4548+46])
                          ]
                    ]
                    expression (strip.ml[118,4548+50]..[118,4548+71])
                      Pexp_variant "TyTypePol"
                      Some
                        expression (strip.ml[118,4548+61]..[118,4548+71])
                          Pexp_tuple
                          [
                            expression (strip.ml[118,4548+62]..[118,4548+65])
                              Pexp_ident "_a1" (strip.ml[118,4548+62]..[118,4548+65])
                            expression (strip.ml[118,4548+67]..[118,4548+70])
                              Pexp_ident "_a2" (strip.ml[118,4548+67]..[118,4548+70])
                          ]
              <case>
                pattern (strip.ml[119,4620+4]..[119,4620+24])
                  Ppat_variant "Quote"
                  Some
                    pattern (strip.ml[119,4620+11]..[119,4620+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[119,4620+12]..[119,4620+15])
                          Ppat_var "_a0" (strip.ml[119,4620+12]..[119,4620+15])
                        pattern (strip.ml[119,4620+16]..[119,4620+19])
                          Ppat_var "_a1" (strip.ml[119,4620+16]..[119,4620+19])
                        pattern (strip.ml[119,4620+20]..[119,4620+23])
                          Ppat_var "_a2" (strip.ml[119,4620+20]..[119,4620+23])
                      ]
                expression (strip.ml[120,4648+6]..[121,4685+48])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[120,4648+10]..[120,4648+13])
                        Ppat_var "_a1" (strip.ml[120,4648+10]..[120,4648+13])
                      expression (strip.ml[120,4648+16]..[120,4648+33])
                        Pexp_apply
                        expression (strip.ml[120,4648+16]..[120,4648+29])
                          Pexp_ident "position_flag" (strip.ml[120,4648+16]..[120,4648+29])
                        [
                          <label> ""
                            expression (strip.ml[120,4648+30]..[120,4648+33])
                              Pexp_ident "_a1" (strip.ml[120,4648+30]..[120,4648+33])
                        ]
                  ]
                  expression (strip.ml[121,4685+6]..[121,4685+48])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[121,4685+10]..[121,4685+13])
                          Ppat_var "_a2" (strip.ml[121,4685+10]..[121,4685+13])
                        expression (strip.ml[121,4685+16]..[121,4685+27])
                          Pexp_apply
                          expression (strip.ml[121,4685+16]..[121,4685+23])
                            Pexp_ident "alident" (strip.ml[121,4685+16]..[121,4685+23])
                          [
                            <label> ""
                              expression (strip.ml[121,4685+24]..[121,4685+27])
                                Pexp_ident "_a2" (strip.ml[121,4685+24]..[121,4685+27])
                          ]
                    ]
                    expression (strip.ml[121,4685+31]..[121,4685+48])
                      Pexp_variant "Quote"
                      Some
                        expression (strip.ml[121,4685+38]..[121,4685+48])
                          Pexp_tuple
                          [
                            expression (strip.ml[121,4685+39]..[121,4685+42])
                              Pexp_ident "_a1" (strip.ml[121,4685+39]..[121,4685+42])
                            expression (strip.ml[121,4685+44]..[121,4685+47])
                              Pexp_ident "_a2" (strip.ml[121,4685+44]..[121,4685+47])
                          ]
              <case>
                pattern (strip.ml[122,4734+4]..[122,4734+23])
                  Ppat_variant "QuoteAny"
                  Some
                    pattern (strip.ml[122,4734+14]..[122,4734+23])
                      Ppat_tuple
                      [
                        pattern (strip.ml[122,4734+15]..[122,4734+18])
                          Ppat_var "_a0" (strip.ml[122,4734+15]..[122,4734+18])
                        pattern (strip.ml[122,4734+19]..[122,4734+22])
                          Ppat_var "_a1" (strip.ml[122,4734+19]..[122,4734+22])
                      ]
                expression (strip.ml[122,4734+27]..[122,4734+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[122,4734+31]..[122,4734+34])
                        Ppat_var "_a1" (strip.ml[122,4734+31]..[122,4734+34])
                      expression (strip.ml[122,4734+37]..[122,4734+54])
                        Pexp_apply
                        expression (strip.ml[122,4734+37]..[122,4734+50])
                          Pexp_ident "position_flag" (strip.ml[122,4734+37]..[122,4734+50])
                        [
                          <label> ""
                            expression (strip.ml[122,4734+51]..[122,4734+54])
                              Pexp_ident "_a1" (strip.ml[122,4734+51]..[122,4734+54])
                        ]
                  ]
                  expression (strip.ml[122,4734+58]..[122,4734+71])
                    Pexp_variant "QuoteAny"
                    Some
                      expression (strip.ml[122,4734+68]..[122,4734+71])
                        Pexp_ident "_a1" (strip.ml[122,4734+68]..[122,4734+71])
              <case>
                pattern (strip.ml[123,4806+4]..[123,4806+18])
                  Ppat_variant "Par"
                  Some
                    pattern (strip.ml[123,4806+9]..[123,4806+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[123,4806+10]..[123,4806+13])
                          Ppat_var "_a0" (strip.ml[123,4806+10]..[123,4806+13])
                        pattern (strip.ml[123,4806+14]..[123,4806+17])
                          Ppat_var "_a1" (strip.ml[123,4806+14]..[123,4806+17])
                      ]
                expression (strip.ml[123,4806+22]..[123,4806+52])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[123,4806+26]..[123,4806+29])
                        Ppat_var "_a1" (strip.ml[123,4806+26]..[123,4806+29])
                      expression (strip.ml[123,4806+32]..[123,4806+40])
                        Pexp_apply
                        expression (strip.ml[123,4806+32]..[123,4806+36])
                          Pexp_ident "ctyp" (strip.ml[123,4806+32]..[123,4806+36])
                        [
                          <label> ""
                            expression (strip.ml[123,4806+37]..[123,4806+40])
                              Pexp_ident "_a1" (strip.ml[123,4806+37]..[123,4806+40])
                        ]
                  ]
                  expression (strip.ml[123,4806+44]..[123,4806+52])
                    Pexp_variant "Par"
                    Some
                      expression (strip.ml[123,4806+49]..[123,4806+52])
                        Pexp_ident "_a1" (strip.ml[123,4806+49]..[123,4806+52])
              <case>
                pattern (strip.ml[124,4859+4]..[124,4859+22])
                  Ppat_variant "Sta"
                  Some
                    pattern (strip.ml[124,4859+9]..[124,4859+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[124,4859+10]..[124,4859+13])
                          Ppat_var "_a0" (strip.ml[124,4859+10]..[124,4859+13])
                        pattern (strip.ml[124,4859+14]..[124,4859+17])
                          Ppat_var "_a1" (strip.ml[124,4859+14]..[124,4859+17])
                        pattern (strip.ml[124,4859+18]..[124,4859+21])
                          Ppat_var "_a2" (strip.ml[124,4859+18]..[124,4859+21])
                      ]
                expression (strip.ml[125,4885+6]..[125,4885+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[125,4885+10]..[125,4885+13])
                        Ppat_var "_a1" (strip.ml[125,4885+10]..[125,4885+13])
                      expression (strip.ml[125,4885+16]..[125,4885+24])
                        Pexp_apply
                        expression (strip.ml[125,4885+16]..[125,4885+20])
                          Pexp_ident "ctyp" (strip.ml[125,4885+16]..[125,4885+20])
                        [
                          <label> ""
                            expression (strip.ml[125,4885+21]..[125,4885+24])
                              Pexp_ident "_a1" (strip.ml[125,4885+21]..[125,4885+24])
                        ]
                  ]
                  expression (strip.ml[125,4885+28]..[125,4885+65])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[125,4885+32]..[125,4885+35])
                          Ppat_var "_a2" (strip.ml[125,4885+32]..[125,4885+35])
                        expression (strip.ml[125,4885+38]..[125,4885+46])
                          Pexp_apply
                          expression (strip.ml[125,4885+38]..[125,4885+42])
                            Pexp_ident "ctyp" (strip.ml[125,4885+38]..[125,4885+42])
                          [
                            <label> ""
                              expression (strip.ml[125,4885+43]..[125,4885+46])
                                Pexp_ident "_a2" (strip.ml[125,4885+43]..[125,4885+46])
                          ]
                    ]
                    expression (strip.ml[125,4885+50]..[125,4885+65])
                      Pexp_variant "Sta"
                      Some
                        expression (strip.ml[125,4885+55]..[125,4885+65])
                          Pexp_tuple
                          [
                            expression (strip.ml[125,4885+56]..[125,4885+59])
                              Pexp_ident "_a1" (strip.ml[125,4885+56]..[125,4885+59])
                            expression (strip.ml[125,4885+61]..[125,4885+64])
                              Pexp_ident "_a2" (strip.ml[125,4885+61]..[125,4885+64])
                          ]
              <case>
                pattern (strip.ml[126,4951+4]..[126,4951+21])
                  Ppat_variant "PolyEq"
                  Some
                    pattern (strip.ml[126,4951+12]..[126,4951+21])
                      Ppat_tuple
                      [
                        pattern (strip.ml[126,4951+13]..[126,4951+16])
                          Ppat_var "_a0" (strip.ml[126,4951+13]..[126,4951+16])
                        pattern (strip.ml[126,4951+17]..[126,4951+20])
                          Ppat_var "_a1" (strip.ml[126,4951+17]..[126,4951+20])
                      ]
                expression (strip.ml[126,4951+25]..[126,4951+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[126,4951+29]..[126,4951+32])
                        Ppat_var "_a1" (strip.ml[126,4951+29]..[126,4951+32])
                      expression (strip.ml[126,4951+35]..[126,4951+48])
                        Pexp_apply
                        expression (strip.ml[126,4951+35]..[126,4951+44])
                          Pexp_ident "row_field" (strip.ml[126,4951+35]..[126,4951+44])
                        [
                          <label> ""
                            expression (strip.ml[126,4951+45]..[126,4951+48])
                              Pexp_ident "_a1" (strip.ml[126,4951+45]..[126,4951+48])
                        ]
                  ]
                  expression (strip.ml[126,4951+52]..[126,4951+63])
                    Pexp_variant "PolyEq"
                    Some
                      expression (strip.ml[126,4951+60]..[126,4951+63])
                        Pexp_ident "_a1" (strip.ml[126,4951+60]..[126,4951+63])
              <case>
                pattern (strip.ml[127,5015+4]..[127,5015+22])
                  Ppat_variant "PolySup"
                  Some
                    pattern (strip.ml[127,5015+13]..[127,5015+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[127,5015+14]..[127,5015+17])
                          Ppat_var "_a0" (strip.ml[127,5015+14]..[127,5015+17])
                        pattern (strip.ml[127,5015+18]..[127,5015+21])
                          Ppat_var "_a1" (strip.ml[127,5015+18]..[127,5015+21])
                      ]
                expression (strip.ml[127,5015+26]..[127,5015+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[127,5015+30]..[127,5015+33])
                        Ppat_var "_a1" (strip.ml[127,5015+30]..[127,5015+33])
                      expression (strip.ml[127,5015+36]..[127,5015+49])
                        Pexp_apply
                        expression (strip.ml[127,5015+36]..[127,5015+45])
                          Pexp_ident "row_field" (strip.ml[127,5015+36]..[127,5015+45])
                        [
                          <label> ""
                            expression (strip.ml[127,5015+46]..[127,5015+49])
                              Pexp_ident "_a1" (strip.ml[127,5015+46]..[127,5015+49])
                        ]
                  ]
                  expression (strip.ml[127,5015+53]..[127,5015+65])
                    Pexp_variant "PolySup"
                    Some
                      expression (strip.ml[127,5015+62]..[127,5015+65])
                        Pexp_ident "_a1" (strip.ml[127,5015+62]..[127,5015+65])
              <case>
                pattern (strip.ml[128,5081+4]..[128,5081+22])
                  Ppat_variant "PolyInf"
                  Some
                    pattern (strip.ml[128,5081+13]..[128,5081+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[128,5081+14]..[128,5081+17])
                          Ppat_var "_a0" (strip.ml[128,5081+14]..[128,5081+17])
                        pattern (strip.ml[128,5081+18]..[128,5081+21])
                          Ppat_var "_a1" (strip.ml[128,5081+18]..[128,5081+21])
                      ]
                expression (strip.ml[128,5081+26]..[128,5081+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[128,5081+30]..[128,5081+33])
                        Ppat_var "_a1" (strip.ml[128,5081+30]..[128,5081+33])
                      expression (strip.ml[128,5081+36]..[128,5081+49])
                        Pexp_apply
                        expression (strip.ml[128,5081+36]..[128,5081+45])
                          Pexp_ident "row_field" (strip.ml[128,5081+36]..[128,5081+45])
                        [
                          <label> ""
                            expression (strip.ml[128,5081+46]..[128,5081+49])
                              Pexp_ident "_a1" (strip.ml[128,5081+46]..[128,5081+49])
                        ]
                  ]
                  expression (strip.ml[128,5081+53]..[128,5081+65])
                    Pexp_variant "PolyInf"
                    Some
                      expression (strip.ml[128,5081+62]..[128,5081+65])
                        Pexp_ident "_a1" (strip.ml[128,5081+62]..[128,5081+65])
              <case>
                pattern (strip.ml[129,5147+4]..[129,5147+22])
                  Ppat_variant "Com"
                  Some
                    pattern (strip.ml[129,5147+9]..[129,5147+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[129,5147+10]..[129,5147+13])
                          Ppat_var "_a0" (strip.ml[129,5147+10]..[129,5147+13])
                        pattern (strip.ml[129,5147+14]..[129,5147+17])
                          Ppat_var "_a1" (strip.ml[129,5147+14]..[129,5147+17])
                        pattern (strip.ml[129,5147+18]..[129,5147+21])
                          Ppat_var "_a2" (strip.ml[129,5147+18]..[129,5147+21])
                      ]
                expression (strip.ml[130,5173+6]..[130,5173+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[130,5173+10]..[130,5173+13])
                        Ppat_var "_a1" (strip.ml[130,5173+10]..[130,5173+13])
                      expression (strip.ml[130,5173+16]..[130,5173+24])
                        Pexp_apply
                        expression (strip.ml[130,5173+16]..[130,5173+20])
                          Pexp_ident "ctyp" (strip.ml[130,5173+16]..[130,5173+20])
                        [
                          <label> ""
                            expression (strip.ml[130,5173+21]..[130,5173+24])
                              Pexp_ident "_a1" (strip.ml[130,5173+21]..[130,5173+24])
                        ]
                  ]
                  expression (strip.ml[130,5173+28]..[130,5173+65])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[130,5173+32]..[130,5173+35])
                          Ppat_var "_a2" (strip.ml[130,5173+32]..[130,5173+35])
                        expression (strip.ml[130,5173+38]..[130,5173+46])
                          Pexp_apply
                          expression (strip.ml[130,5173+38]..[130,5173+42])
                            Pexp_ident "ctyp" (strip.ml[130,5173+38]..[130,5173+42])
                          [
                            <label> ""
                              expression (strip.ml[130,5173+43]..[130,5173+46])
                                Pexp_ident "_a2" (strip.ml[130,5173+43]..[130,5173+46])
                          ]
                    ]
                    expression (strip.ml[130,5173+50]..[130,5173+65])
                      Pexp_variant "Com"
                      Some
                        expression (strip.ml[130,5173+55]..[130,5173+65])
                          Pexp_tuple
                          [
                            expression (strip.ml[130,5173+56]..[130,5173+59])
                              Pexp_ident "_a1" (strip.ml[130,5173+56]..[130,5173+59])
                            expression (strip.ml[130,5173+61]..[130,5173+64])
                              Pexp_ident "_a2" (strip.ml[130,5173+61]..[130,5173+64])
                          ]
              <case>
                pattern (strip.ml[131,5239+4]..[131,5239+29])
                  Ppat_variant "PolyInfSup"
                  Some
                    pattern (strip.ml[131,5239+16]..[131,5239+29])
                      Ppat_tuple
                      [
                        pattern (strip.ml[131,5239+17]..[131,5239+20])
                          Ppat_var "_a0" (strip.ml[131,5239+17]..[131,5239+20])
                        pattern (strip.ml[131,5239+21]..[131,5239+24])
                          Ppat_var "_a1" (strip.ml[131,5239+21]..[131,5239+24])
                        pattern (strip.ml[131,5239+25]..[131,5239+28])
                          Ppat_var "_a2" (strip.ml[131,5239+25]..[131,5239+28])
                      ]
                expression (strip.ml[132,5272+6]..[133,5305+55])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[132,5272+10]..[132,5272+13])
                        Ppat_var "_a1" (strip.ml[132,5272+10]..[132,5272+13])
                      expression (strip.ml[132,5272+16]..[132,5272+29])
                        Pexp_apply
                        expression (strip.ml[132,5272+16]..[132,5272+25])
                          Pexp_ident "row_field" (strip.ml[132,5272+16]..[132,5272+25])
                        [
                          <label> ""
                            expression (strip.ml[132,5272+26]..[132,5272+29])
                              Pexp_ident "_a1" (strip.ml[132,5272+26]..[132,5272+29])
                        ]
                  ]
                  expression (strip.ml[133,5305+6]..[133,5305+55])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[133,5305+10]..[133,5305+13])
                          Ppat_var "_a2" (strip.ml[133,5305+10]..[133,5305+13])
                        expression (strip.ml[133,5305+16]..[133,5305+29])
                          Pexp_apply
                          expression (strip.ml[133,5305+16]..[133,5305+25])
                            Pexp_ident "tag_names" (strip.ml[133,5305+16]..[133,5305+25])
                          [
                            <label> ""
                              expression (strip.ml[133,5305+26]..[133,5305+29])
                                Pexp_ident "_a2" (strip.ml[133,5305+26]..[133,5305+29])
                          ]
                    ]
                    expression (strip.ml[133,5305+33]..[133,5305+55])
                      Pexp_variant "PolyInfSup"
                      Some
                        expression (strip.ml[133,5305+45]..[133,5305+55])
                          Pexp_tuple
                          [
                            expression (strip.ml[133,5305+46]..[133,5305+49])
                              Pexp_ident "_a1" (strip.ml[133,5305+46]..[133,5305+49])
                            expression (strip.ml[133,5305+51]..[133,5305+54])
                              Pexp_ident "_a2" (strip.ml[133,5305+51]..[133,5305+54])
                          ]
              <case>
                pattern (strip.ml[134,5361+4]..[134,5361+22])
                  Ppat_variant "Package"
                  Some
                    pattern (strip.ml[134,5361+13]..[134,5361+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[134,5361+14]..[134,5361+17])
                          Ppat_var "_a0" (strip.ml[134,5361+14]..[134,5361+17])
                        pattern (strip.ml[134,5361+18]..[134,5361+21])
                          Ppat_var "_a1" (strip.ml[134,5361+18]..[134,5361+21])
                      ]
                expression (strip.ml[134,5361+26]..[134,5361+60])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[134,5361+30]..[134,5361+33])
                        Ppat_var "_a1" (strip.ml[134,5361+30]..[134,5361+33])
                      expression (strip.ml[134,5361+36]..[134,5361+44])
                        Pexp_apply
                        expression (strip.ml[134,5361+36]..[134,5361+40])
                          Pexp_ident "mtyp" (strip.ml[134,5361+36]..[134,5361+40])
                        [
                          <label> ""
                            expression (strip.ml[134,5361+41]..[134,5361+44])
                              Pexp_ident "_a1" (strip.ml[134,5361+41]..[134,5361+44])
                        ]
                  ]
                  expression (strip.ml[134,5361+48]..[134,5361+60])
                    Pexp_variant "Package"
                    Some
                      expression (strip.ml[134,5361+57]..[134,5361+60])
                        Pexp_ident "_a1" (strip.ml[134,5361+57]..[134,5361+60])
              <case>
                pattern (strip.ml[135,5422+4]..[135,5422+15])
                  Ppat_alias "_a0" (strip.ml[135,5422+12]..[135,5422+15])
                  pattern (strip.ml[135,5422+4]..[135,5422+8])
                    Ppat_type
                    "ant" (strip.ml[135,5422+5]..[135,5422+8])
                expression (strip.ml[135,5422+19]..[135,5422+42]) ghost
                  Pexp_coerce
                  expression (strip.ml[135,5422+20]..[135,5422+27])
                    Pexp_apply
                    expression (strip.ml[135,5422+20]..[135,5422+23])
                      Pexp_ident "ant" (strip.ml[135,5422+20]..[135,5422+23])
                    [
                      <label> ""
                        expression (strip.ml[135,5422+24]..[135,5422+27])
                          Pexp_ident "_a0" (strip.ml[135,5422+24]..[135,5422+27])
                    ]
                  None
                  core_type (strip.ml[135,5422+31]..[135,5422+41])
                    Ptyp_constr "Astfn.ctyp" (strip.ml[135,5422+31]..[135,5422+41])
                    []
            ]
          core_type (strip.ml[96,3495+14]..[96,3495+37])
            Ptyp_arrow
            ""
            core_type (strip.ml[96,3495+14]..[96,3495+23])
              Ptyp_constr "Astf.ctyp" (strip.ml[96,3495+14]..[96,3495+23])
              []
            core_type (strip.ml[96,3495+27]..[96,3495+37])
              Ptyp_constr "Astfn.ctyp" (strip.ml[96,3495+27]..[96,3495+37])
              []
      <def>
        pattern (strip.ml[136,5465+4]..[136,5465+19])
          Ppat_var "type_parameters" (strip.ml[136,5465+4]..[136,5465+19])
        expression (strip.ml[136,5465+19]..[142,5720+53]) ghost
          Pexp_constraint
          expression (strip.ml[137,5534+2]..[142,5720+53])
            Pexp_function
            [
              <case>
                pattern (strip.ml[138,5545+4]..[138,5545+22])
                  Ppat_variant "Com"
                  Some
                    pattern (strip.ml[138,5545+9]..[138,5545+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[138,5545+10]..[138,5545+13])
                          Ppat_var "_a0" (strip.ml[138,5545+10]..[138,5545+13])
                        pattern (strip.ml[138,5545+14]..[138,5545+17])
                          Ppat_var "_a1" (strip.ml[138,5545+14]..[138,5545+17])
                        pattern (strip.ml[138,5545+18]..[138,5545+21])
                          Ppat_var "_a2" (strip.ml[138,5545+18]..[138,5545+21])
                      ]
                expression (strip.ml[139,5571+6]..[140,5610+54])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[139,5571+10]..[139,5571+13])
                        Ppat_var "_a1" (strip.ml[139,5571+10]..[139,5571+13])
                      expression (strip.ml[139,5571+16]..[139,5571+35])
                        Pexp_apply
                        expression (strip.ml[139,5571+16]..[139,5571+31])
                          Pexp_ident "type_parameters" (strip.ml[139,5571+16]..[139,5571+31])
                        [
                          <label> ""
                            expression (strip.ml[139,5571+32]..[139,5571+35])
                              Pexp_ident "_a1" (strip.ml[139,5571+32]..[139,5571+35])
                        ]
                  ]
                  expression (strip.ml[140,5610+6]..[140,5610+54])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[140,5610+10]..[140,5610+13])
                          Ppat_var "_a2" (strip.ml[140,5610+10]..[140,5610+13])
                        expression (strip.ml[140,5610+16]..[140,5610+35])
                          Pexp_apply
                          expression (strip.ml[140,5610+16]..[140,5610+31])
                            Pexp_ident "type_parameters" (strip.ml[140,5610+16]..[140,5610+31])
                          [
                            <label> ""
                              expression (strip.ml[140,5610+32]..[140,5610+35])
                                Pexp_ident "_a2" (strip.ml[140,5610+32]..[140,5610+35])
                          ]
                    ]
                    expression (strip.ml[140,5610+39]..[140,5610+54])
                      Pexp_variant "Com"
                      Some
                        expression (strip.ml[140,5610+44]..[140,5610+54])
                          Pexp_tuple
                          [
                            expression (strip.ml[140,5610+45]..[140,5610+48])
                              Pexp_ident "_a1" (strip.ml[140,5610+45]..[140,5610+48])
                            expression (strip.ml[140,5610+50]..[140,5610+53])
                              Pexp_ident "_a2" (strip.ml[140,5610+50]..[140,5610+53])
                          ]
              <case>
                pattern (strip.ml[141,5665+4]..[141,5665+19])
                  Ppat_variant "Ctyp"
                  Some
                    pattern (strip.ml[141,5665+10]..[141,5665+19])
                      Ppat_tuple
                      [
                        pattern (strip.ml[141,5665+11]..[141,5665+14])
                          Ppat_var "_a0" (strip.ml[141,5665+11]..[141,5665+14])
                        pattern (strip.ml[141,5665+15]..[141,5665+18])
                          Ppat_var "_a1" (strip.ml[141,5665+15]..[141,5665+18])
                      ]
                expression (strip.ml[141,5665+23]..[141,5665+54])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[141,5665+27]..[141,5665+30])
                        Ppat_var "_a1" (strip.ml[141,5665+27]..[141,5665+30])
                      expression (strip.ml[141,5665+33]..[141,5665+41])
                        Pexp_apply
                        expression (strip.ml[141,5665+33]..[141,5665+37])
                          Pexp_ident "ctyp" (strip.ml[141,5665+33]..[141,5665+37])
                        [
                          <label> ""
                            expression (strip.ml[141,5665+38]..[141,5665+41])
                              Pexp_ident "_a1" (strip.ml[141,5665+38]..[141,5665+41])
                        ]
                  ]
                  expression (strip.ml[141,5665+45]..[141,5665+54])
                    Pexp_variant "Ctyp"
                    Some
                      expression (strip.ml[141,5665+51]..[141,5665+54])
                        Pexp_ident "_a1" (strip.ml[141,5665+51]..[141,5665+54])
              <case>
                pattern (strip.ml[142,5720+4]..[142,5720+15])
                  Ppat_alias "_a0" (strip.ml[142,5720+12]..[142,5720+15])
                  pattern (strip.ml[142,5720+4]..[142,5720+8])
                    Ppat_type
                    "ant" (strip.ml[142,5720+5]..[142,5720+8])
                expression (strip.ml[142,5720+19]..[142,5720+53]) ghost
                  Pexp_coerce
                  expression (strip.ml[142,5720+20]..[142,5720+27])
                    Pexp_apply
                    expression (strip.ml[142,5720+20]..[142,5720+23])
                      Pexp_ident "ant" (strip.ml[142,5720+20]..[142,5720+23])
                    [
                      <label> ""
                        expression (strip.ml[142,5720+24]..[142,5720+27])
                          Pexp_ident "_a0" (strip.ml[142,5720+24]..[142,5720+27])
                    ]
                  None
                  core_type (strip.ml[142,5720+31]..[142,5720+52])
                    Ptyp_constr "Astfn.type_parameters" (strip.ml[142,5720+31]..[142,5720+52])
                    []
            ]
          core_type (strip.ml[136,5465+21]..[136,5465+66])
            Ptyp_arrow
            ""
            core_type (strip.ml[136,5465+21]..[136,5465+41])
              Ptyp_constr "Astf.type_parameters" (strip.ml[136,5465+21]..[136,5465+41])
              []
            core_type (strip.ml[136,5465+45]..[136,5465+66])
              Ptyp_constr "Astfn.type_parameters" (strip.ml[136,5465+45]..[136,5465+66])
              []
      <def>
        pattern (strip.ml[143,5774+4]..[143,5774+13])
          Ppat_var "row_field" (strip.ml[143,5774+4]..[143,5774+13])
        expression (strip.ml[143,5774+13]..[151,6149+54]) ghost
          Pexp_constraint
          expression (strip.ml[144,5825+2]..[151,6149+54])
            Pexp_function
            [
              <case>
                pattern (strip.ml[145,5836+4]..[145,5836+15])
                  Ppat_alias "_a0" (strip.ml[145,5836+12]..[145,5836+15])
                  pattern (strip.ml[145,5836+4]..[145,5836+8])
                    Ppat_type
                    "ant" (strip.ml[145,5836+5]..[145,5836+8])
                expression (strip.ml[145,5836+19]..[145,5836+47]) ghost
                  Pexp_coerce
                  expression (strip.ml[145,5836+20]..[145,5836+27])
                    Pexp_apply
                    expression (strip.ml[145,5836+20]..[145,5836+23])
                      Pexp_ident "ant" (strip.ml[145,5836+20]..[145,5836+23])
                    [
                      <label> ""
                        expression (strip.ml[145,5836+24]..[145,5836+27])
                          Pexp_ident "_a0" (strip.ml[145,5836+24]..[145,5836+27])
                    ]
                  None
                  core_type (strip.ml[145,5836+31]..[145,5836+46])
                    Ptyp_constr "Astfn.row_field" (strip.ml[145,5836+31]..[145,5836+46])
                    []
              <case>
                pattern (strip.ml[146,5884+4]..[146,5884+22])
                  Ppat_variant "Bar"
                  Some
                    pattern (strip.ml[146,5884+9]..[146,5884+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[146,5884+10]..[146,5884+13])
                          Ppat_var "_a0" (strip.ml[146,5884+10]..[146,5884+13])
                        pattern (strip.ml[146,5884+14]..[146,5884+17])
                          Ppat_var "_a1" (strip.ml[146,5884+14]..[146,5884+17])
                        pattern (strip.ml[146,5884+18]..[146,5884+21])
                          Ppat_var "_a2" (strip.ml[146,5884+18]..[146,5884+21])
                      ]
                expression (strip.ml[147,5910+6]..[147,5910+75])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[147,5910+10]..[147,5910+13])
                        Ppat_var "_a1" (strip.ml[147,5910+10]..[147,5910+13])
                      expression (strip.ml[147,5910+16]..[147,5910+29])
                        Pexp_apply
                        expression (strip.ml[147,5910+16]..[147,5910+25])
                          Pexp_ident "row_field" (strip.ml[147,5910+16]..[147,5910+25])
                        [
                          <label> ""
                            expression (strip.ml[147,5910+26]..[147,5910+29])
                              Pexp_ident "_a1" (strip.ml[147,5910+26]..[147,5910+29])
                        ]
                  ]
                  expression (strip.ml[147,5910+33]..[147,5910+75])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[147,5910+37]..[147,5910+40])
                          Ppat_var "_a2" (strip.ml[147,5910+37]..[147,5910+40])
                        expression (strip.ml[147,5910+43]..[147,5910+56])
                          Pexp_apply
                          expression (strip.ml[147,5910+43]..[147,5910+52])
                            Pexp_ident "row_field" (strip.ml[147,5910+43]..[147,5910+52])
                          [
                            <label> ""
                              expression (strip.ml[147,5910+53]..[147,5910+56])
                                Pexp_ident "_a2" (strip.ml[147,5910+53]..[147,5910+56])
                          ]
                    ]
                    expression (strip.ml[147,5910+60]..[147,5910+75])
                      Pexp_variant "Bar"
                      Some
                        expression (strip.ml[147,5910+65]..[147,5910+75])
                          Pexp_tuple
                          [
                            expression (strip.ml[147,5910+66]..[147,5910+69])
                              Pexp_ident "_a1" (strip.ml[147,5910+66]..[147,5910+69])
                            expression (strip.ml[147,5910+71]..[147,5910+74])
                              Pexp_ident "_a2" (strip.ml[147,5910+71]..[147,5910+74])
                          ]
              <case>
                pattern (strip.ml[148,5986+4]..[148,5986+20])
                  Ppat_variant "TyVrn"
                  Some
                    pattern (strip.ml[148,5986+11]..[148,5986+20])
                      Ppat_tuple
                      [
                        pattern (strip.ml[148,5986+12]..[148,5986+15])
                          Ppat_var "_a0" (strip.ml[148,5986+12]..[148,5986+15])
                        pattern (strip.ml[148,5986+16]..[148,5986+19])
                          Ppat_var "_a1" (strip.ml[148,5986+16]..[148,5986+19])
                      ]
                expression (strip.ml[148,5986+24]..[148,5986+59])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[148,5986+28]..[148,5986+31])
                        Ppat_var "_a1" (strip.ml[148,5986+28]..[148,5986+31])
                      expression (strip.ml[148,5986+34]..[148,5986+45])
                        Pexp_apply
                        expression (strip.ml[148,5986+34]..[148,5986+41])
                          Pexp_ident "astring" (strip.ml[148,5986+34]..[148,5986+41])
                        [
                          <label> ""
                            expression (strip.ml[148,5986+42]..[148,5986+45])
                              Pexp_ident "_a1" (strip.ml[148,5986+42]..[148,5986+45])
                        ]
                  ]
                  expression (strip.ml[148,5986+49]..[148,5986+59])
                    Pexp_variant "TyVrn"
                    Some
                      expression (strip.ml[148,5986+56]..[148,5986+59])
                        Pexp_ident "_a1" (strip.ml[148,5986+56]..[148,5986+59])
              <case>
                pattern (strip.ml[149,6046+4]..[149,6046+26])
                  Ppat_variant "TyVrnOf"
                  Some
                    pattern (strip.ml[149,6046+13]..[149,6046+26])
                      Ppat_tuple
                      [
                        pattern (strip.ml[149,6046+14]..[149,6046+17])
                          Ppat_var "_a0" (strip.ml[149,6046+14]..[149,6046+17])
                        pattern (strip.ml[149,6046+18]..[149,6046+21])
                          Ppat_var "_a1" (strip.ml[149,6046+18]..[149,6046+21])
                        pattern (strip.ml[149,6046+22]..[149,6046+25])
                          Ppat_var "_a2" (strip.ml[149,6046+22]..[149,6046+25])
                      ]
                expression (strip.ml[150,6076+6]..[150,6076+72])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[150,6076+10]..[150,6076+13])
                        Ppat_var "_a1" (strip.ml[150,6076+10]..[150,6076+13])
                      expression (strip.ml[150,6076+16]..[150,6076+27])
                        Pexp_apply
                        expression (strip.ml[150,6076+16]..[150,6076+23])
                          Pexp_ident "astring" (strip.ml[150,6076+16]..[150,6076+23])
                        [
                          <label> ""
                            expression (strip.ml[150,6076+24]..[150,6076+27])
                              Pexp_ident "_a1" (strip.ml[150,6076+24]..[150,6076+27])
                        ]
                  ]
                  expression (strip.ml[150,6076+31]..[150,6076+72])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[150,6076+35]..[150,6076+38])
                          Ppat_var "_a2" (strip.ml[150,6076+35]..[150,6076+38])
                        expression (strip.ml[150,6076+41]..[150,6076+49])
                          Pexp_apply
                          expression (strip.ml[150,6076+41]..[150,6076+45])
                            Pexp_ident "ctyp" (strip.ml[150,6076+41]..[150,6076+45])
                          [
                            <label> ""
                              expression (strip.ml[150,6076+46]..[150,6076+49])
                                Pexp_ident "_a2" (strip.ml[150,6076+46]..[150,6076+49])
                          ]
                    ]
                    expression (strip.ml[150,6076+53]..[150,6076+72])
                      Pexp_variant "TyVrnOf"
                      Some
                        expression (strip.ml[150,6076+62]..[150,6076+72])
                          Pexp_tuple
                          [
                            expression (strip.ml[150,6076+63]..[150,6076+66])
                              Pexp_ident "_a1" (strip.ml[150,6076+63]..[150,6076+66])
                            expression (strip.ml[150,6076+68]..[150,6076+71])
                              Pexp_ident "_a2" (strip.ml[150,6076+68]..[150,6076+71])
                          ]
              <case>
                pattern (strip.ml[151,6149+4]..[151,6149+19])
                  Ppat_variant "Ctyp"
                  Some
                    pattern (strip.ml[151,6149+10]..[151,6149+19])
                      Ppat_tuple
                      [
                        pattern (strip.ml[151,6149+11]..[151,6149+14])
                          Ppat_var "_a0" (strip.ml[151,6149+11]..[151,6149+14])
                        pattern (strip.ml[151,6149+15]..[151,6149+18])
                          Ppat_var "_a1" (strip.ml[151,6149+15]..[151,6149+18])
                      ]
                expression (strip.ml[151,6149+23]..[151,6149+54])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[151,6149+27]..[151,6149+30])
                        Ppat_var "_a1" (strip.ml[151,6149+27]..[151,6149+30])
                      expression (strip.ml[151,6149+33]..[151,6149+41])
                        Pexp_apply
                        expression (strip.ml[151,6149+33]..[151,6149+37])
                          Pexp_ident "ctyp" (strip.ml[151,6149+33]..[151,6149+37])
                        [
                          <label> ""
                            expression (strip.ml[151,6149+38]..[151,6149+41])
                              Pexp_ident "_a1" (strip.ml[151,6149+38]..[151,6149+41])
                        ]
                  ]
                  expression (strip.ml[151,6149+45]..[151,6149+54])
                    Pexp_variant "Ctyp"
                    Some
                      expression (strip.ml[151,6149+51]..[151,6149+54])
                        Pexp_ident "_a1" (strip.ml[151,6149+51]..[151,6149+54])
            ]
          core_type (strip.ml[143,5774+15]..[143,5774+48])
            Ptyp_arrow
            ""
            core_type (strip.ml[143,5774+15]..[143,5774+29])
              Ptyp_constr "Astf.row_field" (strip.ml[143,5774+15]..[143,5774+29])
              []
            core_type (strip.ml[143,5774+33]..[143,5774+48])
              Ptyp_constr "Astfn.row_field" (strip.ml[143,5774+33]..[143,5774+48])
              []
      <def>
        pattern (strip.ml[152,6204+4]..[152,6204+13])
          Ppat_var "tag_names" (strip.ml[152,6204+4]..[152,6204+13])
        expression (strip.ml[152,6204+13]..[157,6416+59]) ghost
          Pexp_constraint
          expression (strip.ml[153,6255+2]..[157,6416+59])
            Pexp_function
            [
              <case>
                pattern (strip.ml[154,6266+4]..[154,6266+15])
                  Ppat_alias "_a0" (strip.ml[154,6266+12]..[154,6266+15])
                  pattern (strip.ml[154,6266+4]..[154,6266+8])
                    Ppat_type
                    "ant" (strip.ml[154,6266+5]..[154,6266+8])
                expression (strip.ml[154,6266+19]..[154,6266+47]) ghost
                  Pexp_coerce
                  expression (strip.ml[154,6266+20]..[154,6266+27])
                    Pexp_apply
                    expression (strip.ml[154,6266+20]..[154,6266+23])
                      Pexp_ident "ant" (strip.ml[154,6266+20]..[154,6266+23])
                    [
                      <label> ""
                        expression (strip.ml[154,6266+24]..[154,6266+27])
                          Pexp_ident "_a0" (strip.ml[154,6266+24]..[154,6266+27])
                    ]
                  None
                  core_type (strip.ml[154,6266+31]..[154,6266+46])
                    Ptyp_constr "Astfn.tag_names" (strip.ml[154,6266+31]..[154,6266+46])
                    []
              <case>
                pattern (strip.ml[155,6314+4]..[155,6314+22])
                  Ppat_variant "App"
                  Some
                    pattern (strip.ml[155,6314+9]..[155,6314+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[155,6314+10]..[155,6314+13])
                          Ppat_var "_a0" (strip.ml[155,6314+10]..[155,6314+13])
                        pattern (strip.ml[155,6314+14]..[155,6314+17])
                          Ppat_var "_a1" (strip.ml[155,6314+14]..[155,6314+17])
                        pattern (strip.ml[155,6314+18]..[155,6314+21])
                          Ppat_var "_a2" (strip.ml[155,6314+18]..[155,6314+21])
                      ]
                expression (strip.ml[156,6340+6]..[156,6340+75])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[156,6340+10]..[156,6340+13])
                        Ppat_var "_a1" (strip.ml[156,6340+10]..[156,6340+13])
                      expression (strip.ml[156,6340+16]..[156,6340+29])
                        Pexp_apply
                        expression (strip.ml[156,6340+16]..[156,6340+25])
                          Pexp_ident "tag_names" (strip.ml[156,6340+16]..[156,6340+25])
                        [
                          <label> ""
                            expression (strip.ml[156,6340+26]..[156,6340+29])
                              Pexp_ident "_a1" (strip.ml[156,6340+26]..[156,6340+29])
                        ]
                  ]
                  expression (strip.ml[156,6340+33]..[156,6340+75])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[156,6340+37]..[156,6340+40])
                          Ppat_var "_a2" (strip.ml[156,6340+37]..[156,6340+40])
                        expression (strip.ml[156,6340+43]..[156,6340+56])
                          Pexp_apply
                          expression (strip.ml[156,6340+43]..[156,6340+52])
                            Pexp_ident "tag_names" (strip.ml[156,6340+43]..[156,6340+52])
                          [
                            <label> ""
                              expression (strip.ml[156,6340+53]..[156,6340+56])
                                Pexp_ident "_a2" (strip.ml[156,6340+53]..[156,6340+56])
                          ]
                    ]
                    expression (strip.ml[156,6340+60]..[156,6340+75])
                      Pexp_variant "App"
                      Some
                        expression (strip.ml[156,6340+65]..[156,6340+75])
                          Pexp_tuple
                          [
                            expression (strip.ml[156,6340+66]..[156,6340+69])
                              Pexp_ident "_a1" (strip.ml[156,6340+66]..[156,6340+69])
                            expression (strip.ml[156,6340+71]..[156,6340+74])
                              Pexp_ident "_a2" (strip.ml[156,6340+71]..[156,6340+74])
                          ]
              <case>
                pattern (strip.ml[157,6416+4]..[157,6416+20])
                  Ppat_variant "TyVrn"
                  Some
                    pattern (strip.ml[157,6416+11]..[157,6416+20])
                      Ppat_tuple
                      [
                        pattern (strip.ml[157,6416+12]..[157,6416+15])
                          Ppat_var "_a0" (strip.ml[157,6416+12]..[157,6416+15])
                        pattern (strip.ml[157,6416+16]..[157,6416+19])
                          Ppat_var "_a1" (strip.ml[157,6416+16]..[157,6416+19])
                      ]
                expression (strip.ml[157,6416+24]..[157,6416+59])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[157,6416+28]..[157,6416+31])
                        Ppat_var "_a1" (strip.ml[157,6416+28]..[157,6416+31])
                      expression (strip.ml[157,6416+34]..[157,6416+45])
                        Pexp_apply
                        expression (strip.ml[157,6416+34]..[157,6416+41])
                          Pexp_ident "astring" (strip.ml[157,6416+34]..[157,6416+41])
                        [
                          <label> ""
                            expression (strip.ml[157,6416+42]..[157,6416+45])
                              Pexp_ident "_a1" (strip.ml[157,6416+42]..[157,6416+45])
                        ]
                  ]
                  expression (strip.ml[157,6416+49]..[157,6416+59])
                    Pexp_variant "TyVrn"
                    Some
                      expression (strip.ml[157,6416+56]..[157,6416+59])
                        Pexp_ident "_a1" (strip.ml[157,6416+56]..[157,6416+59])
            ]
          core_type (strip.ml[152,6204+15]..[152,6204+48])
            Ptyp_arrow
            ""
            core_type (strip.ml[152,6204+15]..[152,6204+29])
              Ptyp_constr "Astf.tag_names" (strip.ml[152,6204+15]..[152,6204+29])
              []
            core_type (strip.ml[152,6204+33]..[152,6204+48])
              Ptyp_constr "Astfn.tag_names" (strip.ml[152,6204+33]..[152,6204+48])
              []
      <def>
        pattern (strip.ml[158,6476+4]..[158,6476+12])
          Ppat_var "typedecl" (strip.ml[158,6476+4]..[158,6476+12])
        expression (strip.ml[158,6476+12]..[171,7009+46]) ghost
          Pexp_constraint
          expression (strip.ml[159,6524+2]..[171,7009+46])
            Pexp_function
            [
              <case>
                pattern (strip.ml[160,6535+4]..[160,6535+32])
                  Ppat_variant "TyDcl"
                  Some
                    pattern (strip.ml[160,6535+11]..[160,6535+32])
                      Ppat_tuple
                      [
                        pattern (strip.ml[160,6535+12]..[160,6535+15])
                          Ppat_var "_a0" (strip.ml[160,6535+12]..[160,6535+15])
                        pattern (strip.ml[160,6535+16]..[160,6535+19])
                          Ppat_var "_a1" (strip.ml[160,6535+16]..[160,6535+19])
                        pattern (strip.ml[160,6535+20]..[160,6535+23])
                          Ppat_var "_a2" (strip.ml[160,6535+20]..[160,6535+23])
                        pattern (strip.ml[160,6535+24]..[160,6535+27])
                          Ppat_var "_a3" (strip.ml[160,6535+24]..[160,6535+27])
                        pattern (strip.ml[160,6535+28]..[160,6535+31])
                          Ppat_var "_a4" (strip.ml[160,6535+28]..[160,6535+31])
                      ]
                expression (strip.ml[161,6571+6]..[164,6674+66])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[161,6571+10]..[161,6571+13])
                        Ppat_var "_a1" (strip.ml[161,6571+10]..[161,6571+13])
                      expression (strip.ml[161,6571+16]..[161,6571+27])
                        Pexp_apply
                        expression (strip.ml[161,6571+16]..[161,6571+23])
                          Pexp_ident "alident" (strip.ml[161,6571+16]..[161,6571+23])
                        [
                          <label> ""
                            expression (strip.ml[161,6571+24]..[161,6571+27])
                              Pexp_ident "_a1" (strip.ml[161,6571+24]..[161,6571+27])
                        ]
                  ]
                  expression (strip.ml[162,6602+6]..[164,6674+66])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[162,6602+10]..[162,6602+13])
                          Ppat_var "_a2" (strip.ml[162,6602+10]..[162,6602+13])
                        expression (strip.ml[162,6602+16]..[162,6602+35])
                          Pexp_apply
                          expression (strip.ml[162,6602+16]..[162,6602+31])
                            Pexp_ident "opt_decl_params" (strip.ml[162,6602+16]..[162,6602+31])
                          [
                            <label> ""
                              expression (strip.ml[162,6602+32]..[162,6602+35])
                                Pexp_ident "_a2" (strip.ml[162,6602+32]..[162,6602+35])
                          ]
                    ]
                    expression (strip.ml[163,6641+6]..[164,6674+66])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[163,6641+10]..[163,6641+13])
                            Ppat_var "_a3" (strip.ml[163,6641+10]..[163,6641+13])
                          expression (strip.ml[163,6641+16]..[163,6641+29])
                            Pexp_apply
                            expression (strip.ml[163,6641+16]..[163,6641+25])
                              Pexp_ident "type_info" (strip.ml[163,6641+16]..[163,6641+25])
                            [
                              <label> ""
                                expression (strip.ml[163,6641+26]..[163,6641+29])
                                  Pexp_ident "_a3" (strip.ml[163,6641+26]..[163,6641+29])
                            ]
                      ]
                      expression (strip.ml[164,6674+6]..[164,6674+66])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (strip.ml[164,6674+10]..[164,6674+13])
                              Ppat_var "_a4" (strip.ml[164,6674+10]..[164,6674+13])
                            expression (strip.ml[164,6674+16]..[164,6674+35])
                              Pexp_apply
                              expression (strip.ml[164,6674+16]..[164,6674+31])
                                Pexp_ident "opt_type_constr" (strip.ml[164,6674+16]..[164,6674+31])
                              [
                                <label> ""
                                  expression (strip.ml[164,6674+32]..[164,6674+35])
                                    Pexp_ident "_a4" (strip.ml[164,6674+32]..[164,6674+35])
                              ]
                        ]
                        expression (strip.ml[164,6674+39]..[164,6674+66])
                          Pexp_variant "TyDcl"
                          Some
                            expression (strip.ml[164,6674+46]..[164,6674+66])
                              Pexp_tuple
                              [
                                expression (strip.ml[164,6674+47]..[164,6674+50])
                                  Pexp_ident "_a1" (strip.ml[164,6674+47]..[164,6674+50])
                                expression (strip.ml[164,6674+52]..[164,6674+55])
                                  Pexp_ident "_a2" (strip.ml[164,6674+52]..[164,6674+55])
                                expression (strip.ml[164,6674+57]..[164,6674+60])
                                  Pexp_ident "_a3" (strip.ml[164,6674+57]..[164,6674+60])
                                expression (strip.ml[164,6674+62]..[164,6674+65])
                                  Pexp_ident "_a4" (strip.ml[164,6674+62]..[164,6674+65])
                              ]
              <case>
                pattern (strip.ml[165,6741+4]..[165,6741+30])
                  Ppat_variant "TyAbstr"
                  Some
                    pattern (strip.ml[165,6741+13]..[165,6741+30])
                      Ppat_tuple
                      [
                        pattern (strip.ml[165,6741+14]..[165,6741+17])
                          Ppat_var "_a0" (strip.ml[165,6741+14]..[165,6741+17])
                        pattern (strip.ml[165,6741+18]..[165,6741+21])
                          Ppat_var "_a1" (strip.ml[165,6741+18]..[165,6741+21])
                        pattern (strip.ml[165,6741+22]..[165,6741+25])
                          Ppat_var "_a2" (strip.ml[165,6741+22]..[165,6741+25])
                        pattern (strip.ml[165,6741+26]..[165,6741+29])
                          Ppat_var "_a3" (strip.ml[165,6741+26]..[165,6741+29])
                      ]
                expression (strip.ml[166,6775+6]..[168,6845+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[166,6775+10]..[166,6775+13])
                        Ppat_var "_a1" (strip.ml[166,6775+10]..[166,6775+13])
                      expression (strip.ml[166,6775+16]..[166,6775+27])
                        Pexp_apply
                        expression (strip.ml[166,6775+16]..[166,6775+23])
                          Pexp_ident "alident" (strip.ml[166,6775+16]..[166,6775+23])
                        [
                          <label> ""
                            expression (strip.ml[166,6775+24]..[166,6775+27])
                              Pexp_ident "_a1" (strip.ml[166,6775+24]..[166,6775+27])
                        ]
                  ]
                  expression (strip.ml[167,6806+6]..[168,6845+63])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[167,6806+10]..[167,6806+13])
                          Ppat_var "_a2" (strip.ml[167,6806+10]..[167,6806+13])
                        expression (strip.ml[167,6806+16]..[167,6806+35])
                          Pexp_apply
                          expression (strip.ml[167,6806+16]..[167,6806+31])
                            Pexp_ident "opt_decl_params" (strip.ml[167,6806+16]..[167,6806+31])
                          [
                            <label> ""
                              expression (strip.ml[167,6806+32]..[167,6806+35])
                                Pexp_ident "_a2" (strip.ml[167,6806+32]..[167,6806+35])
                          ]
                    ]
                    expression (strip.ml[168,6845+6]..[168,6845+63])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[168,6845+10]..[168,6845+13])
                            Ppat_var "_a3" (strip.ml[168,6845+10]..[168,6845+13])
                          expression (strip.ml[168,6845+16]..[168,6845+35])
                            Pexp_apply
                            expression (strip.ml[168,6845+16]..[168,6845+31])
                              Pexp_ident "opt_type_constr" (strip.ml[168,6845+16]..[168,6845+31])
                            [
                              <label> ""
                                expression (strip.ml[168,6845+32]..[168,6845+35])
                                  Pexp_ident "_a3" (strip.ml[168,6845+32]..[168,6845+35])
                            ]
                      ]
                      expression (strip.ml[168,6845+39]..[168,6845+63])
                        Pexp_variant "TyAbstr"
                        Some
                          expression (strip.ml[168,6845+48]..[168,6845+63])
                            Pexp_tuple
                            [
                              expression (strip.ml[168,6845+49]..[168,6845+52])
                                Pexp_ident "_a1" (strip.ml[168,6845+49]..[168,6845+52])
                              expression (strip.ml[168,6845+54]..[168,6845+57])
                                Pexp_ident "_a2" (strip.ml[168,6845+54]..[168,6845+57])
                              expression (strip.ml[168,6845+59]..[168,6845+62])
                                Pexp_ident "_a3" (strip.ml[168,6845+59]..[168,6845+62])
                            ]
              <case>
                pattern (strip.ml[169,6909+4]..[169,6909+22])
                  Ppat_variant "And"
                  Some
                    pattern (strip.ml[169,6909+9]..[169,6909+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[169,6909+10]..[169,6909+13])
                          Ppat_var "_a0" (strip.ml[169,6909+10]..[169,6909+13])
                        pattern (strip.ml[169,6909+14]..[169,6909+17])
                          Ppat_var "_a1" (strip.ml[169,6909+14]..[169,6909+17])
                        pattern (strip.ml[169,6909+18]..[169,6909+21])
                          Ppat_var "_a2" (strip.ml[169,6909+18]..[169,6909+21])
                      ]
                expression (strip.ml[170,6935+6]..[170,6935+73])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[170,6935+10]..[170,6935+13])
                        Ppat_var "_a1" (strip.ml[170,6935+10]..[170,6935+13])
                      expression (strip.ml[170,6935+16]..[170,6935+28])
                        Pexp_apply
                        expression (strip.ml[170,6935+16]..[170,6935+24])
                          Pexp_ident "typedecl" (strip.ml[170,6935+16]..[170,6935+24])
                        [
                          <label> ""
                            expression (strip.ml[170,6935+25]..[170,6935+28])
                              Pexp_ident "_a1" (strip.ml[170,6935+25]..[170,6935+28])
                        ]
                  ]
                  expression (strip.ml[170,6935+32]..[170,6935+73])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[170,6935+36]..[170,6935+39])
                          Ppat_var "_a2" (strip.ml[170,6935+36]..[170,6935+39])
                        expression (strip.ml[170,6935+42]..[170,6935+54])
                          Pexp_apply
                          expression (strip.ml[170,6935+42]..[170,6935+50])
                            Pexp_ident "typedecl" (strip.ml[170,6935+42]..[170,6935+50])
                          [
                            <label> ""
                              expression (strip.ml[170,6935+51]..[170,6935+54])
                                Pexp_ident "_a2" (strip.ml[170,6935+51]..[170,6935+54])
                          ]
                    ]
                    expression (strip.ml[170,6935+58]..[170,6935+73])
                      Pexp_variant "And"
                      Some
                        expression (strip.ml[170,6935+63]..[170,6935+73])
                          Pexp_tuple
                          [
                            expression (strip.ml[170,6935+64]..[170,6935+67])
                              Pexp_ident "_a1" (strip.ml[170,6935+64]..[170,6935+67])
                            expression (strip.ml[170,6935+69]..[170,6935+72])
                              Pexp_ident "_a2" (strip.ml[170,6935+69]..[170,6935+72])
                          ]
              <case>
                pattern (strip.ml[171,7009+4]..[171,7009+15])
                  Ppat_alias "_a0" (strip.ml[171,7009+12]..[171,7009+15])
                  pattern (strip.ml[171,7009+4]..[171,7009+8])
                    Ppat_type
                    "ant" (strip.ml[171,7009+5]..[171,7009+8])
                expression (strip.ml[171,7009+19]..[171,7009+46]) ghost
                  Pexp_coerce
                  expression (strip.ml[171,7009+20]..[171,7009+27])
                    Pexp_apply
                    expression (strip.ml[171,7009+20]..[171,7009+23])
                      Pexp_ident "ant" (strip.ml[171,7009+20]..[171,7009+23])
                    [
                      <label> ""
                        expression (strip.ml[171,7009+24]..[171,7009+27])
                          Pexp_ident "_a0" (strip.ml[171,7009+24]..[171,7009+27])
                    ]
                  None
                  core_type (strip.ml[171,7009+31]..[171,7009+45])
                    Ptyp_constr "Astfn.typedecl" (strip.ml[171,7009+31]..[171,7009+45])
                    []
            ]
          core_type (strip.ml[158,6476+14]..[158,6476+45])
            Ptyp_arrow
            ""
            core_type (strip.ml[158,6476+14]..[158,6476+27])
              Ptyp_constr "Astf.typedecl" (strip.ml[158,6476+14]..[158,6476+27])
              []
            core_type (strip.ml[158,6476+31]..[158,6476+45])
              Ptyp_constr "Astfn.typedecl" (strip.ml[158,6476+31]..[158,6476+45])
              []
      <def>
        pattern (strip.ml[172,7056+4]..[172,7056+15])
          Ppat_var "type_constr" (strip.ml[172,7056+4]..[172,7056+15])
        expression (strip.ml[172,7056+15]..[179,7326+49]) ghost
          Pexp_constraint
          expression (strip.ml[173,7113+2]..[179,7326+49])
            Pexp_function
            [
              <case>
                pattern (strip.ml[174,7124+4]..[174,7124+22])
                  Ppat_variant "And"
                  Some
                    pattern (strip.ml[174,7124+9]..[174,7124+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[174,7124+10]..[174,7124+13])
                          Ppat_var "_a0" (strip.ml[174,7124+10]..[174,7124+13])
                        pattern (strip.ml[174,7124+14]..[174,7124+17])
                          Ppat_var "_a1" (strip.ml[174,7124+14]..[174,7124+17])
                        pattern (strip.ml[174,7124+18]..[174,7124+21])
                          Ppat_var "_a2" (strip.ml[174,7124+18]..[174,7124+21])
                      ]
                expression (strip.ml[175,7150+6]..[176,7185+50])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[175,7150+10]..[175,7150+13])
                        Ppat_var "_a1" (strip.ml[175,7150+10]..[175,7150+13])
                      expression (strip.ml[175,7150+16]..[175,7150+31])
                        Pexp_apply
                        expression (strip.ml[175,7150+16]..[175,7150+27])
                          Pexp_ident "type_constr" (strip.ml[175,7150+16]..[175,7150+27])
                        [
                          <label> ""
                            expression (strip.ml[175,7150+28]..[175,7150+31])
                              Pexp_ident "_a1" (strip.ml[175,7150+28]..[175,7150+31])
                        ]
                  ]
                  expression (strip.ml[176,7185+6]..[176,7185+50])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[176,7185+10]..[176,7185+13])
                          Ppat_var "_a2" (strip.ml[176,7185+10]..[176,7185+13])
                        expression (strip.ml[176,7185+16]..[176,7185+31])
                          Pexp_apply
                          expression (strip.ml[176,7185+16]..[176,7185+27])
                            Pexp_ident "type_constr" (strip.ml[176,7185+16]..[176,7185+27])
                          [
                            <label> ""
                              expression (strip.ml[176,7185+28]..[176,7185+31])
                                Pexp_ident "_a2" (strip.ml[176,7185+28]..[176,7185+31])
                          ]
                    ]
                    expression (strip.ml[176,7185+35]..[176,7185+50])
                      Pexp_variant "And"
                      Some
                        expression (strip.ml[176,7185+40]..[176,7185+50])
                          Pexp_tuple
                          [
                            expression (strip.ml[176,7185+41]..[176,7185+44])
                              Pexp_ident "_a1" (strip.ml[176,7185+41]..[176,7185+44])
                            expression (strip.ml[176,7185+46]..[176,7185+49])
                              Pexp_ident "_a2" (strip.ml[176,7185+46]..[176,7185+49])
                          ]
              <case>
                pattern (strip.ml[177,7236+4]..[177,7236+21])
                  Ppat_variant "Eq"
                  Some
                    pattern (strip.ml[177,7236+8]..[177,7236+21])
                      Ppat_tuple
                      [
                        pattern (strip.ml[177,7236+9]..[177,7236+12])
                          Ppat_var "_a0" (strip.ml[177,7236+9]..[177,7236+12])
                        pattern (strip.ml[177,7236+13]..[177,7236+16])
                          Ppat_var "_a1" (strip.ml[177,7236+13]..[177,7236+16])
                        pattern (strip.ml[177,7236+17]..[177,7236+20])
                          Ppat_var "_a2" (strip.ml[177,7236+17]..[177,7236+20])
                      ]
                expression (strip.ml[178,7261+6]..[178,7261+64])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[178,7261+10]..[178,7261+13])
                        Ppat_var "_a1" (strip.ml[178,7261+10]..[178,7261+13])
                      expression (strip.ml[178,7261+16]..[178,7261+24])
                        Pexp_apply
                        expression (strip.ml[178,7261+16]..[178,7261+20])
                          Pexp_ident "ctyp" (strip.ml[178,7261+16]..[178,7261+20])
                        [
                          <label> ""
                            expression (strip.ml[178,7261+21]..[178,7261+24])
                              Pexp_ident "_a1" (strip.ml[178,7261+21]..[178,7261+24])
                        ]
                  ]
                  expression (strip.ml[178,7261+28]..[178,7261+64])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[178,7261+32]..[178,7261+35])
                          Ppat_var "_a2" (strip.ml[178,7261+32]..[178,7261+35])
                        expression (strip.ml[178,7261+38]..[178,7261+46])
                          Pexp_apply
                          expression (strip.ml[178,7261+38]..[178,7261+42])
                            Pexp_ident "ctyp" (strip.ml[178,7261+38]..[178,7261+42])
                          [
                            <label> ""
                              expression (strip.ml[178,7261+43]..[178,7261+46])
                                Pexp_ident "_a2" (strip.ml[178,7261+43]..[178,7261+46])
                          ]
                    ]
                    expression (strip.ml[178,7261+50]..[178,7261+64])
                      Pexp_variant "Eq"
                      Some
                        expression (strip.ml[178,7261+54]..[178,7261+64])
                          Pexp_tuple
                          [
                            expression (strip.ml[178,7261+55]..[178,7261+58])
                              Pexp_ident "_a1" (strip.ml[178,7261+55]..[178,7261+58])
                            expression (strip.ml[178,7261+60]..[178,7261+63])
                              Pexp_ident "_a2" (strip.ml[178,7261+60]..[178,7261+63])
                          ]
              <case>
                pattern (strip.ml[179,7326+4]..[179,7326+15])
                  Ppat_alias "_a0" (strip.ml[179,7326+12]..[179,7326+15])
                  pattern (strip.ml[179,7326+4]..[179,7326+8])
                    Ppat_type
                    "ant" (strip.ml[179,7326+5]..[179,7326+8])
                expression (strip.ml[179,7326+19]..[179,7326+49]) ghost
                  Pexp_coerce
                  expression (strip.ml[179,7326+20]..[179,7326+27])
                    Pexp_apply
                    expression (strip.ml[179,7326+20]..[179,7326+23])
                      Pexp_ident "ant" (strip.ml[179,7326+20]..[179,7326+23])
                    [
                      <label> ""
                        expression (strip.ml[179,7326+24]..[179,7326+27])
                          Pexp_ident "_a0" (strip.ml[179,7326+24]..[179,7326+27])
                    ]
                  None
                  core_type (strip.ml[179,7326+31]..[179,7326+48])
                    Ptyp_constr "Astfn.type_constr" (strip.ml[179,7326+31]..[179,7326+48])
                    []
            ]
          core_type (strip.ml[172,7056+17]..[172,7056+54])
            Ptyp_arrow
            ""
            core_type (strip.ml[172,7056+17]..[172,7056+33])
              Ptyp_constr "Astf.type_constr" (strip.ml[172,7056+17]..[172,7056+33])
              []
            core_type (strip.ml[172,7056+37]..[172,7056+54])
              Ptyp_constr "Astfn.type_constr" (strip.ml[172,7056+37]..[172,7056+54])
              []
      <def>
        pattern (strip.ml[180,7376+4]..[180,7376+19])
          Ppat_var "opt_type_constr" (strip.ml[180,7376+4]..[180,7376+19])
        expression (strip.ml[180,7376+19]..[183,7518+22]) ghost
          Pexp_constraint
          expression (strip.ml[181,7445+2]..[183,7518+22])
            Pexp_function
            [
              <case>
                pattern (strip.ml[182,7456+4]..[182,7456+19])
                  Ppat_variant "Some"
                  Some
                    pattern (strip.ml[182,7456+10]..[182,7456+19])
                      Ppat_tuple
                      [
                        pattern (strip.ml[182,7456+11]..[182,7456+14])
                          Ppat_var "_a0" (strip.ml[182,7456+11]..[182,7456+14])
                        pattern (strip.ml[182,7456+15]..[182,7456+18])
                          Ppat_var "_a1" (strip.ml[182,7456+15]..[182,7456+18])
                      ]
                expression (strip.ml[182,7456+23]..[182,7456+61])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[182,7456+27]..[182,7456+30])
                        Ppat_var "_a1" (strip.ml[182,7456+27]..[182,7456+30])
                      expression (strip.ml[182,7456+33]..[182,7456+48])
                        Pexp_apply
                        expression (strip.ml[182,7456+33]..[182,7456+44])
                          Pexp_ident "type_constr" (strip.ml[182,7456+33]..[182,7456+44])
                        [
                          <label> ""
                            expression (strip.ml[182,7456+45]..[182,7456+48])
                              Pexp_ident "_a1" (strip.ml[182,7456+45]..[182,7456+48])
                        ]
                  ]
                  expression (strip.ml[182,7456+52]..[182,7456+61])
                    Pexp_variant "Some"
                    Some
                      expression (strip.ml[182,7456+58]..[182,7456+61])
                        Pexp_ident "_a1" (strip.ml[182,7456+58]..[182,7456+61])
              <case>
                pattern (strip.ml[183,7518+4]..[183,7518+13])
                  Ppat_variant "None"
                  Some
                    pattern (strip.ml[183,7518+10]..[183,7518+13])
                      Ppat_var "_a0" (strip.ml[183,7518+10]..[183,7518+13])
                expression (strip.ml[183,7518+17]..[183,7518+22])
                  Pexp_variant "None"
                  None
            ]
          core_type (strip.ml[180,7376+21]..[180,7376+66])
            Ptyp_arrow
            ""
            core_type (strip.ml[180,7376+21]..[180,7376+41])
              Ptyp_constr "Astf.opt_type_constr" (strip.ml[180,7376+21]..[180,7376+41])
              []
            core_type (strip.ml[180,7376+45]..[180,7376+66])
              Ptyp_constr "Astfn.opt_type_constr" (strip.ml[180,7376+45]..[180,7376+66])
              []
      <def>
        pattern (strip.ml[184,7541+4]..[184,7541+14])
          Ppat_var "decl_param" (strip.ml[184,7541+4]..[184,7541+14])
        expression (strip.ml[184,7541+14]..[191,7813+48]) ghost
          Pexp_constraint
          expression (strip.ml[185,7595+2]..[191,7813+48])
            Pexp_function
            [
              <case>
                pattern (strip.ml[186,7606+4]..[186,7606+24])
                  Ppat_variant "Quote"
                  Some
                    pattern (strip.ml[186,7606+11]..[186,7606+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[186,7606+12]..[186,7606+15])
                          Ppat_var "_a0" (strip.ml[186,7606+12]..[186,7606+15])
                        pattern (strip.ml[186,7606+16]..[186,7606+19])
                          Ppat_var "_a1" (strip.ml[186,7606+16]..[186,7606+19])
                        pattern (strip.ml[186,7606+20]..[186,7606+23])
                          Ppat_var "_a2" (strip.ml[186,7606+20]..[186,7606+23])
                      ]
                expression (strip.ml[187,7634+6]..[188,7671+48])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[187,7634+10]..[187,7634+13])
                        Ppat_var "_a1" (strip.ml[187,7634+10]..[187,7634+13])
                      expression (strip.ml[187,7634+16]..[187,7634+33])
                        Pexp_apply
                        expression (strip.ml[187,7634+16]..[187,7634+29])
                          Pexp_ident "position_flag" (strip.ml[187,7634+16]..[187,7634+29])
                        [
                          <label> ""
                            expression (strip.ml[187,7634+30]..[187,7634+33])
                              Pexp_ident "_a1" (strip.ml[187,7634+30]..[187,7634+33])
                        ]
                  ]
                  expression (strip.ml[188,7671+6]..[188,7671+48])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[188,7671+10]..[188,7671+13])
                          Ppat_var "_a2" (strip.ml[188,7671+10]..[188,7671+13])
                        expression (strip.ml[188,7671+16]..[188,7671+27])
                          Pexp_apply
                          expression (strip.ml[188,7671+16]..[188,7671+23])
                            Pexp_ident "alident" (strip.ml[188,7671+16]..[188,7671+23])
                          [
                            <label> ""
                              expression (strip.ml[188,7671+24]..[188,7671+27])
                                Pexp_ident "_a2" (strip.ml[188,7671+24]..[188,7671+27])
                          ]
                    ]
                    expression (strip.ml[188,7671+31]..[188,7671+48])
                      Pexp_variant "Quote"
                      Some
                        expression (strip.ml[188,7671+38]..[188,7671+48])
                          Pexp_tuple
                          [
                            expression (strip.ml[188,7671+39]..[188,7671+42])
                              Pexp_ident "_a1" (strip.ml[188,7671+39]..[188,7671+42])
                            expression (strip.ml[188,7671+44]..[188,7671+47])
                              Pexp_ident "_a2" (strip.ml[188,7671+44]..[188,7671+47])
                          ]
              <case>
                pattern (strip.ml[189,7720+4]..[189,7720+23])
                  Ppat_variant "QuoteAny"
                  Some
                    pattern (strip.ml[189,7720+14]..[189,7720+23])
                      Ppat_tuple
                      [
                        pattern (strip.ml[189,7720+15]..[189,7720+18])
                          Ppat_var "_a0" (strip.ml[189,7720+15]..[189,7720+18])
                        pattern (strip.ml[189,7720+19]..[189,7720+22])
                          Ppat_var "_a1" (strip.ml[189,7720+19]..[189,7720+22])
                      ]
                expression (strip.ml[189,7720+27]..[189,7720+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[189,7720+31]..[189,7720+34])
                        Ppat_var "_a1" (strip.ml[189,7720+31]..[189,7720+34])
                      expression (strip.ml[189,7720+37]..[189,7720+54])
                        Pexp_apply
                        expression (strip.ml[189,7720+37]..[189,7720+50])
                          Pexp_ident "position_flag" (strip.ml[189,7720+37]..[189,7720+50])
                        [
                          <label> ""
                            expression (strip.ml[189,7720+51]..[189,7720+54])
                              Pexp_ident "_a1" (strip.ml[189,7720+51]..[189,7720+54])
                        ]
                  ]
                  expression (strip.ml[189,7720+58]..[189,7720+71])
                    Pexp_variant "QuoteAny"
                    Some
                      expression (strip.ml[189,7720+68]..[189,7720+71])
                        Pexp_ident "_a1" (strip.ml[189,7720+68]..[189,7720+71])
              <case>
                pattern (strip.ml[190,7792+4]..[190,7792+12])
                  Ppat_variant "Any"
                  Some
                    pattern (strip.ml[190,7792+9]..[190,7792+12])
                      Ppat_var "_a0" (strip.ml[190,7792+9]..[190,7792+12])
                expression (strip.ml[190,7792+16]..[190,7792+20])
                  Pexp_variant "Any"
                  None
              <case>
                pattern (strip.ml[191,7813+4]..[191,7813+15])
                  Ppat_alias "_a0" (strip.ml[191,7813+12]..[191,7813+15])
                  pattern (strip.ml[191,7813+4]..[191,7813+8])
                    Ppat_type
                    "ant" (strip.ml[191,7813+5]..[191,7813+8])
                expression (strip.ml[191,7813+19]..[191,7813+48]) ghost
                  Pexp_coerce
                  expression (strip.ml[191,7813+20]..[191,7813+27])
                    Pexp_apply
                    expression (strip.ml[191,7813+20]..[191,7813+23])
                      Pexp_ident "ant" (strip.ml[191,7813+20]..[191,7813+23])
                    [
                      <label> ""
                        expression (strip.ml[191,7813+24]..[191,7813+27])
                          Pexp_ident "_a0" (strip.ml[191,7813+24]..[191,7813+27])
                    ]
                  None
                  core_type (strip.ml[191,7813+31]..[191,7813+47])
                    Ptyp_constr "Astfn.decl_param" (strip.ml[191,7813+31]..[191,7813+47])
                    []
            ]
          core_type (strip.ml[184,7541+16]..[184,7541+51])
            Ptyp_arrow
            ""
            core_type (strip.ml[184,7541+16]..[184,7541+31])
              Ptyp_constr "Astf.decl_param" (strip.ml[184,7541+16]..[184,7541+31])
              []
            core_type (strip.ml[184,7541+35]..[184,7541+51])
              Ptyp_constr "Astfn.decl_param" (strip.ml[184,7541+35]..[184,7541+51])
              []
      <def>
        pattern (strip.ml[192,7862+4]..[192,7862+15])
          Ppat_var "decl_params" (strip.ml[192,7862+4]..[192,7862+15])
        expression (strip.ml[192,7862+15]..[202,8249+49]) ghost
          Pexp_constraint
          expression (strip.ml[193,7919+2]..[202,8249+49])
            Pexp_function
            [
              <case>
                pattern (strip.ml[194,7930+4]..[194,7930+24])
                  Ppat_variant "Quote"
                  Some
                    pattern (strip.ml[194,7930+11]..[194,7930+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[194,7930+12]..[194,7930+15])
                          Ppat_var "_a0" (strip.ml[194,7930+12]..[194,7930+15])
                        pattern (strip.ml[194,7930+16]..[194,7930+19])
                          Ppat_var "_a1" (strip.ml[194,7930+16]..[194,7930+19])
                        pattern (strip.ml[194,7930+20]..[194,7930+23])
                          Ppat_var "_a2" (strip.ml[194,7930+20]..[194,7930+23])
                      ]
                expression (strip.ml[195,7958+6]..[196,7995+48])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[195,7958+10]..[195,7958+13])
                        Ppat_var "_a1" (strip.ml[195,7958+10]..[195,7958+13])
                      expression (strip.ml[195,7958+16]..[195,7958+33])
                        Pexp_apply
                        expression (strip.ml[195,7958+16]..[195,7958+29])
                          Pexp_ident "position_flag" (strip.ml[195,7958+16]..[195,7958+29])
                        [
                          <label> ""
                            expression (strip.ml[195,7958+30]..[195,7958+33])
                              Pexp_ident "_a1" (strip.ml[195,7958+30]..[195,7958+33])
                        ]
                  ]
                  expression (strip.ml[196,7995+6]..[196,7995+48])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[196,7995+10]..[196,7995+13])
                          Ppat_var "_a2" (strip.ml[196,7995+10]..[196,7995+13])
                        expression (strip.ml[196,7995+16]..[196,7995+27])
                          Pexp_apply
                          expression (strip.ml[196,7995+16]..[196,7995+23])
                            Pexp_ident "alident" (strip.ml[196,7995+16]..[196,7995+23])
                          [
                            <label> ""
                              expression (strip.ml[196,7995+24]..[196,7995+27])
                                Pexp_ident "_a2" (strip.ml[196,7995+24]..[196,7995+27])
                          ]
                    ]
                    expression (strip.ml[196,7995+31]..[196,7995+48])
                      Pexp_variant "Quote"
                      Some
                        expression (strip.ml[196,7995+38]..[196,7995+48])
                          Pexp_tuple
                          [
                            expression (strip.ml[196,7995+39]..[196,7995+42])
                              Pexp_ident "_a1" (strip.ml[196,7995+39]..[196,7995+42])
                            expression (strip.ml[196,7995+44]..[196,7995+47])
                              Pexp_ident "_a2" (strip.ml[196,7995+44]..[196,7995+47])
                          ]
              <case>
                pattern (strip.ml[197,8044+4]..[197,8044+23])
                  Ppat_variant "QuoteAny"
                  Some
                    pattern (strip.ml[197,8044+14]..[197,8044+23])
                      Ppat_tuple
                      [
                        pattern (strip.ml[197,8044+15]..[197,8044+18])
                          Ppat_var "_a0" (strip.ml[197,8044+15]..[197,8044+18])
                        pattern (strip.ml[197,8044+19]..[197,8044+22])
                          Ppat_var "_a1" (strip.ml[197,8044+19]..[197,8044+22])
                      ]
                expression (strip.ml[197,8044+27]..[197,8044+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[197,8044+31]..[197,8044+34])
                        Ppat_var "_a1" (strip.ml[197,8044+31]..[197,8044+34])
                      expression (strip.ml[197,8044+37]..[197,8044+54])
                        Pexp_apply
                        expression (strip.ml[197,8044+37]..[197,8044+50])
                          Pexp_ident "position_flag" (strip.ml[197,8044+37]..[197,8044+50])
                        [
                          <label> ""
                            expression (strip.ml[197,8044+51]..[197,8044+54])
                              Pexp_ident "_a1" (strip.ml[197,8044+51]..[197,8044+54])
                        ]
                  ]
                  expression (strip.ml[197,8044+58]..[197,8044+71])
                    Pexp_variant "QuoteAny"
                    Some
                      expression (strip.ml[197,8044+68]..[197,8044+71])
                        Pexp_ident "_a1" (strip.ml[197,8044+68]..[197,8044+71])
              <case>
                pattern (strip.ml[198,8116+4]..[198,8116+12])
                  Ppat_variant "Any"
                  Some
                    pattern (strip.ml[198,8116+9]..[198,8116+12])
                      Ppat_var "_a0" (strip.ml[198,8116+9]..[198,8116+12])
                expression (strip.ml[198,8116+16]..[198,8116+20])
                  Pexp_variant "Any"
                  None
              <case>
                pattern (strip.ml[199,8137+4]..[199,8137+22])
                  Ppat_variant "Com"
                  Some
                    pattern (strip.ml[199,8137+9]..[199,8137+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[199,8137+10]..[199,8137+13])
                          Ppat_var "_a0" (strip.ml[199,8137+10]..[199,8137+13])
                        pattern (strip.ml[199,8137+14]..[199,8137+17])
                          Ppat_var "_a1" (strip.ml[199,8137+14]..[199,8137+17])
                        pattern (strip.ml[199,8137+18]..[199,8137+21])
                          Ppat_var "_a2" (strip.ml[199,8137+18]..[199,8137+21])
                      ]
                expression (strip.ml[200,8163+6]..[201,8198+50])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[200,8163+10]..[200,8163+13])
                        Ppat_var "_a1" (strip.ml[200,8163+10]..[200,8163+13])
                      expression (strip.ml[200,8163+16]..[200,8163+31])
                        Pexp_apply
                        expression (strip.ml[200,8163+16]..[200,8163+27])
                          Pexp_ident "decl_params" (strip.ml[200,8163+16]..[200,8163+27])
                        [
                          <label> ""
                            expression (strip.ml[200,8163+28]..[200,8163+31])
                              Pexp_ident "_a1" (strip.ml[200,8163+28]..[200,8163+31])
                        ]
                  ]
                  expression (strip.ml[201,8198+6]..[201,8198+50])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[201,8198+10]..[201,8198+13])
                          Ppat_var "_a2" (strip.ml[201,8198+10]..[201,8198+13])
                        expression (strip.ml[201,8198+16]..[201,8198+31])
                          Pexp_apply
                          expression (strip.ml[201,8198+16]..[201,8198+27])
                            Pexp_ident "decl_params" (strip.ml[201,8198+16]..[201,8198+27])
                          [
                            <label> ""
                              expression (strip.ml[201,8198+28]..[201,8198+31])
                                Pexp_ident "_a2" (strip.ml[201,8198+28]..[201,8198+31])
                          ]
                    ]
                    expression (strip.ml[201,8198+35]..[201,8198+50])
                      Pexp_variant "Com"
                      Some
                        expression (strip.ml[201,8198+40]..[201,8198+50])
                          Pexp_tuple
                          [
                            expression (strip.ml[201,8198+41]..[201,8198+44])
                              Pexp_ident "_a1" (strip.ml[201,8198+41]..[201,8198+44])
                            expression (strip.ml[201,8198+46]..[201,8198+49])
                              Pexp_ident "_a2" (strip.ml[201,8198+46]..[201,8198+49])
                          ]
              <case>
                pattern (strip.ml[202,8249+4]..[202,8249+15])
                  Ppat_alias "_a0" (strip.ml[202,8249+12]..[202,8249+15])
                  pattern (strip.ml[202,8249+4]..[202,8249+8])
                    Ppat_type
                    "ant" (strip.ml[202,8249+5]..[202,8249+8])
                expression (strip.ml[202,8249+19]..[202,8249+49]) ghost
                  Pexp_coerce
                  expression (strip.ml[202,8249+20]..[202,8249+27])
                    Pexp_apply
                    expression (strip.ml[202,8249+20]..[202,8249+23])
                      Pexp_ident "ant" (strip.ml[202,8249+20]..[202,8249+23])
                    [
                      <label> ""
                        expression (strip.ml[202,8249+24]..[202,8249+27])
                          Pexp_ident "_a0" (strip.ml[202,8249+24]..[202,8249+27])
                    ]
                  None
                  core_type (strip.ml[202,8249+31]..[202,8249+48])
                    Ptyp_constr "Astfn.decl_params" (strip.ml[202,8249+31]..[202,8249+48])
                    []
            ]
          core_type (strip.ml[192,7862+17]..[192,7862+54])
            Ptyp_arrow
            ""
            core_type (strip.ml[192,7862+17]..[192,7862+33])
              Ptyp_constr "Astf.decl_params" (strip.ml[192,7862+17]..[192,7862+33])
              []
            core_type (strip.ml[192,7862+37]..[192,7862+54])
              Ptyp_constr "Astfn.decl_params" (strip.ml[192,7862+37]..[192,7862+54])
              []
      <def>
        pattern (strip.ml[203,8299+4]..[203,8299+19])
          Ppat_var "opt_decl_params" (strip.ml[203,8299+4]..[203,8299+19])
        expression (strip.ml[203,8299+19]..[206,8441+22]) ghost
          Pexp_constraint
          expression (strip.ml[204,8368+2]..[206,8441+22])
            Pexp_function
            [
              <case>
                pattern (strip.ml[205,8379+4]..[205,8379+19])
                  Ppat_variant "Some"
                  Some
                    pattern (strip.ml[205,8379+10]..[205,8379+19])
                      Ppat_tuple
                      [
                        pattern (strip.ml[205,8379+11]..[205,8379+14])
                          Ppat_var "_a0" (strip.ml[205,8379+11]..[205,8379+14])
                        pattern (strip.ml[205,8379+15]..[205,8379+18])
                          Ppat_var "_a1" (strip.ml[205,8379+15]..[205,8379+18])
                      ]
                expression (strip.ml[205,8379+23]..[205,8379+61])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[205,8379+27]..[205,8379+30])
                        Ppat_var "_a1" (strip.ml[205,8379+27]..[205,8379+30])
                      expression (strip.ml[205,8379+33]..[205,8379+48])
                        Pexp_apply
                        expression (strip.ml[205,8379+33]..[205,8379+44])
                          Pexp_ident "decl_params" (strip.ml[205,8379+33]..[205,8379+44])
                        [
                          <label> ""
                            expression (strip.ml[205,8379+45]..[205,8379+48])
                              Pexp_ident "_a1" (strip.ml[205,8379+45]..[205,8379+48])
                        ]
                  ]
                  expression (strip.ml[205,8379+52]..[205,8379+61])
                    Pexp_variant "Some"
                    Some
                      expression (strip.ml[205,8379+58]..[205,8379+61])
                        Pexp_ident "_a1" (strip.ml[205,8379+58]..[205,8379+61])
              <case>
                pattern (strip.ml[206,8441+4]..[206,8441+13])
                  Ppat_variant "None"
                  Some
                    pattern (strip.ml[206,8441+10]..[206,8441+13])
                      Ppat_var "_a0" (strip.ml[206,8441+10]..[206,8441+13])
                expression (strip.ml[206,8441+17]..[206,8441+22])
                  Pexp_variant "None"
                  None
            ]
          core_type (strip.ml[203,8299+21]..[203,8299+66])
            Ptyp_arrow
            ""
            core_type (strip.ml[203,8299+21]..[203,8299+41])
              Ptyp_constr "Astf.opt_decl_params" (strip.ml[203,8299+21]..[203,8299+41])
              []
            core_type (strip.ml[203,8299+45]..[203,8299+66])
              Ptyp_constr "Astfn.opt_decl_params" (strip.ml[203,8299+45]..[203,8299+66])
              []
      <def>
        pattern (strip.ml[207,8464+4]..[207,8464+13])
          Ppat_var "type_info" (strip.ml[207,8464+4]..[207,8464+13])
        expression (strip.ml[207,8464+13]..[216,8861+47]) ghost
          Pexp_constraint
          expression (strip.ml[208,8515+2]..[216,8861+47])
            Pexp_function
            [
              <case>
                pattern (strip.ml[209,8526+4]..[209,8526+28])
                  Ppat_variant "TyMan"
                  Some
                    pattern (strip.ml[209,8526+11]..[209,8526+28])
                      Ppat_tuple
                      [
                        pattern (strip.ml[209,8526+12]..[209,8526+15])
                          Ppat_var "_a0" (strip.ml[209,8526+12]..[209,8526+15])
                        pattern (strip.ml[209,8526+16]..[209,8526+19])
                          Ppat_var "_a1" (strip.ml[209,8526+16]..[209,8526+19])
                        pattern (strip.ml[209,8526+20]..[209,8526+23])
                          Ppat_var "_a2" (strip.ml[209,8526+20]..[209,8526+23])
                        pattern (strip.ml[209,8526+24]..[209,8526+27])
                          Ppat_var "_a3" (strip.ml[209,8526+24]..[209,8526+27])
                      ]
                expression (strip.ml[210,8558+6]..[211,8586+77])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[210,8558+10]..[210,8558+13])
                        Ppat_var "_a1" (strip.ml[210,8558+10]..[210,8558+13])
                      expression (strip.ml[210,8558+16]..[210,8558+24])
                        Pexp_apply
                        expression (strip.ml[210,8558+16]..[210,8558+20])
                          Pexp_ident "ctyp" (strip.ml[210,8558+16]..[210,8558+20])
                        [
                          <label> ""
                            expression (strip.ml[210,8558+21]..[210,8558+24])
                              Pexp_ident "_a1" (strip.ml[210,8558+21]..[210,8558+24])
                        ]
                  ]
                  expression (strip.ml[211,8586+6]..[211,8586+77])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[211,8586+10]..[211,8586+13])
                          Ppat_var "_a2" (strip.ml[211,8586+10]..[211,8586+13])
                        expression (strip.ml[211,8586+16]..[211,8586+24])
                          Pexp_apply
                          expression (strip.ml[211,8586+16]..[211,8586+20])
                            Pexp_ident "flag" (strip.ml[211,8586+16]..[211,8586+20])
                          [
                            <label> ""
                              expression (strip.ml[211,8586+21]..[211,8586+24])
                                Pexp_ident "_a2" (strip.ml[211,8586+21]..[211,8586+24])
                          ]
                    ]
                    expression (strip.ml[211,8586+28]..[211,8586+77])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[211,8586+32]..[211,8586+35])
                            Ppat_var "_a3" (strip.ml[211,8586+32]..[211,8586+35])
                          expression (strip.ml[211,8586+38]..[211,8586+51])
                            Pexp_apply
                            expression (strip.ml[211,8586+38]..[211,8586+47])
                              Pexp_ident "type_repr" (strip.ml[211,8586+38]..[211,8586+47])
                            [
                              <label> ""
                                expression (strip.ml[211,8586+48]..[211,8586+51])
                                  Pexp_ident "_a3" (strip.ml[211,8586+48]..[211,8586+51])
                            ]
                      ]
                      expression (strip.ml[211,8586+55]..[211,8586+77])
                        Pexp_variant "TyMan"
                        Some
                          expression (strip.ml[211,8586+62]..[211,8586+77])
                            Pexp_tuple
                            [
                              expression (strip.ml[211,8586+63]..[211,8586+66])
                                Pexp_ident "_a1" (strip.ml[211,8586+63]..[211,8586+66])
                              expression (strip.ml[211,8586+68]..[211,8586+71])
                                Pexp_ident "_a2" (strip.ml[211,8586+68]..[211,8586+71])
                              expression (strip.ml[211,8586+73]..[211,8586+76])
                                Pexp_ident "_a3" (strip.ml[211,8586+73]..[211,8586+76])
                            ]
              <case>
                pattern (strip.ml[212,8664+4]..[212,8664+25])
                  Ppat_variant "TyRepr"
                  Some
                    pattern (strip.ml[212,8664+12]..[212,8664+25])
                      Ppat_tuple
                      [
                        pattern (strip.ml[212,8664+13]..[212,8664+16])
                          Ppat_var "_a0" (strip.ml[212,8664+13]..[212,8664+16])
                        pattern (strip.ml[212,8664+17]..[212,8664+20])
                          Ppat_var "_a1" (strip.ml[212,8664+17]..[212,8664+20])
                        pattern (strip.ml[212,8664+21]..[212,8664+24])
                          Ppat_var "_a2" (strip.ml[212,8664+21]..[212,8664+24])
                      ]
                expression (strip.ml[213,8693+6]..[213,8693+73])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[213,8693+10]..[213,8693+13])
                        Ppat_var "_a1" (strip.ml[213,8693+10]..[213,8693+13])
                      expression (strip.ml[213,8693+16]..[213,8693+24])
                        Pexp_apply
                        expression (strip.ml[213,8693+16]..[213,8693+20])
                          Pexp_ident "flag" (strip.ml[213,8693+16]..[213,8693+20])
                        [
                          <label> ""
                            expression (strip.ml[213,8693+21]..[213,8693+24])
                              Pexp_ident "_a1" (strip.ml[213,8693+21]..[213,8693+24])
                        ]
                  ]
                  expression (strip.ml[213,8693+28]..[213,8693+73])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[213,8693+32]..[213,8693+35])
                          Ppat_var "_a2" (strip.ml[213,8693+32]..[213,8693+35])
                        expression (strip.ml[213,8693+38]..[213,8693+51])
                          Pexp_apply
                          expression (strip.ml[213,8693+38]..[213,8693+47])
                            Pexp_ident "type_repr" (strip.ml[213,8693+38]..[213,8693+47])
                          [
                            <label> ""
                              expression (strip.ml[213,8693+48]..[213,8693+51])
                                Pexp_ident "_a2" (strip.ml[213,8693+48]..[213,8693+51])
                          ]
                    ]
                    expression (strip.ml[213,8693+55]..[213,8693+73])
                      Pexp_variant "TyRepr"
                      Some
                        expression (strip.ml[213,8693+63]..[213,8693+73])
                          Pexp_tuple
                          [
                            expression (strip.ml[213,8693+64]..[213,8693+67])
                              Pexp_ident "_a1" (strip.ml[213,8693+64]..[213,8693+67])
                            expression (strip.ml[213,8693+69]..[213,8693+72])
                              Pexp_ident "_a2" (strip.ml[213,8693+69]..[213,8693+72])
                          ]
              <case>
                pattern (strip.ml[214,8767+4]..[214,8767+23])
                  Ppat_variant "TyEq"
                  Some
                    pattern (strip.ml[214,8767+10]..[214,8767+23])
                      Ppat_tuple
                      [
                        pattern (strip.ml[214,8767+11]..[214,8767+14])
                          Ppat_var "_a0" (strip.ml[214,8767+11]..[214,8767+14])
                        pattern (strip.ml[214,8767+15]..[214,8767+18])
                          Ppat_var "_a1" (strip.ml[214,8767+15]..[214,8767+18])
                        pattern (strip.ml[214,8767+19]..[214,8767+22])
                          Ppat_var "_a2" (strip.ml[214,8767+19]..[214,8767+22])
                      ]
                expression (strip.ml[215,8794+6]..[215,8794+66])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[215,8794+10]..[215,8794+13])
                        Ppat_var "_a1" (strip.ml[215,8794+10]..[215,8794+13])
                      expression (strip.ml[215,8794+16]..[215,8794+24])
                        Pexp_apply
                        expression (strip.ml[215,8794+16]..[215,8794+20])
                          Pexp_ident "flag" (strip.ml[215,8794+16]..[215,8794+20])
                        [
                          <label> ""
                            expression (strip.ml[215,8794+21]..[215,8794+24])
                              Pexp_ident "_a1" (strip.ml[215,8794+21]..[215,8794+24])
                        ]
                  ]
                  expression (strip.ml[215,8794+28]..[215,8794+66])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[215,8794+32]..[215,8794+35])
                          Ppat_var "_a2" (strip.ml[215,8794+32]..[215,8794+35])
                        expression (strip.ml[215,8794+38]..[215,8794+46])
                          Pexp_apply
                          expression (strip.ml[215,8794+38]..[215,8794+42])
                            Pexp_ident "ctyp" (strip.ml[215,8794+38]..[215,8794+42])
                          [
                            <label> ""
                              expression (strip.ml[215,8794+43]..[215,8794+46])
                                Pexp_ident "_a2" (strip.ml[215,8794+43]..[215,8794+46])
                          ]
                    ]
                    expression (strip.ml[215,8794+50]..[215,8794+66])
                      Pexp_variant "TyEq"
                      Some
                        expression (strip.ml[215,8794+56]..[215,8794+66])
                          Pexp_tuple
                          [
                            expression (strip.ml[215,8794+57]..[215,8794+60])
                              Pexp_ident "_a1" (strip.ml[215,8794+57]..[215,8794+60])
                            expression (strip.ml[215,8794+62]..[215,8794+65])
                              Pexp_ident "_a2" (strip.ml[215,8794+62]..[215,8794+65])
                          ]
              <case>
                pattern (strip.ml[216,8861+4]..[216,8861+15])
                  Ppat_alias "_a0" (strip.ml[216,8861+12]..[216,8861+15])
                  pattern (strip.ml[216,8861+4]..[216,8861+8])
                    Ppat_type
                    "ant" (strip.ml[216,8861+5]..[216,8861+8])
                expression (strip.ml[216,8861+19]..[216,8861+47]) ghost
                  Pexp_coerce
                  expression (strip.ml[216,8861+20]..[216,8861+27])
                    Pexp_apply
                    expression (strip.ml[216,8861+20]..[216,8861+23])
                      Pexp_ident "ant" (strip.ml[216,8861+20]..[216,8861+23])
                    [
                      <label> ""
                        expression (strip.ml[216,8861+24]..[216,8861+27])
                          Pexp_ident "_a0" (strip.ml[216,8861+24]..[216,8861+27])
                    ]
                  None
                  core_type (strip.ml[216,8861+31]..[216,8861+46])
                    Ptyp_constr "Astfn.type_info" (strip.ml[216,8861+31]..[216,8861+46])
                    []
            ]
          core_type (strip.ml[207,8464+15]..[207,8464+48])
            Ptyp_arrow
            ""
            core_type (strip.ml[207,8464+15]..[207,8464+29])
              Ptyp_constr "Astf.type_info" (strip.ml[207,8464+15]..[207,8464+29])
              []
            core_type (strip.ml[207,8464+33]..[207,8464+48])
              Ptyp_constr "Astfn.type_info" (strip.ml[207,8464+33]..[207,8464+48])
              []
      <def>
        pattern (strip.ml[217,8909+4]..[217,8909+13])
          Ppat_var "type_repr" (strip.ml[217,8909+4]..[217,8909+13])
        expression (strip.ml[217,8909+13]..[221,9091+47]) ghost
          Pexp_constraint
          expression (strip.ml[218,8960+2]..[221,9091+47])
            Pexp_function
            [
              <case>
                pattern (strip.ml[219,8971+4]..[219,8971+21])
                  Ppat_variant "Record"
                  Some
                    pattern (strip.ml[219,8971+12]..[219,8971+21])
                      Ppat_tuple
                      [
                        pattern (strip.ml[219,8971+13]..[219,8971+16])
                          Ppat_var "_a0" (strip.ml[219,8971+13]..[219,8971+16])
                        pattern (strip.ml[219,8971+17]..[219,8971+20])
                          Ppat_var "_a1" (strip.ml[219,8971+17]..[219,8971+20])
                      ]
                expression (strip.ml[219,8971+25]..[219,8971+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[219,8971+29]..[219,8971+32])
                        Ppat_var "_a1" (strip.ml[219,8971+29]..[219,8971+32])
                      expression (strip.ml[219,8971+35]..[219,8971+48])
                        Pexp_apply
                        expression (strip.ml[219,8971+35]..[219,8971+44])
                          Pexp_ident "name_ctyp" (strip.ml[219,8971+35]..[219,8971+44])
                        [
                          <label> ""
                            expression (strip.ml[219,8971+45]..[219,8971+48])
                              Pexp_ident "_a1" (strip.ml[219,8971+45]..[219,8971+48])
                        ]
                  ]
                  expression (strip.ml[219,8971+52]..[219,8971+63])
                    Pexp_variant "Record"
                    Some
                      expression (strip.ml[219,8971+60]..[219,8971+63])
                        Pexp_ident "_a1" (strip.ml[219,8971+60]..[219,8971+63])
              <case>
                pattern (strip.ml[220,9035+4]..[220,9035+18])
                  Ppat_variant "Sum"
                  Some
                    pattern (strip.ml[220,9035+9]..[220,9035+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[220,9035+10]..[220,9035+13])
                          Ppat_var "_a0" (strip.ml[220,9035+10]..[220,9035+13])
                        pattern (strip.ml[220,9035+14]..[220,9035+17])
                          Ppat_var "_a1" (strip.ml[220,9035+14]..[220,9035+17])
                      ]
                expression (strip.ml[220,9035+22]..[220,9035+55])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[220,9035+26]..[220,9035+29])
                        Ppat_var "_a1" (strip.ml[220,9035+26]..[220,9035+29])
                      expression (strip.ml[220,9035+32]..[220,9035+43])
                        Pexp_apply
                        expression (strip.ml[220,9035+32]..[220,9035+39])
                          Pexp_ident "or_ctyp" (strip.ml[220,9035+32]..[220,9035+39])
                        [
                          <label> ""
                            expression (strip.ml[220,9035+40]..[220,9035+43])
                              Pexp_ident "_a1" (strip.ml[220,9035+40]..[220,9035+43])
                        ]
                  ]
                  expression (strip.ml[220,9035+47]..[220,9035+55])
                    Pexp_variant "Sum"
                    Some
                      expression (strip.ml[220,9035+52]..[220,9035+55])
                        Pexp_ident "_a1" (strip.ml[220,9035+52]..[220,9035+55])
              <case>
                pattern (strip.ml[221,9091+4]..[221,9091+15])
                  Ppat_alias "_a0" (strip.ml[221,9091+12]..[221,9091+15])
                  pattern (strip.ml[221,9091+4]..[221,9091+8])
                    Ppat_type
                    "ant" (strip.ml[221,9091+5]..[221,9091+8])
                expression (strip.ml[221,9091+19]..[221,9091+47]) ghost
                  Pexp_coerce
                  expression (strip.ml[221,9091+20]..[221,9091+27])
                    Pexp_apply
                    expression (strip.ml[221,9091+20]..[221,9091+23])
                      Pexp_ident "ant" (strip.ml[221,9091+20]..[221,9091+23])
                    [
                      <label> ""
                        expression (strip.ml[221,9091+24]..[221,9091+27])
                          Pexp_ident "_a0" (strip.ml[221,9091+24]..[221,9091+27])
                    ]
                  None
                  core_type (strip.ml[221,9091+31]..[221,9091+46])
                    Ptyp_constr "Astfn.type_repr" (strip.ml[221,9091+31]..[221,9091+46])
                    []
            ]
          core_type (strip.ml[217,8909+15]..[217,8909+48])
            Ptyp_arrow
            ""
            core_type (strip.ml[217,8909+15]..[217,8909+29])
              Ptyp_constr "Astf.type_repr" (strip.ml[217,8909+15]..[217,8909+29])
              []
            core_type (strip.ml[217,8909+33]..[217,8909+48])
              Ptyp_constr "Astfn.type_repr" (strip.ml[217,8909+33]..[217,8909+48])
              []
      <def>
        pattern (strip.ml[222,9139+4]..[222,9139+13])
          Ppat_var "name_ctyp" (strip.ml[222,9139+4]..[222,9139+13])
        expression (strip.ml[222,9139+13]..[230,9507+47]) ghost
          Pexp_constraint
          expression (strip.ml[223,9190+2]..[230,9507+47])
            Pexp_function
            [
              <case>
                pattern (strip.ml[224,9201+4]..[224,9201+22])
                  Ppat_variant "Sem"
                  Some
                    pattern (strip.ml[224,9201+9]..[224,9201+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[224,9201+10]..[224,9201+13])
                          Ppat_var "_a0" (strip.ml[224,9201+10]..[224,9201+13])
                        pattern (strip.ml[224,9201+14]..[224,9201+17])
                          Ppat_var "_a1" (strip.ml[224,9201+14]..[224,9201+17])
                        pattern (strip.ml[224,9201+18]..[224,9201+21])
                          Ppat_var "_a2" (strip.ml[224,9201+18]..[224,9201+21])
                      ]
                expression (strip.ml[225,9227+6]..[225,9227+75])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[225,9227+10]..[225,9227+13])
                        Ppat_var "_a1" (strip.ml[225,9227+10]..[225,9227+13])
                      expression (strip.ml[225,9227+16]..[225,9227+29])
                        Pexp_apply
                        expression (strip.ml[225,9227+16]..[225,9227+25])
                          Pexp_ident "name_ctyp" (strip.ml[225,9227+16]..[225,9227+25])
                        [
                          <label> ""
                            expression (strip.ml[225,9227+26]..[225,9227+29])
                              Pexp_ident "_a1" (strip.ml[225,9227+26]..[225,9227+29])
                        ]
                  ]
                  expression (strip.ml[225,9227+33]..[225,9227+75])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[225,9227+37]..[225,9227+40])
                          Ppat_var "_a2" (strip.ml[225,9227+37]..[225,9227+40])
                        expression (strip.ml[225,9227+43]..[225,9227+56])
                          Pexp_apply
                          expression (strip.ml[225,9227+43]..[225,9227+52])
                            Pexp_ident "name_ctyp" (strip.ml[225,9227+43]..[225,9227+52])
                          [
                            <label> ""
                              expression (strip.ml[225,9227+53]..[225,9227+56])
                                Pexp_ident "_a2" (strip.ml[225,9227+53]..[225,9227+56])
                          ]
                    ]
                    expression (strip.ml[225,9227+60]..[225,9227+75])
                      Pexp_variant "Sem"
                      Some
                        expression (strip.ml[225,9227+65]..[225,9227+75])
                          Pexp_tuple
                          [
                            expression (strip.ml[225,9227+66]..[225,9227+69])
                              Pexp_ident "_a1" (strip.ml[225,9227+66]..[225,9227+69])
                            expression (strip.ml[225,9227+71]..[225,9227+74])
                              Pexp_ident "_a2" (strip.ml[225,9227+71]..[225,9227+74])
                          ]
              <case>
                pattern (strip.ml[226,9303+4]..[226,9303+24])
                  Ppat_variant "TyCol"
                  Some
                    pattern (strip.ml[226,9303+11]..[226,9303+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[226,9303+12]..[226,9303+15])
                          Ppat_var "_a0" (strip.ml[226,9303+12]..[226,9303+15])
                        pattern (strip.ml[226,9303+16]..[226,9303+19])
                          Ppat_var "_a1" (strip.ml[226,9303+16]..[226,9303+19])
                        pattern (strip.ml[226,9303+20]..[226,9303+23])
                          Ppat_var "_a2" (strip.ml[226,9303+20]..[226,9303+23])
                      ]
                expression (strip.ml[227,9331+6]..[227,9331+70])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[227,9331+10]..[227,9331+13])
                        Ppat_var "_a1" (strip.ml[227,9331+10]..[227,9331+13])
                      expression (strip.ml[227,9331+16]..[227,9331+27])
                        Pexp_apply
                        expression (strip.ml[227,9331+16]..[227,9331+23])
                          Pexp_ident "alident" (strip.ml[227,9331+16]..[227,9331+23])
                        [
                          <label> ""
                            expression (strip.ml[227,9331+24]..[227,9331+27])
                              Pexp_ident "_a1" (strip.ml[227,9331+24]..[227,9331+27])
                        ]
                  ]
                  expression (strip.ml[227,9331+31]..[227,9331+70])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[227,9331+35]..[227,9331+38])
                          Ppat_var "_a2" (strip.ml[227,9331+35]..[227,9331+38])
                        expression (strip.ml[227,9331+41]..[227,9331+49])
                          Pexp_apply
                          expression (strip.ml[227,9331+41]..[227,9331+45])
                            Pexp_ident "ctyp" (strip.ml[227,9331+41]..[227,9331+45])
                          [
                            <label> ""
                              expression (strip.ml[227,9331+46]..[227,9331+49])
                                Pexp_ident "_a2" (strip.ml[227,9331+46]..[227,9331+49])
                          ]
                    ]
                    expression (strip.ml[227,9331+53]..[227,9331+70])
                      Pexp_variant "TyCol"
                      Some
                        expression (strip.ml[227,9331+60]..[227,9331+70])
                          Pexp_tuple
                          [
                            expression (strip.ml[227,9331+61]..[227,9331+64])
                              Pexp_ident "_a1" (strip.ml[227,9331+61]..[227,9331+64])
                            expression (strip.ml[227,9331+66]..[227,9331+69])
                              Pexp_ident "_a2" (strip.ml[227,9331+66]..[227,9331+69])
                          ]
              <case>
                pattern (strip.ml[228,9402+4]..[228,9402+27])
                  Ppat_variant "TyColMut"
                  Some
                    pattern (strip.ml[228,9402+14]..[228,9402+27])
                      Ppat_tuple
                      [
                        pattern (strip.ml[228,9402+15]..[228,9402+18])
                          Ppat_var "_a0" (strip.ml[228,9402+15]..[228,9402+18])
                        pattern (strip.ml[228,9402+19]..[228,9402+22])
                          Ppat_var "_a1" (strip.ml[228,9402+19]..[228,9402+22])
                        pattern (strip.ml[228,9402+23]..[228,9402+26])
                          Ppat_var "_a2" (strip.ml[228,9402+23]..[228,9402+26])
                      ]
                expression (strip.ml[229,9433+6]..[229,9433+73])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[229,9433+10]..[229,9433+13])
                        Ppat_var "_a1" (strip.ml[229,9433+10]..[229,9433+13])
                      expression (strip.ml[229,9433+16]..[229,9433+27])
                        Pexp_apply
                        expression (strip.ml[229,9433+16]..[229,9433+23])
                          Pexp_ident "alident" (strip.ml[229,9433+16]..[229,9433+23])
                        [
                          <label> ""
                            expression (strip.ml[229,9433+24]..[229,9433+27])
                              Pexp_ident "_a1" (strip.ml[229,9433+24]..[229,9433+27])
                        ]
                  ]
                  expression (strip.ml[229,9433+31]..[229,9433+73])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[229,9433+35]..[229,9433+38])
                          Ppat_var "_a2" (strip.ml[229,9433+35]..[229,9433+38])
                        expression (strip.ml[229,9433+41]..[229,9433+49])
                          Pexp_apply
                          expression (strip.ml[229,9433+41]..[229,9433+45])
                            Pexp_ident "ctyp" (strip.ml[229,9433+41]..[229,9433+45])
                          [
                            <label> ""
                              expression (strip.ml[229,9433+46]..[229,9433+49])
                                Pexp_ident "_a2" (strip.ml[229,9433+46]..[229,9433+49])
                          ]
                    ]
                    expression (strip.ml[229,9433+53]..[229,9433+73])
                      Pexp_variant "TyColMut"
                      Some
                        expression (strip.ml[229,9433+63]..[229,9433+73])
                          Pexp_tuple
                          [
                            expression (strip.ml[229,9433+64]..[229,9433+67])
                              Pexp_ident "_a1" (strip.ml[229,9433+64]..[229,9433+67])
                            expression (strip.ml[229,9433+69]..[229,9433+72])
                              Pexp_ident "_a2" (strip.ml[229,9433+69]..[229,9433+72])
                          ]
              <case>
                pattern (strip.ml[230,9507+4]..[230,9507+15])
                  Ppat_alias "_a0" (strip.ml[230,9507+12]..[230,9507+15])
                  pattern (strip.ml[230,9507+4]..[230,9507+8])
                    Ppat_type
                    "ant" (strip.ml[230,9507+5]..[230,9507+8])
                expression (strip.ml[230,9507+19]..[230,9507+47]) ghost
                  Pexp_coerce
                  expression (strip.ml[230,9507+20]..[230,9507+27])
                    Pexp_apply
                    expression (strip.ml[230,9507+20]..[230,9507+23])
                      Pexp_ident "ant" (strip.ml[230,9507+20]..[230,9507+23])
                    [
                      <label> ""
                        expression (strip.ml[230,9507+24]..[230,9507+27])
                          Pexp_ident "_a0" (strip.ml[230,9507+24]..[230,9507+27])
                    ]
                  None
                  core_type (strip.ml[230,9507+31]..[230,9507+46])
                    Ptyp_constr "Astfn.name_ctyp" (strip.ml[230,9507+31]..[230,9507+46])
                    []
            ]
          core_type (strip.ml[222,9139+15]..[222,9139+48])
            Ptyp_arrow
            ""
            core_type (strip.ml[222,9139+15]..[222,9139+29])
              Ptyp_constr "Astf.name_ctyp" (strip.ml[222,9139+15]..[222,9139+29])
              []
            core_type (strip.ml[222,9139+33]..[222,9139+48])
              Ptyp_constr "Astfn.name_ctyp" (strip.ml[222,9139+33]..[222,9139+48])
              []
      <def>
        pattern (strip.ml[231,9555+4]..[231,9555+11])
          Ppat_var "or_ctyp" (strip.ml[231,9555+4]..[231,9555+11])
        expression (strip.ml[231,9555+11]..[239,9901+53]) ghost
          Pexp_constraint
          expression (strip.ml[232,9600+2]..[239,9901+53])
            Pexp_function
            [
              <case>
                pattern (strip.ml[233,9611+4]..[233,9611+22])
                  Ppat_variant "Bar"
                  Some
                    pattern (strip.ml[233,9611+9]..[233,9611+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[233,9611+10]..[233,9611+13])
                          Ppat_var "_a0" (strip.ml[233,9611+10]..[233,9611+13])
                        pattern (strip.ml[233,9611+14]..[233,9611+17])
                          Ppat_var "_a1" (strip.ml[233,9611+14]..[233,9611+17])
                        pattern (strip.ml[233,9611+18]..[233,9611+21])
                          Ppat_var "_a2" (strip.ml[233,9611+18]..[233,9611+21])
                      ]
                expression (strip.ml[234,9637+6]..[234,9637+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[234,9637+10]..[234,9637+13])
                        Ppat_var "_a1" (strip.ml[234,9637+10]..[234,9637+13])
                      expression (strip.ml[234,9637+16]..[234,9637+27])
                        Pexp_apply
                        expression (strip.ml[234,9637+16]..[234,9637+23])
                          Pexp_ident "or_ctyp" (strip.ml[234,9637+16]..[234,9637+23])
                        [
                          <label> ""
                            expression (strip.ml[234,9637+24]..[234,9637+27])
                              Pexp_ident "_a1" (strip.ml[234,9637+24]..[234,9637+27])
                        ]
                  ]
                  expression (strip.ml[234,9637+31]..[234,9637+71])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[234,9637+35]..[234,9637+38])
                          Ppat_var "_a2" (strip.ml[234,9637+35]..[234,9637+38])
                        expression (strip.ml[234,9637+41]..[234,9637+52])
                          Pexp_apply
                          expression (strip.ml[234,9637+41]..[234,9637+48])
                            Pexp_ident "or_ctyp" (strip.ml[234,9637+41]..[234,9637+48])
                          [
                            <label> ""
                              expression (strip.ml[234,9637+49]..[234,9637+52])
                                Pexp_ident "_a2" (strip.ml[234,9637+49]..[234,9637+52])
                          ]
                    ]
                    expression (strip.ml[234,9637+56]..[234,9637+71])
                      Pexp_variant "Bar"
                      Some
                        expression (strip.ml[234,9637+61]..[234,9637+71])
                          Pexp_tuple
                          [
                            expression (strip.ml[234,9637+62]..[234,9637+65])
                              Pexp_ident "_a1" (strip.ml[234,9637+62]..[234,9637+65])
                            expression (strip.ml[234,9637+67]..[234,9637+70])
                              Pexp_ident "_a2" (strip.ml[234,9637+67]..[234,9637+70])
                          ]
              <case>
                pattern (strip.ml[235,9709+4]..[235,9709+24])
                  Ppat_variant "TyCol"
                  Some
                    pattern (strip.ml[235,9709+11]..[235,9709+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[235,9709+12]..[235,9709+15])
                          Ppat_var "_a0" (strip.ml[235,9709+12]..[235,9709+15])
                        pattern (strip.ml[235,9709+16]..[235,9709+19])
                          Ppat_var "_a1" (strip.ml[235,9709+16]..[235,9709+19])
                        pattern (strip.ml[235,9709+20]..[235,9709+23])
                          Ppat_var "_a2" (strip.ml[235,9709+20]..[235,9709+23])
                      ]
                expression (strip.ml[236,9737+6]..[236,9737+70])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[236,9737+10]..[236,9737+13])
                        Ppat_var "_a1" (strip.ml[236,9737+10]..[236,9737+13])
                      expression (strip.ml[236,9737+16]..[236,9737+27])
                        Pexp_apply
                        expression (strip.ml[236,9737+16]..[236,9737+23])
                          Pexp_ident "auident" (strip.ml[236,9737+16]..[236,9737+23])
                        [
                          <label> ""
                            expression (strip.ml[236,9737+24]..[236,9737+27])
                              Pexp_ident "_a1" (strip.ml[236,9737+24]..[236,9737+27])
                        ]
                  ]
                  expression (strip.ml[236,9737+31]..[236,9737+70])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[236,9737+35]..[236,9737+38])
                          Ppat_var "_a2" (strip.ml[236,9737+35]..[236,9737+38])
                        expression (strip.ml[236,9737+41]..[236,9737+49])
                          Pexp_apply
                          expression (strip.ml[236,9737+41]..[236,9737+45])
                            Pexp_ident "ctyp" (strip.ml[236,9737+41]..[236,9737+45])
                          [
                            <label> ""
                              expression (strip.ml[236,9737+46]..[236,9737+49])
                                Pexp_ident "_a2" (strip.ml[236,9737+46]..[236,9737+49])
                          ]
                    ]
                    expression (strip.ml[236,9737+53]..[236,9737+70])
                      Pexp_variant "TyCol"
                      Some
                        expression (strip.ml[236,9737+60]..[236,9737+70])
                          Pexp_tuple
                          [
                            expression (strip.ml[236,9737+61]..[236,9737+64])
                              Pexp_ident "_a1" (strip.ml[236,9737+61]..[236,9737+64])
                            expression (strip.ml[236,9737+66]..[236,9737+69])
                              Pexp_ident "_a2" (strip.ml[236,9737+66]..[236,9737+69])
                          ]
              <case>
                pattern (strip.ml[237,9808+4]..[237,9808+21])
                  Ppat_variant "Of"
                  Some
                    pattern (strip.ml[237,9808+8]..[237,9808+21])
                      Ppat_tuple
                      [
                        pattern (strip.ml[237,9808+9]..[237,9808+12])
                          Ppat_var "_a0" (strip.ml[237,9808+9]..[237,9808+12])
                        pattern (strip.ml[237,9808+13]..[237,9808+16])
                          Ppat_var "_a1" (strip.ml[237,9808+13]..[237,9808+16])
                        pattern (strip.ml[237,9808+17]..[237,9808+20])
                          Ppat_var "_a2" (strip.ml[237,9808+17]..[237,9808+20])
                      ]
                expression (strip.ml[238,9833+6]..[238,9833+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[238,9833+10]..[238,9833+13])
                        Ppat_var "_a1" (strip.ml[238,9833+10]..[238,9833+13])
                      expression (strip.ml[238,9833+16]..[238,9833+27])
                        Pexp_apply
                        expression (strip.ml[238,9833+16]..[238,9833+23])
                          Pexp_ident "auident" (strip.ml[238,9833+16]..[238,9833+23])
                        [
                          <label> ""
                            expression (strip.ml[238,9833+24]..[238,9833+27])
                              Pexp_ident "_a1" (strip.ml[238,9833+24]..[238,9833+27])
                        ]
                  ]
                  expression (strip.ml[238,9833+31]..[238,9833+67])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[238,9833+35]..[238,9833+38])
                          Ppat_var "_a2" (strip.ml[238,9833+35]..[238,9833+38])
                        expression (strip.ml[238,9833+41]..[238,9833+49])
                          Pexp_apply
                          expression (strip.ml[238,9833+41]..[238,9833+45])
                            Pexp_ident "ctyp" (strip.ml[238,9833+41]..[238,9833+45])
                          [
                            <label> ""
                              expression (strip.ml[238,9833+46]..[238,9833+49])
                                Pexp_ident "_a2" (strip.ml[238,9833+46]..[238,9833+49])
                          ]
                    ]
                    expression (strip.ml[238,9833+53]..[238,9833+67])
                      Pexp_variant "Of"
                      Some
                        expression (strip.ml[238,9833+57]..[238,9833+67])
                          Pexp_tuple
                          [
                            expression (strip.ml[238,9833+58]..[238,9833+61])
                              Pexp_ident "_a1" (strip.ml[238,9833+58]..[238,9833+61])
                            expression (strip.ml[238,9833+63]..[238,9833+66])
                              Pexp_ident "_a2" (strip.ml[238,9833+63]..[238,9833+66])
                          ]
              <case>
                pattern (strip.ml[239,9901+4]..[239,9901+19])
                  Ppat_alias "_a0" (strip.ml[239,9901+16]..[239,9901+19])
                  pattern (strip.ml[239,9901+4]..[239,9901+12])
                    Ppat_type
                    "auident" (strip.ml[239,9901+5]..[239,9901+12])
                expression (strip.ml[239,9901+23]..[239,9901+53]) ghost
                  Pexp_coerce
                  expression (strip.ml[239,9901+24]..[239,9901+35])
                    Pexp_apply
                    expression (strip.ml[239,9901+24]..[239,9901+31])
                      Pexp_ident "auident" (strip.ml[239,9901+24]..[239,9901+31])
                    [
                      <label> ""
                        expression (strip.ml[239,9901+32]..[239,9901+35])
                          Pexp_ident "_a0" (strip.ml[239,9901+32]..[239,9901+35])
                    ]
                  None
                  core_type (strip.ml[239,9901+39]..[239,9901+52])
                    Ptyp_constr "Astfn.or_ctyp" (strip.ml[239,9901+39]..[239,9901+52])
                    []
            ]
          core_type (strip.ml[231,9555+13]..[231,9555+42])
            Ptyp_arrow
            ""
            core_type (strip.ml[231,9555+13]..[231,9555+25])
              Ptyp_constr "Astf.or_ctyp" (strip.ml[231,9555+13]..[231,9555+25])
              []
            core_type (strip.ml[231,9555+29]..[231,9555+42])
              Ptyp_constr "Astfn.or_ctyp" (strip.ml[231,9555+29]..[231,9555+42])
              []
      <def>
        pattern (strip.ml[240,9955+4]..[240,9955+11])
          Ppat_var "of_ctyp" (strip.ml[240,9955+4]..[240,9955+11])
        expression (strip.ml[240,9955+11]..[245,10148+45]) ghost
          Pexp_constraint
          expression (strip.ml[241,10000+2]..[245,10148+45])
            Pexp_function
            [
              <case>
                pattern (strip.ml[242,10011+4]..[242,10011+21])
                  Ppat_variant "Of"
                  Some
                    pattern (strip.ml[242,10011+8]..[242,10011+21])
                      Ppat_tuple
                      [
                        pattern (strip.ml[242,10011+9]..[242,10011+12])
                          Ppat_var "_a0" (strip.ml[242,10011+9]..[242,10011+12])
                        pattern (strip.ml[242,10011+13]..[242,10011+16])
                          Ppat_var "_a1" (strip.ml[242,10011+13]..[242,10011+16])
                        pattern (strip.ml[242,10011+17]..[242,10011+20])
                          Ppat_var "_a2" (strip.ml[242,10011+17]..[242,10011+20])
                      ]
                expression (strip.ml[243,10036+6]..[243,10036+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[243,10036+10]..[243,10036+13])
                        Ppat_var "_a1" (strip.ml[243,10036+10]..[243,10036+13])
                      expression (strip.ml[243,10036+16]..[243,10036+23])
                        Pexp_apply
                        expression (strip.ml[243,10036+16]..[243,10036+19])
                          Pexp_ident "vid" (strip.ml[243,10036+16]..[243,10036+19])
                        [
                          <label> ""
                            expression (strip.ml[243,10036+20]..[243,10036+23])
                              Pexp_ident "_a1" (strip.ml[243,10036+20]..[243,10036+23])
                        ]
                  ]
                  expression (strip.ml[243,10036+27]..[243,10036+63])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[243,10036+31]..[243,10036+34])
                          Ppat_var "_a2" (strip.ml[243,10036+31]..[243,10036+34])
                        expression (strip.ml[243,10036+37]..[243,10036+45])
                          Pexp_apply
                          expression (strip.ml[243,10036+37]..[243,10036+41])
                            Pexp_ident "ctyp" (strip.ml[243,10036+37]..[243,10036+41])
                          [
                            <label> ""
                              expression (strip.ml[243,10036+42]..[243,10036+45])
                                Pexp_ident "_a2" (strip.ml[243,10036+42]..[243,10036+45])
                          ]
                    ]
                    expression (strip.ml[243,10036+49]..[243,10036+63])
                      Pexp_variant "Of"
                      Some
                        expression (strip.ml[243,10036+53]..[243,10036+63])
                          Pexp_tuple
                          [
                            expression (strip.ml[243,10036+54]..[243,10036+57])
                              Pexp_ident "_a1" (strip.ml[243,10036+54]..[243,10036+57])
                            expression (strip.ml[243,10036+59]..[243,10036+62])
                              Pexp_ident "_a2" (strip.ml[243,10036+59]..[243,10036+62])
                          ]
              <case>
                pattern (strip.ml[244,10100+4]..[244,10100+16])
                  Ppat_alias "_a0" (strip.ml[244,10100+13]..[244,10100+16])
                  pattern (strip.ml[244,10100+4]..[244,10100+9])
                    Ppat_type
                    "vid'" (strip.ml[244,10100+5]..[244,10100+9])
                expression (strip.ml[244,10100+20]..[244,10100+47]) ghost
                  Pexp_coerce
                  expression (strip.ml[244,10100+21]..[244,10100+29])
                    Pexp_apply
                    expression (strip.ml[244,10100+21]..[244,10100+25])
                      Pexp_ident "vid'" (strip.ml[244,10100+21]..[244,10100+25])
                    [
                      <label> ""
                        expression (strip.ml[244,10100+26]..[244,10100+29])
                          Pexp_ident "_a0" (strip.ml[244,10100+26]..[244,10100+29])
                    ]
                  None
                  core_type (strip.ml[244,10100+33]..[244,10100+46])
                    Ptyp_constr "Astfn.of_ctyp" (strip.ml[244,10100+33]..[244,10100+46])
                    []
              <case>
                pattern (strip.ml[245,10148+4]..[245,10148+15])
                  Ppat_alias "_a0" (strip.ml[245,10148+12]..[245,10148+15])
                  pattern (strip.ml[245,10148+4]..[245,10148+8])
                    Ppat_type
                    "ant" (strip.ml[245,10148+5]..[245,10148+8])
                expression (strip.ml[245,10148+19]..[245,10148+45]) ghost
                  Pexp_coerce
                  expression (strip.ml[245,10148+20]..[245,10148+27])
                    Pexp_apply
                    expression (strip.ml[245,10148+20]..[245,10148+23])
                      Pexp_ident "ant" (strip.ml[245,10148+20]..[245,10148+23])
                    [
                      <label> ""
                        expression (strip.ml[245,10148+24]..[245,10148+27])
                          Pexp_ident "_a0" (strip.ml[245,10148+24]..[245,10148+27])
                    ]
                  None
                  core_type (strip.ml[245,10148+31]..[245,10148+44])
                    Ptyp_constr "Astfn.of_ctyp" (strip.ml[245,10148+31]..[245,10148+44])
                    []
            ]
          core_type (strip.ml[240,9955+13]..[240,9955+42])
            Ptyp_arrow
            ""
            core_type (strip.ml[240,9955+13]..[240,9955+25])
              Ptyp_constr "Astf.of_ctyp" (strip.ml[240,9955+13]..[240,9955+25])
              []
            core_type (strip.ml[240,9955+29]..[240,9955+42])
              Ptyp_constr "Astfn.of_ctyp" (strip.ml[240,9955+29]..[240,9955+42])
              []
      <def>
        pattern (strip.ml[246,10194+4]..[246,10194+7])
          Ppat_var "pat" (strip.ml[246,10194+4]..[246,10194+7])
        expression (strip.ml[246,10194+7]..[284,12003+56]) ghost
          Pexp_constraint
          expression (strip.ml[247,10227+2]..[284,12003+56])
            Pexp_function
            [
              <case>
                pattern (strip.ml[248,10238+4]..[248,10238+15])
                  Ppat_alias "_a0" (strip.ml[248,10238+12]..[248,10238+15])
                  pattern (strip.ml[248,10238+4]..[248,10238+8])
                    Ppat_type
                    "vid" (strip.ml[248,10238+5]..[248,10238+8])
                expression (strip.ml[248,10238+19]..[248,10238+41]) ghost
                  Pexp_coerce
                  expression (strip.ml[248,10238+20]..[248,10238+27])
                    Pexp_apply
                    expression (strip.ml[248,10238+20]..[248,10238+23])
                      Pexp_ident "vid" (strip.ml[248,10238+20]..[248,10238+23])
                    [
                      <label> ""
                        expression (strip.ml[248,10238+24]..[248,10238+27])
                          Pexp_ident "_a0" (strip.ml[248,10238+24]..[248,10238+27])
                    ]
                  None
                  core_type (strip.ml[248,10238+31]..[248,10238+40])
                    Ptyp_constr "Astfn.pat" (strip.ml[248,10238+31]..[248,10238+40])
                    []
              <case>
                pattern (strip.ml[249,10280+4]..[249,10280+22])
                  Ppat_variant "App"
                  Some
                    pattern (strip.ml[249,10280+9]..[249,10280+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[249,10280+10]..[249,10280+13])
                          Ppat_var "_a0" (strip.ml[249,10280+10]..[249,10280+13])
                        pattern (strip.ml[249,10280+14]..[249,10280+17])
                          Ppat_var "_a1" (strip.ml[249,10280+14]..[249,10280+17])
                        pattern (strip.ml[249,10280+18]..[249,10280+21])
                          Ppat_var "_a2" (strip.ml[249,10280+18]..[249,10280+21])
                      ]
                expression (strip.ml[250,10306+6]..[250,10306+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[250,10306+10]..[250,10306+13])
                        Ppat_var "_a1" (strip.ml[250,10306+10]..[250,10306+13])
                      expression (strip.ml[250,10306+16]..[250,10306+23])
                        Pexp_apply
                        expression (strip.ml[250,10306+16]..[250,10306+19])
                          Pexp_ident "pat" (strip.ml[250,10306+16]..[250,10306+19])
                        [
                          <label> ""
                            expression (strip.ml[250,10306+20]..[250,10306+23])
                              Pexp_ident "_a1" (strip.ml[250,10306+20]..[250,10306+23])
                        ]
                  ]
                  expression (strip.ml[250,10306+27]..[250,10306+63])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[250,10306+31]..[250,10306+34])
                          Ppat_var "_a2" (strip.ml[250,10306+31]..[250,10306+34])
                        expression (strip.ml[250,10306+37]..[250,10306+44])
                          Pexp_apply
                          expression (strip.ml[250,10306+37]..[250,10306+40])
                            Pexp_ident "pat" (strip.ml[250,10306+37]..[250,10306+40])
                          [
                            <label> ""
                              expression (strip.ml[250,10306+41]..[250,10306+44])
                                Pexp_ident "_a2" (strip.ml[250,10306+41]..[250,10306+44])
                          ]
                    ]
                    expression (strip.ml[250,10306+48]..[250,10306+63])
                      Pexp_variant "App"
                      Some
                        expression (strip.ml[250,10306+53]..[250,10306+63])
                          Pexp_tuple
                          [
                            expression (strip.ml[250,10306+54]..[250,10306+57])
                              Pexp_ident "_a1" (strip.ml[250,10306+54]..[250,10306+57])
                            expression (strip.ml[250,10306+59]..[250,10306+62])
                              Pexp_ident "_a2" (strip.ml[250,10306+59]..[250,10306+62])
                          ]
              <case>
                pattern (strip.ml[251,10370+4]..[251,10370+18])
                  Ppat_variant "Vrn"
                  Some
                    pattern (strip.ml[251,10370+9]..[251,10370+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[251,10370+10]..[251,10370+13])
                          Ppat_var "_a0" (strip.ml[251,10370+10]..[251,10370+13])
                        pattern (strip.ml[251,10370+14]..[251,10370+17])
                          Ppat_var "_a1" (strip.ml[251,10370+14]..[251,10370+17])
                      ]
                expression (strip.ml[251,10370+22]..[251,10370+30])
                  Pexp_variant "Vrn"
                  Some
                    expression (strip.ml[251,10370+27]..[251,10370+30])
                      Pexp_ident "_a1" (strip.ml[251,10370+27]..[251,10370+30])
              <case>
                pattern (strip.ml[252,10401+4]..[252,10401+22])
                  Ppat_variant "Com"
                  Some
                    pattern (strip.ml[252,10401+9]..[252,10401+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[252,10401+10]..[252,10401+13])
                          Ppat_var "_a0" (strip.ml[252,10401+10]..[252,10401+13])
                        pattern (strip.ml[252,10401+14]..[252,10401+17])
                          Ppat_var "_a1" (strip.ml[252,10401+14]..[252,10401+17])
                        pattern (strip.ml[252,10401+18]..[252,10401+21])
                          Ppat_var "_a2" (strip.ml[252,10401+18]..[252,10401+21])
                      ]
                expression (strip.ml[253,10427+6]..[253,10427+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[253,10427+10]..[253,10427+13])
                        Ppat_var "_a1" (strip.ml[253,10427+10]..[253,10427+13])
                      expression (strip.ml[253,10427+16]..[253,10427+23])
                        Pexp_apply
                        expression (strip.ml[253,10427+16]..[253,10427+19])
                          Pexp_ident "pat" (strip.ml[253,10427+16]..[253,10427+19])
                        [
                          <label> ""
                            expression (strip.ml[253,10427+20]..[253,10427+23])
                              Pexp_ident "_a1" (strip.ml[253,10427+20]..[253,10427+23])
                        ]
                  ]
                  expression (strip.ml[253,10427+27]..[253,10427+63])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[253,10427+31]..[253,10427+34])
                          Ppat_var "_a2" (strip.ml[253,10427+31]..[253,10427+34])
                        expression (strip.ml[253,10427+37]..[253,10427+44])
                          Pexp_apply
                          expression (strip.ml[253,10427+37]..[253,10427+40])
                            Pexp_ident "pat" (strip.ml[253,10427+37]..[253,10427+40])
                          [
                            <label> ""
                              expression (strip.ml[253,10427+41]..[253,10427+44])
                                Pexp_ident "_a2" (strip.ml[253,10427+41]..[253,10427+44])
                          ]
                    ]
                    expression (strip.ml[253,10427+48]..[253,10427+63])
                      Pexp_variant "Com"
                      Some
                        expression (strip.ml[253,10427+53]..[253,10427+63])
                          Pexp_tuple
                          [
                            expression (strip.ml[253,10427+54]..[253,10427+57])
                              Pexp_ident "_a1" (strip.ml[253,10427+54]..[253,10427+57])
                            expression (strip.ml[253,10427+59]..[253,10427+62])
                              Pexp_ident "_a2" (strip.ml[253,10427+59]..[253,10427+62])
                          ]
              <case>
                pattern (strip.ml[254,10491+4]..[254,10491+22])
                  Ppat_variant "Sem"
                  Some
                    pattern (strip.ml[254,10491+9]..[254,10491+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[254,10491+10]..[254,10491+13])
                          Ppat_var "_a0" (strip.ml[254,10491+10]..[254,10491+13])
                        pattern (strip.ml[254,10491+14]..[254,10491+17])
                          Ppat_var "_a1" (strip.ml[254,10491+14]..[254,10491+17])
                        pattern (strip.ml[254,10491+18]..[254,10491+21])
                          Ppat_var "_a2" (strip.ml[254,10491+18]..[254,10491+21])
                      ]
                expression (strip.ml[255,10517+6]..[255,10517+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[255,10517+10]..[255,10517+13])
                        Ppat_var "_a1" (strip.ml[255,10517+10]..[255,10517+13])
                      expression (strip.ml[255,10517+16]..[255,10517+23])
                        Pexp_apply
                        expression (strip.ml[255,10517+16]..[255,10517+19])
                          Pexp_ident "pat" (strip.ml[255,10517+16]..[255,10517+19])
                        [
                          <label> ""
                            expression (strip.ml[255,10517+20]..[255,10517+23])
                              Pexp_ident "_a1" (strip.ml[255,10517+20]..[255,10517+23])
                        ]
                  ]
                  expression (strip.ml[255,10517+27]..[255,10517+63])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[255,10517+31]..[255,10517+34])
                          Ppat_var "_a2" (strip.ml[255,10517+31]..[255,10517+34])
                        expression (strip.ml[255,10517+37]..[255,10517+44])
                          Pexp_apply
                          expression (strip.ml[255,10517+37]..[255,10517+40])
                            Pexp_ident "pat" (strip.ml[255,10517+37]..[255,10517+40])
                          [
                            <label> ""
                              expression (strip.ml[255,10517+41]..[255,10517+44])
                                Pexp_ident "_a2" (strip.ml[255,10517+41]..[255,10517+44])
                          ]
                    ]
                    expression (strip.ml[255,10517+48]..[255,10517+63])
                      Pexp_variant "Sem"
                      Some
                        expression (strip.ml[255,10517+53]..[255,10517+63])
                          Pexp_tuple
                          [
                            expression (strip.ml[255,10517+54]..[255,10517+57])
                              Pexp_ident "_a1" (strip.ml[255,10517+54]..[255,10517+57])
                            expression (strip.ml[255,10517+59]..[255,10517+62])
                              Pexp_ident "_a2" (strip.ml[255,10517+59]..[255,10517+62])
                          ]
              <case>
                pattern (strip.ml[256,10581+4]..[256,10581+18])
                  Ppat_variant "Par"
                  Some
                    pattern (strip.ml[256,10581+9]..[256,10581+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[256,10581+10]..[256,10581+13])
                          Ppat_var "_a0" (strip.ml[256,10581+10]..[256,10581+13])
                        pattern (strip.ml[256,10581+14]..[256,10581+17])
                          Ppat_var "_a1" (strip.ml[256,10581+14]..[256,10581+17])
                      ]
                expression (strip.ml[256,10581+22]..[256,10581+51])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[256,10581+26]..[256,10581+29])
                        Ppat_var "_a1" (strip.ml[256,10581+26]..[256,10581+29])
                      expression (strip.ml[256,10581+32]..[256,10581+39])
                        Pexp_apply
                        expression (strip.ml[256,10581+32]..[256,10581+35])
                          Pexp_ident "pat" (strip.ml[256,10581+32]..[256,10581+35])
                        [
                          <label> ""
                            expression (strip.ml[256,10581+36]..[256,10581+39])
                              Pexp_ident "_a1" (strip.ml[256,10581+36]..[256,10581+39])
                        ]
                  ]
                  expression (strip.ml[256,10581+43]..[256,10581+51])
                    Pexp_variant "Par"
                    Some
                      expression (strip.ml[256,10581+48]..[256,10581+51])
                        Pexp_ident "_a1" (strip.ml[256,10581+48]..[256,10581+51])
              <case>
                pattern (strip.ml[257,10633+4]..[257,10633+15])
                  Ppat_alias "_a0" (strip.ml[257,10633+12]..[257,10633+15])
                  pattern (strip.ml[257,10633+4]..[257,10633+8])
                    Ppat_type
                    "any" (strip.ml[257,10633+5]..[257,10633+8])
                expression (strip.ml[257,10633+19]..[257,10633+41]) ghost
                  Pexp_coerce
                  expression (strip.ml[257,10633+20]..[257,10633+27])
                    Pexp_apply
                    expression (strip.ml[257,10633+20]..[257,10633+23])
                      Pexp_ident "any" (strip.ml[257,10633+20]..[257,10633+23])
                    [
                      <label> ""
                        expression (strip.ml[257,10633+24]..[257,10633+27])
                          Pexp_ident "_a0" (strip.ml[257,10633+24]..[257,10633+27])
                    ]
                  None
                  core_type (strip.ml[257,10633+31]..[257,10633+40])
                    Ptyp_constr "Astfn.pat" (strip.ml[257,10633+31]..[257,10633+40])
                    []
              <case>
                pattern (strip.ml[258,10675+4]..[258,10675+21])
                  Ppat_variant "Record"
                  Some
                    pattern (strip.ml[258,10675+12]..[258,10675+21])
                      Ppat_tuple
                      [
                        pattern (strip.ml[258,10675+13]..[258,10675+16])
                          Ppat_var "_a0" (strip.ml[258,10675+13]..[258,10675+16])
                        pattern (strip.ml[258,10675+17]..[258,10675+20])
                          Ppat_var "_a1" (strip.ml[258,10675+17]..[258,10675+20])
                      ]
                expression (strip.ml[258,10675+25]..[258,10675+61])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[258,10675+29]..[258,10675+32])
                        Ppat_var "_a1" (strip.ml[258,10675+29]..[258,10675+32])
                      expression (strip.ml[258,10675+35]..[258,10675+46])
                        Pexp_apply
                        expression (strip.ml[258,10675+35]..[258,10675+42])
                          Pexp_ident "rec_pat" (strip.ml[258,10675+35]..[258,10675+42])
                        [
                          <label> ""
                            expression (strip.ml[258,10675+43]..[258,10675+46])
                              Pexp_ident "_a1" (strip.ml[258,10675+43]..[258,10675+46])
                        ]
                  ]
                  expression (strip.ml[258,10675+50]..[258,10675+61])
                    Pexp_variant "Record"
                    Some
                      expression (strip.ml[258,10675+58]..[258,10675+61])
                        Pexp_ident "_a1" (strip.ml[258,10675+58]..[258,10675+61])
              <case>
                pattern (strip.ml[259,10737+4]..[259,10737+19])
                  Ppat_alias "_a0" (strip.ml[259,10737+16]..[259,10737+19])
                  pattern (strip.ml[259,10737+4]..[259,10737+12])
                    Ppat_type
                    "literal" (strip.ml[259,10737+5]..[259,10737+12])
                expression (strip.ml[259,10737+23]..[259,10737+49]) ghost
                  Pexp_coerce
                  expression (strip.ml[259,10737+24]..[259,10737+35])
                    Pexp_apply
                    expression (strip.ml[259,10737+24]..[259,10737+31])
                      Pexp_ident "literal" (strip.ml[259,10737+24]..[259,10737+31])
                    [
                      <label> ""
                        expression (strip.ml[259,10737+32]..[259,10737+35])
                          Pexp_ident "_a0" (strip.ml[259,10737+32]..[259,10737+35])
                    ]
                  None
                  core_type (strip.ml[259,10737+39]..[259,10737+48])
                    Ptyp_constr "Astfn.pat" (strip.ml[259,10737+39]..[259,10737+48])
                    []
              <case>
                pattern (strip.ml[260,10787+4]..[260,10787+24])
                  Ppat_variant "Alias"
                  Some
                    pattern (strip.ml[260,10787+11]..[260,10787+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[260,10787+12]..[260,10787+15])
                          Ppat_var "_a0" (strip.ml[260,10787+12]..[260,10787+15])
                        pattern (strip.ml[260,10787+16]..[260,10787+19])
                          Ppat_var "_a1" (strip.ml[260,10787+16]..[260,10787+19])
                        pattern (strip.ml[260,10787+20]..[260,10787+23])
                          Ppat_var "_a2" (strip.ml[260,10787+20]..[260,10787+23])
                      ]
                expression (strip.ml[261,10815+6]..[261,10815+69])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[261,10815+10]..[261,10815+13])
                        Ppat_var "_a1" (strip.ml[261,10815+10]..[261,10815+13])
                      expression (strip.ml[261,10815+16]..[261,10815+23])
                        Pexp_apply
                        expression (strip.ml[261,10815+16]..[261,10815+19])
                          Pexp_ident "pat" (strip.ml[261,10815+16]..[261,10815+19])
                        [
                          <label> ""
                            expression (strip.ml[261,10815+20]..[261,10815+23])
                              Pexp_ident "_a1" (strip.ml[261,10815+20]..[261,10815+23])
                        ]
                  ]
                  expression (strip.ml[261,10815+27]..[261,10815+69])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[261,10815+31]..[261,10815+34])
                          Ppat_var "_a2" (strip.ml[261,10815+31]..[261,10815+34])
                        expression (strip.ml[261,10815+37]..[261,10815+48])
                          Pexp_apply
                          expression (strip.ml[261,10815+37]..[261,10815+44])
                            Pexp_ident "alident" (strip.ml[261,10815+37]..[261,10815+44])
                          [
                            <label> ""
                              expression (strip.ml[261,10815+45]..[261,10815+48])
                                Pexp_ident "_a2" (strip.ml[261,10815+45]..[261,10815+48])
                          ]
                    ]
                    expression (strip.ml[261,10815+52]..[261,10815+69])
                      Pexp_variant "Alias"
                      Some
                        expression (strip.ml[261,10815+59]..[261,10815+69])
                          Pexp_tuple
                          [
                            expression (strip.ml[261,10815+60]..[261,10815+63])
                              Pexp_ident "_a1" (strip.ml[261,10815+60]..[261,10815+63])
                            expression (strip.ml[261,10815+65]..[261,10815+68])
                              Pexp_ident "_a2" (strip.ml[261,10815+65]..[261,10815+68])
                          ]
              <case>
                pattern (strip.ml[262,10885+4]..[262,10885+19])
                  Ppat_variant "ArrayEmpty"
                  Some
                    pattern (strip.ml[262,10885+16]..[262,10885+19])
                      Ppat_var "_a0" (strip.ml[262,10885+16]..[262,10885+19])
                expression (strip.ml[262,10885+23]..[262,10885+34])
                  Pexp_variant "ArrayEmpty"
                  None
              <case>
                pattern (strip.ml[263,10920+4]..[263,10920+20])
                  Ppat_variant "Array"
                  Some
                    pattern (strip.ml[263,10920+11]..[263,10920+20])
                      Ppat_tuple
                      [
                        pattern (strip.ml[263,10920+12]..[263,10920+15])
                          Ppat_var "_a0" (strip.ml[263,10920+12]..[263,10920+15])
                        pattern (strip.ml[263,10920+16]..[263,10920+19])
                          Ppat_var "_a1" (strip.ml[263,10920+16]..[263,10920+19])
                      ]
                expression (strip.ml[263,10920+24]..[263,10920+55])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[263,10920+28]..[263,10920+31])
                        Ppat_var "_a1" (strip.ml[263,10920+28]..[263,10920+31])
                      expression (strip.ml[263,10920+34]..[263,10920+41])
                        Pexp_apply
                        expression (strip.ml[263,10920+34]..[263,10920+37])
                          Pexp_ident "pat" (strip.ml[263,10920+34]..[263,10920+37])
                        [
                          <label> ""
                            expression (strip.ml[263,10920+38]..[263,10920+41])
                              Pexp_ident "_a1" (strip.ml[263,10920+38]..[263,10920+41])
                        ]
                  ]
                  expression (strip.ml[263,10920+45]..[263,10920+55])
                    Pexp_variant "Array"
                    Some
                      expression (strip.ml[263,10920+52]..[263,10920+55])
                        Pexp_ident "_a1" (strip.ml[263,10920+52]..[263,10920+55])
              <case>
                pattern (strip.ml[264,10976+4]..[264,10976+21])
                  Ppat_variant "LabelS"
                  Some
                    pattern (strip.ml[264,10976+12]..[264,10976+21])
                      Ppat_tuple
                      [
                        pattern (strip.ml[264,10976+13]..[264,10976+16])
                          Ppat_var "_a0" (strip.ml[264,10976+13]..[264,10976+16])
                        pattern (strip.ml[264,10976+17]..[264,10976+20])
                          Ppat_var "_a1" (strip.ml[264,10976+17]..[264,10976+20])
                      ]
                expression (strip.ml[264,10976+25]..[264,10976+61])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[264,10976+29]..[264,10976+32])
                        Ppat_var "_a1" (strip.ml[264,10976+29]..[264,10976+32])
                      expression (strip.ml[264,10976+35]..[264,10976+46])
                        Pexp_apply
                        expression (strip.ml[264,10976+35]..[264,10976+42])
                          Pexp_ident "alident" (strip.ml[264,10976+35]..[264,10976+42])
                        [
                          <label> ""
                            expression (strip.ml[264,10976+43]..[264,10976+46])
                              Pexp_ident "_a1" (strip.ml[264,10976+43]..[264,10976+46])
                        ]
                  ]
                  expression (strip.ml[264,10976+50]..[264,10976+61])
                    Pexp_variant "LabelS"
                    Some
                      expression (strip.ml[264,10976+58]..[264,10976+61])
                        Pexp_ident "_a1" (strip.ml[264,10976+58]..[264,10976+61])
              <case>
                pattern (strip.ml[265,11038+4]..[265,11038+24])
                  Ppat_variant "Label"
                  Some
                    pattern (strip.ml[265,11038+11]..[265,11038+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[265,11038+12]..[265,11038+15])
                          Ppat_var "_a0" (strip.ml[265,11038+12]..[265,11038+15])
                        pattern (strip.ml[265,11038+16]..[265,11038+19])
                          Ppat_var "_a1" (strip.ml[265,11038+16]..[265,11038+19])
                        pattern (strip.ml[265,11038+20]..[265,11038+23])
                          Ppat_var "_a2" (strip.ml[265,11038+20]..[265,11038+23])
                      ]
                expression (strip.ml[266,11066+6]..[266,11066+69])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[266,11066+10]..[266,11066+13])
                        Ppat_var "_a1" (strip.ml[266,11066+10]..[266,11066+13])
                      expression (strip.ml[266,11066+16]..[266,11066+27])
                        Pexp_apply
                        expression (strip.ml[266,11066+16]..[266,11066+23])
                          Pexp_ident "alident" (strip.ml[266,11066+16]..[266,11066+23])
                        [
                          <label> ""
                            expression (strip.ml[266,11066+24]..[266,11066+27])
                              Pexp_ident "_a1" (strip.ml[266,11066+24]..[266,11066+27])
                        ]
                  ]
                  expression (strip.ml[266,11066+31]..[266,11066+69])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[266,11066+35]..[266,11066+38])
                          Ppat_var "_a2" (strip.ml[266,11066+35]..[266,11066+38])
                        expression (strip.ml[266,11066+41]..[266,11066+48])
                          Pexp_apply
                          expression (strip.ml[266,11066+41]..[266,11066+44])
                            Pexp_ident "pat" (strip.ml[266,11066+41]..[266,11066+44])
                          [
                            <label> ""
                              expression (strip.ml[266,11066+45]..[266,11066+48])
                                Pexp_ident "_a2" (strip.ml[266,11066+45]..[266,11066+48])
                          ]
                    ]
                    expression (strip.ml[266,11066+52]..[266,11066+69])
                      Pexp_variant "Label"
                      Some
                        expression (strip.ml[266,11066+59]..[266,11066+69])
                          Pexp_tuple
                          [
                            expression (strip.ml[266,11066+60]..[266,11066+63])
                              Pexp_ident "_a1" (strip.ml[266,11066+60]..[266,11066+63])
                            expression (strip.ml[266,11066+65]..[266,11066+68])
                              Pexp_ident "_a2" (strip.ml[266,11066+65]..[266,11066+68])
                          ]
              <case>
                pattern (strip.ml[267,11136+4]..[267,11136+26])
                  Ppat_variant "OptLabl"
                  Some
                    pattern (strip.ml[267,11136+13]..[267,11136+26])
                      Ppat_tuple
                      [
                        pattern (strip.ml[267,11136+14]..[267,11136+17])
                          Ppat_var "_a0" (strip.ml[267,11136+14]..[267,11136+17])
                        pattern (strip.ml[267,11136+18]..[267,11136+21])
                          Ppat_var "_a1" (strip.ml[267,11136+18]..[267,11136+21])
                        pattern (strip.ml[267,11136+22]..[267,11136+25])
                          Ppat_var "_a2" (strip.ml[267,11136+22]..[267,11136+25])
                      ]
                expression (strip.ml[268,11166+6]..[268,11166+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[268,11166+10]..[268,11166+13])
                        Ppat_var "_a1" (strip.ml[268,11166+10]..[268,11166+13])
                      expression (strip.ml[268,11166+16]..[268,11166+27])
                        Pexp_apply
                        expression (strip.ml[268,11166+16]..[268,11166+23])
                          Pexp_ident "alident" (strip.ml[268,11166+16]..[268,11166+23])
                        [
                          <label> ""
                            expression (strip.ml[268,11166+24]..[268,11166+27])
                              Pexp_ident "_a1" (strip.ml[268,11166+24]..[268,11166+27])
                        ]
                  ]
                  expression (strip.ml[268,11166+31]..[268,11166+71])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[268,11166+35]..[268,11166+38])
                          Ppat_var "_a2" (strip.ml[268,11166+35]..[268,11166+38])
                        expression (strip.ml[268,11166+41]..[268,11166+48])
                          Pexp_apply
                          expression (strip.ml[268,11166+41]..[268,11166+44])
                            Pexp_ident "pat" (strip.ml[268,11166+41]..[268,11166+44])
                          [
                            <label> ""
                              expression (strip.ml[268,11166+45]..[268,11166+48])
                                Pexp_ident "_a2" (strip.ml[268,11166+45]..[268,11166+48])
                          ]
                    ]
                    expression (strip.ml[268,11166+52]..[268,11166+71])
                      Pexp_variant "OptLabl"
                      Some
                        expression (strip.ml[268,11166+61]..[268,11166+71])
                          Pexp_tuple
                          [
                            expression (strip.ml[268,11166+62]..[268,11166+65])
                              Pexp_ident "_a1" (strip.ml[268,11166+62]..[268,11166+65])
                            expression (strip.ml[268,11166+67]..[268,11166+70])
                              Pexp_ident "_a2" (strip.ml[268,11166+67]..[268,11166+70])
                          ]
              <case>
                pattern (strip.ml[269,11238+4]..[269,11238+23])
                  Ppat_variant "OptLablS"
                  Some
                    pattern (strip.ml[269,11238+14]..[269,11238+23])
                      Ppat_tuple
                      [
                        pattern (strip.ml[269,11238+15]..[269,11238+18])
                          Ppat_var "_a0" (strip.ml[269,11238+15]..[269,11238+18])
                        pattern (strip.ml[269,11238+19]..[269,11238+22])
                          Ppat_var "_a1" (strip.ml[269,11238+19]..[269,11238+22])
                      ]
                expression (strip.ml[269,11238+27]..[269,11238+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[269,11238+31]..[269,11238+34])
                        Ppat_var "_a1" (strip.ml[269,11238+31]..[269,11238+34])
                      expression (strip.ml[269,11238+37]..[269,11238+48])
                        Pexp_apply
                        expression (strip.ml[269,11238+37]..[269,11238+44])
                          Pexp_ident "alident" (strip.ml[269,11238+37]..[269,11238+44])
                        [
                          <label> ""
                            expression (strip.ml[269,11238+45]..[269,11238+48])
                              Pexp_ident "_a1" (strip.ml[269,11238+45]..[269,11238+48])
                        ]
                  ]
                  expression (strip.ml[269,11238+52]..[269,11238+65])
                    Pexp_variant "OptLablS"
                    Some
                      expression (strip.ml[269,11238+62]..[269,11238+65])
                        Pexp_ident "_a1" (strip.ml[269,11238+62]..[269,11238+65])
              <case>
                pattern (strip.ml[270,11304+4]..[270,11304+34])
                  Ppat_variant "OptLablExpr"
                  Some
                    pattern (strip.ml[270,11304+17]..[270,11304+34])
                      Ppat_tuple
                      [
                        pattern (strip.ml[270,11304+18]..[270,11304+21])
                          Ppat_var "_a0" (strip.ml[270,11304+18]..[270,11304+21])
                        pattern (strip.ml[270,11304+22]..[270,11304+25])
                          Ppat_var "_a1" (strip.ml[270,11304+22]..[270,11304+25])
                        pattern (strip.ml[270,11304+26]..[270,11304+29])
                          Ppat_var "_a2" (strip.ml[270,11304+26]..[270,11304+29])
                        pattern (strip.ml[270,11304+30]..[270,11304+33])
                          Ppat_var "_a3" (strip.ml[270,11304+30]..[270,11304+33])
                      ]
                expression (strip.ml[271,11342+6]..[272,11373+76])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[271,11342+10]..[271,11342+13])
                        Ppat_var "_a1" (strip.ml[271,11342+10]..[271,11342+13])
                      expression (strip.ml[271,11342+16]..[271,11342+27])
                        Pexp_apply
                        expression (strip.ml[271,11342+16]..[271,11342+23])
                          Pexp_ident "alident" (strip.ml[271,11342+16]..[271,11342+23])
                        [
                          <label> ""
                            expression (strip.ml[271,11342+24]..[271,11342+27])
                              Pexp_ident "_a1" (strip.ml[271,11342+24]..[271,11342+27])
                        ]
                  ]
                  expression (strip.ml[272,11373+6]..[272,11373+76])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[272,11373+10]..[272,11373+13])
                          Ppat_var "_a2" (strip.ml[272,11373+10]..[272,11373+13])
                        expression (strip.ml[272,11373+16]..[272,11373+23])
                          Pexp_apply
                          expression (strip.ml[272,11373+16]..[272,11373+19])
                            Pexp_ident "pat" (strip.ml[272,11373+16]..[272,11373+19])
                          [
                            <label> ""
                              expression (strip.ml[272,11373+20]..[272,11373+23])
                                Pexp_ident "_a2" (strip.ml[272,11373+20]..[272,11373+23])
                          ]
                    ]
                    expression (strip.ml[272,11373+27]..[272,11373+76])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[272,11373+31]..[272,11373+34])
                            Ppat_var "_a3" (strip.ml[272,11373+31]..[272,11373+34])
                          expression (strip.ml[272,11373+37]..[272,11373+44])
                            Pexp_apply
                            expression (strip.ml[272,11373+37]..[272,11373+40])
                              Pexp_ident "exp" (strip.ml[272,11373+37]..[272,11373+40])
                            [
                              <label> ""
                                expression (strip.ml[272,11373+41]..[272,11373+44])
                                  Pexp_ident "_a3" (strip.ml[272,11373+41]..[272,11373+44])
                            ]
                      ]
                      expression (strip.ml[272,11373+48]..[272,11373+76])
                        Pexp_variant "OptLablExpr"
                        Some
                          expression (strip.ml[272,11373+61]..[272,11373+76])
                            Pexp_tuple
                            [
                              expression (strip.ml[272,11373+62]..[272,11373+65])
                                Pexp_ident "_a1" (strip.ml[272,11373+62]..[272,11373+65])
                              expression (strip.ml[272,11373+67]..[272,11373+70])
                                Pexp_ident "_a2" (strip.ml[272,11373+67]..[272,11373+70])
                              expression (strip.ml[272,11373+72]..[272,11373+75])
                                Pexp_ident "_a3" (strip.ml[272,11373+72]..[272,11373+75])
                            ]
              <case>
                pattern (strip.ml[273,11450+4]..[273,11450+22])
                  Ppat_variant "Bar"
                  Some
                    pattern (strip.ml[273,11450+9]..[273,11450+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[273,11450+10]..[273,11450+13])
                          Ppat_var "_a0" (strip.ml[273,11450+10]..[273,11450+13])
                        pattern (strip.ml[273,11450+14]..[273,11450+17])
                          Ppat_var "_a1" (strip.ml[273,11450+14]..[273,11450+17])
                        pattern (strip.ml[273,11450+18]..[273,11450+21])
                          Ppat_var "_a2" (strip.ml[273,11450+18]..[273,11450+21])
                      ]
                expression (strip.ml[274,11476+6]..[274,11476+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[274,11476+10]..[274,11476+13])
                        Ppat_var "_a1" (strip.ml[274,11476+10]..[274,11476+13])
                      expression (strip.ml[274,11476+16]..[274,11476+23])
                        Pexp_apply
                        expression (strip.ml[274,11476+16]..[274,11476+19])
                          Pexp_ident "pat" (strip.ml[274,11476+16]..[274,11476+19])
                        [
                          <label> ""
                            expression (strip.ml[274,11476+20]..[274,11476+23])
                              Pexp_ident "_a1" (strip.ml[274,11476+20]..[274,11476+23])
                        ]
                  ]
                  expression (strip.ml[274,11476+27]..[274,11476+63])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[274,11476+31]..[274,11476+34])
                          Ppat_var "_a2" (strip.ml[274,11476+31]..[274,11476+34])
                        expression (strip.ml[274,11476+37]..[274,11476+44])
                          Pexp_apply
                          expression (strip.ml[274,11476+37]..[274,11476+40])
                            Pexp_ident "pat" (strip.ml[274,11476+37]..[274,11476+40])
                          [
                            <label> ""
                              expression (strip.ml[274,11476+41]..[274,11476+44])
                                Pexp_ident "_a2" (strip.ml[274,11476+41]..[274,11476+44])
                          ]
                    ]
                    expression (strip.ml[274,11476+48]..[274,11476+63])
                      Pexp_variant "Bar"
                      Some
                        expression (strip.ml[274,11476+53]..[274,11476+63])
                          Pexp_tuple
                          [
                            expression (strip.ml[274,11476+54]..[274,11476+57])
                              Pexp_ident "_a1" (strip.ml[274,11476+54]..[274,11476+57])
                            expression (strip.ml[274,11476+59]..[274,11476+62])
                              Pexp_ident "_a2" (strip.ml[274,11476+59]..[274,11476+62])
                          ]
              <case>
                pattern (strip.ml[275,11540+4]..[275,11540+24])
                  Ppat_variant "PaRng"
                  Some
                    pattern (strip.ml[275,11540+11]..[275,11540+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[275,11540+12]..[275,11540+15])
                          Ppat_var "_a0" (strip.ml[275,11540+12]..[275,11540+15])
                        pattern (strip.ml[275,11540+16]..[275,11540+19])
                          Ppat_var "_a1" (strip.ml[275,11540+16]..[275,11540+19])
                        pattern (strip.ml[275,11540+20]..[275,11540+23])
                          Ppat_var "_a2" (strip.ml[275,11540+20]..[275,11540+23])
                      ]
                expression (strip.ml[276,11568+6]..[276,11568+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[276,11568+10]..[276,11568+13])
                        Ppat_var "_a1" (strip.ml[276,11568+10]..[276,11568+13])
                      expression (strip.ml[276,11568+16]..[276,11568+23])
                        Pexp_apply
                        expression (strip.ml[276,11568+16]..[276,11568+19])
                          Pexp_ident "pat" (strip.ml[276,11568+16]..[276,11568+19])
                        [
                          <label> ""
                            expression (strip.ml[276,11568+20]..[276,11568+23])
                              Pexp_ident "_a1" (strip.ml[276,11568+20]..[276,11568+23])
                        ]
                  ]
                  expression (strip.ml[276,11568+27]..[276,11568+65])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[276,11568+31]..[276,11568+34])
                          Ppat_var "_a2" (strip.ml[276,11568+31]..[276,11568+34])
                        expression (strip.ml[276,11568+37]..[276,11568+44])
                          Pexp_apply
                          expression (strip.ml[276,11568+37]..[276,11568+40])
                            Pexp_ident "pat" (strip.ml[276,11568+37]..[276,11568+40])
                          [
                            <label> ""
                              expression (strip.ml[276,11568+41]..[276,11568+44])
                                Pexp_ident "_a2" (strip.ml[276,11568+41]..[276,11568+44])
                          ]
                    ]
                    expression (strip.ml[276,11568+48]..[276,11568+65])
                      Pexp_variant "PaRng"
                      Some
                        expression (strip.ml[276,11568+55]..[276,11568+65])
                          Pexp_tuple
                          [
                            expression (strip.ml[276,11568+56]..[276,11568+59])
                              Pexp_ident "_a1" (strip.ml[276,11568+56]..[276,11568+59])
                            expression (strip.ml[276,11568+61]..[276,11568+64])
                              Pexp_ident "_a2" (strip.ml[276,11568+61]..[276,11568+64])
                          ]
              <case>
                pattern (strip.ml[277,11634+4]..[277,11634+29])
                  Ppat_variant "Constraint"
                  Some
                    pattern (strip.ml[277,11634+16]..[277,11634+29])
                      Ppat_tuple
                      [
                        pattern (strip.ml[277,11634+17]..[277,11634+20])
                          Ppat_var "_a0" (strip.ml[277,11634+17]..[277,11634+20])
                        pattern (strip.ml[277,11634+21]..[277,11634+24])
                          Ppat_var "_a1" (strip.ml[277,11634+21]..[277,11634+24])
                        pattern (strip.ml[277,11634+25]..[277,11634+28])
                          Ppat_var "_a2" (strip.ml[277,11634+25]..[277,11634+28])
                      ]
                expression (strip.ml[278,11667+6]..[278,11667+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[278,11667+10]..[278,11667+13])
                        Ppat_var "_a1" (strip.ml[278,11667+10]..[278,11667+13])
                      expression (strip.ml[278,11667+16]..[278,11667+23])
                        Pexp_apply
                        expression (strip.ml[278,11667+16]..[278,11667+19])
                          Pexp_ident "pat" (strip.ml[278,11667+16]..[278,11667+19])
                        [
                          <label> ""
                            expression (strip.ml[278,11667+20]..[278,11667+23])
                              Pexp_ident "_a1" (strip.ml[278,11667+20]..[278,11667+23])
                        ]
                  ]
                  expression (strip.ml[278,11667+27]..[278,11667+71])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[278,11667+31]..[278,11667+34])
                          Ppat_var "_a2" (strip.ml[278,11667+31]..[278,11667+34])
                        expression (strip.ml[278,11667+37]..[278,11667+45])
                          Pexp_apply
                          expression (strip.ml[278,11667+37]..[278,11667+41])
                            Pexp_ident "ctyp" (strip.ml[278,11667+37]..[278,11667+41])
                          [
                            <label> ""
                              expression (strip.ml[278,11667+42]..[278,11667+45])
                                Pexp_ident "_a2" (strip.ml[278,11667+42]..[278,11667+45])
                          ]
                    ]
                    expression (strip.ml[278,11667+49]..[278,11667+71])
                      Pexp_variant "Constraint"
                      Some
                        expression (strip.ml[278,11667+61]..[278,11667+71])
                          Pexp_tuple
                          [
                            expression (strip.ml[278,11667+62]..[278,11667+65])
                              Pexp_ident "_a1" (strip.ml[278,11667+62]..[278,11667+65])
                            expression (strip.ml[278,11667+67]..[278,11667+70])
                              Pexp_ident "_a2" (strip.ml[278,11667+67]..[278,11667+70])
                          ]
              <case>
                pattern (strip.ml[279,11739+4]..[279,11739+24])
                  Ppat_variant "ClassPath"
                  Some
                    pattern (strip.ml[279,11739+15]..[279,11739+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[279,11739+16]..[279,11739+19])
                          Ppat_var "_a0" (strip.ml[279,11739+16]..[279,11739+19])
                        pattern (strip.ml[279,11739+20]..[279,11739+23])
                          Ppat_var "_a1" (strip.ml[279,11739+20]..[279,11739+23])
                      ]
                expression (strip.ml[279,11739+28]..[279,11739+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[279,11739+32]..[279,11739+35])
                        Ppat_var "_a1" (strip.ml[279,11739+32]..[279,11739+35])
                      expression (strip.ml[279,11739+38]..[279,11739+47])
                        Pexp_apply
                        expression (strip.ml[279,11739+38]..[279,11739+43])
                          Pexp_ident "ident" (strip.ml[279,11739+38]..[279,11739+43])
                        [
                          <label> ""
                            expression (strip.ml[279,11739+44]..[279,11739+47])
                              Pexp_ident "_a1" (strip.ml[279,11739+44]..[279,11739+47])
                        ]
                  ]
                  expression (strip.ml[279,11739+51]..[279,11739+65])
                    Pexp_variant "ClassPath"
                    Some
                      expression (strip.ml[279,11739+62]..[279,11739+65])
                        Pexp_ident "_a1" (strip.ml[279,11739+62]..[279,11739+65])
              <case>
                pattern (strip.ml[280,11805+4]..[280,11805+19])
                  Ppat_variant "Lazy"
                  Some
                    pattern (strip.ml[280,11805+10]..[280,11805+19])
                      Ppat_tuple
                      [
                        pattern (strip.ml[280,11805+11]..[280,11805+14])
                          Ppat_var "_a0" (strip.ml[280,11805+11]..[280,11805+14])
                        pattern (strip.ml[280,11805+15]..[280,11805+18])
                          Ppat_var "_a1" (strip.ml[280,11805+15]..[280,11805+18])
                      ]
                expression (strip.ml[280,11805+23]..[280,11805+53])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[280,11805+27]..[280,11805+30])
                        Ppat_var "_a1" (strip.ml[280,11805+27]..[280,11805+30])
                      expression (strip.ml[280,11805+33]..[280,11805+40])
                        Pexp_apply
                        expression (strip.ml[280,11805+33]..[280,11805+36])
                          Pexp_ident "pat" (strip.ml[280,11805+33]..[280,11805+36])
                        [
                          <label> ""
                            expression (strip.ml[280,11805+37]..[280,11805+40])
                              Pexp_ident "_a1" (strip.ml[280,11805+37]..[280,11805+40])
                        ]
                  ]
                  expression (strip.ml[280,11805+44]..[280,11805+53])
                    Pexp_variant "Lazy"
                    Some
                      expression (strip.ml[280,11805+50]..[280,11805+53])
                        Pexp_ident "_a1" (strip.ml[280,11805+50]..[280,11805+53])
              <case>
                pattern (strip.ml[281,11859+4]..[281,11859+27])
                  Ppat_variant "ModuleUnpack"
                  Some
                    pattern (strip.ml[281,11859+18]..[281,11859+27])
                      Ppat_tuple
                      [
                        pattern (strip.ml[281,11859+19]..[281,11859+22])
                          Ppat_var "_a0" (strip.ml[281,11859+19]..[281,11859+22])
                        pattern (strip.ml[281,11859+23]..[281,11859+26])
                          Ppat_var "_a1" (strip.ml[281,11859+23]..[281,11859+26])
                      ]
                expression (strip.ml[281,11859+31]..[281,11859+73])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[281,11859+35]..[281,11859+38])
                        Ppat_var "_a1" (strip.ml[281,11859+35]..[281,11859+38])
                      expression (strip.ml[281,11859+41]..[281,11859+52])
                        Pexp_apply
                        expression (strip.ml[281,11859+41]..[281,11859+48])
                          Pexp_ident "auident" (strip.ml[281,11859+41]..[281,11859+48])
                        [
                          <label> ""
                            expression (strip.ml[281,11859+49]..[281,11859+52])
                              Pexp_ident "_a1" (strip.ml[281,11859+49]..[281,11859+52])
                        ]
                  ]
                  expression (strip.ml[281,11859+56]..[281,11859+73])
                    Pexp_variant "ModuleUnpack"
                    Some
                      expression (strip.ml[281,11859+70]..[281,11859+73])
                        Pexp_ident "_a1" (strip.ml[281,11859+70]..[281,11859+73])
              <case>
                pattern (strip.ml[282,11933+4]..[282,11933+35])
                  Ppat_variant "ModuleConstraint"
                  Some
                    pattern (strip.ml[282,11933+22]..[282,11933+35])
                      Ppat_tuple
                      [
                        pattern (strip.ml[282,11933+23]..[282,11933+26])
                          Ppat_var "_a0" (strip.ml[282,11933+23]..[282,11933+26])
                        pattern (strip.ml[282,11933+27]..[282,11933+30])
                          Ppat_var "_a1" (strip.ml[282,11933+27]..[282,11933+30])
                        pattern (strip.ml[282,11933+31]..[282,11933+34])
                          Ppat_var "_a2" (strip.ml[282,11933+31]..[282,11933+34])
                      ]
                expression (strip.ml[283,11972+6]..[284,12003+56])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[283,11972+10]..[283,11972+13])
                        Ppat_var "_a1" (strip.ml[283,11972+10]..[283,11972+13])
                      expression (strip.ml[283,11972+16]..[283,11972+27])
                        Pexp_apply
                        expression (strip.ml[283,11972+16]..[283,11972+23])
                          Pexp_ident "auident" (strip.ml[283,11972+16]..[283,11972+23])
                        [
                          <label> ""
                            expression (strip.ml[283,11972+24]..[283,11972+27])
                              Pexp_ident "_a1" (strip.ml[283,11972+24]..[283,11972+27])
                        ]
                  ]
                  expression (strip.ml[284,12003+6]..[284,12003+56])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[284,12003+10]..[284,12003+13])
                          Ppat_var "_a2" (strip.ml[284,12003+10]..[284,12003+13])
                        expression (strip.ml[284,12003+16]..[284,12003+24])
                          Pexp_apply
                          expression (strip.ml[284,12003+16]..[284,12003+20])
                            Pexp_ident "ctyp" (strip.ml[284,12003+16]..[284,12003+20])
                          [
                            <label> ""
                              expression (strip.ml[284,12003+21]..[284,12003+24])
                                Pexp_ident "_a2" (strip.ml[284,12003+21]..[284,12003+24])
                          ]
                    ]
                    expression (strip.ml[284,12003+28]..[284,12003+56])
                      Pexp_variant "ModuleConstraint"
                      Some
                        expression (strip.ml[284,12003+46]..[284,12003+56])
                          Pexp_tuple
                          [
                            expression (strip.ml[284,12003+47]..[284,12003+50])
                              Pexp_ident "_a1" (strip.ml[284,12003+47]..[284,12003+50])
                            expression (strip.ml[284,12003+52]..[284,12003+55])
                              Pexp_ident "_a2" (strip.ml[284,12003+52]..[284,12003+55])
                          ]
            ]
          core_type (strip.ml[246,10194+9]..[246,10194+30])
            Ptyp_arrow
            ""
            core_type (strip.ml[246,10194+9]..[246,10194+17])
              Ptyp_constr "Astf.pat" (strip.ml[246,10194+9]..[246,10194+17])
              []
            core_type (strip.ml[246,10194+21]..[246,10194+30])
              Ptyp_constr "Astfn.pat" (strip.ml[246,10194+21]..[246,10194+30])
              []
      <def>
        pattern (strip.ml[285,12060+4]..[285,12060+11])
          Ppat_var "rec_pat" (strip.ml[285,12060+4]..[285,12060+11])
        expression (strip.ml[285,12060+11]..[292,12358+45]) ghost
          Pexp_constraint
          expression (strip.ml[286,12105+2]..[292,12358+45])
            Pexp_function
            [
              <case>
                pattern (strip.ml[287,12116+4]..[287,12116+26])
                  Ppat_variant "RecBind"
                  Some
                    pattern (strip.ml[287,12116+13]..[287,12116+26])
                      Ppat_tuple
                      [
                        pattern (strip.ml[287,12116+14]..[287,12116+17])
                          Ppat_var "_a0" (strip.ml[287,12116+14]..[287,12116+17])
                        pattern (strip.ml[287,12116+18]..[287,12116+21])
                          Ppat_var "_a1" (strip.ml[287,12116+18]..[287,12116+21])
                        pattern (strip.ml[287,12116+22]..[287,12116+25])
                          Ppat_var "_a2" (strip.ml[287,12116+22]..[287,12116+25])
                      ]
                expression (strip.ml[288,12146+6]..[288,12146+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[288,12146+10]..[288,12146+13])
                        Ppat_var "_a1" (strip.ml[288,12146+10]..[288,12146+13])
                      expression (strip.ml[288,12146+16]..[288,12146+23])
                        Pexp_apply
                        expression (strip.ml[288,12146+16]..[288,12146+19])
                          Pexp_ident "vid" (strip.ml[288,12146+16]..[288,12146+19])
                        [
                          <label> ""
                            expression (strip.ml[288,12146+20]..[288,12146+23])
                              Pexp_ident "_a1" (strip.ml[288,12146+20]..[288,12146+23])
                        ]
                  ]
                  expression (strip.ml[288,12146+27]..[288,12146+67])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[288,12146+31]..[288,12146+34])
                          Ppat_var "_a2" (strip.ml[288,12146+31]..[288,12146+34])
                        expression (strip.ml[288,12146+37]..[288,12146+44])
                          Pexp_apply
                          expression (strip.ml[288,12146+37]..[288,12146+40])
                            Pexp_ident "pat" (strip.ml[288,12146+37]..[288,12146+40])
                          [
                            <label> ""
                              expression (strip.ml[288,12146+41]..[288,12146+44])
                                Pexp_ident "_a2" (strip.ml[288,12146+41]..[288,12146+44])
                          ]
                    ]
                    expression (strip.ml[288,12146+48]..[288,12146+67])
                      Pexp_variant "RecBind"
                      Some
                        expression (strip.ml[288,12146+57]..[288,12146+67])
                          Pexp_tuple
                          [
                            expression (strip.ml[288,12146+58]..[288,12146+61])
                              Pexp_ident "_a1" (strip.ml[288,12146+58]..[288,12146+61])
                            expression (strip.ml[288,12146+63]..[288,12146+66])
                              Pexp_ident "_a2" (strip.ml[288,12146+63]..[288,12146+66])
                          ]
              <case>
                pattern (strip.ml[289,12214+4]..[289,12214+22])
                  Ppat_variant "Sem"
                  Some
                    pattern (strip.ml[289,12214+9]..[289,12214+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[289,12214+10]..[289,12214+13])
                          Ppat_var "_a0" (strip.ml[289,12214+10]..[289,12214+13])
                        pattern (strip.ml[289,12214+14]..[289,12214+17])
                          Ppat_var "_a1" (strip.ml[289,12214+14]..[289,12214+17])
                        pattern (strip.ml[289,12214+18]..[289,12214+21])
                          Ppat_var "_a2" (strip.ml[289,12214+18]..[289,12214+21])
                      ]
                expression (strip.ml[290,12240+6]..[290,12240+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[290,12240+10]..[290,12240+13])
                        Ppat_var "_a1" (strip.ml[290,12240+10]..[290,12240+13])
                      expression (strip.ml[290,12240+16]..[290,12240+27])
                        Pexp_apply
                        expression (strip.ml[290,12240+16]..[290,12240+23])
                          Pexp_ident "rec_pat" (strip.ml[290,12240+16]..[290,12240+23])
                        [
                          <label> ""
                            expression (strip.ml[290,12240+24]..[290,12240+27])
                              Pexp_ident "_a1" (strip.ml[290,12240+24]..[290,12240+27])
                        ]
                  ]
                  expression (strip.ml[290,12240+31]..[290,12240+71])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[290,12240+35]..[290,12240+38])
                          Ppat_var "_a2" (strip.ml[290,12240+35]..[290,12240+38])
                        expression (strip.ml[290,12240+41]..[290,12240+52])
                          Pexp_apply
                          expression (strip.ml[290,12240+41]..[290,12240+48])
                            Pexp_ident "rec_pat" (strip.ml[290,12240+41]..[290,12240+48])
                          [
                            <label> ""
                              expression (strip.ml[290,12240+49]..[290,12240+52])
                                Pexp_ident "_a2" (strip.ml[290,12240+49]..[290,12240+52])
                          ]
                    ]
                    expression (strip.ml[290,12240+56]..[290,12240+71])
                      Pexp_variant "Sem"
                      Some
                        expression (strip.ml[290,12240+61]..[290,12240+71])
                          Pexp_tuple
                          [
                            expression (strip.ml[290,12240+62]..[290,12240+65])
                              Pexp_ident "_a1" (strip.ml[290,12240+62]..[290,12240+65])
                            expression (strip.ml[290,12240+67]..[290,12240+70])
                              Pexp_ident "_a2" (strip.ml[290,12240+67]..[290,12240+70])
                          ]
              <case>
                pattern (strip.ml[291,12312+4]..[291,12312+15])
                  Ppat_alias "_a0" (strip.ml[291,12312+12]..[291,12312+15])
                  pattern (strip.ml[291,12312+4]..[291,12312+8])
                    Ppat_type
                    "any" (strip.ml[291,12312+5]..[291,12312+8])
                expression (strip.ml[291,12312+19]..[291,12312+45]) ghost
                  Pexp_coerce
                  expression (strip.ml[291,12312+20]..[291,12312+27])
                    Pexp_apply
                    expression (strip.ml[291,12312+20]..[291,12312+23])
                      Pexp_ident "any" (strip.ml[291,12312+20]..[291,12312+23])
                    [
                      <label> ""
                        expression (strip.ml[291,12312+24]..[291,12312+27])
                          Pexp_ident "_a0" (strip.ml[291,12312+24]..[291,12312+27])
                    ]
                  None
                  core_type (strip.ml[291,12312+31]..[291,12312+44])
                    Ptyp_constr "Astfn.rec_pat" (strip.ml[291,12312+31]..[291,12312+44])
                    []
              <case>
                pattern (strip.ml[292,12358+4]..[292,12358+15])
                  Ppat_alias "_a0" (strip.ml[292,12358+12]..[292,12358+15])
                  pattern (strip.ml[292,12358+4]..[292,12358+8])
                    Ppat_type
                    "ant" (strip.ml[292,12358+5]..[292,12358+8])
                expression (strip.ml[292,12358+19]..[292,12358+45]) ghost
                  Pexp_coerce
                  expression (strip.ml[292,12358+20]..[292,12358+27])
                    Pexp_apply
                    expression (strip.ml[292,12358+20]..[292,12358+23])
                      Pexp_ident "ant" (strip.ml[292,12358+20]..[292,12358+23])
                    [
                      <label> ""
                        expression (strip.ml[292,12358+24]..[292,12358+27])
                          Pexp_ident "_a0" (strip.ml[292,12358+24]..[292,12358+27])
                    ]
                  None
                  core_type (strip.ml[292,12358+31]..[292,12358+44])
                    Ptyp_constr "Astfn.rec_pat" (strip.ml[292,12358+31]..[292,12358+44])
                    []
            ]
          core_type (strip.ml[285,12060+13]..[285,12060+42])
            Ptyp_arrow
            ""
            core_type (strip.ml[285,12060+13]..[285,12060+25])
              Ptyp_constr "Astf.rec_pat" (strip.ml[285,12060+13]..[285,12060+25])
              []
            core_type (strip.ml[285,12060+29]..[285,12060+42])
              Ptyp_constr "Astfn.rec_pat" (strip.ml[285,12060+29]..[285,12060+42])
              []
      <def>
        pattern (strip.ml[293,12404+4]..[293,12404+7])
          Ppat_var "exp" (strip.ml[293,12404+4]..[293,12404+7])
        expression (strip.ml[293,12404+7]..[379,16413+68]) ghost
          Pexp_constraint
          expression (strip.ml[294,12437+2]..[379,16413+68])
            Pexp_function
            [
              <case>
                pattern (strip.ml[295,12448+4]..[295,12448+15])
                  Ppat_alias "_a0" (strip.ml[295,12448+12]..[295,12448+15])
                  pattern (strip.ml[295,12448+4]..[295,12448+8])
                    Ppat_type
                    "vid" (strip.ml[295,12448+5]..[295,12448+8])
                expression (strip.ml[295,12448+19]..[295,12448+41]) ghost
                  Pexp_coerce
                  expression (strip.ml[295,12448+20]..[295,12448+27])
                    Pexp_apply
                    expression (strip.ml[295,12448+20]..[295,12448+23])
                      Pexp_ident "vid" (strip.ml[295,12448+20]..[295,12448+23])
                    [
                      <label> ""
                        expression (strip.ml[295,12448+24]..[295,12448+27])
                          Pexp_ident "_a0" (strip.ml[295,12448+24]..[295,12448+27])
                    ]
                  None
                  core_type (strip.ml[295,12448+31]..[295,12448+40])
                    Ptyp_constr "Astfn.exp" (strip.ml[295,12448+31]..[295,12448+40])
                    []
              <case>
                pattern (strip.ml[296,12490+4]..[296,12490+22])
                  Ppat_variant "App"
                  Some
                    pattern (strip.ml[296,12490+9]..[296,12490+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[296,12490+10]..[296,12490+13])
                          Ppat_var "_a0" (strip.ml[296,12490+10]..[296,12490+13])
                        pattern (strip.ml[296,12490+14]..[296,12490+17])
                          Ppat_var "_a1" (strip.ml[296,12490+14]..[296,12490+17])
                        pattern (strip.ml[296,12490+18]..[296,12490+21])
                          Ppat_var "_a2" (strip.ml[296,12490+18]..[296,12490+21])
                      ]
                expression (strip.ml[297,12516+6]..[297,12516+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[297,12516+10]..[297,12516+13])
                        Ppat_var "_a1" (strip.ml[297,12516+10]..[297,12516+13])
                      expression (strip.ml[297,12516+16]..[297,12516+23])
                        Pexp_apply
                        expression (strip.ml[297,12516+16]..[297,12516+19])
                          Pexp_ident "exp" (strip.ml[297,12516+16]..[297,12516+19])
                        [
                          <label> ""
                            expression (strip.ml[297,12516+20]..[297,12516+23])
                              Pexp_ident "_a1" (strip.ml[297,12516+20]..[297,12516+23])
                        ]
                  ]
                  expression (strip.ml[297,12516+27]..[297,12516+63])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[297,12516+31]..[297,12516+34])
                          Ppat_var "_a2" (strip.ml[297,12516+31]..[297,12516+34])
                        expression (strip.ml[297,12516+37]..[297,12516+44])
                          Pexp_apply
                          expression (strip.ml[297,12516+37]..[297,12516+40])
                            Pexp_ident "exp" (strip.ml[297,12516+37]..[297,12516+40])
                          [
                            <label> ""
                              expression (strip.ml[297,12516+41]..[297,12516+44])
                                Pexp_ident "_a2" (strip.ml[297,12516+41]..[297,12516+44])
                          ]
                    ]
                    expression (strip.ml[297,12516+48]..[297,12516+63])
                      Pexp_variant "App"
                      Some
                        expression (strip.ml[297,12516+53]..[297,12516+63])
                          Pexp_tuple
                          [
                            expression (strip.ml[297,12516+54]..[297,12516+57])
                              Pexp_ident "_a1" (strip.ml[297,12516+54]..[297,12516+57])
                            expression (strip.ml[297,12516+59]..[297,12516+62])
                              Pexp_ident "_a2" (strip.ml[297,12516+59]..[297,12516+62])
                          ]
              <case>
                pattern (strip.ml[298,12580+4]..[298,12580+18])
                  Ppat_variant "Vrn"
                  Some
                    pattern (strip.ml[298,12580+9]..[298,12580+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[298,12580+10]..[298,12580+13])
                          Ppat_var "_a0" (strip.ml[298,12580+10]..[298,12580+13])
                        pattern (strip.ml[298,12580+14]..[298,12580+17])
                          Ppat_var "_a1" (strip.ml[298,12580+14]..[298,12580+17])
                      ]
                expression (strip.ml[298,12580+22]..[298,12580+30])
                  Pexp_variant "Vrn"
                  Some
                    expression (strip.ml[298,12580+27]..[298,12580+30])
                      Pexp_ident "_a1" (strip.ml[298,12580+27]..[298,12580+30])
              <case>
                pattern (strip.ml[299,12611+4]..[299,12611+22])
                  Ppat_variant "Com"
                  Some
                    pattern (strip.ml[299,12611+9]..[299,12611+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[299,12611+10]..[299,12611+13])
                          Ppat_var "_a0" (strip.ml[299,12611+10]..[299,12611+13])
                        pattern (strip.ml[299,12611+14]..[299,12611+17])
                          Ppat_var "_a1" (strip.ml[299,12611+14]..[299,12611+17])
                        pattern (strip.ml[299,12611+18]..[299,12611+21])
                          Ppat_var "_a2" (strip.ml[299,12611+18]..[299,12611+21])
                      ]
                expression (strip.ml[300,12637+6]..[300,12637+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[300,12637+10]..[300,12637+13])
                        Ppat_var "_a1" (strip.ml[300,12637+10]..[300,12637+13])
                      expression (strip.ml[300,12637+16]..[300,12637+23])
                        Pexp_apply
                        expression (strip.ml[300,12637+16]..[300,12637+19])
                          Pexp_ident "exp" (strip.ml[300,12637+16]..[300,12637+19])
                        [
                          <label> ""
                            expression (strip.ml[300,12637+20]..[300,12637+23])
                              Pexp_ident "_a1" (strip.ml[300,12637+20]..[300,12637+23])
                        ]
                  ]
                  expression (strip.ml[300,12637+27]..[300,12637+63])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[300,12637+31]..[300,12637+34])
                          Ppat_var "_a2" (strip.ml[300,12637+31]..[300,12637+34])
                        expression (strip.ml[300,12637+37]..[300,12637+44])
                          Pexp_apply
                          expression (strip.ml[300,12637+37]..[300,12637+40])
                            Pexp_ident "exp" (strip.ml[300,12637+37]..[300,12637+40])
                          [
                            <label> ""
                              expression (strip.ml[300,12637+41]..[300,12637+44])
                                Pexp_ident "_a2" (strip.ml[300,12637+41]..[300,12637+44])
                          ]
                    ]
                    expression (strip.ml[300,12637+48]..[300,12637+63])
                      Pexp_variant "Com"
                      Some
                        expression (strip.ml[300,12637+53]..[300,12637+63])
                          Pexp_tuple
                          [
                            expression (strip.ml[300,12637+54]..[300,12637+57])
                              Pexp_ident "_a1" (strip.ml[300,12637+54]..[300,12637+57])
                            expression (strip.ml[300,12637+59]..[300,12637+62])
                              Pexp_ident "_a2" (strip.ml[300,12637+59]..[300,12637+62])
                          ]
              <case>
                pattern (strip.ml[301,12701+4]..[301,12701+22])
                  Ppat_variant "Sem"
                  Some
                    pattern (strip.ml[301,12701+9]..[301,12701+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[301,12701+10]..[301,12701+13])
                          Ppat_var "_a0" (strip.ml[301,12701+10]..[301,12701+13])
                        pattern (strip.ml[301,12701+14]..[301,12701+17])
                          Ppat_var "_a1" (strip.ml[301,12701+14]..[301,12701+17])
                        pattern (strip.ml[301,12701+18]..[301,12701+21])
                          Ppat_var "_a2" (strip.ml[301,12701+18]..[301,12701+21])
                      ]
                expression (strip.ml[302,12727+6]..[302,12727+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[302,12727+10]..[302,12727+13])
                        Ppat_var "_a1" (strip.ml[302,12727+10]..[302,12727+13])
                      expression (strip.ml[302,12727+16]..[302,12727+23])
                        Pexp_apply
                        expression (strip.ml[302,12727+16]..[302,12727+19])
                          Pexp_ident "exp" (strip.ml[302,12727+16]..[302,12727+19])
                        [
                          <label> ""
                            expression (strip.ml[302,12727+20]..[302,12727+23])
                              Pexp_ident "_a1" (strip.ml[302,12727+20]..[302,12727+23])
                        ]
                  ]
                  expression (strip.ml[302,12727+27]..[302,12727+63])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[302,12727+31]..[302,12727+34])
                          Ppat_var "_a2" (strip.ml[302,12727+31]..[302,12727+34])
                        expression (strip.ml[302,12727+37]..[302,12727+44])
                          Pexp_apply
                          expression (strip.ml[302,12727+37]..[302,12727+40])
                            Pexp_ident "exp" (strip.ml[302,12727+37]..[302,12727+40])
                          [
                            <label> ""
                              expression (strip.ml[302,12727+41]..[302,12727+44])
                                Pexp_ident "_a2" (strip.ml[302,12727+41]..[302,12727+44])
                          ]
                    ]
                    expression (strip.ml[302,12727+48]..[302,12727+63])
                      Pexp_variant "Sem"
                      Some
                        expression (strip.ml[302,12727+53]..[302,12727+63])
                          Pexp_tuple
                          [
                            expression (strip.ml[302,12727+54]..[302,12727+57])
                              Pexp_ident "_a1" (strip.ml[302,12727+54]..[302,12727+57])
                            expression (strip.ml[302,12727+59]..[302,12727+62])
                              Pexp_ident "_a2" (strip.ml[302,12727+59]..[302,12727+62])
                          ]
              <case>
                pattern (strip.ml[303,12791+4]..[303,12791+18])
                  Ppat_variant "Par"
                  Some
                    pattern (strip.ml[303,12791+9]..[303,12791+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[303,12791+10]..[303,12791+13])
                          Ppat_var "_a0" (strip.ml[303,12791+10]..[303,12791+13])
                        pattern (strip.ml[303,12791+14]..[303,12791+17])
                          Ppat_var "_a1" (strip.ml[303,12791+14]..[303,12791+17])
                      ]
                expression (strip.ml[303,12791+22]..[303,12791+51])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[303,12791+26]..[303,12791+29])
                        Ppat_var "_a1" (strip.ml[303,12791+26]..[303,12791+29])
                      expression (strip.ml[303,12791+32]..[303,12791+39])
                        Pexp_apply
                        expression (strip.ml[303,12791+32]..[303,12791+35])
                          Pexp_ident "exp" (strip.ml[303,12791+32]..[303,12791+35])
                        [
                          <label> ""
                            expression (strip.ml[303,12791+36]..[303,12791+39])
                              Pexp_ident "_a1" (strip.ml[303,12791+36]..[303,12791+39])
                        ]
                  ]
                  expression (strip.ml[303,12791+43]..[303,12791+51])
                    Pexp_variant "Par"
                    Some
                      expression (strip.ml[303,12791+48]..[303,12791+51])
                        Pexp_ident "_a1" (strip.ml[303,12791+48]..[303,12791+51])
              <case>
                pattern (strip.ml[304,12843+4]..[304,12843+15])
                  Ppat_alias "_a0" (strip.ml[304,12843+12]..[304,12843+15])
                  pattern (strip.ml[304,12843+4]..[304,12843+8])
                    Ppat_type
                    "any" (strip.ml[304,12843+5]..[304,12843+8])
                expression (strip.ml[304,12843+19]..[304,12843+41]) ghost
                  Pexp_coerce
                  expression (strip.ml[304,12843+20]..[304,12843+27])
                    Pexp_apply
                    expression (strip.ml[304,12843+20]..[304,12843+23])
                      Pexp_ident "any" (strip.ml[304,12843+20]..[304,12843+23])
                    [
                      <label> ""
                        expression (strip.ml[304,12843+24]..[304,12843+27])
                          Pexp_ident "_a0" (strip.ml[304,12843+24]..[304,12843+27])
                    ]
                  None
                  core_type (strip.ml[304,12843+31]..[304,12843+40])
                    Ptyp_constr "Astfn.exp" (strip.ml[304,12843+31]..[304,12843+40])
                    []
              <case>
                pattern (strip.ml[305,12885+4]..[305,12885+21])
                  Ppat_variant "Record"
                  Some
                    pattern (strip.ml[305,12885+12]..[305,12885+21])
                      Ppat_tuple
                      [
                        pattern (strip.ml[305,12885+13]..[305,12885+16])
                          Ppat_var "_a0" (strip.ml[305,12885+13]..[305,12885+16])
                        pattern (strip.ml[305,12885+17]..[305,12885+20])
                          Ppat_var "_a1" (strip.ml[305,12885+17]..[305,12885+20])
                      ]
                expression (strip.ml[305,12885+25]..[305,12885+61])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[305,12885+29]..[305,12885+32])
                        Ppat_var "_a1" (strip.ml[305,12885+29]..[305,12885+32])
                      expression (strip.ml[305,12885+35]..[305,12885+46])
                        Pexp_apply
                        expression (strip.ml[305,12885+35]..[305,12885+42])
                          Pexp_ident "rec_exp" (strip.ml[305,12885+35]..[305,12885+42])
                        [
                          <label> ""
                            expression (strip.ml[305,12885+43]..[305,12885+46])
                              Pexp_ident "_a1" (strip.ml[305,12885+43]..[305,12885+46])
                        ]
                  ]
                  expression (strip.ml[305,12885+50]..[305,12885+61])
                    Pexp_variant "Record"
                    Some
                      expression (strip.ml[305,12885+58]..[305,12885+61])
                        Pexp_ident "_a1" (strip.ml[305,12885+58]..[305,12885+61])
              <case>
                pattern (strip.ml[306,12947+4]..[306,12947+19])
                  Ppat_alias "_a0" (strip.ml[306,12947+16]..[306,12947+19])
                  pattern (strip.ml[306,12947+4]..[306,12947+12])
                    Ppat_type
                    "literal" (strip.ml[306,12947+5]..[306,12947+12])
                expression (strip.ml[306,12947+23]..[306,12947+49]) ghost
                  Pexp_coerce
                  expression (strip.ml[306,12947+24]..[306,12947+35])
                    Pexp_apply
                    expression (strip.ml[306,12947+24]..[306,12947+31])
                      Pexp_ident "literal" (strip.ml[306,12947+24]..[306,12947+31])
                    [
                      <label> ""
                        expression (strip.ml[306,12947+32]..[306,12947+35])
                          Pexp_ident "_a0" (strip.ml[306,12947+32]..[306,12947+35])
                    ]
                  None
                  core_type (strip.ml[306,12947+39]..[306,12947+48])
                    Ptyp_constr "Astfn.exp" (strip.ml[306,12947+39]..[306,12947+48])
                    []
              <case>
                pattern (strip.ml[307,12997+4]..[307,12997+29])
                  Ppat_variant "RecordWith"
                  Some
                    pattern (strip.ml[307,12997+16]..[307,12997+29])
                      Ppat_tuple
                      [
                        pattern (strip.ml[307,12997+17]..[307,12997+20])
                          Ppat_var "_a0" (strip.ml[307,12997+17]..[307,12997+20])
                        pattern (strip.ml[307,12997+21]..[307,12997+24])
                          Ppat_var "_a1" (strip.ml[307,12997+21]..[307,12997+24])
                        pattern (strip.ml[307,12997+25]..[307,12997+28])
                          Ppat_var "_a2" (strip.ml[307,12997+25]..[307,12997+28])
                      ]
                expression (strip.ml[308,13030+6]..[308,13030+74])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[308,13030+10]..[308,13030+13])
                        Ppat_var "_a1" (strip.ml[308,13030+10]..[308,13030+13])
                      expression (strip.ml[308,13030+16]..[308,13030+27])
                        Pexp_apply
                        expression (strip.ml[308,13030+16]..[308,13030+23])
                          Pexp_ident "rec_exp" (strip.ml[308,13030+16]..[308,13030+23])
                        [
                          <label> ""
                            expression (strip.ml[308,13030+24]..[308,13030+27])
                              Pexp_ident "_a1" (strip.ml[308,13030+24]..[308,13030+27])
                        ]
                  ]
                  expression (strip.ml[308,13030+31]..[308,13030+74])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[308,13030+35]..[308,13030+38])
                          Ppat_var "_a2" (strip.ml[308,13030+35]..[308,13030+38])
                        expression (strip.ml[308,13030+41]..[308,13030+48])
                          Pexp_apply
                          expression (strip.ml[308,13030+41]..[308,13030+44])
                            Pexp_ident "exp" (strip.ml[308,13030+41]..[308,13030+44])
                          [
                            <label> ""
                              expression (strip.ml[308,13030+45]..[308,13030+48])
                                Pexp_ident "_a2" (strip.ml[308,13030+45]..[308,13030+48])
                          ]
                    ]
                    expression (strip.ml[308,13030+52]..[308,13030+74])
                      Pexp_variant "RecordWith"
                      Some
                        expression (strip.ml[308,13030+64]..[308,13030+74])
                          Pexp_tuple
                          [
                            expression (strip.ml[308,13030+65]..[308,13030+68])
                              Pexp_ident "_a1" (strip.ml[308,13030+65]..[308,13030+68])
                            expression (strip.ml[308,13030+70]..[308,13030+73])
                              Pexp_ident "_a2" (strip.ml[308,13030+70]..[308,13030+73])
                          ]
              <case>
                pattern (strip.ml[309,13105+4]..[309,13105+24])
                  Ppat_variant "Field"
                  Some
                    pattern (strip.ml[309,13105+11]..[309,13105+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[309,13105+12]..[309,13105+15])
                          Ppat_var "_a0" (strip.ml[309,13105+12]..[309,13105+15])
                        pattern (strip.ml[309,13105+16]..[309,13105+19])
                          Ppat_var "_a1" (strip.ml[309,13105+16]..[309,13105+19])
                        pattern (strip.ml[309,13105+20]..[309,13105+23])
                          Ppat_var "_a2" (strip.ml[309,13105+20]..[309,13105+23])
                      ]
                expression (strip.ml[310,13133+6]..[310,13133+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[310,13133+10]..[310,13133+13])
                        Ppat_var "_a1" (strip.ml[310,13133+10]..[310,13133+13])
                      expression (strip.ml[310,13133+16]..[310,13133+23])
                        Pexp_apply
                        expression (strip.ml[310,13133+16]..[310,13133+19])
                          Pexp_ident "exp" (strip.ml[310,13133+16]..[310,13133+19])
                        [
                          <label> ""
                            expression (strip.ml[310,13133+20]..[310,13133+23])
                              Pexp_ident "_a1" (strip.ml[310,13133+20]..[310,13133+23])
                        ]
                  ]
                  expression (strip.ml[310,13133+27]..[310,13133+65])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[310,13133+31]..[310,13133+34])
                          Ppat_var "_a2" (strip.ml[310,13133+31]..[310,13133+34])
                        expression (strip.ml[310,13133+37]..[310,13133+44])
                          Pexp_apply
                          expression (strip.ml[310,13133+37]..[310,13133+40])
                            Pexp_ident "vid" (strip.ml[310,13133+37]..[310,13133+40])
                          [
                            <label> ""
                              expression (strip.ml[310,13133+41]..[310,13133+44])
                                Pexp_ident "_a2" (strip.ml[310,13133+41]..[310,13133+44])
                          ]
                    ]
                    expression (strip.ml[310,13133+48]..[310,13133+65])
                      Pexp_variant "Field"
                      Some
                        expression (strip.ml[310,13133+55]..[310,13133+65])
                          Pexp_tuple
                          [
                            expression (strip.ml[310,13133+56]..[310,13133+59])
                              Pexp_ident "_a1" (strip.ml[310,13133+56]..[310,13133+59])
                            expression (strip.ml[310,13133+61]..[310,13133+64])
                              Pexp_ident "_a2" (strip.ml[310,13133+61]..[310,13133+64])
                          ]
              <case>
                pattern (strip.ml[311,13199+4]..[311,13199+27])
                  Ppat_variant "ArrayDot"
                  Some
                    pattern (strip.ml[311,13199+14]..[311,13199+27])
                      Ppat_tuple
                      [
                        pattern (strip.ml[311,13199+15]..[311,13199+18])
                          Ppat_var "_a0" (strip.ml[311,13199+15]..[311,13199+18])
                        pattern (strip.ml[311,13199+19]..[311,13199+22])
                          Ppat_var "_a1" (strip.ml[311,13199+19]..[311,13199+22])
                        pattern (strip.ml[311,13199+23]..[311,13199+26])
                          Ppat_var "_a2" (strip.ml[311,13199+23]..[311,13199+26])
                      ]
                expression (strip.ml[312,13230+6]..[312,13230+68])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[312,13230+10]..[312,13230+13])
                        Ppat_var "_a1" (strip.ml[312,13230+10]..[312,13230+13])
                      expression (strip.ml[312,13230+16]..[312,13230+23])
                        Pexp_apply
                        expression (strip.ml[312,13230+16]..[312,13230+19])
                          Pexp_ident "exp" (strip.ml[312,13230+16]..[312,13230+19])
                        [
                          <label> ""
                            expression (strip.ml[312,13230+20]..[312,13230+23])
                              Pexp_ident "_a1" (strip.ml[312,13230+20]..[312,13230+23])
                        ]
                  ]
                  expression (strip.ml[312,13230+27]..[312,13230+68])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[312,13230+31]..[312,13230+34])
                          Ppat_var "_a2" (strip.ml[312,13230+31]..[312,13230+34])
                        expression (strip.ml[312,13230+37]..[312,13230+44])
                          Pexp_apply
                          expression (strip.ml[312,13230+37]..[312,13230+40])
                            Pexp_ident "exp" (strip.ml[312,13230+37]..[312,13230+40])
                          [
                            <label> ""
                              expression (strip.ml[312,13230+41]..[312,13230+44])
                                Pexp_ident "_a2" (strip.ml[312,13230+41]..[312,13230+44])
                          ]
                    ]
                    expression (strip.ml[312,13230+48]..[312,13230+68])
                      Pexp_variant "ArrayDot"
                      Some
                        expression (strip.ml[312,13230+58]..[312,13230+68])
                          Pexp_tuple
                          [
                            expression (strip.ml[312,13230+59]..[312,13230+62])
                              Pexp_ident "_a1" (strip.ml[312,13230+59]..[312,13230+62])
                            expression (strip.ml[312,13230+64]..[312,13230+67])
                              Pexp_ident "_a2" (strip.ml[312,13230+64]..[312,13230+67])
                          ]
              <case>
                pattern (strip.ml[313,13299+4]..[313,13299+19])
                  Ppat_variant "ArrayEmpty"
                  Some
                    pattern (strip.ml[313,13299+16]..[313,13299+19])
                      Ppat_var "_a0" (strip.ml[313,13299+16]..[313,13299+19])
                expression (strip.ml[313,13299+23]..[313,13299+34])
                  Pexp_variant "ArrayEmpty"
                  None
              <case>
                pattern (strip.ml[314,13334+4]..[314,13334+20])
                  Ppat_variant "Array"
                  Some
                    pattern (strip.ml[314,13334+11]..[314,13334+20])
                      Ppat_tuple
                      [
                        pattern (strip.ml[314,13334+12]..[314,13334+15])
                          Ppat_var "_a0" (strip.ml[314,13334+12]..[314,13334+15])
                        pattern (strip.ml[314,13334+16]..[314,13334+19])
                          Ppat_var "_a1" (strip.ml[314,13334+16]..[314,13334+19])
                      ]
                expression (strip.ml[314,13334+24]..[314,13334+55])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[314,13334+28]..[314,13334+31])
                        Ppat_var "_a1" (strip.ml[314,13334+28]..[314,13334+31])
                      expression (strip.ml[314,13334+34]..[314,13334+41])
                        Pexp_apply
                        expression (strip.ml[314,13334+34]..[314,13334+37])
                          Pexp_ident "exp" (strip.ml[314,13334+34]..[314,13334+37])
                        [
                          <label> ""
                            expression (strip.ml[314,13334+38]..[314,13334+41])
                              Pexp_ident "_a1" (strip.ml[314,13334+38]..[314,13334+41])
                        ]
                  ]
                  expression (strip.ml[314,13334+45]..[314,13334+55])
                    Pexp_variant "Array"
                    Some
                      expression (strip.ml[314,13334+52]..[314,13334+55])
                        Pexp_ident "_a1" (strip.ml[314,13334+52]..[314,13334+55])
              <case>
                pattern (strip.ml[315,13390+4]..[315,13390+21])
                  Ppat_variant "Assert"
                  Some
                    pattern (strip.ml[315,13390+12]..[315,13390+21])
                      Ppat_tuple
                      [
                        pattern (strip.ml[315,13390+13]..[315,13390+16])
                          Ppat_var "_a0" (strip.ml[315,13390+13]..[315,13390+16])
                        pattern (strip.ml[315,13390+17]..[315,13390+20])
                          Ppat_var "_a1" (strip.ml[315,13390+17]..[315,13390+20])
                      ]
                expression (strip.ml[315,13390+25]..[315,13390+57])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[315,13390+29]..[315,13390+32])
                        Ppat_var "_a1" (strip.ml[315,13390+29]..[315,13390+32])
                      expression (strip.ml[315,13390+35]..[315,13390+42])
                        Pexp_apply
                        expression (strip.ml[315,13390+35]..[315,13390+38])
                          Pexp_ident "exp" (strip.ml[315,13390+35]..[315,13390+38])
                        [
                          <label> ""
                            expression (strip.ml[315,13390+39]..[315,13390+42])
                              Pexp_ident "_a1" (strip.ml[315,13390+39]..[315,13390+42])
                        ]
                  ]
                  expression (strip.ml[315,13390+46]..[315,13390+57])
                    Pexp_variant "Assert"
                    Some
                      expression (strip.ml[315,13390+54]..[315,13390+57])
                        Pexp_ident "_a1" (strip.ml[315,13390+54]..[315,13390+57])
              <case>
                pattern (strip.ml[316,13448+4]..[316,13448+25])
                  Ppat_variant "Assign"
                  Some
                    pattern (strip.ml[316,13448+12]..[316,13448+25])
                      Ppat_tuple
                      [
                        pattern (strip.ml[316,13448+13]..[316,13448+16])
                          Ppat_var "_a0" (strip.ml[316,13448+13]..[316,13448+16])
                        pattern (strip.ml[316,13448+17]..[316,13448+20])
                          Ppat_var "_a1" (strip.ml[316,13448+17]..[316,13448+20])
                        pattern (strip.ml[316,13448+21]..[316,13448+24])
                          Ppat_var "_a2" (strip.ml[316,13448+21]..[316,13448+24])
                      ]
                expression (strip.ml[317,13477+6]..[317,13477+66])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[317,13477+10]..[317,13477+13])
                        Ppat_var "_a1" (strip.ml[317,13477+10]..[317,13477+13])
                      expression (strip.ml[317,13477+16]..[317,13477+23])
                        Pexp_apply
                        expression (strip.ml[317,13477+16]..[317,13477+19])
                          Pexp_ident "exp" (strip.ml[317,13477+16]..[317,13477+19])
                        [
                          <label> ""
                            expression (strip.ml[317,13477+20]..[317,13477+23])
                              Pexp_ident "_a1" (strip.ml[317,13477+20]..[317,13477+23])
                        ]
                  ]
                  expression (strip.ml[317,13477+27]..[317,13477+66])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[317,13477+31]..[317,13477+34])
                          Ppat_var "_a2" (strip.ml[317,13477+31]..[317,13477+34])
                        expression (strip.ml[317,13477+37]..[317,13477+44])
                          Pexp_apply
                          expression (strip.ml[317,13477+37]..[317,13477+40])
                            Pexp_ident "exp" (strip.ml[317,13477+37]..[317,13477+40])
                          [
                            <label> ""
                              expression (strip.ml[317,13477+41]..[317,13477+44])
                                Pexp_ident "_a2" (strip.ml[317,13477+41]..[317,13477+44])
                          ]
                    ]
                    expression (strip.ml[317,13477+48]..[317,13477+66])
                      Pexp_variant "Assign"
                      Some
                        expression (strip.ml[317,13477+56]..[317,13477+66])
                          Pexp_tuple
                          [
                            expression (strip.ml[317,13477+57]..[317,13477+60])
                              Pexp_ident "_a1" (strip.ml[317,13477+57]..[317,13477+60])
                            expression (strip.ml[317,13477+62]..[317,13477+65])
                              Pexp_ident "_a2" (strip.ml[317,13477+62]..[317,13477+65])
                          ]
              <case>
                pattern (strip.ml[318,13544+4]..[318,13544+34])
                  Ppat_variant "For"
                  Some
                    pattern (strip.ml[318,13544+9]..[318,13544+34])
                      Ppat_tuple
                      [
                        pattern (strip.ml[318,13544+10]..[318,13544+13])
                          Ppat_var "_a0" (strip.ml[318,13544+10]..[318,13544+13])
                        pattern (strip.ml[318,13544+14]..[318,13544+17])
                          Ppat_var "_a1" (strip.ml[318,13544+14]..[318,13544+17])
                        pattern (strip.ml[318,13544+18]..[318,13544+21])
                          Ppat_var "_a2" (strip.ml[318,13544+18]..[318,13544+21])
                        pattern (strip.ml[318,13544+22]..[318,13544+25])
                          Ppat_var "_a3" (strip.ml[318,13544+22]..[318,13544+25])
                        pattern (strip.ml[318,13544+26]..[318,13544+29])
                          Ppat_var "_a4" (strip.ml[318,13544+26]..[318,13544+29])
                        pattern (strip.ml[318,13544+30]..[318,13544+33])
                          Ppat_var "_a5" (strip.ml[318,13544+30]..[318,13544+33])
                      ]
                expression (strip.ml[319,13582+6]..[323,13695+57])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[319,13582+10]..[319,13582+13])
                        Ppat_var "_a1" (strip.ml[319,13582+10]..[319,13582+13])
                      expression (strip.ml[319,13582+16]..[319,13582+27])
                        Pexp_apply
                        expression (strip.ml[319,13582+16]..[319,13582+23])
                          Pexp_ident "alident" (strip.ml[319,13582+16]..[319,13582+23])
                        [
                          <label> ""
                            expression (strip.ml[319,13582+24]..[319,13582+27])
                              Pexp_ident "_a1" (strip.ml[319,13582+24]..[319,13582+27])
                        ]
                  ]
                  expression (strip.ml[320,13613+6]..[323,13695+57])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[320,13613+10]..[320,13613+13])
                          Ppat_var "_a2" (strip.ml[320,13613+10]..[320,13613+13])
                        expression (strip.ml[320,13613+16]..[320,13613+23])
                          Pexp_apply
                          expression (strip.ml[320,13613+16]..[320,13613+19])
                            Pexp_ident "exp" (strip.ml[320,13613+16]..[320,13613+19])
                          [
                            <label> ""
                              expression (strip.ml[320,13613+20]..[320,13613+23])
                                Pexp_ident "_a2" (strip.ml[320,13613+20]..[320,13613+23])
                          ]
                    ]
                    expression (strip.ml[321,13640+6]..[323,13695+57])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[321,13640+10]..[321,13640+13])
                            Ppat_var "_a3" (strip.ml[321,13640+10]..[321,13640+13])
                          expression (strip.ml[321,13640+16]..[321,13640+23])
                            Pexp_apply
                            expression (strip.ml[321,13640+16]..[321,13640+19])
                              Pexp_ident "exp" (strip.ml[321,13640+16]..[321,13640+19])
                            [
                              <label> ""
                                expression (strip.ml[321,13640+20]..[321,13640+23])
                                  Pexp_ident "_a3" (strip.ml[321,13640+20]..[321,13640+23])
                            ]
                      ]
                      expression (strip.ml[322,13667+6]..[323,13695+57])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (strip.ml[322,13667+10]..[322,13667+13])
                              Ppat_var "_a4" (strip.ml[322,13667+10]..[322,13667+13])
                            expression (strip.ml[322,13667+16]..[322,13667+24])
                              Pexp_apply
                              expression (strip.ml[322,13667+16]..[322,13667+20])
                                Pexp_ident "flag" (strip.ml[322,13667+16]..[322,13667+20])
                              [
                                <label> ""
                                  expression (strip.ml[322,13667+21]..[322,13667+24])
                                    Pexp_ident "_a4" (strip.ml[322,13667+21]..[322,13667+24])
                              ]
                        ]
                        expression (strip.ml[323,13695+6]..[323,13695+57])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (strip.ml[323,13695+10]..[323,13695+13])
                                Ppat_var "_a5" (strip.ml[323,13695+10]..[323,13695+13])
                              expression (strip.ml[323,13695+16]..[323,13695+23])
                                Pexp_apply
                                expression (strip.ml[323,13695+16]..[323,13695+19])
                                  Pexp_ident "exp" (strip.ml[323,13695+16]..[323,13695+19])
                                [
                                  <label> ""
                                    expression (strip.ml[323,13695+20]..[323,13695+23])
                                      Pexp_ident "_a5" (strip.ml[323,13695+20]..[323,13695+23])
                                ]
                          ]
                          expression (strip.ml[323,13695+27]..[323,13695+57])
                            Pexp_variant "For"
                            Some
                              expression (strip.ml[323,13695+32]..[323,13695+57])
                                Pexp_tuple
                                [
                                  expression (strip.ml[323,13695+33]..[323,13695+36])
                                    Pexp_ident "_a1" (strip.ml[323,13695+33]..[323,13695+36])
                                  expression (strip.ml[323,13695+38]..[323,13695+41])
                                    Pexp_ident "_a2" (strip.ml[323,13695+38]..[323,13695+41])
                                  expression (strip.ml[323,13695+43]..[323,13695+46])
                                    Pexp_ident "_a3" (strip.ml[323,13695+43]..[323,13695+46])
                                  expression (strip.ml[323,13695+48]..[323,13695+51])
                                    Pexp_ident "_a4" (strip.ml[323,13695+48]..[323,13695+51])
                                  expression (strip.ml[323,13695+53]..[323,13695+56])
                                    Pexp_ident "_a5" (strip.ml[323,13695+53]..[323,13695+56])
                                ]
              <case>
                pattern (strip.ml[324,13753+4]..[324,13753+18])
                  Ppat_variant "Fun"
                  Some
                    pattern (strip.ml[324,13753+9]..[324,13753+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[324,13753+10]..[324,13753+13])
                          Ppat_var "_a0" (strip.ml[324,13753+10]..[324,13753+13])
                        pattern (strip.ml[324,13753+14]..[324,13753+17])
                          Ppat_var "_a1" (strip.ml[324,13753+14]..[324,13753+17])
                      ]
                expression (strip.ml[324,13753+22]..[324,13753+52])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[324,13753+26]..[324,13753+29])
                        Ppat_var "_a1" (strip.ml[324,13753+26]..[324,13753+29])
                      expression (strip.ml[324,13753+32]..[324,13753+40])
                        Pexp_apply
                        expression (strip.ml[324,13753+32]..[324,13753+36])
                          Pexp_ident "case" (strip.ml[324,13753+32]..[324,13753+36])
                        [
                          <label> ""
                            expression (strip.ml[324,13753+37]..[324,13753+40])
                              Pexp_ident "_a1" (strip.ml[324,13753+37]..[324,13753+40])
                        ]
                  ]
                  expression (strip.ml[324,13753+44]..[324,13753+52])
                    Pexp_variant "Fun"
                    Some
                      expression (strip.ml[324,13753+49]..[324,13753+52])
                        Pexp_ident "_a1" (strip.ml[324,13753+49]..[324,13753+52])
              <case>
                pattern (strip.ml[325,13806+4]..[325,13806+33])
                  Ppat_variant "IfThenElse"
                  Some
                    pattern (strip.ml[325,13806+16]..[325,13806+33])
                      Ppat_tuple
                      [
                        pattern (strip.ml[325,13806+17]..[325,13806+20])
                          Ppat_var "_a0" (strip.ml[325,13806+17]..[325,13806+20])
                        pattern (strip.ml[325,13806+21]..[325,13806+24])
                          Ppat_var "_a1" (strip.ml[325,13806+21]..[325,13806+24])
                        pattern (strip.ml[325,13806+25]..[325,13806+28])
                          Ppat_var "_a2" (strip.ml[325,13806+25]..[325,13806+28])
                        pattern (strip.ml[325,13806+29]..[325,13806+32])
                          Ppat_var "_a3" (strip.ml[325,13806+29]..[325,13806+32])
                      ]
                expression (strip.ml[326,13843+6]..[327,13870+75])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[326,13843+10]..[326,13843+13])
                        Ppat_var "_a1" (strip.ml[326,13843+10]..[326,13843+13])
                      expression (strip.ml[326,13843+16]..[326,13843+23])
                        Pexp_apply
                        expression (strip.ml[326,13843+16]..[326,13843+19])
                          Pexp_ident "exp" (strip.ml[326,13843+16]..[326,13843+19])
                        [
                          <label> ""
                            expression (strip.ml[326,13843+20]..[326,13843+23])
                              Pexp_ident "_a1" (strip.ml[326,13843+20]..[326,13843+23])
                        ]
                  ]
                  expression (strip.ml[327,13870+6]..[327,13870+75])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[327,13870+10]..[327,13870+13])
                          Ppat_var "_a2" (strip.ml[327,13870+10]..[327,13870+13])
                        expression (strip.ml[327,13870+16]..[327,13870+23])
                          Pexp_apply
                          expression (strip.ml[327,13870+16]..[327,13870+19])
                            Pexp_ident "exp" (strip.ml[327,13870+16]..[327,13870+19])
                          [
                            <label> ""
                              expression (strip.ml[327,13870+20]..[327,13870+23])
                                Pexp_ident "_a2" (strip.ml[327,13870+20]..[327,13870+23])
                          ]
                    ]
                    expression (strip.ml[327,13870+27]..[327,13870+75])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[327,13870+31]..[327,13870+34])
                            Ppat_var "_a3" (strip.ml[327,13870+31]..[327,13870+34])
                          expression (strip.ml[327,13870+37]..[327,13870+44])
                            Pexp_apply
                            expression (strip.ml[327,13870+37]..[327,13870+40])
                              Pexp_ident "exp" (strip.ml[327,13870+37]..[327,13870+40])
                            [
                              <label> ""
                                expression (strip.ml[327,13870+41]..[327,13870+44])
                                  Pexp_ident "_a3" (strip.ml[327,13870+41]..[327,13870+44])
                            ]
                      ]
                      expression (strip.ml[327,13870+48]..[327,13870+75])
                        Pexp_variant "IfThenElse"
                        Some
                          expression (strip.ml[327,13870+60]..[327,13870+75])
                            Pexp_tuple
                            [
                              expression (strip.ml[327,13870+61]..[327,13870+64])
                                Pexp_ident "_a1" (strip.ml[327,13870+61]..[327,13870+64])
                              expression (strip.ml[327,13870+66]..[327,13870+69])
                                Pexp_ident "_a2" (strip.ml[327,13870+66]..[327,13870+69])
                              expression (strip.ml[327,13870+71]..[327,13870+74])
                                Pexp_ident "_a3" (strip.ml[327,13870+71]..[327,13870+74])
                            ]
              <case>
                pattern (strip.ml[328,13946+4]..[328,13946+25])
                  Ppat_variant "IfThen"
                  Some
                    pattern (strip.ml[328,13946+12]..[328,13946+25])
                      Ppat_tuple
                      [
                        pattern (strip.ml[328,13946+13]..[328,13946+16])
                          Ppat_var "_a0" (strip.ml[328,13946+13]..[328,13946+16])
                        pattern (strip.ml[328,13946+17]..[328,13946+20])
                          Ppat_var "_a1" (strip.ml[328,13946+17]..[328,13946+20])
                        pattern (strip.ml[328,13946+21]..[328,13946+24])
                          Ppat_var "_a2" (strip.ml[328,13946+21]..[328,13946+24])
                      ]
                expression (strip.ml[329,13975+6]..[329,13975+66])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[329,13975+10]..[329,13975+13])
                        Ppat_var "_a1" (strip.ml[329,13975+10]..[329,13975+13])
                      expression (strip.ml[329,13975+16]..[329,13975+23])
                        Pexp_apply
                        expression (strip.ml[329,13975+16]..[329,13975+19])
                          Pexp_ident "exp" (strip.ml[329,13975+16]..[329,13975+19])
                        [
                          <label> ""
                            expression (strip.ml[329,13975+20]..[329,13975+23])
                              Pexp_ident "_a1" (strip.ml[329,13975+20]..[329,13975+23])
                        ]
                  ]
                  expression (strip.ml[329,13975+27]..[329,13975+66])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[329,13975+31]..[329,13975+34])
                          Ppat_var "_a2" (strip.ml[329,13975+31]..[329,13975+34])
                        expression (strip.ml[329,13975+37]..[329,13975+44])
                          Pexp_apply
                          expression (strip.ml[329,13975+37]..[329,13975+40])
                            Pexp_ident "exp" (strip.ml[329,13975+37]..[329,13975+40])
                          [
                            <label> ""
                              expression (strip.ml[329,13975+41]..[329,13975+44])
                                Pexp_ident "_a2" (strip.ml[329,13975+41]..[329,13975+44])
                          ]
                    ]
                    expression (strip.ml[329,13975+48]..[329,13975+66])
                      Pexp_variant "IfThen"
                      Some
                        expression (strip.ml[329,13975+56]..[329,13975+66])
                          Pexp_tuple
                          [
                            expression (strip.ml[329,13975+57]..[329,13975+60])
                              Pexp_ident "_a1" (strip.ml[329,13975+57]..[329,13975+60])
                            expression (strip.ml[329,13975+62]..[329,13975+65])
                              Pexp_ident "_a2" (strip.ml[329,13975+62]..[329,13975+65])
                          ]
              <case>
                pattern (strip.ml[330,14042+4]..[330,14042+21])
                  Ppat_variant "LabelS"
                  Some
                    pattern (strip.ml[330,14042+12]..[330,14042+21])
                      Ppat_tuple
                      [
                        pattern (strip.ml[330,14042+13]..[330,14042+16])
                          Ppat_var "_a0" (strip.ml[330,14042+13]..[330,14042+16])
                        pattern (strip.ml[330,14042+17]..[330,14042+20])
                          Ppat_var "_a1" (strip.ml[330,14042+17]..[330,14042+20])
                      ]
                expression (strip.ml[330,14042+25]..[330,14042+61])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[330,14042+29]..[330,14042+32])
                        Ppat_var "_a1" (strip.ml[330,14042+29]..[330,14042+32])
                      expression (strip.ml[330,14042+35]..[330,14042+46])
                        Pexp_apply
                        expression (strip.ml[330,14042+35]..[330,14042+42])
                          Pexp_ident "alident" (strip.ml[330,14042+35]..[330,14042+42])
                        [
                          <label> ""
                            expression (strip.ml[330,14042+43]..[330,14042+46])
                              Pexp_ident "_a1" (strip.ml[330,14042+43]..[330,14042+46])
                        ]
                  ]
                  expression (strip.ml[330,14042+50]..[330,14042+61])
                    Pexp_variant "LabelS"
                    Some
                      expression (strip.ml[330,14042+58]..[330,14042+61])
                        Pexp_ident "_a1" (strip.ml[330,14042+58]..[330,14042+61])
              <case>
                pattern (strip.ml[331,14104+4]..[331,14104+24])
                  Ppat_variant "Label"
                  Some
                    pattern (strip.ml[331,14104+11]..[331,14104+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[331,14104+12]..[331,14104+15])
                          Ppat_var "_a0" (strip.ml[331,14104+12]..[331,14104+15])
                        pattern (strip.ml[331,14104+16]..[331,14104+19])
                          Ppat_var "_a1" (strip.ml[331,14104+16]..[331,14104+19])
                        pattern (strip.ml[331,14104+20]..[331,14104+23])
                          Ppat_var "_a2" (strip.ml[331,14104+20]..[331,14104+23])
                      ]
                expression (strip.ml[332,14132+6]..[332,14132+69])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[332,14132+10]..[332,14132+13])
                        Ppat_var "_a1" (strip.ml[332,14132+10]..[332,14132+13])
                      expression (strip.ml[332,14132+16]..[332,14132+27])
                        Pexp_apply
                        expression (strip.ml[332,14132+16]..[332,14132+23])
                          Pexp_ident "alident" (strip.ml[332,14132+16]..[332,14132+23])
                        [
                          <label> ""
                            expression (strip.ml[332,14132+24]..[332,14132+27])
                              Pexp_ident "_a1" (strip.ml[332,14132+24]..[332,14132+27])
                        ]
                  ]
                  expression (strip.ml[332,14132+31]..[332,14132+69])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[332,14132+35]..[332,14132+38])
                          Ppat_var "_a2" (strip.ml[332,14132+35]..[332,14132+38])
                        expression (strip.ml[332,14132+41]..[332,14132+48])
                          Pexp_apply
                          expression (strip.ml[332,14132+41]..[332,14132+44])
                            Pexp_ident "exp" (strip.ml[332,14132+41]..[332,14132+44])
                          [
                            <label> ""
                              expression (strip.ml[332,14132+45]..[332,14132+48])
                                Pexp_ident "_a2" (strip.ml[332,14132+45]..[332,14132+48])
                          ]
                    ]
                    expression (strip.ml[332,14132+52]..[332,14132+69])
                      Pexp_variant "Label"
                      Some
                        expression (strip.ml[332,14132+59]..[332,14132+69])
                          Pexp_tuple
                          [
                            expression (strip.ml[332,14132+60]..[332,14132+63])
                              Pexp_ident "_a1" (strip.ml[332,14132+60]..[332,14132+63])
                            expression (strip.ml[332,14132+65]..[332,14132+68])
                              Pexp_ident "_a2" (strip.ml[332,14132+65]..[332,14132+68])
                          ]
              <case>
                pattern (strip.ml[333,14202+4]..[333,14202+19])
                  Ppat_variant "Lazy"
                  Some
                    pattern (strip.ml[333,14202+10]..[333,14202+19])
                      Ppat_tuple
                      [
                        pattern (strip.ml[333,14202+11]..[333,14202+14])
                          Ppat_var "_a0" (strip.ml[333,14202+11]..[333,14202+14])
                        pattern (strip.ml[333,14202+15]..[333,14202+18])
                          Ppat_var "_a1" (strip.ml[333,14202+15]..[333,14202+18])
                      ]
                expression (strip.ml[333,14202+23]..[333,14202+53])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[333,14202+27]..[333,14202+30])
                        Ppat_var "_a1" (strip.ml[333,14202+27]..[333,14202+30])
                      expression (strip.ml[333,14202+33]..[333,14202+40])
                        Pexp_apply
                        expression (strip.ml[333,14202+33]..[333,14202+36])
                          Pexp_ident "exp" (strip.ml[333,14202+33]..[333,14202+36])
                        [
                          <label> ""
                            expression (strip.ml[333,14202+37]..[333,14202+40])
                              Pexp_ident "_a1" (strip.ml[333,14202+37]..[333,14202+40])
                        ]
                  ]
                  expression (strip.ml[333,14202+44]..[333,14202+53])
                    Pexp_variant "Lazy"
                    Some
                      expression (strip.ml[333,14202+50]..[333,14202+53])
                        Pexp_ident "_a1" (strip.ml[333,14202+50]..[333,14202+53])
              <case>
                pattern (strip.ml[334,14256+4]..[334,14256+28])
                  Ppat_variant "LetIn"
                  Some
                    pattern (strip.ml[334,14256+11]..[334,14256+28])
                      Ppat_tuple
                      [
                        pattern (strip.ml[334,14256+12]..[334,14256+15])
                          Ppat_var "_a0" (strip.ml[334,14256+12]..[334,14256+15])
                        pattern (strip.ml[334,14256+16]..[334,14256+19])
                          Ppat_var "_a1" (strip.ml[334,14256+16]..[334,14256+19])
                        pattern (strip.ml[334,14256+20]..[334,14256+23])
                          Ppat_var "_a2" (strip.ml[334,14256+20]..[334,14256+23])
                        pattern (strip.ml[334,14256+24]..[334,14256+27])
                          Ppat_var "_a3" (strip.ml[334,14256+24]..[334,14256+27])
                      ]
                expression (strip.ml[335,14288+6]..[336,14316+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[335,14288+10]..[335,14288+13])
                        Ppat_var "_a1" (strip.ml[335,14288+10]..[335,14288+13])
                      expression (strip.ml[335,14288+16]..[335,14288+24])
                        Pexp_apply
                        expression (strip.ml[335,14288+16]..[335,14288+20])
                          Pexp_ident "flag" (strip.ml[335,14288+16]..[335,14288+20])
                        [
                          <label> ""
                            expression (strip.ml[335,14288+21]..[335,14288+24])
                              Pexp_ident "_a1" (strip.ml[335,14288+21]..[335,14288+24])
                        ]
                  ]
                  expression (strip.ml[336,14316+6]..[336,14316+71])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[336,14316+10]..[336,14316+13])
                          Ppat_var "_a2" (strip.ml[336,14316+10]..[336,14316+13])
                        expression (strip.ml[336,14316+16]..[336,14316+24])
                          Pexp_apply
                          expression (strip.ml[336,14316+16]..[336,14316+20])
                            Pexp_ident "bind" (strip.ml[336,14316+16]..[336,14316+20])
                          [
                            <label> ""
                              expression (strip.ml[336,14316+21]..[336,14316+24])
                                Pexp_ident "_a2" (strip.ml[336,14316+21]..[336,14316+24])
                          ]
                    ]
                    expression (strip.ml[336,14316+28]..[336,14316+71])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[336,14316+32]..[336,14316+35])
                            Ppat_var "_a3" (strip.ml[336,14316+32]..[336,14316+35])
                          expression (strip.ml[336,14316+38]..[336,14316+45])
                            Pexp_apply
                            expression (strip.ml[336,14316+38]..[336,14316+41])
                              Pexp_ident "exp" (strip.ml[336,14316+38]..[336,14316+41])
                            [
                              <label> ""
                                expression (strip.ml[336,14316+42]..[336,14316+45])
                                  Pexp_ident "_a3" (strip.ml[336,14316+42]..[336,14316+45])
                            ]
                      ]
                      expression (strip.ml[336,14316+49]..[336,14316+71])
                        Pexp_variant "LetIn"
                        Some
                          expression (strip.ml[336,14316+56]..[336,14316+71])
                            Pexp_tuple
                            [
                              expression (strip.ml[336,14316+57]..[336,14316+60])
                                Pexp_ident "_a1" (strip.ml[336,14316+57]..[336,14316+60])
                              expression (strip.ml[336,14316+62]..[336,14316+65])
                                Pexp_ident "_a2" (strip.ml[336,14316+62]..[336,14316+65])
                              expression (strip.ml[336,14316+67]..[336,14316+70])
                                Pexp_ident "_a3" (strip.ml[336,14316+67]..[336,14316+70])
                            ]
              <case>
                pattern (strip.ml[337,14388+4]..[337,14388+39])
                  Ppat_variant "LetTryInWith"
                  Some
                    pattern (strip.ml[337,14388+18]..[337,14388+39])
                      Ppat_tuple
                      [
                        pattern (strip.ml[337,14388+19]..[337,14388+22])
                          Ppat_var "_a0" (strip.ml[337,14388+19]..[337,14388+22])
                        pattern (strip.ml[337,14388+23]..[337,14388+26])
                          Ppat_var "_a1" (strip.ml[337,14388+23]..[337,14388+26])
                        pattern (strip.ml[337,14388+27]..[337,14388+30])
                          Ppat_var "_a2" (strip.ml[337,14388+27]..[337,14388+30])
                        pattern (strip.ml[337,14388+31]..[337,14388+34])
                          Ppat_var "_a3" (strip.ml[337,14388+31]..[337,14388+34])
                        pattern (strip.ml[337,14388+35]..[337,14388+38])
                          Ppat_var "_a4" (strip.ml[337,14388+35]..[337,14388+38])
                      ]
                expression (strip.ml[338,14431+6]..[341,14514+62])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[338,14431+10]..[338,14431+13])
                        Ppat_var "_a1" (strip.ml[338,14431+10]..[338,14431+13])
                      expression (strip.ml[338,14431+16]..[338,14431+24])
                        Pexp_apply
                        expression (strip.ml[338,14431+16]..[338,14431+20])
                          Pexp_ident "flag" (strip.ml[338,14431+16]..[338,14431+20])
                        [
                          <label> ""
                            expression (strip.ml[338,14431+21]..[338,14431+24])
                              Pexp_ident "_a1" (strip.ml[338,14431+21]..[338,14431+24])
                        ]
                  ]
                  expression (strip.ml[339,14459+6]..[341,14514+62])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[339,14459+10]..[339,14459+13])
                          Ppat_var "_a2" (strip.ml[339,14459+10]..[339,14459+13])
                        expression (strip.ml[339,14459+16]..[339,14459+24])
                          Pexp_apply
                          expression (strip.ml[339,14459+16]..[339,14459+20])
                            Pexp_ident "bind" (strip.ml[339,14459+16]..[339,14459+20])
                          [
                            <label> ""
                              expression (strip.ml[339,14459+21]..[339,14459+24])
                                Pexp_ident "_a2" (strip.ml[339,14459+21]..[339,14459+24])
                          ]
                    ]
                    expression (strip.ml[340,14487+6]..[341,14514+62])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[340,14487+10]..[340,14487+13])
                            Ppat_var "_a3" (strip.ml[340,14487+10]..[340,14487+13])
                          expression (strip.ml[340,14487+16]..[340,14487+23])
                            Pexp_apply
                            expression (strip.ml[340,14487+16]..[340,14487+19])
                              Pexp_ident "exp" (strip.ml[340,14487+16]..[340,14487+19])
                            [
                              <label> ""
                                expression (strip.ml[340,14487+20]..[340,14487+23])
                                  Pexp_ident "_a3" (strip.ml[340,14487+20]..[340,14487+23])
                            ]
                      ]
                      expression (strip.ml[341,14514+6]..[341,14514+62])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (strip.ml[341,14514+10]..[341,14514+13])
                              Ppat_var "_a4" (strip.ml[341,14514+10]..[341,14514+13])
                            expression (strip.ml[341,14514+16]..[341,14514+24])
                              Pexp_apply
                              expression (strip.ml[341,14514+16]..[341,14514+20])
                                Pexp_ident "case" (strip.ml[341,14514+16]..[341,14514+20])
                              [
                                <label> ""
                                  expression (strip.ml[341,14514+21]..[341,14514+24])
                                    Pexp_ident "_a4" (strip.ml[341,14514+21]..[341,14514+24])
                              ]
                        ]
                        expression (strip.ml[341,14514+28]..[341,14514+62])
                          Pexp_variant "LetTryInWith"
                          Some
                            expression (strip.ml[341,14514+42]..[341,14514+62])
                              Pexp_tuple
                              [
                                expression (strip.ml[341,14514+43]..[341,14514+46])
                                  Pexp_ident "_a1" (strip.ml[341,14514+43]..[341,14514+46])
                                expression (strip.ml[341,14514+48]..[341,14514+51])
                                  Pexp_ident "_a2" (strip.ml[341,14514+48]..[341,14514+51])
                                expression (strip.ml[341,14514+53]..[341,14514+56])
                                  Pexp_ident "_a3" (strip.ml[341,14514+53]..[341,14514+56])
                                expression (strip.ml[341,14514+58]..[341,14514+61])
                                  Pexp_ident "_a4" (strip.ml[341,14514+58]..[341,14514+61])
                              ]
              <case>
                pattern (strip.ml[342,14577+4]..[342,14577+32])
                  Ppat_variant "LetModule"
                  Some
                    pattern (strip.ml[342,14577+15]..[342,14577+32])
                      Ppat_tuple
                      [
                        pattern (strip.ml[342,14577+16]..[342,14577+19])
                          Ppat_var "_a0" (strip.ml[342,14577+16]..[342,14577+19])
                        pattern (strip.ml[342,14577+20]..[342,14577+23])
                          Ppat_var "_a1" (strip.ml[342,14577+20]..[342,14577+23])
                        pattern (strip.ml[342,14577+24]..[342,14577+27])
                          Ppat_var "_a2" (strip.ml[342,14577+24]..[342,14577+27])
                        pattern (strip.ml[342,14577+28]..[342,14577+31])
                          Ppat_var "_a3" (strip.ml[342,14577+28]..[342,14577+31])
                      ]
                expression (strip.ml[343,14613+6]..[344,14644+75])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[343,14613+10]..[343,14613+13])
                        Ppat_var "_a1" (strip.ml[343,14613+10]..[343,14613+13])
                      expression (strip.ml[343,14613+16]..[343,14613+27])
                        Pexp_apply
                        expression (strip.ml[343,14613+16]..[343,14613+23])
                          Pexp_ident "auident" (strip.ml[343,14613+16]..[343,14613+23])
                        [
                          <label> ""
                            expression (strip.ml[343,14613+24]..[343,14613+27])
                              Pexp_ident "_a1" (strip.ml[343,14613+24]..[343,14613+27])
                        ]
                  ]
                  expression (strip.ml[344,14644+6]..[344,14644+75])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[344,14644+10]..[344,14644+13])
                          Ppat_var "_a2" (strip.ml[344,14644+10]..[344,14644+13])
                        expression (strip.ml[344,14644+16]..[344,14644+24])
                          Pexp_apply
                          expression (strip.ml[344,14644+16]..[344,14644+20])
                            Pexp_ident "mexp" (strip.ml[344,14644+16]..[344,14644+20])
                          [
                            <label> ""
                              expression (strip.ml[344,14644+21]..[344,14644+24])
                                Pexp_ident "_a2" (strip.ml[344,14644+21]..[344,14644+24])
                          ]
                    ]
                    expression (strip.ml[344,14644+28]..[344,14644+75])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[344,14644+32]..[344,14644+35])
                            Ppat_var "_a3" (strip.ml[344,14644+32]..[344,14644+35])
                          expression (strip.ml[344,14644+38]..[344,14644+45])
                            Pexp_apply
                            expression (strip.ml[344,14644+38]..[344,14644+41])
                              Pexp_ident "exp" (strip.ml[344,14644+38]..[344,14644+41])
                            [
                              <label> ""
                                expression (strip.ml[344,14644+42]..[344,14644+45])
                                  Pexp_ident "_a3" (strip.ml[344,14644+42]..[344,14644+45])
                            ]
                      ]
                      expression (strip.ml[344,14644+49]..[344,14644+75])
                        Pexp_variant "LetModule"
                        Some
                          expression (strip.ml[344,14644+60]..[344,14644+75])
                            Pexp_tuple
                            [
                              expression (strip.ml[344,14644+61]..[344,14644+64])
                                Pexp_ident "_a1" (strip.ml[344,14644+61]..[344,14644+64])
                              expression (strip.ml[344,14644+66]..[344,14644+69])
                                Pexp_ident "_a2" (strip.ml[344,14644+66]..[344,14644+69])
                              expression (strip.ml[344,14644+71]..[344,14644+74])
                                Pexp_ident "_a3" (strip.ml[344,14644+71]..[344,14644+74])
                            ]
              <case>
                pattern (strip.ml[345,14720+4]..[345,14720+24])
                  Ppat_variant "Match"
                  Some
                    pattern (strip.ml[345,14720+11]..[345,14720+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[345,14720+12]..[345,14720+15])
                          Ppat_var "_a0" (strip.ml[345,14720+12]..[345,14720+15])
                        pattern (strip.ml[345,14720+16]..[345,14720+19])
                          Ppat_var "_a1" (strip.ml[345,14720+16]..[345,14720+19])
                        pattern (strip.ml[345,14720+20]..[345,14720+23])
                          Ppat_var "_a2" (strip.ml[345,14720+20]..[345,14720+23])
                      ]
                expression (strip.ml[346,14748+6]..[346,14748+66])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[346,14748+10]..[346,14748+13])
                        Ppat_var "_a1" (strip.ml[346,14748+10]..[346,14748+13])
                      expression (strip.ml[346,14748+16]..[346,14748+23])
                        Pexp_apply
                        expression (strip.ml[346,14748+16]..[346,14748+19])
                          Pexp_ident "exp" (strip.ml[346,14748+16]..[346,14748+19])
                        [
                          <label> ""
                            expression (strip.ml[346,14748+20]..[346,14748+23])
                              Pexp_ident "_a1" (strip.ml[346,14748+20]..[346,14748+23])
                        ]
                  ]
                  expression (strip.ml[346,14748+27]..[346,14748+66])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[346,14748+31]..[346,14748+34])
                          Ppat_var "_a2" (strip.ml[346,14748+31]..[346,14748+34])
                        expression (strip.ml[346,14748+37]..[346,14748+45])
                          Pexp_apply
                          expression (strip.ml[346,14748+37]..[346,14748+41])
                            Pexp_ident "case" (strip.ml[346,14748+37]..[346,14748+41])
                          [
                            <label> ""
                              expression (strip.ml[346,14748+42]..[346,14748+45])
                                Pexp_ident "_a2" (strip.ml[346,14748+42]..[346,14748+45])
                          ]
                    ]
                    expression (strip.ml[346,14748+49]..[346,14748+66])
                      Pexp_variant "Match"
                      Some
                        expression (strip.ml[346,14748+56]..[346,14748+66])
                          Pexp_tuple
                          [
                            expression (strip.ml[346,14748+57]..[346,14748+60])
                              Pexp_ident "_a1" (strip.ml[346,14748+57]..[346,14748+60])
                            expression (strip.ml[346,14748+62]..[346,14748+65])
                              Pexp_ident "_a2" (strip.ml[346,14748+62]..[346,14748+65])
                          ]
              <case>
                pattern (strip.ml[347,14815+4]..[347,14815+18])
                  Ppat_variant "New"
                  Some
                    pattern (strip.ml[347,14815+9]..[347,14815+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[347,14815+10]..[347,14815+13])
                          Ppat_var "_a0" (strip.ml[347,14815+10]..[347,14815+13])
                        pattern (strip.ml[347,14815+14]..[347,14815+17])
                          Ppat_var "_a1" (strip.ml[347,14815+14]..[347,14815+17])
                      ]
                expression (strip.ml[347,14815+22]..[347,14815+53])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[347,14815+26]..[347,14815+29])
                        Ppat_var "_a1" (strip.ml[347,14815+26]..[347,14815+29])
                      expression (strip.ml[347,14815+32]..[347,14815+41])
                        Pexp_apply
                        expression (strip.ml[347,14815+32]..[347,14815+37])
                          Pexp_ident "ident" (strip.ml[347,14815+32]..[347,14815+37])
                        [
                          <label> ""
                            expression (strip.ml[347,14815+38]..[347,14815+41])
                              Pexp_ident "_a1" (strip.ml[347,14815+38]..[347,14815+41])
                        ]
                  ]
                  expression (strip.ml[347,14815+45]..[347,14815+53])
                    Pexp_variant "New"
                    Some
                      expression (strip.ml[347,14815+50]..[347,14815+53])
                        Pexp_ident "_a1" (strip.ml[347,14815+50]..[347,14815+53])
              <case>
                pattern (strip.ml[348,14869+4]..[348,14869+18])
                  Ppat_variant "Obj"
                  Some
                    pattern (strip.ml[348,14869+9]..[348,14869+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[348,14869+10]..[348,14869+13])
                          Ppat_var "_a0" (strip.ml[348,14869+10]..[348,14869+13])
                        pattern (strip.ml[348,14869+14]..[348,14869+17])
                          Ppat_var "_a1" (strip.ml[348,14869+14]..[348,14869+17])
                      ]
                expression (strip.ml[348,14869+22]..[348,14869+55])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[348,14869+26]..[348,14869+29])
                        Ppat_var "_a1" (strip.ml[348,14869+26]..[348,14869+29])
                      expression (strip.ml[348,14869+32]..[348,14869+43])
                        Pexp_apply
                        expression (strip.ml[348,14869+32]..[348,14869+39])
                          Pexp_ident "clfield" (strip.ml[348,14869+32]..[348,14869+39])
                        [
                          <label> ""
                            expression (strip.ml[348,14869+40]..[348,14869+43])
                              Pexp_ident "_a1" (strip.ml[348,14869+40]..[348,14869+43])
                        ]
                  ]
                  expression (strip.ml[348,14869+47]..[348,14869+55])
                    Pexp_variant "Obj"
                    Some
                      expression (strip.ml[348,14869+52]..[348,14869+55])
                        Pexp_ident "_a1" (strip.ml[348,14869+52]..[348,14869+55])
              <case>
                pattern (strip.ml[349,14925+4]..[349,14925+15])
                  Ppat_variant "ObjEnd"
                  Some
                    pattern (strip.ml[349,14925+12]..[349,14925+15])
                      Ppat_var "_a0" (strip.ml[349,14925+12]..[349,14925+15])
                expression (strip.ml[349,14925+19]..[349,14925+26])
                  Pexp_variant "ObjEnd"
                  None
              <case>
                pattern (strip.ml[350,14952+4]..[350,14952+25])
                  Ppat_variant "ObjPat"
                  Some
                    pattern (strip.ml[350,14952+12]..[350,14952+25])
                      Ppat_tuple
                      [
                        pattern (strip.ml[350,14952+13]..[350,14952+16])
                          Ppat_var "_a0" (strip.ml[350,14952+13]..[350,14952+16])
                        pattern (strip.ml[350,14952+17]..[350,14952+20])
                          Ppat_var "_a1" (strip.ml[350,14952+17]..[350,14952+20])
                        pattern (strip.ml[350,14952+21]..[350,14952+24])
                          Ppat_var "_a2" (strip.ml[350,14952+21]..[350,14952+24])
                      ]
                expression (strip.ml[351,14981+6]..[351,14981+70])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[351,14981+10]..[351,14981+13])
                        Ppat_var "_a1" (strip.ml[351,14981+10]..[351,14981+13])
                      expression (strip.ml[351,14981+16]..[351,14981+23])
                        Pexp_apply
                        expression (strip.ml[351,14981+16]..[351,14981+19])
                          Pexp_ident "pat" (strip.ml[351,14981+16]..[351,14981+19])
                        [
                          <label> ""
                            expression (strip.ml[351,14981+20]..[351,14981+23])
                              Pexp_ident "_a1" (strip.ml[351,14981+20]..[351,14981+23])
                        ]
                  ]
                  expression (strip.ml[351,14981+27]..[351,14981+70])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[351,14981+31]..[351,14981+34])
                          Ppat_var "_a2" (strip.ml[351,14981+31]..[351,14981+34])
                        expression (strip.ml[351,14981+37]..[351,14981+48])
                          Pexp_apply
                          expression (strip.ml[351,14981+37]..[351,14981+44])
                            Pexp_ident "clfield" (strip.ml[351,14981+37]..[351,14981+44])
                          [
                            <label> ""
                              expression (strip.ml[351,14981+45]..[351,14981+48])
                                Pexp_ident "_a2" (strip.ml[351,14981+45]..[351,14981+48])
                          ]
                    ]
                    expression (strip.ml[351,14981+52]..[351,14981+70])
                      Pexp_variant "ObjPat"
                      Some
                        expression (strip.ml[351,14981+60]..[351,14981+70])
                          Pexp_tuple
                          [
                            expression (strip.ml[351,14981+61]..[351,14981+64])
                              Pexp_ident "_a1" (strip.ml[351,14981+61]..[351,14981+64])
                            expression (strip.ml[351,14981+66]..[351,14981+69])
                              Pexp_ident "_a2" (strip.ml[351,14981+66]..[351,14981+69])
                          ]
              <case>
                pattern (strip.ml[352,15052+4]..[352,15052+24])
                  Ppat_variant "ObjPatEnd"
                  Some
                    pattern (strip.ml[352,15052+15]..[352,15052+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[352,15052+16]..[352,15052+19])
                          Ppat_var "_a0" (strip.ml[352,15052+16]..[352,15052+19])
                        pattern (strip.ml[352,15052+20]..[352,15052+23])
                          Ppat_var "_a1" (strip.ml[352,15052+20]..[352,15052+23])
                      ]
                expression (strip.ml[352,15052+28]..[352,15052+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[352,15052+32]..[352,15052+35])
                        Ppat_var "_a1" (strip.ml[352,15052+32]..[352,15052+35])
                      expression (strip.ml[352,15052+38]..[352,15052+45])
                        Pexp_apply
                        expression (strip.ml[352,15052+38]..[352,15052+41])
                          Pexp_ident "pat" (strip.ml[352,15052+38]..[352,15052+41])
                        [
                          <label> ""
                            expression (strip.ml[352,15052+42]..[352,15052+45])
                              Pexp_ident "_a1" (strip.ml[352,15052+42]..[352,15052+45])
                        ]
                  ]
                  expression (strip.ml[352,15052+49]..[352,15052+63])
                    Pexp_variant "ObjPatEnd"
                    Some
                      expression (strip.ml[352,15052+60]..[352,15052+63])
                        Pexp_ident "_a1" (strip.ml[352,15052+60]..[352,15052+63])
              <case>
                pattern (strip.ml[353,15116+4]..[353,15116+26])
                  Ppat_variant "OptLabl"
                  Some
                    pattern (strip.ml[353,15116+13]..[353,15116+26])
                      Ppat_tuple
                      [
                        pattern (strip.ml[353,15116+14]..[353,15116+17])
                          Ppat_var "_a0" (strip.ml[353,15116+14]..[353,15116+17])
                        pattern (strip.ml[353,15116+18]..[353,15116+21])
                          Ppat_var "_a1" (strip.ml[353,15116+18]..[353,15116+21])
                        pattern (strip.ml[353,15116+22]..[353,15116+25])
                          Ppat_var "_a2" (strip.ml[353,15116+22]..[353,15116+25])
                      ]
                expression (strip.ml[354,15146+6]..[354,15146+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[354,15146+10]..[354,15146+13])
                        Ppat_var "_a1" (strip.ml[354,15146+10]..[354,15146+13])
                      expression (strip.ml[354,15146+16]..[354,15146+27])
                        Pexp_apply
                        expression (strip.ml[354,15146+16]..[354,15146+23])
                          Pexp_ident "alident" (strip.ml[354,15146+16]..[354,15146+23])
                        [
                          <label> ""
                            expression (strip.ml[354,15146+24]..[354,15146+27])
                              Pexp_ident "_a1" (strip.ml[354,15146+24]..[354,15146+27])
                        ]
                  ]
                  expression (strip.ml[354,15146+31]..[354,15146+71])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[354,15146+35]..[354,15146+38])
                          Ppat_var "_a2" (strip.ml[354,15146+35]..[354,15146+38])
                        expression (strip.ml[354,15146+41]..[354,15146+48])
                          Pexp_apply
                          expression (strip.ml[354,15146+41]..[354,15146+44])
                            Pexp_ident "exp" (strip.ml[354,15146+41]..[354,15146+44])
                          [
                            <label> ""
                              expression (strip.ml[354,15146+45]..[354,15146+48])
                                Pexp_ident "_a2" (strip.ml[354,15146+45]..[354,15146+48])
                          ]
                    ]
                    expression (strip.ml[354,15146+52]..[354,15146+71])
                      Pexp_variant "OptLabl"
                      Some
                        expression (strip.ml[354,15146+61]..[354,15146+71])
                          Pexp_tuple
                          [
                            expression (strip.ml[354,15146+62]..[354,15146+65])
                              Pexp_ident "_a1" (strip.ml[354,15146+62]..[354,15146+65])
                            expression (strip.ml[354,15146+67]..[354,15146+70])
                              Pexp_ident "_a2" (strip.ml[354,15146+67]..[354,15146+70])
                          ]
              <case>
                pattern (strip.ml[355,15218+4]..[355,15218+23])
                  Ppat_variant "OptLablS"
                  Some
                    pattern (strip.ml[355,15218+14]..[355,15218+23])
                      Ppat_tuple
                      [
                        pattern (strip.ml[355,15218+15]..[355,15218+18])
                          Ppat_var "_a0" (strip.ml[355,15218+15]..[355,15218+18])
                        pattern (strip.ml[355,15218+19]..[355,15218+22])
                          Ppat_var "_a1" (strip.ml[355,15218+19]..[355,15218+22])
                      ]
                expression (strip.ml[355,15218+27]..[355,15218+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[355,15218+31]..[355,15218+34])
                        Ppat_var "_a1" (strip.ml[355,15218+31]..[355,15218+34])
                      expression (strip.ml[355,15218+37]..[355,15218+48])
                        Pexp_apply
                        expression (strip.ml[355,15218+37]..[355,15218+44])
                          Pexp_ident "alident" (strip.ml[355,15218+37]..[355,15218+44])
                        [
                          <label> ""
                            expression (strip.ml[355,15218+45]..[355,15218+48])
                              Pexp_ident "_a1" (strip.ml[355,15218+45]..[355,15218+48])
                        ]
                  ]
                  expression (strip.ml[355,15218+52]..[355,15218+65])
                    Pexp_variant "OptLablS"
                    Some
                      expression (strip.ml[355,15218+62]..[355,15218+65])
                        Pexp_ident "_a1" (strip.ml[355,15218+62]..[355,15218+65])
              <case>
                pattern (strip.ml[356,15284+4]..[356,15284+22])
                  Ppat_variant "OvrInst"
                  Some
                    pattern (strip.ml[356,15284+13]..[356,15284+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[356,15284+14]..[356,15284+17])
                          Ppat_var "_a0" (strip.ml[356,15284+14]..[356,15284+17])
                        pattern (strip.ml[356,15284+18]..[356,15284+21])
                          Ppat_var "_a1" (strip.ml[356,15284+18]..[356,15284+21])
                      ]
                expression (strip.ml[356,15284+26]..[356,15284+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[356,15284+30]..[356,15284+33])
                        Ppat_var "_a1" (strip.ml[356,15284+30]..[356,15284+33])
                      expression (strip.ml[356,15284+36]..[356,15284+47])
                        Pexp_apply
                        expression (strip.ml[356,15284+36]..[356,15284+43])
                          Pexp_ident "rec_exp" (strip.ml[356,15284+36]..[356,15284+43])
                        [
                          <label> ""
                            expression (strip.ml[356,15284+44]..[356,15284+47])
                              Pexp_ident "_a1" (strip.ml[356,15284+44]..[356,15284+47])
                        ]
                  ]
                  expression (strip.ml[356,15284+51]..[356,15284+63])
                    Pexp_variant "OvrInst"
                    Some
                      expression (strip.ml[356,15284+60]..[356,15284+63])
                        Pexp_ident "_a1" (strip.ml[356,15284+60]..[356,15284+63])
              <case>
                pattern (strip.ml[357,15348+4]..[357,15348+21])
                  Ppat_variant "OvrInstEmpty"
                  Some
                    pattern (strip.ml[357,15348+18]..[357,15348+21])
                      Ppat_var "_a0" (strip.ml[357,15348+18]..[357,15348+21])
                expression (strip.ml[357,15348+25]..[357,15348+38])
                  Pexp_variant "OvrInstEmpty"
                  None
              <case>
                pattern (strip.ml[358,15387+4]..[358,15387+18])
                  Ppat_variant "Seq"
                  Some
                    pattern (strip.ml[358,15387+9]..[358,15387+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[358,15387+10]..[358,15387+13])
                          Ppat_var "_a0" (strip.ml[358,15387+10]..[358,15387+13])
                        pattern (strip.ml[358,15387+14]..[358,15387+17])
                          Ppat_var "_a1" (strip.ml[358,15387+14]..[358,15387+17])
                      ]
                expression (strip.ml[358,15387+22]..[358,15387+51])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[358,15387+26]..[358,15387+29])
                        Ppat_var "_a1" (strip.ml[358,15387+26]..[358,15387+29])
                      expression (strip.ml[358,15387+32]..[358,15387+39])
                        Pexp_apply
                        expression (strip.ml[358,15387+32]..[358,15387+35])
                          Pexp_ident "exp" (strip.ml[358,15387+32]..[358,15387+35])
                        [
                          <label> ""
                            expression (strip.ml[358,15387+36]..[358,15387+39])
                              Pexp_ident "_a1" (strip.ml[358,15387+36]..[358,15387+39])
                        ]
                  ]
                  expression (strip.ml[358,15387+43]..[358,15387+51])
                    Pexp_variant "Seq"
                    Some
                      expression (strip.ml[358,15387+48]..[358,15387+51])
                        Pexp_ident "_a1" (strip.ml[358,15387+48]..[358,15387+51])
              <case>
                pattern (strip.ml[359,15439+4]..[359,15439+23])
                  Ppat_variant "Send"
                  Some
                    pattern (strip.ml[359,15439+10]..[359,15439+23])
                      Ppat_tuple
                      [
                        pattern (strip.ml[359,15439+11]..[359,15439+14])
                          Ppat_var "_a0" (strip.ml[359,15439+11]..[359,15439+14])
                        pattern (strip.ml[359,15439+15]..[359,15439+18])
                          Ppat_var "_a1" (strip.ml[359,15439+15]..[359,15439+18])
                        pattern (strip.ml[359,15439+19]..[359,15439+22])
                          Ppat_var "_a2" (strip.ml[359,15439+19]..[359,15439+22])
                      ]
                expression (strip.ml[360,15466+6]..[360,15466+68])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[360,15466+10]..[360,15466+13])
                        Ppat_var "_a1" (strip.ml[360,15466+10]..[360,15466+13])
                      expression (strip.ml[360,15466+16]..[360,15466+23])
                        Pexp_apply
                        expression (strip.ml[360,15466+16]..[360,15466+19])
                          Pexp_ident "exp" (strip.ml[360,15466+16]..[360,15466+19])
                        [
                          <label> ""
                            expression (strip.ml[360,15466+20]..[360,15466+23])
                              Pexp_ident "_a1" (strip.ml[360,15466+20]..[360,15466+23])
                        ]
                  ]
                  expression (strip.ml[360,15466+27]..[360,15466+68])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[360,15466+31]..[360,15466+34])
                          Ppat_var "_a2" (strip.ml[360,15466+31]..[360,15466+34])
                        expression (strip.ml[360,15466+37]..[360,15466+48])
                          Pexp_apply
                          expression (strip.ml[360,15466+37]..[360,15466+44])
                            Pexp_ident "alident" (strip.ml[360,15466+37]..[360,15466+44])
                          [
                            <label> ""
                              expression (strip.ml[360,15466+45]..[360,15466+48])
                                Pexp_ident "_a2" (strip.ml[360,15466+45]..[360,15466+48])
                          ]
                    ]
                    expression (strip.ml[360,15466+52]..[360,15466+68])
                      Pexp_variant "Send"
                      Some
                        expression (strip.ml[360,15466+58]..[360,15466+68])
                          Pexp_tuple
                          [
                            expression (strip.ml[360,15466+59]..[360,15466+62])
                              Pexp_ident "_a1" (strip.ml[360,15466+59]..[360,15466+62])
                            expression (strip.ml[360,15466+64]..[360,15466+67])
                              Pexp_ident "_a2" (strip.ml[360,15466+64]..[360,15466+67])
                          ]
              <case>
                pattern (strip.ml[361,15535+4]..[361,15535+28])
                  Ppat_variant "StringDot"
                  Some
                    pattern (strip.ml[361,15535+15]..[361,15535+28])
                      Ppat_tuple
                      [
                        pattern (strip.ml[361,15535+16]..[361,15535+19])
                          Ppat_var "_a0" (strip.ml[361,15535+16]..[361,15535+19])
                        pattern (strip.ml[361,15535+20]..[361,15535+23])
                          Ppat_var "_a1" (strip.ml[361,15535+20]..[361,15535+23])
                        pattern (strip.ml[361,15535+24]..[361,15535+27])
                          Ppat_var "_a2" (strip.ml[361,15535+24]..[361,15535+27])
                      ]
                expression (strip.ml[362,15567+6]..[362,15567+69])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[362,15567+10]..[362,15567+13])
                        Ppat_var "_a1" (strip.ml[362,15567+10]..[362,15567+13])
                      expression (strip.ml[362,15567+16]..[362,15567+23])
                        Pexp_apply
                        expression (strip.ml[362,15567+16]..[362,15567+19])
                          Pexp_ident "exp" (strip.ml[362,15567+16]..[362,15567+19])
                        [
                          <label> ""
                            expression (strip.ml[362,15567+20]..[362,15567+23])
                              Pexp_ident "_a1" (strip.ml[362,15567+20]..[362,15567+23])
                        ]
                  ]
                  expression (strip.ml[362,15567+27]..[362,15567+69])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[362,15567+31]..[362,15567+34])
                          Ppat_var "_a2" (strip.ml[362,15567+31]..[362,15567+34])
                        expression (strip.ml[362,15567+37]..[362,15567+44])
                          Pexp_apply
                          expression (strip.ml[362,15567+37]..[362,15567+40])
                            Pexp_ident "exp" (strip.ml[362,15567+37]..[362,15567+40])
                          [
                            <label> ""
                              expression (strip.ml[362,15567+41]..[362,15567+44])
                                Pexp_ident "_a2" (strip.ml[362,15567+41]..[362,15567+44])
                          ]
                    ]
                    expression (strip.ml[362,15567+48]..[362,15567+69])
                      Pexp_variant "StringDot"
                      Some
                        expression (strip.ml[362,15567+59]..[362,15567+69])
                          Pexp_tuple
                          [
                            expression (strip.ml[362,15567+60]..[362,15567+63])
                              Pexp_ident "_a1" (strip.ml[362,15567+60]..[362,15567+63])
                            expression (strip.ml[362,15567+65]..[362,15567+68])
                              Pexp_ident "_a2" (strip.ml[362,15567+65]..[362,15567+68])
                          ]
              <case>
                pattern (strip.ml[363,15637+4]..[363,15637+22])
                  Ppat_variant "Try"
                  Some
                    pattern (strip.ml[363,15637+9]..[363,15637+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[363,15637+10]..[363,15637+13])
                          Ppat_var "_a0" (strip.ml[363,15637+10]..[363,15637+13])
                        pattern (strip.ml[363,15637+14]..[363,15637+17])
                          Ppat_var "_a1" (strip.ml[363,15637+14]..[363,15637+17])
                        pattern (strip.ml[363,15637+18]..[363,15637+21])
                          Ppat_var "_a2" (strip.ml[363,15637+18]..[363,15637+21])
                      ]
                expression (strip.ml[364,15663+6]..[364,15663+64])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[364,15663+10]..[364,15663+13])
                        Ppat_var "_a1" (strip.ml[364,15663+10]..[364,15663+13])
                      expression (strip.ml[364,15663+16]..[364,15663+23])
                        Pexp_apply
                        expression (strip.ml[364,15663+16]..[364,15663+19])
                          Pexp_ident "exp" (strip.ml[364,15663+16]..[364,15663+19])
                        [
                          <label> ""
                            expression (strip.ml[364,15663+20]..[364,15663+23])
                              Pexp_ident "_a1" (strip.ml[364,15663+20]..[364,15663+23])
                        ]
                  ]
                  expression (strip.ml[364,15663+27]..[364,15663+64])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[364,15663+31]..[364,15663+34])
                          Ppat_var "_a2" (strip.ml[364,15663+31]..[364,15663+34])
                        expression (strip.ml[364,15663+37]..[364,15663+45])
                          Pexp_apply
                          expression (strip.ml[364,15663+37]..[364,15663+41])
                            Pexp_ident "case" (strip.ml[364,15663+37]..[364,15663+41])
                          [
                            <label> ""
                              expression (strip.ml[364,15663+42]..[364,15663+45])
                                Pexp_ident "_a2" (strip.ml[364,15663+42]..[364,15663+45])
                          ]
                    ]
                    expression (strip.ml[364,15663+49]..[364,15663+64])
                      Pexp_variant "Try"
                      Some
                        expression (strip.ml[364,15663+54]..[364,15663+64])
                          Pexp_tuple
                          [
                            expression (strip.ml[364,15663+55]..[364,15663+58])
                              Pexp_ident "_a1" (strip.ml[364,15663+55]..[364,15663+58])
                            expression (strip.ml[364,15663+60]..[364,15663+63])
                              Pexp_ident "_a2" (strip.ml[364,15663+60]..[364,15663+63])
                          ]
              <case>
                pattern (strip.ml[365,15728+4]..[365,15728+29])
                  Ppat_variant "Constraint"
                  Some
                    pattern (strip.ml[365,15728+16]..[365,15728+29])
                      Ppat_tuple
                      [
                        pattern (strip.ml[365,15728+17]..[365,15728+20])
                          Ppat_var "_a0" (strip.ml[365,15728+17]..[365,15728+20])
                        pattern (strip.ml[365,15728+21]..[365,15728+24])
                          Ppat_var "_a1" (strip.ml[365,15728+21]..[365,15728+24])
                        pattern (strip.ml[365,15728+25]..[365,15728+28])
                          Ppat_var "_a2" (strip.ml[365,15728+25]..[365,15728+28])
                      ]
                expression (strip.ml[366,15761+6]..[366,15761+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[366,15761+10]..[366,15761+13])
                        Ppat_var "_a1" (strip.ml[366,15761+10]..[366,15761+13])
                      expression (strip.ml[366,15761+16]..[366,15761+23])
                        Pexp_apply
                        expression (strip.ml[366,15761+16]..[366,15761+19])
                          Pexp_ident "exp" (strip.ml[366,15761+16]..[366,15761+19])
                        [
                          <label> ""
                            expression (strip.ml[366,15761+20]..[366,15761+23])
                              Pexp_ident "_a1" (strip.ml[366,15761+20]..[366,15761+23])
                        ]
                  ]
                  expression (strip.ml[366,15761+27]..[366,15761+71])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[366,15761+31]..[366,15761+34])
                          Ppat_var "_a2" (strip.ml[366,15761+31]..[366,15761+34])
                        expression (strip.ml[366,15761+37]..[366,15761+45])
                          Pexp_apply
                          expression (strip.ml[366,15761+37]..[366,15761+41])
                            Pexp_ident "ctyp" (strip.ml[366,15761+37]..[366,15761+41])
                          [
                            <label> ""
                              expression (strip.ml[366,15761+42]..[366,15761+45])
                                Pexp_ident "_a2" (strip.ml[366,15761+42]..[366,15761+45])
                          ]
                    ]
                    expression (strip.ml[366,15761+49]..[366,15761+71])
                      Pexp_variant "Constraint"
                      Some
                        expression (strip.ml[366,15761+61]..[366,15761+71])
                          Pexp_tuple
                          [
                            expression (strip.ml[366,15761+62]..[366,15761+65])
                              Pexp_ident "_a1" (strip.ml[366,15761+62]..[366,15761+65])
                            expression (strip.ml[366,15761+67]..[366,15761+70])
                              Pexp_ident "_a2" (strip.ml[366,15761+67]..[366,15761+70])
                          ]
              <case>
                pattern (strip.ml[367,15833+4]..[367,15833+31])
                  Ppat_variant "Coercion"
                  Some
                    pattern (strip.ml[367,15833+14]..[367,15833+31])
                      Ppat_tuple
                      [
                        pattern (strip.ml[367,15833+15]..[367,15833+18])
                          Ppat_var "_a0" (strip.ml[367,15833+15]..[367,15833+18])
                        pattern (strip.ml[367,15833+19]..[367,15833+22])
                          Ppat_var "_a1" (strip.ml[367,15833+19]..[367,15833+22])
                        pattern (strip.ml[367,15833+23]..[367,15833+26])
                          Ppat_var "_a2" (strip.ml[367,15833+23]..[367,15833+26])
                        pattern (strip.ml[367,15833+27]..[367,15833+30])
                          Ppat_var "_a3" (strip.ml[367,15833+27]..[367,15833+30])
                      ]
                expression (strip.ml[368,15868+6]..[369,15895+75])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[368,15868+10]..[368,15868+13])
                        Ppat_var "_a1" (strip.ml[368,15868+10]..[368,15868+13])
                      expression (strip.ml[368,15868+16]..[368,15868+23])
                        Pexp_apply
                        expression (strip.ml[368,15868+16]..[368,15868+19])
                          Pexp_ident "exp" (strip.ml[368,15868+16]..[368,15868+19])
                        [
                          <label> ""
                            expression (strip.ml[368,15868+20]..[368,15868+23])
                              Pexp_ident "_a1" (strip.ml[368,15868+20]..[368,15868+23])
                        ]
                  ]
                  expression (strip.ml[369,15895+6]..[369,15895+75])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[369,15895+10]..[369,15895+13])
                          Ppat_var "_a2" (strip.ml[369,15895+10]..[369,15895+13])
                        expression (strip.ml[369,15895+16]..[369,15895+24])
                          Pexp_apply
                          expression (strip.ml[369,15895+16]..[369,15895+20])
                            Pexp_ident "ctyp" (strip.ml[369,15895+16]..[369,15895+20])
                          [
                            <label> ""
                              expression (strip.ml[369,15895+21]..[369,15895+24])
                                Pexp_ident "_a2" (strip.ml[369,15895+21]..[369,15895+24])
                          ]
                    ]
                    expression (strip.ml[369,15895+28]..[369,15895+75])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[369,15895+32]..[369,15895+35])
                            Ppat_var "_a3" (strip.ml[369,15895+32]..[369,15895+35])
                          expression (strip.ml[369,15895+38]..[369,15895+46])
                            Pexp_apply
                            expression (strip.ml[369,15895+38]..[369,15895+42])
                              Pexp_ident "ctyp" (strip.ml[369,15895+38]..[369,15895+42])
                            [
                              <label> ""
                                expression (strip.ml[369,15895+43]..[369,15895+46])
                                  Pexp_ident "_a3" (strip.ml[369,15895+43]..[369,15895+46])
                            ]
                      ]
                      expression (strip.ml[369,15895+50]..[369,15895+75])
                        Pexp_variant "Coercion"
                        Some
                          expression (strip.ml[369,15895+60]..[369,15895+75])
                            Pexp_tuple
                            [
                              expression (strip.ml[369,15895+61]..[369,15895+64])
                                Pexp_ident "_a1" (strip.ml[369,15895+61]..[369,15895+64])
                              expression (strip.ml[369,15895+66]..[369,15895+69])
                                Pexp_ident "_a2" (strip.ml[369,15895+66]..[369,15895+69])
                              expression (strip.ml[369,15895+71]..[369,15895+74])
                                Pexp_ident "_a3" (strip.ml[369,15895+71]..[369,15895+74])
                            ]
              <case>
                pattern (strip.ml[370,15971+4]..[370,15971+26])
                  Ppat_variant "Subtype"
                  Some
                    pattern (strip.ml[370,15971+13]..[370,15971+26])
                      Ppat_tuple
                      [
                        pattern (strip.ml[370,15971+14]..[370,15971+17])
                          Ppat_var "_a0" (strip.ml[370,15971+14]..[370,15971+17])
                        pattern (strip.ml[370,15971+18]..[370,15971+21])
                          Ppat_var "_a1" (strip.ml[370,15971+18]..[370,15971+21])
                        pattern (strip.ml[370,15971+22]..[370,15971+25])
                          Ppat_var "_a2" (strip.ml[370,15971+22]..[370,15971+25])
                      ]
                expression (strip.ml[371,16001+6]..[371,16001+68])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[371,16001+10]..[371,16001+13])
                        Ppat_var "_a1" (strip.ml[371,16001+10]..[371,16001+13])
                      expression (strip.ml[371,16001+16]..[371,16001+23])
                        Pexp_apply
                        expression (strip.ml[371,16001+16]..[371,16001+19])
                          Pexp_ident "exp" (strip.ml[371,16001+16]..[371,16001+19])
                        [
                          <label> ""
                            expression (strip.ml[371,16001+20]..[371,16001+23])
                              Pexp_ident "_a1" (strip.ml[371,16001+20]..[371,16001+23])
                        ]
                  ]
                  expression (strip.ml[371,16001+27]..[371,16001+68])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[371,16001+31]..[371,16001+34])
                          Ppat_var "_a2" (strip.ml[371,16001+31]..[371,16001+34])
                        expression (strip.ml[371,16001+37]..[371,16001+45])
                          Pexp_apply
                          expression (strip.ml[371,16001+37]..[371,16001+41])
                            Pexp_ident "ctyp" (strip.ml[371,16001+37]..[371,16001+41])
                          [
                            <label> ""
                              expression (strip.ml[371,16001+42]..[371,16001+45])
                                Pexp_ident "_a2" (strip.ml[371,16001+42]..[371,16001+45])
                          ]
                    ]
                    expression (strip.ml[371,16001+49]..[371,16001+68])
                      Pexp_variant "Subtype"
                      Some
                        expression (strip.ml[371,16001+58]..[371,16001+68])
                          Pexp_tuple
                          [
                            expression (strip.ml[371,16001+59]..[371,16001+62])
                              Pexp_ident "_a1" (strip.ml[371,16001+59]..[371,16001+62])
                            expression (strip.ml[371,16001+64]..[371,16001+67])
                              Pexp_ident "_a2" (strip.ml[371,16001+64]..[371,16001+67])
                          ]
              <case>
                pattern (strip.ml[372,16070+4]..[372,16070+24])
                  Ppat_variant "While"
                  Some
                    pattern (strip.ml[372,16070+11]..[372,16070+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[372,16070+12]..[372,16070+15])
                          Ppat_var "_a0" (strip.ml[372,16070+12]..[372,16070+15])
                        pattern (strip.ml[372,16070+16]..[372,16070+19])
                          Ppat_var "_a1" (strip.ml[372,16070+16]..[372,16070+19])
                        pattern (strip.ml[372,16070+20]..[372,16070+23])
                          Ppat_var "_a2" (strip.ml[372,16070+20]..[372,16070+23])
                      ]
                expression (strip.ml[373,16098+6]..[373,16098+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[373,16098+10]..[373,16098+13])
                        Ppat_var "_a1" (strip.ml[373,16098+10]..[373,16098+13])
                      expression (strip.ml[373,16098+16]..[373,16098+23])
                        Pexp_apply
                        expression (strip.ml[373,16098+16]..[373,16098+19])
                          Pexp_ident "exp" (strip.ml[373,16098+16]..[373,16098+19])
                        [
                          <label> ""
                            expression (strip.ml[373,16098+20]..[373,16098+23])
                              Pexp_ident "_a1" (strip.ml[373,16098+20]..[373,16098+23])
                        ]
                  ]
                  expression (strip.ml[373,16098+27]..[373,16098+65])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[373,16098+31]..[373,16098+34])
                          Ppat_var "_a2" (strip.ml[373,16098+31]..[373,16098+34])
                        expression (strip.ml[373,16098+37]..[373,16098+44])
                          Pexp_apply
                          expression (strip.ml[373,16098+37]..[373,16098+40])
                            Pexp_ident "exp" (strip.ml[373,16098+37]..[373,16098+40])
                          [
                            <label> ""
                              expression (strip.ml[373,16098+41]..[373,16098+44])
                                Pexp_ident "_a2" (strip.ml[373,16098+41]..[373,16098+44])
                          ]
                    ]
                    expression (strip.ml[373,16098+48]..[373,16098+65])
                      Pexp_variant "While"
                      Some
                        expression (strip.ml[373,16098+55]..[373,16098+65])
                          Pexp_tuple
                          [
                            expression (strip.ml[373,16098+56]..[373,16098+59])
                              Pexp_ident "_a1" (strip.ml[373,16098+56]..[373,16098+59])
                            expression (strip.ml[373,16098+61]..[373,16098+64])
                              Pexp_ident "_a2" (strip.ml[373,16098+61]..[373,16098+64])
                          ]
              <case>
                pattern (strip.ml[374,16164+4]..[374,16164+30])
                  Ppat_variant "LetOpen"
                  Some
                    pattern (strip.ml[374,16164+13]..[374,16164+30])
                      Ppat_tuple
                      [
                        pattern (strip.ml[374,16164+14]..[374,16164+17])
                          Ppat_var "_a0" (strip.ml[374,16164+14]..[374,16164+17])
                        pattern (strip.ml[374,16164+18]..[374,16164+21])
                          Ppat_var "_a1" (strip.ml[374,16164+18]..[374,16164+21])
                        pattern (strip.ml[374,16164+22]..[374,16164+25])
                          Ppat_var "_a2" (strip.ml[374,16164+22]..[374,16164+25])
                        pattern (strip.ml[374,16164+26]..[374,16164+29])
                          Ppat_var "_a3" (strip.ml[374,16164+26]..[374,16164+29])
                      ]
                expression (strip.ml[375,16198+6]..[376,16226+74])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[375,16198+10]..[375,16198+13])
                        Ppat_var "_a1" (strip.ml[375,16198+10]..[375,16198+13])
                      expression (strip.ml[375,16198+16]..[375,16198+24])
                        Pexp_apply
                        expression (strip.ml[375,16198+16]..[375,16198+20])
                          Pexp_ident "flag" (strip.ml[375,16198+16]..[375,16198+20])
                        [
                          <label> ""
                            expression (strip.ml[375,16198+21]..[375,16198+24])
                              Pexp_ident "_a1" (strip.ml[375,16198+21]..[375,16198+24])
                        ]
                  ]
                  expression (strip.ml[376,16226+6]..[376,16226+74])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[376,16226+10]..[376,16226+13])
                          Ppat_var "_a2" (strip.ml[376,16226+10]..[376,16226+13])
                        expression (strip.ml[376,16226+16]..[376,16226+25])
                          Pexp_apply
                          expression (strip.ml[376,16226+16]..[376,16226+21])
                            Pexp_ident "ident" (strip.ml[376,16226+16]..[376,16226+21])
                          [
                            <label> ""
                              expression (strip.ml[376,16226+22]..[376,16226+25])
                                Pexp_ident "_a2" (strip.ml[376,16226+22]..[376,16226+25])
                          ]
                    ]
                    expression (strip.ml[376,16226+29]..[376,16226+74])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[376,16226+33]..[376,16226+36])
                            Ppat_var "_a3" (strip.ml[376,16226+33]..[376,16226+36])
                          expression (strip.ml[376,16226+39]..[376,16226+46])
                            Pexp_apply
                            expression (strip.ml[376,16226+39]..[376,16226+42])
                              Pexp_ident "exp" (strip.ml[376,16226+39]..[376,16226+42])
                            [
                              <label> ""
                                expression (strip.ml[376,16226+43]..[376,16226+46])
                                  Pexp_ident "_a3" (strip.ml[376,16226+43]..[376,16226+46])
                            ]
                      ]
                      expression (strip.ml[376,16226+50]..[376,16226+74])
                        Pexp_variant "LetOpen"
                        Some
                          expression (strip.ml[376,16226+59]..[376,16226+74])
                            Pexp_tuple
                            [
                              expression (strip.ml[376,16226+60]..[376,16226+63])
                                Pexp_ident "_a1" (strip.ml[376,16226+60]..[376,16226+63])
                              expression (strip.ml[376,16226+65]..[376,16226+68])
                                Pexp_ident "_a2" (strip.ml[376,16226+65]..[376,16226+68])
                              expression (strip.ml[376,16226+70]..[376,16226+73])
                                Pexp_ident "_a3" (strip.ml[376,16226+70]..[376,16226+73])
                            ]
              <case>
                pattern (strip.ml[377,16301+4]..[377,16301+31])
                  Ppat_variant "LocalTypeFun"
                  Some
                    pattern (strip.ml[377,16301+18]..[377,16301+31])
                      Ppat_tuple
                      [
                        pattern (strip.ml[377,16301+19]..[377,16301+22])
                          Ppat_var "_a0" (strip.ml[377,16301+19]..[377,16301+22])
                        pattern (strip.ml[377,16301+23]..[377,16301+26])
                          Ppat_var "_a1" (strip.ml[377,16301+23]..[377,16301+26])
                        pattern (strip.ml[377,16301+27]..[377,16301+30])
                          Ppat_var "_a2" (strip.ml[377,16301+27]..[377,16301+30])
                      ]
                expression (strip.ml[378,16336+6]..[378,16336+76])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[378,16336+10]..[378,16336+13])
                        Ppat_var "_a1" (strip.ml[378,16336+10]..[378,16336+13])
                      expression (strip.ml[378,16336+16]..[378,16336+27])
                        Pexp_apply
                        expression (strip.ml[378,16336+16]..[378,16336+23])
                          Pexp_ident "alident" (strip.ml[378,16336+16]..[378,16336+23])
                        [
                          <label> ""
                            expression (strip.ml[378,16336+24]..[378,16336+27])
                              Pexp_ident "_a1" (strip.ml[378,16336+24]..[378,16336+27])
                        ]
                  ]
                  expression (strip.ml[378,16336+31]..[378,16336+76])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[378,16336+35]..[378,16336+38])
                          Ppat_var "_a2" (strip.ml[378,16336+35]..[378,16336+38])
                        expression (strip.ml[378,16336+41]..[378,16336+48])
                          Pexp_apply
                          expression (strip.ml[378,16336+41]..[378,16336+44])
                            Pexp_ident "exp" (strip.ml[378,16336+41]..[378,16336+44])
                          [
                            <label> ""
                              expression (strip.ml[378,16336+45]..[378,16336+48])
                                Pexp_ident "_a2" (strip.ml[378,16336+45]..[378,16336+48])
                          ]
                    ]
                    expression (strip.ml[378,16336+52]..[378,16336+76])
                      Pexp_variant "LocalTypeFun"
                      Some
                        expression (strip.ml[378,16336+66]..[378,16336+76])
                          Pexp_tuple
                          [
                            expression (strip.ml[378,16336+67]..[378,16336+70])
                              Pexp_ident "_a1" (strip.ml[378,16336+67]..[378,16336+70])
                            expression (strip.ml[378,16336+72]..[378,16336+75])
                              Pexp_ident "_a2" (strip.ml[378,16336+72]..[378,16336+75])
                          ]
              <case>
                pattern (strip.ml[379,16413+4]..[379,16413+26])
                  Ppat_variant "Package_exp"
                  Some
                    pattern (strip.ml[379,16413+17]..[379,16413+26])
                      Ppat_tuple
                      [
                        pattern (strip.ml[379,16413+18]..[379,16413+21])
                          Ppat_var "_a0" (strip.ml[379,16413+18]..[379,16413+21])
                        pattern (strip.ml[379,16413+22]..[379,16413+25])
                          Ppat_var "_a1" (strip.ml[379,16413+22]..[379,16413+25])
                      ]
                expression (strip.ml[379,16413+30]..[379,16413+68])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[379,16413+34]..[379,16413+37])
                        Ppat_var "_a1" (strip.ml[379,16413+34]..[379,16413+37])
                      expression (strip.ml[379,16413+40]..[379,16413+48])
                        Pexp_apply
                        expression (strip.ml[379,16413+40]..[379,16413+44])
                          Pexp_ident "mexp" (strip.ml[379,16413+40]..[379,16413+44])
                        [
                          <label> ""
                            expression (strip.ml[379,16413+45]..[379,16413+48])
                              Pexp_ident "_a1" (strip.ml[379,16413+45]..[379,16413+48])
                        ]
                  ]
                  expression (strip.ml[379,16413+52]..[379,16413+68])
                    Pexp_variant "Package_exp"
                    Some
                      expression (strip.ml[379,16413+65]..[379,16413+68])
                        Pexp_ident "_a1" (strip.ml[379,16413+65]..[379,16413+68])
            ]
          core_type (strip.ml[293,12404+9]..[293,12404+30])
            Ptyp_arrow
            ""
            core_type (strip.ml[293,12404+9]..[293,12404+17])
              Ptyp_constr "Astf.exp" (strip.ml[293,12404+9]..[293,12404+17])
              []
            core_type (strip.ml[293,12404+21]..[293,12404+30])
              Ptyp_constr "Astfn.exp" (strip.ml[293,12404+21]..[293,12404+30])
              []
      <def>
        pattern (strip.ml[380,16482+4]..[380,16482+11])
          Ppat_var "rec_exp" (strip.ml[380,16482+4]..[380,16482+11])
        expression (strip.ml[380,16482+11]..[387,16780+45]) ghost
          Pexp_constraint
          expression (strip.ml[381,16527+2]..[387,16780+45])
            Pexp_function
            [
              <case>
                pattern (strip.ml[382,16538+4]..[382,16538+22])
                  Ppat_variant "Sem"
                  Some
                    pattern (strip.ml[382,16538+9]..[382,16538+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[382,16538+10]..[382,16538+13])
                          Ppat_var "_a0" (strip.ml[382,16538+10]..[382,16538+13])
                        pattern (strip.ml[382,16538+14]..[382,16538+17])
                          Ppat_var "_a1" (strip.ml[382,16538+14]..[382,16538+17])
                        pattern (strip.ml[382,16538+18]..[382,16538+21])
                          Ppat_var "_a2" (strip.ml[382,16538+18]..[382,16538+21])
                      ]
                expression (strip.ml[383,16564+6]..[383,16564+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[383,16564+10]..[383,16564+13])
                        Ppat_var "_a1" (strip.ml[383,16564+10]..[383,16564+13])
                      expression (strip.ml[383,16564+16]..[383,16564+27])
                        Pexp_apply
                        expression (strip.ml[383,16564+16]..[383,16564+23])
                          Pexp_ident "rec_exp" (strip.ml[383,16564+16]..[383,16564+23])
                        [
                          <label> ""
                            expression (strip.ml[383,16564+24]..[383,16564+27])
                              Pexp_ident "_a1" (strip.ml[383,16564+24]..[383,16564+27])
                        ]
                  ]
                  expression (strip.ml[383,16564+31]..[383,16564+71])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[383,16564+35]..[383,16564+38])
                          Ppat_var "_a2" (strip.ml[383,16564+35]..[383,16564+38])
                        expression (strip.ml[383,16564+41]..[383,16564+52])
                          Pexp_apply
                          expression (strip.ml[383,16564+41]..[383,16564+48])
                            Pexp_ident "rec_exp" (strip.ml[383,16564+41]..[383,16564+48])
                          [
                            <label> ""
                              expression (strip.ml[383,16564+49]..[383,16564+52])
                                Pexp_ident "_a2" (strip.ml[383,16564+49]..[383,16564+52])
                          ]
                    ]
                    expression (strip.ml[383,16564+56]..[383,16564+71])
                      Pexp_variant "Sem"
                      Some
                        expression (strip.ml[383,16564+61]..[383,16564+71])
                          Pexp_tuple
                          [
                            expression (strip.ml[383,16564+62]..[383,16564+65])
                              Pexp_ident "_a1" (strip.ml[383,16564+62]..[383,16564+65])
                            expression (strip.ml[383,16564+67]..[383,16564+70])
                              Pexp_ident "_a2" (strip.ml[383,16564+67]..[383,16564+70])
                          ]
              <case>
                pattern (strip.ml[384,16636+4]..[384,16636+26])
                  Ppat_variant "RecBind"
                  Some
                    pattern (strip.ml[384,16636+13]..[384,16636+26])
                      Ppat_tuple
                      [
                        pattern (strip.ml[384,16636+14]..[384,16636+17])
                          Ppat_var "_a0" (strip.ml[384,16636+14]..[384,16636+17])
                        pattern (strip.ml[384,16636+18]..[384,16636+21])
                          Ppat_var "_a1" (strip.ml[384,16636+18]..[384,16636+21])
                        pattern (strip.ml[384,16636+22]..[384,16636+25])
                          Ppat_var "_a2" (strip.ml[384,16636+22]..[384,16636+25])
                      ]
                expression (strip.ml[385,16666+6]..[385,16666+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[385,16666+10]..[385,16666+13])
                        Ppat_var "_a1" (strip.ml[385,16666+10]..[385,16666+13])
                      expression (strip.ml[385,16666+16]..[385,16666+23])
                        Pexp_apply
                        expression (strip.ml[385,16666+16]..[385,16666+19])
                          Pexp_ident "vid" (strip.ml[385,16666+16]..[385,16666+19])
                        [
                          <label> ""
                            expression (strip.ml[385,16666+20]..[385,16666+23])
                              Pexp_ident "_a1" (strip.ml[385,16666+20]..[385,16666+23])
                        ]
                  ]
                  expression (strip.ml[385,16666+27]..[385,16666+67])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[385,16666+31]..[385,16666+34])
                          Ppat_var "_a2" (strip.ml[385,16666+31]..[385,16666+34])
                        expression (strip.ml[385,16666+37]..[385,16666+44])
                          Pexp_apply
                          expression (strip.ml[385,16666+37]..[385,16666+40])
                            Pexp_ident "exp" (strip.ml[385,16666+37]..[385,16666+40])
                          [
                            <label> ""
                              expression (strip.ml[385,16666+41]..[385,16666+44])
                                Pexp_ident "_a2" (strip.ml[385,16666+41]..[385,16666+44])
                          ]
                    ]
                    expression (strip.ml[385,16666+48]..[385,16666+67])
                      Pexp_variant "RecBind"
                      Some
                        expression (strip.ml[385,16666+57]..[385,16666+67])
                          Pexp_tuple
                          [
                            expression (strip.ml[385,16666+58]..[385,16666+61])
                              Pexp_ident "_a1" (strip.ml[385,16666+58]..[385,16666+61])
                            expression (strip.ml[385,16666+63]..[385,16666+66])
                              Pexp_ident "_a2" (strip.ml[385,16666+63]..[385,16666+66])
                          ]
              <case>
                pattern (strip.ml[386,16734+4]..[386,16734+15])
                  Ppat_alias "_a0" (strip.ml[386,16734+12]..[386,16734+15])
                  pattern (strip.ml[386,16734+4]..[386,16734+8])
                    Ppat_type
                    "any" (strip.ml[386,16734+5]..[386,16734+8])
                expression (strip.ml[386,16734+19]..[386,16734+45]) ghost
                  Pexp_coerce
                  expression (strip.ml[386,16734+20]..[386,16734+27])
                    Pexp_apply
                    expression (strip.ml[386,16734+20]..[386,16734+23])
                      Pexp_ident "any" (strip.ml[386,16734+20]..[386,16734+23])
                    [
                      <label> ""
                        expression (strip.ml[386,16734+24]..[386,16734+27])
                          Pexp_ident "_a0" (strip.ml[386,16734+24]..[386,16734+27])
                    ]
                  None
                  core_type (strip.ml[386,16734+31]..[386,16734+44])
                    Ptyp_constr "Astfn.rec_exp" (strip.ml[386,16734+31]..[386,16734+44])
                    []
              <case>
                pattern (strip.ml[387,16780+4]..[387,16780+15])
                  Ppat_alias "_a0" (strip.ml[387,16780+12]..[387,16780+15])
                  pattern (strip.ml[387,16780+4]..[387,16780+8])
                    Ppat_type
                    "ant" (strip.ml[387,16780+5]..[387,16780+8])
                expression (strip.ml[387,16780+19]..[387,16780+45]) ghost
                  Pexp_coerce
                  expression (strip.ml[387,16780+20]..[387,16780+27])
                    Pexp_apply
                    expression (strip.ml[387,16780+20]..[387,16780+23])
                      Pexp_ident "ant" (strip.ml[387,16780+20]..[387,16780+23])
                    [
                      <label> ""
                        expression (strip.ml[387,16780+24]..[387,16780+27])
                          Pexp_ident "_a0" (strip.ml[387,16780+24]..[387,16780+27])
                    ]
                  None
                  core_type (strip.ml[387,16780+31]..[387,16780+44])
                    Ptyp_constr "Astfn.rec_exp" (strip.ml[387,16780+31]..[387,16780+44])
                    []
            ]
          core_type (strip.ml[380,16482+13]..[380,16482+42])
            Ptyp_arrow
            ""
            core_type (strip.ml[380,16482+13]..[380,16482+25])
              Ptyp_constr "Astf.rec_exp" (strip.ml[380,16482+13]..[380,16482+25])
              []
            core_type (strip.ml[380,16482+29]..[380,16482+42])
              Ptyp_constr "Astfn.rec_exp" (strip.ml[380,16482+29]..[380,16482+42])
              []
      <def>
        pattern (strip.ml[388,16826+4]..[388,16826+8])
          Ppat_var "mtyp" (strip.ml[388,16826+4]..[388,16826+8])
        expression (strip.ml[388,16826+8]..[399,17309+42]) ghost
          Pexp_constraint
          expression (strip.ml[389,16862+2]..[399,17309+42])
            Pexp_function
            [
              <case>
                pattern (strip.ml[390,16873+4]..[390,16873+18])
                  Ppat_alias "_a0" (strip.ml[390,16873+15]..[390,16873+18])
                  pattern (strip.ml[390,16873+4]..[390,16873+11])
                    Ppat_type
                    "ident'" (strip.ml[390,16873+5]..[390,16873+11])
                expression (strip.ml[390,16873+22]..[390,16873+48]) ghost
                  Pexp_coerce
                  expression (strip.ml[390,16873+23]..[390,16873+33])
                    Pexp_apply
                    expression (strip.ml[390,16873+23]..[390,16873+29])
                      Pexp_ident "ident'" (strip.ml[390,16873+23]..[390,16873+29])
                    [
                      <label> ""
                        expression (strip.ml[390,16873+30]..[390,16873+33])
                          Pexp_ident "_a0" (strip.ml[390,16873+30]..[390,16873+33])
                    ]
                  None
                  core_type (strip.ml[390,16873+37]..[390,16873+47])
                    Ptyp_constr "Astfn.mtyp" (strip.ml[390,16873+37]..[390,16873+47])
                    []
              <case>
                pattern (strip.ml[391,16922+4]..[391,16922+18])
                  Ppat_variant "Sig"
                  Some
                    pattern (strip.ml[391,16922+9]..[391,16922+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[391,16922+10]..[391,16922+13])
                          Ppat_var "_a0" (strip.ml[391,16922+10]..[391,16922+13])
                        pattern (strip.ml[391,16922+14]..[391,16922+17])
                          Ppat_var "_a1" (strip.ml[391,16922+14]..[391,16922+17])
                      ]
                expression (strip.ml[391,16922+22]..[391,16922+52])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[391,16922+26]..[391,16922+29])
                        Ppat_var "_a1" (strip.ml[391,16922+26]..[391,16922+29])
                      expression (strip.ml[391,16922+32]..[391,16922+40])
                        Pexp_apply
                        expression (strip.ml[391,16922+32]..[391,16922+36])
                          Pexp_ident "sigi" (strip.ml[391,16922+32]..[391,16922+36])
                        [
                          <label> ""
                            expression (strip.ml[391,16922+37]..[391,16922+40])
                              Pexp_ident "_a1" (strip.ml[391,16922+37]..[391,16922+40])
                        ]
                  ]
                  expression (strip.ml[391,16922+44]..[391,16922+52])
                    Pexp_variant "Sig"
                    Some
                      expression (strip.ml[391,16922+49]..[391,16922+52])
                        Pexp_ident "_a1" (strip.ml[391,16922+49]..[391,16922+52])
              <case>
                pattern (strip.ml[392,16975+4]..[392,16975+15])
                  Ppat_variant "SigEnd"
                  Some
                    pattern (strip.ml[392,16975+12]..[392,16975+15])
                      Ppat_var "_a0" (strip.ml[392,16975+12]..[392,16975+15])
                expression (strip.ml[392,16975+19]..[392,16975+26])
                  Pexp_variant "SigEnd"
                  None
              <case>
                pattern (strip.ml[393,17002+4]..[393,17002+30])
                  Ppat_variant "Functor"
                  Some
                    pattern (strip.ml[393,17002+13]..[393,17002+30])
                      Ppat_tuple
                      [
                        pattern (strip.ml[393,17002+14]..[393,17002+17])
                          Ppat_var "_a0" (strip.ml[393,17002+14]..[393,17002+17])
                        pattern (strip.ml[393,17002+18]..[393,17002+21])
                          Ppat_var "_a1" (strip.ml[393,17002+18]..[393,17002+21])
                        pattern (strip.ml[393,17002+22]..[393,17002+25])
                          Ppat_var "_a2" (strip.ml[393,17002+22]..[393,17002+25])
                        pattern (strip.ml[393,17002+26]..[393,17002+29])
                          Ppat_var "_a3" (strip.ml[393,17002+26]..[393,17002+29])
                      ]
                expression (strip.ml[394,17036+6]..[395,17067+74])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[394,17036+10]..[394,17036+13])
                        Ppat_var "_a1" (strip.ml[394,17036+10]..[394,17036+13])
                      expression (strip.ml[394,17036+16]..[394,17036+27])
                        Pexp_apply
                        expression (strip.ml[394,17036+16]..[394,17036+23])
                          Pexp_ident "auident" (strip.ml[394,17036+16]..[394,17036+23])
                        [
                          <label> ""
                            expression (strip.ml[394,17036+24]..[394,17036+27])
                              Pexp_ident "_a1" (strip.ml[394,17036+24]..[394,17036+27])
                        ]
                  ]
                  expression (strip.ml[395,17067+6]..[395,17067+74])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[395,17067+10]..[395,17067+13])
                          Ppat_var "_a2" (strip.ml[395,17067+10]..[395,17067+13])
                        expression (strip.ml[395,17067+16]..[395,17067+24])
                          Pexp_apply
                          expression (strip.ml[395,17067+16]..[395,17067+20])
                            Pexp_ident "mtyp" (strip.ml[395,17067+16]..[395,17067+20])
                          [
                            <label> ""
                              expression (strip.ml[395,17067+21]..[395,17067+24])
                                Pexp_ident "_a2" (strip.ml[395,17067+21]..[395,17067+24])
                          ]
                    ]
                    expression (strip.ml[395,17067+28]..[395,17067+74])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[395,17067+32]..[395,17067+35])
                            Ppat_var "_a3" (strip.ml[395,17067+32]..[395,17067+35])
                          expression (strip.ml[395,17067+38]..[395,17067+46])
                            Pexp_apply
                            expression (strip.ml[395,17067+38]..[395,17067+42])
                              Pexp_ident "mtyp" (strip.ml[395,17067+38]..[395,17067+42])
                            [
                              <label> ""
                                expression (strip.ml[395,17067+43]..[395,17067+46])
                                  Pexp_ident "_a3" (strip.ml[395,17067+43]..[395,17067+46])
                            ]
                      ]
                      expression (strip.ml[395,17067+50]..[395,17067+74])
                        Pexp_variant "Functor"
                        Some
                          expression (strip.ml[395,17067+59]..[395,17067+74])
                            Pexp_tuple
                            [
                              expression (strip.ml[395,17067+60]..[395,17067+63])
                                Pexp_ident "_a1" (strip.ml[395,17067+60]..[395,17067+63])
                              expression (strip.ml[395,17067+65]..[395,17067+68])
                                Pexp_ident "_a2" (strip.ml[395,17067+65]..[395,17067+68])
                              expression (strip.ml[395,17067+70]..[395,17067+73])
                                Pexp_ident "_a3" (strip.ml[395,17067+70]..[395,17067+73])
                            ]
              <case>
                pattern (strip.ml[396,17142+4]..[396,17142+23])
                  Ppat_variant "With"
                  Some
                    pattern (strip.ml[396,17142+10]..[396,17142+23])
                      Ppat_tuple
                      [
                        pattern (strip.ml[396,17142+11]..[396,17142+14])
                          Ppat_var "_a0" (strip.ml[396,17142+11]..[396,17142+14])
                        pattern (strip.ml[396,17142+15]..[396,17142+18])
                          Ppat_var "_a1" (strip.ml[396,17142+15]..[396,17142+18])
                        pattern (strip.ml[396,17142+19]..[396,17142+22])
                          Ppat_var "_a2" (strip.ml[396,17142+19]..[396,17142+22])
                      ]
                expression (strip.ml[397,17169+6]..[397,17169+68])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[397,17169+10]..[397,17169+13])
                        Ppat_var "_a1" (strip.ml[397,17169+10]..[397,17169+13])
                      expression (strip.ml[397,17169+16]..[397,17169+24])
                        Pexp_apply
                        expression (strip.ml[397,17169+16]..[397,17169+20])
                          Pexp_ident "mtyp" (strip.ml[397,17169+16]..[397,17169+20])
                        [
                          <label> ""
                            expression (strip.ml[397,17169+21]..[397,17169+24])
                              Pexp_ident "_a1" (strip.ml[397,17169+21]..[397,17169+24])
                        ]
                  ]
                  expression (strip.ml[397,17169+28]..[397,17169+68])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[397,17169+32]..[397,17169+35])
                          Ppat_var "_a2" (strip.ml[397,17169+32]..[397,17169+35])
                        expression (strip.ml[397,17169+38]..[397,17169+48])
                          Pexp_apply
                          expression (strip.ml[397,17169+38]..[397,17169+44])
                            Pexp_ident "constr" (strip.ml[397,17169+38]..[397,17169+44])
                          [
                            <label> ""
                              expression (strip.ml[397,17169+45]..[397,17169+48])
                                Pexp_ident "_a2" (strip.ml[397,17169+45]..[397,17169+48])
                          ]
                    ]
                    expression (strip.ml[397,17169+52]..[397,17169+68])
                      Pexp_variant "With"
                      Some
                        expression (strip.ml[397,17169+58]..[397,17169+68])
                          Pexp_tuple
                          [
                            expression (strip.ml[397,17169+59]..[397,17169+62])
                              Pexp_ident "_a1" (strip.ml[397,17169+59]..[397,17169+62])
                            expression (strip.ml[397,17169+64]..[397,17169+67])
                              Pexp_ident "_a2" (strip.ml[397,17169+64]..[397,17169+67])
                          ]
              <case>
                pattern (strip.ml[398,17238+4]..[398,17238+27])
                  Ppat_variant "ModuleTypeOf"
                  Some
                    pattern (strip.ml[398,17238+18]..[398,17238+27])
                      Ppat_tuple
                      [
                        pattern (strip.ml[398,17238+19]..[398,17238+22])
                          Ppat_var "_a0" (strip.ml[398,17238+19]..[398,17238+22])
                        pattern (strip.ml[398,17238+23]..[398,17238+26])
                          Ppat_var "_a1" (strip.ml[398,17238+23]..[398,17238+26])
                      ]
                expression (strip.ml[398,17238+31]..[398,17238+70])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[398,17238+35]..[398,17238+38])
                        Ppat_var "_a1" (strip.ml[398,17238+35]..[398,17238+38])
                      expression (strip.ml[398,17238+41]..[398,17238+49])
                        Pexp_apply
                        expression (strip.ml[398,17238+41]..[398,17238+45])
                          Pexp_ident "mexp" (strip.ml[398,17238+41]..[398,17238+45])
                        [
                          <label> ""
                            expression (strip.ml[398,17238+46]..[398,17238+49])
                              Pexp_ident "_a1" (strip.ml[398,17238+46]..[398,17238+49])
                        ]
                  ]
                  expression (strip.ml[398,17238+53]..[398,17238+70])
                    Pexp_variant "ModuleTypeOf"
                    Some
                      expression (strip.ml[398,17238+67]..[398,17238+70])
                        Pexp_ident "_a1" (strip.ml[398,17238+67]..[398,17238+70])
              <case>
                pattern (strip.ml[399,17309+4]..[399,17309+15])
                  Ppat_alias "_a0" (strip.ml[399,17309+12]..[399,17309+15])
                  pattern (strip.ml[399,17309+4]..[399,17309+8])
                    Ppat_type
                    "ant" (strip.ml[399,17309+5]..[399,17309+8])
                expression (strip.ml[399,17309+19]..[399,17309+42]) ghost
                  Pexp_coerce
                  expression (strip.ml[399,17309+20]..[399,17309+27])
                    Pexp_apply
                    expression (strip.ml[399,17309+20]..[399,17309+23])
                      Pexp_ident "ant" (strip.ml[399,17309+20]..[399,17309+23])
                    [
                      <label> ""
                        expression (strip.ml[399,17309+24]..[399,17309+27])
                          Pexp_ident "_a0" (strip.ml[399,17309+24]..[399,17309+27])
                    ]
                  None
                  core_type (strip.ml[399,17309+31]..[399,17309+41])
                    Ptyp_constr "Astfn.mtyp" (strip.ml[399,17309+31]..[399,17309+41])
                    []
            ]
          core_type (strip.ml[388,16826+10]..[388,16826+33])
            Ptyp_arrow
            ""
            core_type (strip.ml[388,16826+10]..[388,16826+19])
              Ptyp_constr "Astf.mtyp" (strip.ml[388,16826+10]..[388,16826+19])
              []
            core_type (strip.ml[388,16826+23]..[388,16826+33])
              Ptyp_constr "Astfn.mtyp" (strip.ml[388,16826+23]..[388,16826+33])
              []
      <def>
        pattern (strip.ml[400,17352+4]..[400,17352+8])
          Ppat_var "sigi" (strip.ml[400,17352+4]..[400,17352+8])
        expression (strip.ml[400,17352+8]..[427,18692+42]) ghost
          Pexp_constraint
          expression (strip.ml[401,17388+2]..[427,18692+42])
            Pexp_function
            [
              <case>
                pattern (strip.ml[402,17399+4]..[402,17399+22])
                  Ppat_variant "Val"
                  Some
                    pattern (strip.ml[402,17399+9]..[402,17399+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[402,17399+10]..[402,17399+13])
                          Ppat_var "_a0" (strip.ml[402,17399+10]..[402,17399+13])
                        pattern (strip.ml[402,17399+14]..[402,17399+17])
                          Ppat_var "_a1" (strip.ml[402,17399+14]..[402,17399+17])
                        pattern (strip.ml[402,17399+18]..[402,17399+21])
                          Ppat_var "_a2" (strip.ml[402,17399+18]..[402,17399+21])
                      ]
                expression (strip.ml[403,17425+6]..[403,17425+68])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[403,17425+10]..[403,17425+13])
                        Ppat_var "_a1" (strip.ml[403,17425+10]..[403,17425+13])
                      expression (strip.ml[403,17425+16]..[403,17425+27])
                        Pexp_apply
                        expression (strip.ml[403,17425+16]..[403,17425+23])
                          Pexp_ident "alident" (strip.ml[403,17425+16]..[403,17425+23])
                        [
                          <label> ""
                            expression (strip.ml[403,17425+24]..[403,17425+27])
                              Pexp_ident "_a1" (strip.ml[403,17425+24]..[403,17425+27])
                        ]
                  ]
                  expression (strip.ml[403,17425+31]..[403,17425+68])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[403,17425+35]..[403,17425+38])
                          Ppat_var "_a2" (strip.ml[403,17425+35]..[403,17425+38])
                        expression (strip.ml[403,17425+41]..[403,17425+49])
                          Pexp_apply
                          expression (strip.ml[403,17425+41]..[403,17425+45])
                            Pexp_ident "ctyp" (strip.ml[403,17425+41]..[403,17425+45])
                          [
                            <label> ""
                              expression (strip.ml[403,17425+46]..[403,17425+49])
                                Pexp_ident "_a2" (strip.ml[403,17425+46]..[403,17425+49])
                          ]
                    ]
                    expression (strip.ml[403,17425+53]..[403,17425+68])
                      Pexp_variant "Val"
                      Some
                        expression (strip.ml[403,17425+58]..[403,17425+68])
                          Pexp_tuple
                          [
                            expression (strip.ml[403,17425+59]..[403,17425+62])
                              Pexp_ident "_a1" (strip.ml[403,17425+59]..[403,17425+62])
                            expression (strip.ml[403,17425+64]..[403,17425+67])
                              Pexp_ident "_a2" (strip.ml[403,17425+64]..[403,17425+67])
                          ]
              <case>
                pattern (strip.ml[404,17494+4]..[404,17494+31])
                  Ppat_variant "External"
                  Some
                    pattern (strip.ml[404,17494+14]..[404,17494+31])
                      Ppat_tuple
                      [
                        pattern (strip.ml[404,17494+15]..[404,17494+18])
                          Ppat_var "_a0" (strip.ml[404,17494+15]..[404,17494+18])
                        pattern (strip.ml[404,17494+19]..[404,17494+22])
                          Ppat_var "_a1" (strip.ml[404,17494+19]..[404,17494+22])
                        pattern (strip.ml[404,17494+23]..[404,17494+26])
                          Ppat_var "_a2" (strip.ml[404,17494+23]..[404,17494+26])
                        pattern (strip.ml[404,17494+27]..[404,17494+30])
                          Ppat_var "_a3" (strip.ml[404,17494+27]..[404,17494+30])
                      ]
                expression (strip.ml[405,17529+6]..[407,17588+56])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[405,17529+10]..[405,17529+13])
                        Ppat_var "_a1" (strip.ml[405,17529+10]..[405,17529+13])
                      expression (strip.ml[405,17529+16]..[405,17529+27])
                        Pexp_apply
                        expression (strip.ml[405,17529+16]..[405,17529+23])
                          Pexp_ident "alident" (strip.ml[405,17529+16]..[405,17529+23])
                        [
                          <label> ""
                            expression (strip.ml[405,17529+24]..[405,17529+27])
                              Pexp_ident "_a1" (strip.ml[405,17529+24]..[405,17529+27])
                        ]
                  ]
                  expression (strip.ml[406,17560+6]..[407,17588+56])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[406,17560+10]..[406,17560+13])
                          Ppat_var "_a2" (strip.ml[406,17560+10]..[406,17560+13])
                        expression (strip.ml[406,17560+16]..[406,17560+24])
                          Pexp_apply
                          expression (strip.ml[406,17560+16]..[406,17560+20])
                            Pexp_ident "ctyp" (strip.ml[406,17560+16]..[406,17560+20])
                          [
                            <label> ""
                              expression (strip.ml[406,17560+21]..[406,17560+24])
                                Pexp_ident "_a2" (strip.ml[406,17560+21]..[406,17560+24])
                          ]
                    ]
                    expression (strip.ml[407,17588+6]..[407,17588+56])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[407,17588+10]..[407,17588+13])
                            Ppat_var "_a3" (strip.ml[407,17588+10]..[407,17588+13])
                          expression (strip.ml[407,17588+16]..[407,17588+27])
                            Pexp_apply
                            expression (strip.ml[407,17588+16]..[407,17588+23])
                              Pexp_ident "strings" (strip.ml[407,17588+16]..[407,17588+23])
                            [
                              <label> ""
                                expression (strip.ml[407,17588+24]..[407,17588+27])
                                  Pexp_ident "_a3" (strip.ml[407,17588+24]..[407,17588+27])
                            ]
                      ]
                      expression (strip.ml[407,17588+31]..[407,17588+56])
                        Pexp_variant "External"
                        Some
                          expression (strip.ml[407,17588+41]..[407,17588+56])
                            Pexp_tuple
                            [
                              expression (strip.ml[407,17588+42]..[407,17588+45])
                                Pexp_ident "_a1" (strip.ml[407,17588+42]..[407,17588+45])
                              expression (strip.ml[407,17588+47]..[407,17588+50])
                                Pexp_ident "_a2" (strip.ml[407,17588+47]..[407,17588+50])
                              expression (strip.ml[407,17588+52]..[407,17588+55])
                                Pexp_ident "_a3" (strip.ml[407,17588+52]..[407,17588+55])
                            ]
              <case>
                pattern (strip.ml[408,17645+4]..[408,17645+19])
                  Ppat_variant "Type"
                  Some
                    pattern (strip.ml[408,17645+10]..[408,17645+19])
                      Ppat_tuple
                      [
                        pattern (strip.ml[408,17645+11]..[408,17645+14])
                          Ppat_var "_a0" (strip.ml[408,17645+11]..[408,17645+14])
                        pattern (strip.ml[408,17645+15]..[408,17645+18])
                          Ppat_var "_a1" (strip.ml[408,17645+15]..[408,17645+18])
                      ]
                expression (strip.ml[408,17645+23]..[408,17645+58])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[408,17645+27]..[408,17645+30])
                        Ppat_var "_a1" (strip.ml[408,17645+27]..[408,17645+30])
                      expression (strip.ml[408,17645+33]..[408,17645+45])
                        Pexp_apply
                        expression (strip.ml[408,17645+33]..[408,17645+41])
                          Pexp_ident "typedecl" (strip.ml[408,17645+33]..[408,17645+41])
                        [
                          <label> ""
                            expression (strip.ml[408,17645+42]..[408,17645+45])
                              Pexp_ident "_a1" (strip.ml[408,17645+42]..[408,17645+45])
                        ]
                  ]
                  expression (strip.ml[408,17645+49]..[408,17645+58])
                    Pexp_variant "Type"
                    Some
                      expression (strip.ml[408,17645+55]..[408,17645+58])
                        Pexp_ident "_a1" (strip.ml[408,17645+55]..[408,17645+58])
              <case>
                pattern (strip.ml[409,17704+4]..[409,17704+24])
                  Ppat_variant "Exception"
                  Some
                    pattern (strip.ml[409,17704+15]..[409,17704+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[409,17704+16]..[409,17704+19])
                          Ppat_var "_a0" (strip.ml[409,17704+16]..[409,17704+19])
                        pattern (strip.ml[409,17704+20]..[409,17704+23])
                          Ppat_var "_a1" (strip.ml[409,17704+20]..[409,17704+23])
                      ]
                expression (strip.ml[409,17704+28]..[409,17704+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[409,17704+32]..[409,17704+35])
                        Ppat_var "_a1" (strip.ml[409,17704+32]..[409,17704+35])
                      expression (strip.ml[409,17704+38]..[409,17704+49])
                        Pexp_apply
                        expression (strip.ml[409,17704+38]..[409,17704+45])
                          Pexp_ident "of_ctyp" (strip.ml[409,17704+38]..[409,17704+45])
                        [
                          <label> ""
                            expression (strip.ml[409,17704+46]..[409,17704+49])
                              Pexp_ident "_a1" (strip.ml[409,17704+46]..[409,17704+49])
                        ]
                  ]
                  expression (strip.ml[409,17704+53]..[409,17704+67])
                    Pexp_variant "Exception"
                    Some
                      expression (strip.ml[409,17704+64]..[409,17704+67])
                        Pexp_ident "_a1" (strip.ml[409,17704+64]..[409,17704+67])
              <case>
                pattern (strip.ml[410,17772+4]..[410,17772+20])
                  Ppat_variant "Class"
                  Some
                    pattern (strip.ml[410,17772+11]..[410,17772+20])
                      Ppat_tuple
                      [
                        pattern (strip.ml[410,17772+12]..[410,17772+15])
                          Ppat_var "_a0" (strip.ml[410,17772+12]..[410,17772+15])
                        pattern (strip.ml[410,17772+16]..[410,17772+19])
                          Ppat_var "_a1" (strip.ml[410,17772+16]..[410,17772+19])
                      ]
                expression (strip.ml[410,17772+24]..[410,17772+59])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[410,17772+28]..[410,17772+31])
                        Ppat_var "_a1" (strip.ml[410,17772+28]..[410,17772+31])
                      expression (strip.ml[410,17772+34]..[410,17772+45])
                        Pexp_apply
                        expression (strip.ml[410,17772+34]..[410,17772+41])
                          Pexp_ident "cltdecl" (strip.ml[410,17772+34]..[410,17772+41])
                        [
                          <label> ""
                            expression (strip.ml[410,17772+42]..[410,17772+45])
                              Pexp_ident "_a1" (strip.ml[410,17772+42]..[410,17772+45])
                        ]
                  ]
                  expression (strip.ml[410,17772+49]..[410,17772+59])
                    Pexp_variant "Class"
                    Some
                      expression (strip.ml[410,17772+56]..[410,17772+59])
                        Pexp_ident "_a1" (strip.ml[410,17772+56]..[410,17772+59])
              <case>
                pattern (strip.ml[411,17832+4]..[411,17832+24])
                  Ppat_variant "ClassType"
                  Some
                    pattern (strip.ml[411,17832+15]..[411,17832+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[411,17832+16]..[411,17832+19])
                          Ppat_var "_a0" (strip.ml[411,17832+16]..[411,17832+19])
                        pattern (strip.ml[411,17832+20]..[411,17832+23])
                          Ppat_var "_a1" (strip.ml[411,17832+20]..[411,17832+23])
                      ]
                expression (strip.ml[411,17832+28]..[411,17832+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[411,17832+32]..[411,17832+35])
                        Ppat_var "_a1" (strip.ml[411,17832+32]..[411,17832+35])
                      expression (strip.ml[411,17832+38]..[411,17832+49])
                        Pexp_apply
                        expression (strip.ml[411,17832+38]..[411,17832+45])
                          Pexp_ident "cltdecl" (strip.ml[411,17832+38]..[411,17832+45])
                        [
                          <label> ""
                            expression (strip.ml[411,17832+46]..[411,17832+49])
                              Pexp_ident "_a1" (strip.ml[411,17832+46]..[411,17832+49])
                        ]
                  ]
                  expression (strip.ml[411,17832+53]..[411,17832+67])
                    Pexp_variant "ClassType"
                    Some
                      expression (strip.ml[411,17832+64]..[411,17832+67])
                        Pexp_ident "_a1" (strip.ml[411,17832+64]..[411,17832+67])
              <case>
                pattern (strip.ml[412,17900+4]..[412,17900+25])
                  Ppat_variant "Module"
                  Some
                    pattern (strip.ml[412,17900+12]..[412,17900+25])
                      Ppat_tuple
                      [
                        pattern (strip.ml[412,17900+13]..[412,17900+16])
                          Ppat_var "_a0" (strip.ml[412,17900+13]..[412,17900+16])
                        pattern (strip.ml[412,17900+17]..[412,17900+20])
                          Ppat_var "_a1" (strip.ml[412,17900+17]..[412,17900+20])
                        pattern (strip.ml[412,17900+21]..[412,17900+24])
                          Ppat_var "_a2" (strip.ml[412,17900+21]..[412,17900+24])
                      ]
                expression (strip.ml[413,17929+6]..[413,17929+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[413,17929+10]..[413,17929+13])
                        Ppat_var "_a1" (strip.ml[413,17929+10]..[413,17929+13])
                      expression (strip.ml[413,17929+16]..[413,17929+27])
                        Pexp_apply
                        expression (strip.ml[413,17929+16]..[413,17929+23])
                          Pexp_ident "auident" (strip.ml[413,17929+16]..[413,17929+23])
                        [
                          <label> ""
                            expression (strip.ml[413,17929+24]..[413,17929+27])
                              Pexp_ident "_a1" (strip.ml[413,17929+24]..[413,17929+27])
                        ]
                  ]
                  expression (strip.ml[413,17929+31]..[413,17929+71])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[413,17929+35]..[413,17929+38])
                          Ppat_var "_a2" (strip.ml[413,17929+35]..[413,17929+38])
                        expression (strip.ml[413,17929+41]..[413,17929+49])
                          Pexp_apply
                          expression (strip.ml[413,17929+41]..[413,17929+45])
                            Pexp_ident "mtyp" (strip.ml[413,17929+41]..[413,17929+45])
                          [
                            <label> ""
                              expression (strip.ml[413,17929+46]..[413,17929+49])
                                Pexp_ident "_a2" (strip.ml[413,17929+46]..[413,17929+49])
                          ]
                    ]
                    expression (strip.ml[413,17929+53]..[413,17929+71])
                      Pexp_variant "Module"
                      Some
                        expression (strip.ml[413,17929+61]..[413,17929+71])
                          Pexp_tuple
                          [
                            expression (strip.ml[413,17929+62]..[413,17929+65])
                              Pexp_ident "_a1" (strip.ml[413,17929+62]..[413,17929+65])
                            expression (strip.ml[413,17929+67]..[413,17929+70])
                              Pexp_ident "_a2" (strip.ml[413,17929+67]..[413,17929+70])
                          ]
              <case>
                pattern (strip.ml[414,18001+4]..[414,18001+28])
                  Ppat_variant "ModuleTypeEnd"
                  Some
                    pattern (strip.ml[414,18001+19]..[414,18001+28])
                      Ppat_tuple
                      [
                        pattern (strip.ml[414,18001+20]..[414,18001+23])
                          Ppat_var "_a0" (strip.ml[414,18001+20]..[414,18001+23])
                        pattern (strip.ml[414,18001+24]..[414,18001+27])
                          Ppat_var "_a1" (strip.ml[414,18001+24]..[414,18001+27])
                      ]
                expression (strip.ml[414,18001+32]..[414,18001+75])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[414,18001+36]..[414,18001+39])
                        Ppat_var "_a1" (strip.ml[414,18001+36]..[414,18001+39])
                      expression (strip.ml[414,18001+42]..[414,18001+53])
                        Pexp_apply
                        expression (strip.ml[414,18001+42]..[414,18001+49])
                          Pexp_ident "auident" (strip.ml[414,18001+42]..[414,18001+49])
                        [
                          <label> ""
                            expression (strip.ml[414,18001+50]..[414,18001+53])
                              Pexp_ident "_a1" (strip.ml[414,18001+50]..[414,18001+53])
                        ]
                  ]
                  expression (strip.ml[414,18001+57]..[414,18001+75])
                    Pexp_variant "ModuleTypeEnd"
                    Some
                      expression (strip.ml[414,18001+72]..[414,18001+75])
                        Pexp_ident "_a1" (strip.ml[414,18001+72]..[414,18001+75])
              <case>
                pattern (strip.ml[415,18077+4]..[415,18077+29])
                  Ppat_variant "ModuleType"
                  Some
                    pattern (strip.ml[415,18077+16]..[415,18077+29])
                      Ppat_tuple
                      [
                        pattern (strip.ml[415,18077+17]..[415,18077+20])
                          Ppat_var "_a0" (strip.ml[415,18077+17]..[415,18077+20])
                        pattern (strip.ml[415,18077+21]..[415,18077+24])
                          Ppat_var "_a1" (strip.ml[415,18077+21]..[415,18077+24])
                        pattern (strip.ml[415,18077+25]..[415,18077+28])
                          Ppat_var "_a2" (strip.ml[415,18077+25]..[415,18077+28])
                      ]
                expression (strip.ml[416,18110+6]..[416,18110+75])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[416,18110+10]..[416,18110+13])
                        Ppat_var "_a1" (strip.ml[416,18110+10]..[416,18110+13])
                      expression (strip.ml[416,18110+16]..[416,18110+27])
                        Pexp_apply
                        expression (strip.ml[416,18110+16]..[416,18110+23])
                          Pexp_ident "auident" (strip.ml[416,18110+16]..[416,18110+23])
                        [
                          <label> ""
                            expression (strip.ml[416,18110+24]..[416,18110+27])
                              Pexp_ident "_a1" (strip.ml[416,18110+24]..[416,18110+27])
                        ]
                  ]
                  expression (strip.ml[416,18110+31]..[416,18110+75])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[416,18110+35]..[416,18110+38])
                          Ppat_var "_a2" (strip.ml[416,18110+35]..[416,18110+38])
                        expression (strip.ml[416,18110+41]..[416,18110+49])
                          Pexp_apply
                          expression (strip.ml[416,18110+41]..[416,18110+45])
                            Pexp_ident "mtyp" (strip.ml[416,18110+41]..[416,18110+45])
                          [
                            <label> ""
                              expression (strip.ml[416,18110+46]..[416,18110+49])
                                Pexp_ident "_a2" (strip.ml[416,18110+46]..[416,18110+49])
                          ]
                    ]
                    expression (strip.ml[416,18110+53]..[416,18110+75])
                      Pexp_variant "ModuleType"
                      Some
                        expression (strip.ml[416,18110+65]..[416,18110+75])
                          Pexp_tuple
                          [
                            expression (strip.ml[416,18110+66]..[416,18110+69])
                              Pexp_ident "_a1" (strip.ml[416,18110+66]..[416,18110+69])
                            expression (strip.ml[416,18110+71]..[416,18110+74])
                              Pexp_ident "_a2" (strip.ml[416,18110+71]..[416,18110+74])
                          ]
              <case>
                pattern (strip.ml[417,18186+4]..[417,18186+22])
                  Ppat_variant "Sem"
                  Some
                    pattern (strip.ml[417,18186+9]..[417,18186+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[417,18186+10]..[417,18186+13])
                          Ppat_var "_a0" (strip.ml[417,18186+10]..[417,18186+13])
                        pattern (strip.ml[417,18186+14]..[417,18186+17])
                          Ppat_var "_a1" (strip.ml[417,18186+14]..[417,18186+17])
                        pattern (strip.ml[417,18186+18]..[417,18186+21])
                          Ppat_var "_a2" (strip.ml[417,18186+18]..[417,18186+21])
                      ]
                expression (strip.ml[418,18212+6]..[418,18212+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[418,18212+10]..[418,18212+13])
                        Ppat_var "_a1" (strip.ml[418,18212+10]..[418,18212+13])
                      expression (strip.ml[418,18212+16]..[418,18212+24])
                        Pexp_apply
                        expression (strip.ml[418,18212+16]..[418,18212+20])
                          Pexp_ident "sigi" (strip.ml[418,18212+16]..[418,18212+20])
                        [
                          <label> ""
                            expression (strip.ml[418,18212+21]..[418,18212+24])
                              Pexp_ident "_a1" (strip.ml[418,18212+21]..[418,18212+24])
                        ]
                  ]
                  expression (strip.ml[418,18212+28]..[418,18212+65])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[418,18212+32]..[418,18212+35])
                          Ppat_var "_a2" (strip.ml[418,18212+32]..[418,18212+35])
                        expression (strip.ml[418,18212+38]..[418,18212+46])
                          Pexp_apply
                          expression (strip.ml[418,18212+38]..[418,18212+42])
                            Pexp_ident "sigi" (strip.ml[418,18212+38]..[418,18212+42])
                          [
                            <label> ""
                              expression (strip.ml[418,18212+43]..[418,18212+46])
                                Pexp_ident "_a2" (strip.ml[418,18212+43]..[418,18212+46])
                          ]
                    ]
                    expression (strip.ml[418,18212+50]..[418,18212+65])
                      Pexp_variant "Sem"
                      Some
                        expression (strip.ml[418,18212+55]..[418,18212+65])
                          Pexp_tuple
                          [
                            expression (strip.ml[418,18212+56]..[418,18212+59])
                              Pexp_ident "_a1" (strip.ml[418,18212+56]..[418,18212+59])
                            expression (strip.ml[418,18212+61]..[418,18212+64])
                              Pexp_ident "_a2" (strip.ml[418,18212+61]..[418,18212+64])
                          ]
              <case>
                pattern (strip.ml[419,18278+4]..[419,18278+30])
                  Ppat_variant "DirectiveSimple"
                  Some
                    pattern (strip.ml[419,18278+21]..[419,18278+30])
                      Ppat_tuple
                      [
                        pattern (strip.ml[419,18278+22]..[419,18278+25])
                          Ppat_var "_a0" (strip.ml[419,18278+22]..[419,18278+25])
                        pattern (strip.ml[419,18278+26]..[419,18278+29])
                          Ppat_var "_a1" (strip.ml[419,18278+26]..[419,18278+29])
                      ]
                expression (strip.ml[420,18312+6]..[420,18312+51])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[420,18312+10]..[420,18312+13])
                        Ppat_var "_a1" (strip.ml[420,18312+10]..[420,18312+13])
                      expression (strip.ml[420,18312+16]..[420,18312+27])
                        Pexp_apply
                        expression (strip.ml[420,18312+16]..[420,18312+23])
                          Pexp_ident "alident" (strip.ml[420,18312+16]..[420,18312+23])
                        [
                          <label> ""
                            expression (strip.ml[420,18312+24]..[420,18312+27])
                              Pexp_ident "_a1" (strip.ml[420,18312+24]..[420,18312+27])
                        ]
                  ]
                  expression (strip.ml[420,18312+31]..[420,18312+51])
                    Pexp_variant "DirectiveSimple"
                    Some
                      expression (strip.ml[420,18312+48]..[420,18312+51])
                        Pexp_ident "_a1" (strip.ml[420,18312+48]..[420,18312+51])
              <case>
                pattern (strip.ml[421,18364+4]..[421,18364+28])
                  Ppat_variant "Directive"
                  Some
                    pattern (strip.ml[421,18364+15]..[421,18364+28])
                      Ppat_tuple
                      [
                        pattern (strip.ml[421,18364+16]..[421,18364+19])
                          Ppat_var "_a0" (strip.ml[421,18364+16]..[421,18364+19])
                        pattern (strip.ml[421,18364+20]..[421,18364+23])
                          Ppat_var "_a1" (strip.ml[421,18364+20]..[421,18364+23])
                        pattern (strip.ml[421,18364+24]..[421,18364+27])
                          Ppat_var "_a2" (strip.ml[421,18364+24]..[421,18364+27])
                      ]
                expression (strip.ml[422,18396+6]..[422,18396+73])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[422,18396+10]..[422,18396+13])
                        Ppat_var "_a1" (strip.ml[422,18396+10]..[422,18396+13])
                      expression (strip.ml[422,18396+16]..[422,18396+27])
                        Pexp_apply
                        expression (strip.ml[422,18396+16]..[422,18396+23])
                          Pexp_ident "alident" (strip.ml[422,18396+16]..[422,18396+23])
                        [
                          <label> ""
                            expression (strip.ml[422,18396+24]..[422,18396+27])
                              Pexp_ident "_a1" (strip.ml[422,18396+24]..[422,18396+27])
                        ]
                  ]
                  expression (strip.ml[422,18396+31]..[422,18396+73])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[422,18396+35]..[422,18396+38])
                          Ppat_var "_a2" (strip.ml[422,18396+35]..[422,18396+38])
                        expression (strip.ml[422,18396+41]..[422,18396+48])
                          Pexp_apply
                          expression (strip.ml[422,18396+41]..[422,18396+44])
                            Pexp_ident "exp" (strip.ml[422,18396+41]..[422,18396+44])
                          [
                            <label> ""
                              expression (strip.ml[422,18396+45]..[422,18396+48])
                                Pexp_ident "_a2" (strip.ml[422,18396+45]..[422,18396+48])
                          ]
                    ]
                    expression (strip.ml[422,18396+52]..[422,18396+73])
                      Pexp_variant "Directive"
                      Some
                        expression (strip.ml[422,18396+63]..[422,18396+73])
                          Pexp_tuple
                          [
                            expression (strip.ml[422,18396+64]..[422,18396+67])
                              Pexp_ident "_a1" (strip.ml[422,18396+64]..[422,18396+67])
                            expression (strip.ml[422,18396+69]..[422,18396+72])
                              Pexp_ident "_a2" (strip.ml[422,18396+69]..[422,18396+72])
                          ]
              <case>
                pattern (strip.ml[423,18470+4]..[423,18470+23])
                  Ppat_variant "Open"
                  Some
                    pattern (strip.ml[423,18470+10]..[423,18470+23])
                      Ppat_tuple
                      [
                        pattern (strip.ml[423,18470+11]..[423,18470+14])
                          Ppat_var "_a0" (strip.ml[423,18470+11]..[423,18470+14])
                        pattern (strip.ml[423,18470+15]..[423,18470+18])
                          Ppat_var "_a1" (strip.ml[423,18470+15]..[423,18470+18])
                        pattern (strip.ml[423,18470+19]..[423,18470+22])
                          Ppat_var "_a2" (strip.ml[423,18470+19]..[423,18470+22])
                      ]
                expression (strip.ml[424,18497+6]..[424,18497+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[424,18497+10]..[424,18497+13])
                        Ppat_var "_a1" (strip.ml[424,18497+10]..[424,18497+13])
                      expression (strip.ml[424,18497+16]..[424,18497+24])
                        Pexp_apply
                        expression (strip.ml[424,18497+16]..[424,18497+20])
                          Pexp_ident "flag" (strip.ml[424,18497+16]..[424,18497+20])
                        [
                          <label> ""
                            expression (strip.ml[424,18497+21]..[424,18497+24])
                              Pexp_ident "_a1" (strip.ml[424,18497+21]..[424,18497+24])
                        ]
                  ]
                  expression (strip.ml[424,18497+28]..[424,18497+67])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[424,18497+32]..[424,18497+35])
                          Ppat_var "_a2" (strip.ml[424,18497+32]..[424,18497+35])
                        expression (strip.ml[424,18497+38]..[424,18497+47])
                          Pexp_apply
                          expression (strip.ml[424,18497+38]..[424,18497+43])
                            Pexp_ident "ident" (strip.ml[424,18497+38]..[424,18497+43])
                          [
                            <label> ""
                              expression (strip.ml[424,18497+44]..[424,18497+47])
                                Pexp_ident "_a2" (strip.ml[424,18497+44]..[424,18497+47])
                          ]
                    ]
                    expression (strip.ml[424,18497+51]..[424,18497+67])
                      Pexp_variant "Open"
                      Some
                        expression (strip.ml[424,18497+57]..[424,18497+67])
                          Pexp_tuple
                          [
                            expression (strip.ml[424,18497+58]..[424,18497+61])
                              Pexp_ident "_a1" (strip.ml[424,18497+58]..[424,18497+61])
                            expression (strip.ml[424,18497+63]..[424,18497+66])
                              Pexp_ident "_a2" (strip.ml[424,18497+63]..[424,18497+66])
                          ]
              <case>
                pattern (strip.ml[425,18565+4]..[425,18565+22])
                  Ppat_variant "Include"
                  Some
                    pattern (strip.ml[425,18565+13]..[425,18565+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[425,18565+14]..[425,18565+17])
                          Ppat_var "_a0" (strip.ml[425,18565+14]..[425,18565+17])
                        pattern (strip.ml[425,18565+18]..[425,18565+21])
                          Ppat_var "_a1" (strip.ml[425,18565+18]..[425,18565+21])
                      ]
                expression (strip.ml[425,18565+26]..[425,18565+60])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[425,18565+30]..[425,18565+33])
                        Ppat_var "_a1" (strip.ml[425,18565+30]..[425,18565+33])
                      expression (strip.ml[425,18565+36]..[425,18565+44])
                        Pexp_apply
                        expression (strip.ml[425,18565+36]..[425,18565+40])
                          Pexp_ident "mtyp" (strip.ml[425,18565+36]..[425,18565+40])
                        [
                          <label> ""
                            expression (strip.ml[425,18565+41]..[425,18565+44])
                              Pexp_ident "_a1" (strip.ml[425,18565+41]..[425,18565+44])
                        ]
                  ]
                  expression (strip.ml[425,18565+48]..[425,18565+60])
                    Pexp_variant "Include"
                    Some
                      expression (strip.ml[425,18565+57]..[425,18565+60])
                        Pexp_ident "_a1" (strip.ml[425,18565+57]..[425,18565+60])
              <case>
                pattern (strip.ml[426,18626+4]..[426,18626+24])
                  Ppat_variant "RecModule"
                  Some
                    pattern (strip.ml[426,18626+15]..[426,18626+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[426,18626+16]..[426,18626+19])
                          Ppat_var "_a0" (strip.ml[426,18626+16]..[426,18626+19])
                        pattern (strip.ml[426,18626+20]..[426,18626+23])
                          Ppat_var "_a1" (strip.ml[426,18626+20]..[426,18626+23])
                      ]
                expression (strip.ml[426,18626+28]..[426,18626+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[426,18626+32]..[426,18626+35])
                        Ppat_var "_a1" (strip.ml[426,18626+32]..[426,18626+35])
                      expression (strip.ml[426,18626+38]..[426,18626+47])
                        Pexp_apply
                        expression (strip.ml[426,18626+38]..[426,18626+43])
                          Pexp_ident "mbind" (strip.ml[426,18626+38]..[426,18626+43])
                        [
                          <label> ""
                            expression (strip.ml[426,18626+44]..[426,18626+47])
                              Pexp_ident "_a1" (strip.ml[426,18626+44]..[426,18626+47])
                        ]
                  ]
                  expression (strip.ml[426,18626+51]..[426,18626+65])
                    Pexp_variant "RecModule"
                    Some
                      expression (strip.ml[426,18626+62]..[426,18626+65])
                        Pexp_ident "_a1" (strip.ml[426,18626+62]..[426,18626+65])
              <case>
                pattern (strip.ml[427,18692+4]..[427,18692+15])
                  Ppat_alias "_a0" (strip.ml[427,18692+12]..[427,18692+15])
                  pattern (strip.ml[427,18692+4]..[427,18692+8])
                    Ppat_type
                    "ant" (strip.ml[427,18692+5]..[427,18692+8])
                expression (strip.ml[427,18692+19]..[427,18692+42]) ghost
                  Pexp_coerce
                  expression (strip.ml[427,18692+20]..[427,18692+27])
                    Pexp_apply
                    expression (strip.ml[427,18692+20]..[427,18692+23])
                      Pexp_ident "ant" (strip.ml[427,18692+20]..[427,18692+23])
                    [
                      <label> ""
                        expression (strip.ml[427,18692+24]..[427,18692+27])
                          Pexp_ident "_a0" (strip.ml[427,18692+24]..[427,18692+27])
                    ]
                  None
                  core_type (strip.ml[427,18692+31]..[427,18692+41])
                    Ptyp_constr "Astfn.sigi" (strip.ml[427,18692+31]..[427,18692+41])
                    []
            ]
          core_type (strip.ml[400,17352+10]..[400,17352+33])
            Ptyp_arrow
            ""
            core_type (strip.ml[400,17352+10]..[400,17352+19])
              Ptyp_constr "Astf.sigi" (strip.ml[400,17352+10]..[400,17352+19])
              []
            core_type (strip.ml[400,17352+23]..[400,17352+33])
              Ptyp_constr "Astfn.sigi" (strip.ml[400,17352+23]..[400,17352+33])
              []
      <def>
        pattern (strip.ml[428,18735+4]..[428,18735+9])
          Ppat_var "mbind" (strip.ml[428,18735+4]..[428,18735+9])
        expression (strip.ml[428,18735+9]..[437,19134+43]) ghost
          Pexp_constraint
          expression (strip.ml[429,18774+2]..[437,19134+43])
            Pexp_function
            [
              <case>
                pattern (strip.ml[430,18785+4]..[430,18785+22])
                  Ppat_variant "And"
                  Some
                    pattern (strip.ml[430,18785+9]..[430,18785+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[430,18785+10]..[430,18785+13])
                          Ppat_var "_a0" (strip.ml[430,18785+10]..[430,18785+13])
                        pattern (strip.ml[430,18785+14]..[430,18785+17])
                          Ppat_var "_a1" (strip.ml[430,18785+14]..[430,18785+17])
                        pattern (strip.ml[430,18785+18]..[430,18785+21])
                          Ppat_var "_a2" (strip.ml[430,18785+18]..[430,18785+21])
                      ]
                expression (strip.ml[431,18811+6]..[431,18811+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[431,18811+10]..[431,18811+13])
                        Ppat_var "_a1" (strip.ml[431,18811+10]..[431,18811+13])
                      expression (strip.ml[431,18811+16]..[431,18811+25])
                        Pexp_apply
                        expression (strip.ml[431,18811+16]..[431,18811+21])
                          Pexp_ident "mbind" (strip.ml[431,18811+16]..[431,18811+21])
                        [
                          <label> ""
                            expression (strip.ml[431,18811+22]..[431,18811+25])
                              Pexp_ident "_a1" (strip.ml[431,18811+22]..[431,18811+25])
                        ]
                  ]
                  expression (strip.ml[431,18811+29]..[431,18811+67])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[431,18811+33]..[431,18811+36])
                          Ppat_var "_a2" (strip.ml[431,18811+33]..[431,18811+36])
                        expression (strip.ml[431,18811+39]..[431,18811+48])
                          Pexp_apply
                          expression (strip.ml[431,18811+39]..[431,18811+44])
                            Pexp_ident "mbind" (strip.ml[431,18811+39]..[431,18811+44])
                          [
                            <label> ""
                              expression (strip.ml[431,18811+45]..[431,18811+48])
                                Pexp_ident "_a2" (strip.ml[431,18811+45]..[431,18811+48])
                          ]
                    ]
                    expression (strip.ml[431,18811+52]..[431,18811+67])
                      Pexp_variant "And"
                      Some
                        expression (strip.ml[431,18811+57]..[431,18811+67])
                          Pexp_tuple
                          [
                            expression (strip.ml[431,18811+58]..[431,18811+61])
                              Pexp_ident "_a1" (strip.ml[431,18811+58]..[431,18811+61])
                            expression (strip.ml[431,18811+63]..[431,18811+66])
                              Pexp_ident "_a2" (strip.ml[431,18811+63]..[431,18811+66])
                          ]
              <case>
                pattern (strip.ml[432,18879+4]..[432,18879+33])
                  Ppat_variant "ModuleBind"
                  Some
                    pattern (strip.ml[432,18879+16]..[432,18879+33])
                      Ppat_tuple
                      [
                        pattern (strip.ml[432,18879+17]..[432,18879+20])
                          Ppat_var "_a0" (strip.ml[432,18879+17]..[432,18879+20])
                        pattern (strip.ml[432,18879+21]..[432,18879+24])
                          Ppat_var "_a1" (strip.ml[432,18879+21]..[432,18879+24])
                        pattern (strip.ml[432,18879+25]..[432,18879+28])
                          Ppat_var "_a2" (strip.ml[432,18879+25]..[432,18879+28])
                        pattern (strip.ml[432,18879+29]..[432,18879+32])
                          Ppat_var "_a3" (strip.ml[432,18879+29]..[432,18879+32])
                      ]
                expression (strip.ml[433,18916+6]..[434,18947+77])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[433,18916+10]..[433,18916+13])
                        Ppat_var "_a1" (strip.ml[433,18916+10]..[433,18916+13])
                      expression (strip.ml[433,18916+16]..[433,18916+27])
                        Pexp_apply
                        expression (strip.ml[433,18916+16]..[433,18916+23])
                          Pexp_ident "auident" (strip.ml[433,18916+16]..[433,18916+23])
                        [
                          <label> ""
                            expression (strip.ml[433,18916+24]..[433,18916+27])
                              Pexp_ident "_a1" (strip.ml[433,18916+24]..[433,18916+27])
                        ]
                  ]
                  expression (strip.ml[434,18947+6]..[434,18947+77])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[434,18947+10]..[434,18947+13])
                          Ppat_var "_a2" (strip.ml[434,18947+10]..[434,18947+13])
                        expression (strip.ml[434,18947+16]..[434,18947+24])
                          Pexp_apply
                          expression (strip.ml[434,18947+16]..[434,18947+20])
                            Pexp_ident "mtyp" (strip.ml[434,18947+16]..[434,18947+20])
                          [
                            <label> ""
                              expression (strip.ml[434,18947+21]..[434,18947+24])
                                Pexp_ident "_a2" (strip.ml[434,18947+21]..[434,18947+24])
                          ]
                    ]
                    expression (strip.ml[434,18947+28]..[434,18947+77])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[434,18947+32]..[434,18947+35])
                            Ppat_var "_a3" (strip.ml[434,18947+32]..[434,18947+35])
                          expression (strip.ml[434,18947+38]..[434,18947+46])
                            Pexp_apply
                            expression (strip.ml[434,18947+38]..[434,18947+42])
                              Pexp_ident "mexp" (strip.ml[434,18947+38]..[434,18947+42])
                            [
                              <label> ""
                                expression (strip.ml[434,18947+43]..[434,18947+46])
                                  Pexp_ident "_a3" (strip.ml[434,18947+43]..[434,18947+46])
                            ]
                      ]
                      expression (strip.ml[434,18947+50]..[434,18947+77])
                        Pexp_variant "ModuleBind"
                        Some
                          expression (strip.ml[434,18947+62]..[434,18947+77])
                            Pexp_tuple
                            [
                              expression (strip.ml[434,18947+63]..[434,18947+66])
                                Pexp_ident "_a1" (strip.ml[434,18947+63]..[434,18947+66])
                              expression (strip.ml[434,18947+68]..[434,18947+71])
                                Pexp_ident "_a2" (strip.ml[434,18947+68]..[434,18947+71])
                              expression (strip.ml[434,18947+73]..[434,18947+76])
                                Pexp_ident "_a3" (strip.ml[434,18947+73]..[434,18947+76])
                            ]
              <case>
                pattern (strip.ml[435,19025+4]..[435,19025+29])
                  Ppat_variant "Constraint"
                  Some
                    pattern (strip.ml[435,19025+16]..[435,19025+29])
                      Ppat_tuple
                      [
                        pattern (strip.ml[435,19025+17]..[435,19025+20])
                          Ppat_var "_a0" (strip.ml[435,19025+17]..[435,19025+20])
                        pattern (strip.ml[435,19025+21]..[435,19025+24])
                          Ppat_var "_a1" (strip.ml[435,19025+21]..[435,19025+24])
                        pattern (strip.ml[435,19025+25]..[435,19025+28])
                          Ppat_var "_a2" (strip.ml[435,19025+25]..[435,19025+28])
                      ]
                expression (strip.ml[436,19058+6]..[436,19058+75])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[436,19058+10]..[436,19058+13])
                        Ppat_var "_a1" (strip.ml[436,19058+10]..[436,19058+13])
                      expression (strip.ml[436,19058+16]..[436,19058+27])
                        Pexp_apply
                        expression (strip.ml[436,19058+16]..[436,19058+23])
                          Pexp_ident "auident" (strip.ml[436,19058+16]..[436,19058+23])
                        [
                          <label> ""
                            expression (strip.ml[436,19058+24]..[436,19058+27])
                              Pexp_ident "_a1" (strip.ml[436,19058+24]..[436,19058+27])
                        ]
                  ]
                  expression (strip.ml[436,19058+31]..[436,19058+75])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[436,19058+35]..[436,19058+38])
                          Ppat_var "_a2" (strip.ml[436,19058+35]..[436,19058+38])
                        expression (strip.ml[436,19058+41]..[436,19058+49])
                          Pexp_apply
                          expression (strip.ml[436,19058+41]..[436,19058+45])
                            Pexp_ident "mtyp" (strip.ml[436,19058+41]..[436,19058+45])
                          [
                            <label> ""
                              expression (strip.ml[436,19058+46]..[436,19058+49])
                                Pexp_ident "_a2" (strip.ml[436,19058+46]..[436,19058+49])
                          ]
                    ]
                    expression (strip.ml[436,19058+53]..[436,19058+75])
                      Pexp_variant "Constraint"
                      Some
                        expression (strip.ml[436,19058+65]..[436,19058+75])
                          Pexp_tuple
                          [
                            expression (strip.ml[436,19058+66]..[436,19058+69])
                              Pexp_ident "_a1" (strip.ml[436,19058+66]..[436,19058+69])
                            expression (strip.ml[436,19058+71]..[436,19058+74])
                              Pexp_ident "_a2" (strip.ml[436,19058+71]..[436,19058+74])
                          ]
              <case>
                pattern (strip.ml[437,19134+4]..[437,19134+15])
                  Ppat_alias "_a0" (strip.ml[437,19134+12]..[437,19134+15])
                  pattern (strip.ml[437,19134+4]..[437,19134+8])
                    Ppat_type
                    "ant" (strip.ml[437,19134+5]..[437,19134+8])
                expression (strip.ml[437,19134+19]..[437,19134+43]) ghost
                  Pexp_coerce
                  expression (strip.ml[437,19134+20]..[437,19134+27])
                    Pexp_apply
                    expression (strip.ml[437,19134+20]..[437,19134+23])
                      Pexp_ident "ant" (strip.ml[437,19134+20]..[437,19134+23])
                    [
                      <label> ""
                        expression (strip.ml[437,19134+24]..[437,19134+27])
                          Pexp_ident "_a0" (strip.ml[437,19134+24]..[437,19134+27])
                    ]
                  None
                  core_type (strip.ml[437,19134+31]..[437,19134+42])
                    Ptyp_constr "Astfn.mbind" (strip.ml[437,19134+31]..[437,19134+42])
                    []
            ]
          core_type (strip.ml[428,18735+11]..[428,18735+36])
            Ptyp_arrow
            ""
            core_type (strip.ml[428,18735+11]..[428,18735+21])
              Ptyp_constr "Astf.mbind" (strip.ml[428,18735+11]..[428,18735+21])
              []
            core_type (strip.ml[428,18735+25]..[428,18735+36])
              Ptyp_constr "Astfn.mbind" (strip.ml[428,18735+25]..[428,18735+36])
              []
      <def>
        pattern (strip.ml[438,19178+4]..[438,19178+10])
          Ppat_var "constr" (strip.ml[438,19178+4]..[438,19178+10])
        expression (strip.ml[438,19178+10]..[452,19849+44]) ghost
          Pexp_constraint
          expression (strip.ml[439,19220+2]..[452,19849+44])
            Pexp_function
            [
              <case>
                pattern (strip.ml[440,19231+4]..[440,19231+25])
                  Ppat_variant "TypeEq"
                  Some
                    pattern (strip.ml[440,19231+12]..[440,19231+25])
                      Ppat_tuple
                      [
                        pattern (strip.ml[440,19231+13]..[440,19231+16])
                          Ppat_var "_a0" (strip.ml[440,19231+13]..[440,19231+16])
                        pattern (strip.ml[440,19231+17]..[440,19231+20])
                          Ppat_var "_a1" (strip.ml[440,19231+17]..[440,19231+20])
                        pattern (strip.ml[440,19231+21]..[440,19231+24])
                          Ppat_var "_a2" (strip.ml[440,19231+21]..[440,19231+24])
                      ]
                expression (strip.ml[441,19260+6]..[441,19260+68])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[441,19260+10]..[441,19260+13])
                        Ppat_var "_a1" (strip.ml[441,19260+10]..[441,19260+13])
                      expression (strip.ml[441,19260+16]..[441,19260+24])
                        Pexp_apply
                        expression (strip.ml[441,19260+16]..[441,19260+20])
                          Pexp_ident "ctyp" (strip.ml[441,19260+16]..[441,19260+20])
                        [
                          <label> ""
                            expression (strip.ml[441,19260+21]..[441,19260+24])
                              Pexp_ident "_a1" (strip.ml[441,19260+21]..[441,19260+24])
                        ]
                  ]
                  expression (strip.ml[441,19260+28]..[441,19260+68])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[441,19260+32]..[441,19260+35])
                          Ppat_var "_a2" (strip.ml[441,19260+32]..[441,19260+35])
                        expression (strip.ml[441,19260+38]..[441,19260+46])
                          Pexp_apply
                          expression (strip.ml[441,19260+38]..[441,19260+42])
                            Pexp_ident "ctyp" (strip.ml[441,19260+38]..[441,19260+42])
                          [
                            <label> ""
                              expression (strip.ml[441,19260+43]..[441,19260+46])
                                Pexp_ident "_a2" (strip.ml[441,19260+43]..[441,19260+46])
                          ]
                    ]
                    expression (strip.ml[441,19260+50]..[441,19260+68])
                      Pexp_variant "TypeEq"
                      Some
                        expression (strip.ml[441,19260+58]..[441,19260+68])
                          Pexp_tuple
                          [
                            expression (strip.ml[441,19260+59]..[441,19260+62])
                              Pexp_ident "_a1" (strip.ml[441,19260+59]..[441,19260+62])
                            expression (strip.ml[441,19260+64]..[441,19260+67])
                              Pexp_ident "_a2" (strip.ml[441,19260+64]..[441,19260+67])
                          ]
              <case>
                pattern (strip.ml[442,19329+4]..[442,19329+27])
                  Ppat_variant "ModuleEq"
                  Some
                    pattern (strip.ml[442,19329+14]..[442,19329+27])
                      Ppat_tuple
                      [
                        pattern (strip.ml[442,19329+15]..[442,19329+18])
                          Ppat_var "_a0" (strip.ml[442,19329+15]..[442,19329+18])
                        pattern (strip.ml[442,19329+19]..[442,19329+22])
                          Ppat_var "_a1" (strip.ml[442,19329+19]..[442,19329+22])
                        pattern (strip.ml[442,19329+23]..[442,19329+26])
                          Ppat_var "_a2" (strip.ml[442,19329+23]..[442,19329+26])
                      ]
                expression (strip.ml[443,19360+6]..[443,19360+72])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[443,19360+10]..[443,19360+13])
                        Ppat_var "_a1" (strip.ml[443,19360+10]..[443,19360+13])
                      expression (strip.ml[443,19360+16]..[443,19360+25])
                        Pexp_apply
                        expression (strip.ml[443,19360+16]..[443,19360+21])
                          Pexp_ident "ident" (strip.ml[443,19360+16]..[443,19360+21])
                        [
                          <label> ""
                            expression (strip.ml[443,19360+22]..[443,19360+25])
                              Pexp_ident "_a1" (strip.ml[443,19360+22]..[443,19360+25])
                        ]
                  ]
                  expression (strip.ml[443,19360+29]..[443,19360+72])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[443,19360+33]..[443,19360+36])
                          Ppat_var "_a2" (strip.ml[443,19360+33]..[443,19360+36])
                        expression (strip.ml[443,19360+39]..[443,19360+48])
                          Pexp_apply
                          expression (strip.ml[443,19360+39]..[443,19360+44])
                            Pexp_ident "ident" (strip.ml[443,19360+39]..[443,19360+44])
                          [
                            <label> ""
                              expression (strip.ml[443,19360+45]..[443,19360+48])
                                Pexp_ident "_a2" (strip.ml[443,19360+45]..[443,19360+48])
                          ]
                    ]
                    expression (strip.ml[443,19360+52]..[443,19360+72])
                      Pexp_variant "ModuleEq"
                      Some
                        expression (strip.ml[443,19360+62]..[443,19360+72])
                          Pexp_tuple
                          [
                            expression (strip.ml[443,19360+63]..[443,19360+66])
                              Pexp_ident "_a1" (strip.ml[443,19360+63]..[443,19360+66])
                            expression (strip.ml[443,19360+68]..[443,19360+71])
                              Pexp_ident "_a2" (strip.ml[443,19360+68]..[443,19360+71])
                          ]
              <case>
                pattern (strip.ml[444,19433+4]..[444,19433+29])
                  Ppat_variant "TypeEqPriv"
                  Some
                    pattern (strip.ml[444,19433+16]..[444,19433+29])
                      Ppat_tuple
                      [
                        pattern (strip.ml[444,19433+17]..[444,19433+20])
                          Ppat_var "_a0" (strip.ml[444,19433+17]..[444,19433+20])
                        pattern (strip.ml[444,19433+21]..[444,19433+24])
                          Ppat_var "_a1" (strip.ml[444,19433+21]..[444,19433+24])
                        pattern (strip.ml[444,19433+25]..[444,19433+28])
                          Ppat_var "_a2" (strip.ml[444,19433+25]..[444,19433+28])
                      ]
                expression (strip.ml[445,19466+6]..[445,19466+72])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[445,19466+10]..[445,19466+13])
                        Ppat_var "_a1" (strip.ml[445,19466+10]..[445,19466+13])
                      expression (strip.ml[445,19466+16]..[445,19466+24])
                        Pexp_apply
                        expression (strip.ml[445,19466+16]..[445,19466+20])
                          Pexp_ident "ctyp" (strip.ml[445,19466+16]..[445,19466+20])
                        [
                          <label> ""
                            expression (strip.ml[445,19466+21]..[445,19466+24])
                              Pexp_ident "_a1" (strip.ml[445,19466+21]..[445,19466+24])
                        ]
                  ]
                  expression (strip.ml[445,19466+28]..[445,19466+72])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[445,19466+32]..[445,19466+35])
                          Ppat_var "_a2" (strip.ml[445,19466+32]..[445,19466+35])
                        expression (strip.ml[445,19466+38]..[445,19466+46])
                          Pexp_apply
                          expression (strip.ml[445,19466+38]..[445,19466+42])
                            Pexp_ident "ctyp" (strip.ml[445,19466+38]..[445,19466+42])
                          [
                            <label> ""
                              expression (strip.ml[445,19466+43]..[445,19466+46])
                                Pexp_ident "_a2" (strip.ml[445,19466+43]..[445,19466+46])
                          ]
                    ]
                    expression (strip.ml[445,19466+50]..[445,19466+72])
                      Pexp_variant "TypeEqPriv"
                      Some
                        expression (strip.ml[445,19466+62]..[445,19466+72])
                          Pexp_tuple
                          [
                            expression (strip.ml[445,19466+63]..[445,19466+66])
                              Pexp_ident "_a1" (strip.ml[445,19466+63]..[445,19466+66])
                            expression (strip.ml[445,19466+68]..[445,19466+71])
                              Pexp_ident "_a2" (strip.ml[445,19466+68]..[445,19466+71])
                          ]
              <case>
                pattern (strip.ml[446,19539+4]..[446,19539+28])
                  Ppat_variant "TypeSubst"
                  Some
                    pattern (strip.ml[446,19539+15]..[446,19539+28])
                      Ppat_tuple
                      [
                        pattern (strip.ml[446,19539+16]..[446,19539+19])
                          Ppat_var "_a0" (strip.ml[446,19539+16]..[446,19539+19])
                        pattern (strip.ml[446,19539+20]..[446,19539+23])
                          Ppat_var "_a1" (strip.ml[446,19539+20]..[446,19539+23])
                        pattern (strip.ml[446,19539+24]..[446,19539+27])
                          Ppat_var "_a2" (strip.ml[446,19539+24]..[446,19539+27])
                      ]
                expression (strip.ml[447,19571+6]..[447,19571+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[447,19571+10]..[447,19571+13])
                        Ppat_var "_a1" (strip.ml[447,19571+10]..[447,19571+13])
                      expression (strip.ml[447,19571+16]..[447,19571+24])
                        Pexp_apply
                        expression (strip.ml[447,19571+16]..[447,19571+20])
                          Pexp_ident "ctyp" (strip.ml[447,19571+16]..[447,19571+20])
                        [
                          <label> ""
                            expression (strip.ml[447,19571+21]..[447,19571+24])
                              Pexp_ident "_a1" (strip.ml[447,19571+21]..[447,19571+24])
                        ]
                  ]
                  expression (strip.ml[447,19571+28]..[447,19571+71])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[447,19571+32]..[447,19571+35])
                          Ppat_var "_a2" (strip.ml[447,19571+32]..[447,19571+35])
                        expression (strip.ml[447,19571+38]..[447,19571+46])
                          Pexp_apply
                          expression (strip.ml[447,19571+38]..[447,19571+42])
                            Pexp_ident "ctyp" (strip.ml[447,19571+38]..[447,19571+42])
                          [
                            <label> ""
                              expression (strip.ml[447,19571+43]..[447,19571+46])
                                Pexp_ident "_a2" (strip.ml[447,19571+43]..[447,19571+46])
                          ]
                    ]
                    expression (strip.ml[447,19571+50]..[447,19571+71])
                      Pexp_variant "TypeSubst"
                      Some
                        expression (strip.ml[447,19571+61]..[447,19571+71])
                          Pexp_tuple
                          [
                            expression (strip.ml[447,19571+62]..[447,19571+65])
                              Pexp_ident "_a1" (strip.ml[447,19571+62]..[447,19571+65])
                            expression (strip.ml[447,19571+67]..[447,19571+70])
                              Pexp_ident "_a2" (strip.ml[447,19571+67]..[447,19571+70])
                          ]
              <case>
                pattern (strip.ml[448,19643+4]..[448,19643+30])
                  Ppat_variant "ModuleSubst"
                  Some
                    pattern (strip.ml[448,19643+17]..[448,19643+30])
                      Ppat_tuple
                      [
                        pattern (strip.ml[448,19643+18]..[448,19643+21])
                          Ppat_var "_a0" (strip.ml[448,19643+18]..[448,19643+21])
                        pattern (strip.ml[448,19643+22]..[448,19643+25])
                          Ppat_var "_a1" (strip.ml[448,19643+22]..[448,19643+25])
                        pattern (strip.ml[448,19643+26]..[448,19643+29])
                          Ppat_var "_a2" (strip.ml[448,19643+26]..[448,19643+29])
                      ]
                expression (strip.ml[449,19677+6]..[449,19677+75])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[449,19677+10]..[449,19677+13])
                        Ppat_var "_a1" (strip.ml[449,19677+10]..[449,19677+13])
                      expression (strip.ml[449,19677+16]..[449,19677+25])
                        Pexp_apply
                        expression (strip.ml[449,19677+16]..[449,19677+21])
                          Pexp_ident "ident" (strip.ml[449,19677+16]..[449,19677+21])
                        [
                          <label> ""
                            expression (strip.ml[449,19677+22]..[449,19677+25])
                              Pexp_ident "_a1" (strip.ml[449,19677+22]..[449,19677+25])
                        ]
                  ]
                  expression (strip.ml[449,19677+29]..[449,19677+75])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[449,19677+33]..[449,19677+36])
                          Ppat_var "_a2" (strip.ml[449,19677+33]..[449,19677+36])
                        expression (strip.ml[449,19677+39]..[449,19677+48])
                          Pexp_apply
                          expression (strip.ml[449,19677+39]..[449,19677+44])
                            Pexp_ident "ident" (strip.ml[449,19677+39]..[449,19677+44])
                          [
                            <label> ""
                              expression (strip.ml[449,19677+45]..[449,19677+48])
                                Pexp_ident "_a2" (strip.ml[449,19677+45]..[449,19677+48])
                          ]
                    ]
                    expression (strip.ml[449,19677+52]..[449,19677+75])
                      Pexp_variant "ModuleSubst"
                      Some
                        expression (strip.ml[449,19677+65]..[449,19677+75])
                          Pexp_tuple
                          [
                            expression (strip.ml[449,19677+66]..[449,19677+69])
                              Pexp_ident "_a1" (strip.ml[449,19677+66]..[449,19677+69])
                            expression (strip.ml[449,19677+71]..[449,19677+74])
                              Pexp_ident "_a2" (strip.ml[449,19677+71]..[449,19677+74])
                          ]
              <case>
                pattern (strip.ml[450,19753+4]..[450,19753+22])
                  Ppat_variant "And"
                  Some
                    pattern (strip.ml[450,19753+9]..[450,19753+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[450,19753+10]..[450,19753+13])
                          Ppat_var "_a0" (strip.ml[450,19753+10]..[450,19753+13])
                        pattern (strip.ml[450,19753+14]..[450,19753+17])
                          Ppat_var "_a1" (strip.ml[450,19753+14]..[450,19753+17])
                        pattern (strip.ml[450,19753+18]..[450,19753+21])
                          Ppat_var "_a2" (strip.ml[450,19753+18]..[450,19753+21])
                      ]
                expression (strip.ml[451,19779+6]..[451,19779+69])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[451,19779+10]..[451,19779+13])
                        Ppat_var "_a1" (strip.ml[451,19779+10]..[451,19779+13])
                      expression (strip.ml[451,19779+16]..[451,19779+26])
                        Pexp_apply
                        expression (strip.ml[451,19779+16]..[451,19779+22])
                          Pexp_ident "constr" (strip.ml[451,19779+16]..[451,19779+22])
                        [
                          <label> ""
                            expression (strip.ml[451,19779+23]..[451,19779+26])
                              Pexp_ident "_a1" (strip.ml[451,19779+23]..[451,19779+26])
                        ]
                  ]
                  expression (strip.ml[451,19779+30]..[451,19779+69])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[451,19779+34]..[451,19779+37])
                          Ppat_var "_a2" (strip.ml[451,19779+34]..[451,19779+37])
                        expression (strip.ml[451,19779+40]..[451,19779+50])
                          Pexp_apply
                          expression (strip.ml[451,19779+40]..[451,19779+46])
                            Pexp_ident "constr" (strip.ml[451,19779+40]..[451,19779+46])
                          [
                            <label> ""
                              expression (strip.ml[451,19779+47]..[451,19779+50])
                                Pexp_ident "_a2" (strip.ml[451,19779+47]..[451,19779+50])
                          ]
                    ]
                    expression (strip.ml[451,19779+54]..[451,19779+69])
                      Pexp_variant "And"
                      Some
                        expression (strip.ml[451,19779+59]..[451,19779+69])
                          Pexp_tuple
                          [
                            expression (strip.ml[451,19779+60]..[451,19779+63])
                              Pexp_ident "_a1" (strip.ml[451,19779+60]..[451,19779+63])
                            expression (strip.ml[451,19779+65]..[451,19779+68])
                              Pexp_ident "_a2" (strip.ml[451,19779+65]..[451,19779+68])
                          ]
              <case>
                pattern (strip.ml[452,19849+4]..[452,19849+15])
                  Ppat_alias "_a0" (strip.ml[452,19849+12]..[452,19849+15])
                  pattern (strip.ml[452,19849+4]..[452,19849+8])
                    Ppat_type
                    "ant" (strip.ml[452,19849+5]..[452,19849+8])
                expression (strip.ml[452,19849+19]..[452,19849+44]) ghost
                  Pexp_coerce
                  expression (strip.ml[452,19849+20]..[452,19849+27])
                    Pexp_apply
                    expression (strip.ml[452,19849+20]..[452,19849+23])
                      Pexp_ident "ant" (strip.ml[452,19849+20]..[452,19849+23])
                    [
                      <label> ""
                        expression (strip.ml[452,19849+24]..[452,19849+27])
                          Pexp_ident "_a0" (strip.ml[452,19849+24]..[452,19849+27])
                    ]
                  None
                  core_type (strip.ml[452,19849+31]..[452,19849+43])
                    Ptyp_constr "Astfn.constr" (strip.ml[452,19849+31]..[452,19849+43])
                    []
            ]
          core_type (strip.ml[438,19178+12]..[438,19178+39])
            Ptyp_arrow
            ""
            core_type (strip.ml[438,19178+12]..[438,19178+23])
              Ptyp_constr "Astf.constr" (strip.ml[438,19178+12]..[438,19178+23])
              []
            core_type (strip.ml[438,19178+27]..[438,19178+39])
              Ptyp_constr "Astfn.constr" (strip.ml[438,19178+27]..[438,19178+39])
              []
      <def>
        pattern (strip.ml[453,19894+4]..[453,19894+8])
          Ppat_var "bind" (strip.ml[453,19894+4]..[453,19894+8])
        expression (strip.ml[453,19894+8]..[459,20125+42]) ghost
          Pexp_constraint
          expression (strip.ml[454,19930+2]..[459,20125+42])
            Pexp_function
            [
              <case>
                pattern (strip.ml[455,19941+4]..[455,19941+22])
                  Ppat_variant "And"
                  Some
                    pattern (strip.ml[455,19941+9]..[455,19941+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[455,19941+10]..[455,19941+13])
                          Ppat_var "_a0" (strip.ml[455,19941+10]..[455,19941+13])
                        pattern (strip.ml[455,19941+14]..[455,19941+17])
                          Ppat_var "_a1" (strip.ml[455,19941+14]..[455,19941+17])
                        pattern (strip.ml[455,19941+18]..[455,19941+21])
                          Ppat_var "_a2" (strip.ml[455,19941+18]..[455,19941+21])
                      ]
                expression (strip.ml[456,19967+6]..[456,19967+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[456,19967+10]..[456,19967+13])
                        Ppat_var "_a1" (strip.ml[456,19967+10]..[456,19967+13])
                      expression (strip.ml[456,19967+16]..[456,19967+24])
                        Pexp_apply
                        expression (strip.ml[456,19967+16]..[456,19967+20])
                          Pexp_ident "bind" (strip.ml[456,19967+16]..[456,19967+20])
                        [
                          <label> ""
                            expression (strip.ml[456,19967+21]..[456,19967+24])
                              Pexp_ident "_a1" (strip.ml[456,19967+21]..[456,19967+24])
                        ]
                  ]
                  expression (strip.ml[456,19967+28]..[456,19967+65])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[456,19967+32]..[456,19967+35])
                          Ppat_var "_a2" (strip.ml[456,19967+32]..[456,19967+35])
                        expression (strip.ml[456,19967+38]..[456,19967+46])
                          Pexp_apply
                          expression (strip.ml[456,19967+38]..[456,19967+42])
                            Pexp_ident "bind" (strip.ml[456,19967+38]..[456,19967+42])
                          [
                            <label> ""
                              expression (strip.ml[456,19967+43]..[456,19967+46])
                                Pexp_ident "_a2" (strip.ml[456,19967+43]..[456,19967+46])
                          ]
                    ]
                    expression (strip.ml[456,19967+50]..[456,19967+65])
                      Pexp_variant "And"
                      Some
                        expression (strip.ml[456,19967+55]..[456,19967+65])
                          Pexp_tuple
                          [
                            expression (strip.ml[456,19967+56]..[456,19967+59])
                              Pexp_ident "_a1" (strip.ml[456,19967+56]..[456,19967+59])
                            expression (strip.ml[456,19967+61]..[456,19967+64])
                              Pexp_ident "_a2" (strip.ml[456,19967+61]..[456,19967+64])
                          ]
              <case>
                pattern (strip.ml[457,20033+4]..[457,20033+23])
                  Ppat_variant "Bind"
                  Some
                    pattern (strip.ml[457,20033+10]..[457,20033+23])
                      Ppat_tuple
                      [
                        pattern (strip.ml[457,20033+11]..[457,20033+14])
                          Ppat_var "_a0" (strip.ml[457,20033+11]..[457,20033+14])
                        pattern (strip.ml[457,20033+15]..[457,20033+18])
                          Ppat_var "_a1" (strip.ml[457,20033+15]..[457,20033+18])
                        pattern (strip.ml[457,20033+19]..[457,20033+22])
                          Ppat_var "_a2" (strip.ml[457,20033+19]..[457,20033+22])
                      ]
                expression (strip.ml[458,20060+6]..[458,20060+64])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[458,20060+10]..[458,20060+13])
                        Ppat_var "_a1" (strip.ml[458,20060+10]..[458,20060+13])
                      expression (strip.ml[458,20060+16]..[458,20060+23])
                        Pexp_apply
                        expression (strip.ml[458,20060+16]..[458,20060+19])
                          Pexp_ident "pat" (strip.ml[458,20060+16]..[458,20060+19])
                        [
                          <label> ""
                            expression (strip.ml[458,20060+20]..[458,20060+23])
                              Pexp_ident "_a1" (strip.ml[458,20060+20]..[458,20060+23])
                        ]
                  ]
                  expression (strip.ml[458,20060+27]..[458,20060+64])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[458,20060+31]..[458,20060+34])
                          Ppat_var "_a2" (strip.ml[458,20060+31]..[458,20060+34])
                        expression (strip.ml[458,20060+37]..[458,20060+44])
                          Pexp_apply
                          expression (strip.ml[458,20060+37]..[458,20060+40])
                            Pexp_ident "exp" (strip.ml[458,20060+37]..[458,20060+40])
                          [
                            <label> ""
                              expression (strip.ml[458,20060+41]..[458,20060+44])
                                Pexp_ident "_a2" (strip.ml[458,20060+41]..[458,20060+44])
                          ]
                    ]
                    expression (strip.ml[458,20060+48]..[458,20060+64])
                      Pexp_variant "Bind"
                      Some
                        expression (strip.ml[458,20060+54]..[458,20060+64])
                          Pexp_tuple
                          [
                            expression (strip.ml[458,20060+55]..[458,20060+58])
                              Pexp_ident "_a1" (strip.ml[458,20060+55]..[458,20060+58])
                            expression (strip.ml[458,20060+60]..[458,20060+63])
                              Pexp_ident "_a2" (strip.ml[458,20060+60]..[458,20060+63])
                          ]
              <case>
                pattern (strip.ml[459,20125+4]..[459,20125+15])
                  Ppat_alias "_a0" (strip.ml[459,20125+12]..[459,20125+15])
                  pattern (strip.ml[459,20125+4]..[459,20125+8])
                    Ppat_type
                    "ant" (strip.ml[459,20125+5]..[459,20125+8])
                expression (strip.ml[459,20125+19]..[459,20125+42]) ghost
                  Pexp_coerce
                  expression (strip.ml[459,20125+20]..[459,20125+27])
                    Pexp_apply
                    expression (strip.ml[459,20125+20]..[459,20125+23])
                      Pexp_ident "ant" (strip.ml[459,20125+20]..[459,20125+23])
                    [
                      <label> ""
                        expression (strip.ml[459,20125+24]..[459,20125+27])
                          Pexp_ident "_a0" (strip.ml[459,20125+24]..[459,20125+27])
                    ]
                  None
                  core_type (strip.ml[459,20125+31]..[459,20125+41])
                    Ptyp_constr "Astfn.bind" (strip.ml[459,20125+31]..[459,20125+41])
                    []
            ]
          core_type (strip.ml[453,19894+10]..[453,19894+33])
            Ptyp_arrow
            ""
            core_type (strip.ml[453,19894+10]..[453,19894+19])
              Ptyp_constr "Astf.bind" (strip.ml[453,19894+10]..[453,19894+19])
              []
            core_type (strip.ml[453,19894+23]..[453,19894+33])
              Ptyp_constr "Astfn.bind" (strip.ml[453,19894+23]..[453,19894+33])
              []
      <def>
        pattern (strip.ml[460,20168+4]..[460,20168+8])
          Ppat_var "case" (strip.ml[460,20168+4]..[460,20168+8])
        expression (strip.ml[460,20168+8]..[469,20535+42]) ghost
          Pexp_constraint
          expression (strip.ml[461,20204+2]..[469,20535+42])
            Pexp_function
            [
              <case>
                pattern (strip.ml[462,20215+4]..[462,20215+22])
                  Ppat_variant "Bar"
                  Some
                    pattern (strip.ml[462,20215+9]..[462,20215+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[462,20215+10]..[462,20215+13])
                          Ppat_var "_a0" (strip.ml[462,20215+10]..[462,20215+13])
                        pattern (strip.ml[462,20215+14]..[462,20215+17])
                          Ppat_var "_a1" (strip.ml[462,20215+14]..[462,20215+17])
                        pattern (strip.ml[462,20215+18]..[462,20215+21])
                          Ppat_var "_a2" (strip.ml[462,20215+18]..[462,20215+21])
                      ]
                expression (strip.ml[463,20241+6]..[463,20241+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[463,20241+10]..[463,20241+13])
                        Ppat_var "_a1" (strip.ml[463,20241+10]..[463,20241+13])
                      expression (strip.ml[463,20241+16]..[463,20241+24])
                        Pexp_apply
                        expression (strip.ml[463,20241+16]..[463,20241+20])
                          Pexp_ident "case" (strip.ml[463,20241+16]..[463,20241+20])
                        [
                          <label> ""
                            expression (strip.ml[463,20241+21]..[463,20241+24])
                              Pexp_ident "_a1" (strip.ml[463,20241+21]..[463,20241+24])
                        ]
                  ]
                  expression (strip.ml[463,20241+28]..[463,20241+65])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[463,20241+32]..[463,20241+35])
                          Ppat_var "_a2" (strip.ml[463,20241+32]..[463,20241+35])
                        expression (strip.ml[463,20241+38]..[463,20241+46])
                          Pexp_apply
                          expression (strip.ml[463,20241+38]..[463,20241+42])
                            Pexp_ident "case" (strip.ml[463,20241+38]..[463,20241+42])
                          [
                            <label> ""
                              expression (strip.ml[463,20241+43]..[463,20241+46])
                                Pexp_ident "_a2" (strip.ml[463,20241+43]..[463,20241+46])
                          ]
                    ]
                    expression (strip.ml[463,20241+50]..[463,20241+65])
                      Pexp_variant "Bar"
                      Some
                        expression (strip.ml[463,20241+55]..[463,20241+65])
                          Pexp_tuple
                          [
                            expression (strip.ml[463,20241+56]..[463,20241+59])
                              Pexp_ident "_a1" (strip.ml[463,20241+56]..[463,20241+59])
                            expression (strip.ml[463,20241+61]..[463,20241+64])
                              Pexp_ident "_a2" (strip.ml[463,20241+61]..[463,20241+64])
                          ]
              <case>
                pattern (strip.ml[464,20307+4]..[464,20307+23])
                  Ppat_variant "Case"
                  Some
                    pattern (strip.ml[464,20307+10]..[464,20307+23])
                      Ppat_tuple
                      [
                        pattern (strip.ml[464,20307+11]..[464,20307+14])
                          Ppat_var "_a0" (strip.ml[464,20307+11]..[464,20307+14])
                        pattern (strip.ml[464,20307+15]..[464,20307+18])
                          Ppat_var "_a1" (strip.ml[464,20307+15]..[464,20307+18])
                        pattern (strip.ml[464,20307+19]..[464,20307+22])
                          Ppat_var "_a2" (strip.ml[464,20307+19]..[464,20307+22])
                      ]
                expression (strip.ml[465,20334+6]..[465,20334+64])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[465,20334+10]..[465,20334+13])
                        Ppat_var "_a1" (strip.ml[465,20334+10]..[465,20334+13])
                      expression (strip.ml[465,20334+16]..[465,20334+23])
                        Pexp_apply
                        expression (strip.ml[465,20334+16]..[465,20334+19])
                          Pexp_ident "pat" (strip.ml[465,20334+16]..[465,20334+19])
                        [
                          <label> ""
                            expression (strip.ml[465,20334+20]..[465,20334+23])
                              Pexp_ident "_a1" (strip.ml[465,20334+20]..[465,20334+23])
                        ]
                  ]
                  expression (strip.ml[465,20334+27]..[465,20334+64])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[465,20334+31]..[465,20334+34])
                          Ppat_var "_a2" (strip.ml[465,20334+31]..[465,20334+34])
                        expression (strip.ml[465,20334+37]..[465,20334+44])
                          Pexp_apply
                          expression (strip.ml[465,20334+37]..[465,20334+40])
                            Pexp_ident "exp" (strip.ml[465,20334+37]..[465,20334+40])
                          [
                            <label> ""
                              expression (strip.ml[465,20334+41]..[465,20334+44])
                                Pexp_ident "_a2" (strip.ml[465,20334+41]..[465,20334+44])
                          ]
                    ]
                    expression (strip.ml[465,20334+48]..[465,20334+64])
                      Pexp_variant "Case"
                      Some
                        expression (strip.ml[465,20334+54]..[465,20334+64])
                          Pexp_tuple
                          [
                            expression (strip.ml[465,20334+55]..[465,20334+58])
                              Pexp_ident "_a1" (strip.ml[465,20334+55]..[465,20334+58])
                            expression (strip.ml[465,20334+60]..[465,20334+63])
                              Pexp_ident "_a2" (strip.ml[465,20334+60]..[465,20334+63])
                          ]
              <case>
                pattern (strip.ml[466,20399+4]..[466,20399+31])
                  Ppat_variant "CaseWhen"
                  Some
                    pattern (strip.ml[466,20399+14]..[466,20399+31])
                      Ppat_tuple
                      [
                        pattern (strip.ml[466,20399+15]..[466,20399+18])
                          Ppat_var "_a0" (strip.ml[466,20399+15]..[466,20399+18])
                        pattern (strip.ml[466,20399+19]..[466,20399+22])
                          Ppat_var "_a1" (strip.ml[466,20399+19]..[466,20399+22])
                        pattern (strip.ml[466,20399+23]..[466,20399+26])
                          Ppat_var "_a2" (strip.ml[466,20399+23]..[466,20399+26])
                        pattern (strip.ml[466,20399+27]..[466,20399+30])
                          Ppat_var "_a3" (strip.ml[466,20399+27]..[466,20399+30])
                      ]
                expression (strip.ml[467,20434+6]..[468,20461+73])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[467,20434+10]..[467,20434+13])
                        Ppat_var "_a1" (strip.ml[467,20434+10]..[467,20434+13])
                      expression (strip.ml[467,20434+16]..[467,20434+23])
                        Pexp_apply
                        expression (strip.ml[467,20434+16]..[467,20434+19])
                          Pexp_ident "pat" (strip.ml[467,20434+16]..[467,20434+19])
                        [
                          <label> ""
                            expression (strip.ml[467,20434+20]..[467,20434+23])
                              Pexp_ident "_a1" (strip.ml[467,20434+20]..[467,20434+23])
                        ]
                  ]
                  expression (strip.ml[468,20461+6]..[468,20461+73])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[468,20461+10]..[468,20461+13])
                          Ppat_var "_a2" (strip.ml[468,20461+10]..[468,20461+13])
                        expression (strip.ml[468,20461+16]..[468,20461+23])
                          Pexp_apply
                          expression (strip.ml[468,20461+16]..[468,20461+19])
                            Pexp_ident "exp" (strip.ml[468,20461+16]..[468,20461+19])
                          [
                            <label> ""
                              expression (strip.ml[468,20461+20]..[468,20461+23])
                                Pexp_ident "_a2" (strip.ml[468,20461+20]..[468,20461+23])
                          ]
                    ]
                    expression (strip.ml[468,20461+27]..[468,20461+73])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[468,20461+31]..[468,20461+34])
                            Ppat_var "_a3" (strip.ml[468,20461+31]..[468,20461+34])
                          expression (strip.ml[468,20461+37]..[468,20461+44])
                            Pexp_apply
                            expression (strip.ml[468,20461+37]..[468,20461+40])
                              Pexp_ident "exp" (strip.ml[468,20461+37]..[468,20461+40])
                            [
                              <label> ""
                                expression (strip.ml[468,20461+41]..[468,20461+44])
                                  Pexp_ident "_a3" (strip.ml[468,20461+41]..[468,20461+44])
                            ]
                      ]
                      expression (strip.ml[468,20461+48]..[468,20461+73])
                        Pexp_variant "CaseWhen"
                        Some
                          expression (strip.ml[468,20461+58]..[468,20461+73])
                            Pexp_tuple
                            [
                              expression (strip.ml[468,20461+59]..[468,20461+62])
                                Pexp_ident "_a1" (strip.ml[468,20461+59]..[468,20461+62])
                              expression (strip.ml[468,20461+64]..[468,20461+67])
                                Pexp_ident "_a2" (strip.ml[468,20461+64]..[468,20461+67])
                              expression (strip.ml[468,20461+69]..[468,20461+72])
                                Pexp_ident "_a3" (strip.ml[468,20461+69]..[468,20461+72])
                            ]
              <case>
                pattern (strip.ml[469,20535+4]..[469,20535+15])
                  Ppat_alias "_a0" (strip.ml[469,20535+12]..[469,20535+15])
                  pattern (strip.ml[469,20535+4]..[469,20535+8])
                    Ppat_type
                    "ant" (strip.ml[469,20535+5]..[469,20535+8])
                expression (strip.ml[469,20535+19]..[469,20535+42]) ghost
                  Pexp_coerce
                  expression (strip.ml[469,20535+20]..[469,20535+27])
                    Pexp_apply
                    expression (strip.ml[469,20535+20]..[469,20535+23])
                      Pexp_ident "ant" (strip.ml[469,20535+20]..[469,20535+23])
                    [
                      <label> ""
                        expression (strip.ml[469,20535+24]..[469,20535+27])
                          Pexp_ident "_a0" (strip.ml[469,20535+24]..[469,20535+27])
                    ]
                  None
                  core_type (strip.ml[469,20535+31]..[469,20535+41])
                    Ptyp_constr "Astfn.case" (strip.ml[469,20535+31]..[469,20535+41])
                    []
            ]
          core_type (strip.ml[460,20168+10]..[460,20168+33])
            Ptyp_arrow
            ""
            core_type (strip.ml[460,20168+10]..[460,20168+19])
              Ptyp_constr "Astf.case" (strip.ml[460,20168+10]..[460,20168+19])
              []
            core_type (strip.ml[460,20168+23]..[460,20168+33])
              Ptyp_constr "Astfn.case" (strip.ml[460,20168+23]..[460,20168+33])
              []
      <def>
        pattern (strip.ml[470,20578+4]..[470,20578+8])
          Ppat_var "mexp" (strip.ml[470,20578+4]..[470,20578+8])
        expression (strip.ml[470,20578+8]..[483,21172+42]) ghost
          Pexp_constraint
          expression (strip.ml[471,20614+2]..[483,21172+42])
            Pexp_function
            [
              <case>
                pattern (strip.ml[472,20625+4]..[472,20625+16])
                  Ppat_alias "_a0" (strip.ml[472,20625+13]..[472,20625+16])
                  pattern (strip.ml[472,20625+4]..[472,20625+9])
                    Ppat_type
                    "vid'" (strip.ml[472,20625+5]..[472,20625+9])
                expression (strip.ml[472,20625+20]..[472,20625+44]) ghost
                  Pexp_coerce
                  expression (strip.ml[472,20625+21]..[472,20625+29])
                    Pexp_apply
                    expression (strip.ml[472,20625+21]..[472,20625+25])
                      Pexp_ident "vid'" (strip.ml[472,20625+21]..[472,20625+25])
                    [
                      <label> ""
                        expression (strip.ml[472,20625+26]..[472,20625+29])
                          Pexp_ident "_a0" (strip.ml[472,20625+26]..[472,20625+29])
                    ]
                  None
                  core_type (strip.ml[472,20625+33]..[472,20625+43])
                    Ptyp_constr "Astfn.mexp" (strip.ml[472,20625+33]..[472,20625+43])
                    []
              <case>
                pattern (strip.ml[473,20670+4]..[473,20670+22])
                  Ppat_variant "App"
                  Some
                    pattern (strip.ml[473,20670+9]..[473,20670+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[473,20670+10]..[473,20670+13])
                          Ppat_var "_a0" (strip.ml[473,20670+10]..[473,20670+13])
                        pattern (strip.ml[473,20670+14]..[473,20670+17])
                          Ppat_var "_a1" (strip.ml[473,20670+14]..[473,20670+17])
                        pattern (strip.ml[473,20670+18]..[473,20670+21])
                          Ppat_var "_a2" (strip.ml[473,20670+18]..[473,20670+21])
                      ]
                expression (strip.ml[474,20696+6]..[474,20696+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[474,20696+10]..[474,20696+13])
                        Ppat_var "_a1" (strip.ml[474,20696+10]..[474,20696+13])
                      expression (strip.ml[474,20696+16]..[474,20696+24])
                        Pexp_apply
                        expression (strip.ml[474,20696+16]..[474,20696+20])
                          Pexp_ident "mexp" (strip.ml[474,20696+16]..[474,20696+20])
                        [
                          <label> ""
                            expression (strip.ml[474,20696+21]..[474,20696+24])
                              Pexp_ident "_a1" (strip.ml[474,20696+21]..[474,20696+24])
                        ]
                  ]
                  expression (strip.ml[474,20696+28]..[474,20696+65])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[474,20696+32]..[474,20696+35])
                          Ppat_var "_a2" (strip.ml[474,20696+32]..[474,20696+35])
                        expression (strip.ml[474,20696+38]..[474,20696+46])
                          Pexp_apply
                          expression (strip.ml[474,20696+38]..[474,20696+42])
                            Pexp_ident "mexp" (strip.ml[474,20696+38]..[474,20696+42])
                          [
                            <label> ""
                              expression (strip.ml[474,20696+43]..[474,20696+46])
                                Pexp_ident "_a2" (strip.ml[474,20696+43]..[474,20696+46])
                          ]
                    ]
                    expression (strip.ml[474,20696+50]..[474,20696+65])
                      Pexp_variant "App"
                      Some
                        expression (strip.ml[474,20696+55]..[474,20696+65])
                          Pexp_tuple
                          [
                            expression (strip.ml[474,20696+56]..[474,20696+59])
                              Pexp_ident "_a1" (strip.ml[474,20696+56]..[474,20696+59])
                            expression (strip.ml[474,20696+61]..[474,20696+64])
                              Pexp_ident "_a2" (strip.ml[474,20696+61]..[474,20696+64])
                          ]
              <case>
                pattern (strip.ml[475,20762+4]..[475,20762+30])
                  Ppat_variant "Functor"
                  Some
                    pattern (strip.ml[475,20762+13]..[475,20762+30])
                      Ppat_tuple
                      [
                        pattern (strip.ml[475,20762+14]..[475,20762+17])
                          Ppat_var "_a0" (strip.ml[475,20762+14]..[475,20762+17])
                        pattern (strip.ml[475,20762+18]..[475,20762+21])
                          Ppat_var "_a1" (strip.ml[475,20762+18]..[475,20762+21])
                        pattern (strip.ml[475,20762+22]..[475,20762+25])
                          Ppat_var "_a2" (strip.ml[475,20762+22]..[475,20762+25])
                        pattern (strip.ml[475,20762+26]..[475,20762+29])
                          Ppat_var "_a3" (strip.ml[475,20762+26]..[475,20762+29])
                      ]
                expression (strip.ml[476,20796+6]..[477,20827+74])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[476,20796+10]..[476,20796+13])
                        Ppat_var "_a1" (strip.ml[476,20796+10]..[476,20796+13])
                      expression (strip.ml[476,20796+16]..[476,20796+27])
                        Pexp_apply
                        expression (strip.ml[476,20796+16]..[476,20796+23])
                          Pexp_ident "auident" (strip.ml[476,20796+16]..[476,20796+23])
                        [
                          <label> ""
                            expression (strip.ml[476,20796+24]..[476,20796+27])
                              Pexp_ident "_a1" (strip.ml[476,20796+24]..[476,20796+27])
                        ]
                  ]
                  expression (strip.ml[477,20827+6]..[477,20827+74])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[477,20827+10]..[477,20827+13])
                          Ppat_var "_a2" (strip.ml[477,20827+10]..[477,20827+13])
                        expression (strip.ml[477,20827+16]..[477,20827+24])
                          Pexp_apply
                          expression (strip.ml[477,20827+16]..[477,20827+20])
                            Pexp_ident "mtyp" (strip.ml[477,20827+16]..[477,20827+20])
                          [
                            <label> ""
                              expression (strip.ml[477,20827+21]..[477,20827+24])
                                Pexp_ident "_a2" (strip.ml[477,20827+21]..[477,20827+24])
                          ]
                    ]
                    expression (strip.ml[477,20827+28]..[477,20827+74])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[477,20827+32]..[477,20827+35])
                            Ppat_var "_a3" (strip.ml[477,20827+32]..[477,20827+35])
                          expression (strip.ml[477,20827+38]..[477,20827+46])
                            Pexp_apply
                            expression (strip.ml[477,20827+38]..[477,20827+42])
                              Pexp_ident "mexp" (strip.ml[477,20827+38]..[477,20827+42])
                            [
                              <label> ""
                                expression (strip.ml[477,20827+43]..[477,20827+46])
                                  Pexp_ident "_a3" (strip.ml[477,20827+43]..[477,20827+46])
                            ]
                      ]
                      expression (strip.ml[477,20827+50]..[477,20827+74])
                        Pexp_variant "Functor"
                        Some
                          expression (strip.ml[477,20827+59]..[477,20827+74])
                            Pexp_tuple
                            [
                              expression (strip.ml[477,20827+60]..[477,20827+63])
                                Pexp_ident "_a1" (strip.ml[477,20827+60]..[477,20827+63])
                              expression (strip.ml[477,20827+65]..[477,20827+68])
                                Pexp_ident "_a2" (strip.ml[477,20827+65]..[477,20827+68])
                              expression (strip.ml[477,20827+70]..[477,20827+73])
                                Pexp_ident "_a3" (strip.ml[477,20827+70]..[477,20827+73])
                            ]
              <case>
                pattern (strip.ml[478,20902+4]..[478,20902+21])
                  Ppat_variant "Struct"
                  Some
                    pattern (strip.ml[478,20902+12]..[478,20902+21])
                      Ppat_tuple
                      [
                        pattern (strip.ml[478,20902+13]..[478,20902+16])
                          Ppat_var "_a0" (strip.ml[478,20902+13]..[478,20902+16])
                        pattern (strip.ml[478,20902+17]..[478,20902+20])
                          Ppat_var "_a1" (strip.ml[478,20902+17]..[478,20902+20])
                      ]
                expression (strip.ml[478,20902+25]..[478,20902+58])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[478,20902+29]..[478,20902+32])
                        Ppat_var "_a1" (strip.ml[478,20902+29]..[478,20902+32])
                      expression (strip.ml[478,20902+35]..[478,20902+43])
                        Pexp_apply
                        expression (strip.ml[478,20902+35]..[478,20902+39])
                          Pexp_ident "stru" (strip.ml[478,20902+35]..[478,20902+39])
                        [
                          <label> ""
                            expression (strip.ml[478,20902+40]..[478,20902+43])
                              Pexp_ident "_a1" (strip.ml[478,20902+40]..[478,20902+43])
                        ]
                  ]
                  expression (strip.ml[478,20902+47]..[478,20902+58])
                    Pexp_variant "Struct"
                    Some
                      expression (strip.ml[478,20902+55]..[478,20902+58])
                        Pexp_ident "_a1" (strip.ml[478,20902+55]..[478,20902+58])
              <case>
                pattern (strip.ml[479,20961+4]..[479,20961+18])
                  Ppat_variant "StructEnd"
                  Some
                    pattern (strip.ml[479,20961+15]..[479,20961+18])
                      Ppat_var "_a0" (strip.ml[479,20961+15]..[479,20961+18])
                expression (strip.ml[479,20961+22]..[479,20961+32])
                  Pexp_variant "StructEnd"
                  None
              <case>
                pattern (strip.ml[480,20994+4]..[480,20994+29])
                  Ppat_variant "Constraint"
                  Some
                    pattern (strip.ml[480,20994+16]..[480,20994+29])
                      Ppat_tuple
                      [
                        pattern (strip.ml[480,20994+17]..[480,20994+20])
                          Ppat_var "_a0" (strip.ml[480,20994+17]..[480,20994+20])
                        pattern (strip.ml[480,20994+21]..[480,20994+24])
                          Ppat_var "_a1" (strip.ml[480,20994+21]..[480,20994+24])
                        pattern (strip.ml[480,20994+25]..[480,20994+28])
                          Ppat_var "_a2" (strip.ml[480,20994+25]..[480,20994+28])
                      ]
                expression (strip.ml[481,21027+6]..[481,21027+72])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[481,21027+10]..[481,21027+13])
                        Ppat_var "_a1" (strip.ml[481,21027+10]..[481,21027+13])
                      expression (strip.ml[481,21027+16]..[481,21027+24])
                        Pexp_apply
                        expression (strip.ml[481,21027+16]..[481,21027+20])
                          Pexp_ident "mexp" (strip.ml[481,21027+16]..[481,21027+20])
                        [
                          <label> ""
                            expression (strip.ml[481,21027+21]..[481,21027+24])
                              Pexp_ident "_a1" (strip.ml[481,21027+21]..[481,21027+24])
                        ]
                  ]
                  expression (strip.ml[481,21027+28]..[481,21027+72])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[481,21027+32]..[481,21027+35])
                          Ppat_var "_a2" (strip.ml[481,21027+32]..[481,21027+35])
                        expression (strip.ml[481,21027+38]..[481,21027+46])
                          Pexp_apply
                          expression (strip.ml[481,21027+38]..[481,21027+42])
                            Pexp_ident "mtyp" (strip.ml[481,21027+38]..[481,21027+42])
                          [
                            <label> ""
                              expression (strip.ml[481,21027+43]..[481,21027+46])
                                Pexp_ident "_a2" (strip.ml[481,21027+43]..[481,21027+46])
                          ]
                    ]
                    expression (strip.ml[481,21027+50]..[481,21027+72])
                      Pexp_variant "Constraint"
                      Some
                        expression (strip.ml[481,21027+62]..[481,21027+72])
                          Pexp_tuple
                          [
                            expression (strip.ml[481,21027+63]..[481,21027+66])
                              Pexp_ident "_a1" (strip.ml[481,21027+63]..[481,21027+66])
                            expression (strip.ml[481,21027+68]..[481,21027+71])
                              Pexp_ident "_a2" (strip.ml[481,21027+68]..[481,21027+71])
                          ]
              <case>
                pattern (strip.ml[482,21100+4]..[482,21100+28])
                  Ppat_variant "PackageModule"
                  Some
                    pattern (strip.ml[482,21100+19]..[482,21100+28])
                      Ppat_tuple
                      [
                        pattern (strip.ml[482,21100+20]..[482,21100+23])
                          Ppat_var "_a0" (strip.ml[482,21100+20]..[482,21100+23])
                        pattern (strip.ml[482,21100+24]..[482,21100+27])
                          Ppat_var "_a1" (strip.ml[482,21100+24]..[482,21100+27])
                      ]
                expression (strip.ml[482,21100+32]..[482,21100+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[482,21100+36]..[482,21100+39])
                        Ppat_var "_a1" (strip.ml[482,21100+36]..[482,21100+39])
                      expression (strip.ml[482,21100+42]..[482,21100+49])
                        Pexp_apply
                        expression (strip.ml[482,21100+42]..[482,21100+45])
                          Pexp_ident "exp" (strip.ml[482,21100+42]..[482,21100+45])
                        [
                          <label> ""
                            expression (strip.ml[482,21100+46]..[482,21100+49])
                              Pexp_ident "_a1" (strip.ml[482,21100+46]..[482,21100+49])
                        ]
                  ]
                  expression (strip.ml[482,21100+53]..[482,21100+71])
                    Pexp_variant "PackageModule"
                    Some
                      expression (strip.ml[482,21100+68]..[482,21100+71])
                        Pexp_ident "_a1" (strip.ml[482,21100+68]..[482,21100+71])
              <case>
                pattern (strip.ml[483,21172+4]..[483,21172+15])
                  Ppat_alias "_a0" (strip.ml[483,21172+12]..[483,21172+15])
                  pattern (strip.ml[483,21172+4]..[483,21172+8])
                    Ppat_type
                    "ant" (strip.ml[483,21172+5]..[483,21172+8])
                expression (strip.ml[483,21172+19]..[483,21172+42]) ghost
                  Pexp_coerce
                  expression (strip.ml[483,21172+20]..[483,21172+27])
                    Pexp_apply
                    expression (strip.ml[483,21172+20]..[483,21172+23])
                      Pexp_ident "ant" (strip.ml[483,21172+20]..[483,21172+23])
                    [
                      <label> ""
                        expression (strip.ml[483,21172+24]..[483,21172+27])
                          Pexp_ident "_a0" (strip.ml[483,21172+24]..[483,21172+27])
                    ]
                  None
                  core_type (strip.ml[483,21172+31]..[483,21172+41])
                    Ptyp_constr "Astfn.mexp" (strip.ml[483,21172+31]..[483,21172+41])
                    []
            ]
          core_type (strip.ml[470,20578+10]..[470,20578+33])
            Ptyp_arrow
            ""
            core_type (strip.ml[470,20578+10]..[470,20578+19])
              Ptyp_constr "Astf.mexp" (strip.ml[470,20578+10]..[470,20578+19])
              []
            core_type (strip.ml[470,20578+23]..[470,20578+33])
              Ptyp_constr "Astfn.mexp" (strip.ml[470,20578+23]..[470,20578+33])
              []
      <def>
        pattern (strip.ml[484,21215+4]..[484,21215+8])
          Ppat_var "stru" (strip.ml[484,21215+4]..[484,21215+8])
        expression (strip.ml[484,21215+8]..[513,22644+42]) ghost
          Pexp_constraint
          expression (strip.ml[485,21251+2]..[513,22644+42])
            Pexp_function
            [
              <case>
                pattern (strip.ml[486,21262+4]..[486,21262+20])
                  Ppat_variant "Class"
                  Some
                    pattern (strip.ml[486,21262+11]..[486,21262+20])
                      Ppat_tuple
                      [
                        pattern (strip.ml[486,21262+12]..[486,21262+15])
                          Ppat_var "_a0" (strip.ml[486,21262+12]..[486,21262+15])
                        pattern (strip.ml[486,21262+16]..[486,21262+19])
                          Ppat_var "_a1" (strip.ml[486,21262+16]..[486,21262+19])
                      ]
                expression (strip.ml[486,21262+24]..[486,21262+58])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[486,21262+28]..[486,21262+31])
                        Ppat_var "_a1" (strip.ml[486,21262+28]..[486,21262+31])
                      expression (strip.ml[486,21262+34]..[486,21262+44])
                        Pexp_apply
                        expression (strip.ml[486,21262+34]..[486,21262+40])
                          Pexp_ident "cldecl" (strip.ml[486,21262+34]..[486,21262+40])
                        [
                          <label> ""
                            expression (strip.ml[486,21262+41]..[486,21262+44])
                              Pexp_ident "_a1" (strip.ml[486,21262+41]..[486,21262+44])
                        ]
                  ]
                  expression (strip.ml[486,21262+48]..[486,21262+58])
                    Pexp_variant "Class"
                    Some
                      expression (strip.ml[486,21262+55]..[486,21262+58])
                        Pexp_ident "_a1" (strip.ml[486,21262+55]..[486,21262+58])
              <case>
                pattern (strip.ml[487,21321+4]..[487,21321+24])
                  Ppat_variant "ClassType"
                  Some
                    pattern (strip.ml[487,21321+15]..[487,21321+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[487,21321+16]..[487,21321+19])
                          Ppat_var "_a0" (strip.ml[487,21321+16]..[487,21321+19])
                        pattern (strip.ml[487,21321+20]..[487,21321+23])
                          Ppat_var "_a1" (strip.ml[487,21321+20]..[487,21321+23])
                      ]
                expression (strip.ml[487,21321+28]..[487,21321+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[487,21321+32]..[487,21321+35])
                        Ppat_var "_a1" (strip.ml[487,21321+32]..[487,21321+35])
                      expression (strip.ml[487,21321+38]..[487,21321+49])
                        Pexp_apply
                        expression (strip.ml[487,21321+38]..[487,21321+45])
                          Pexp_ident "cltdecl" (strip.ml[487,21321+38]..[487,21321+45])
                        [
                          <label> ""
                            expression (strip.ml[487,21321+46]..[487,21321+49])
                              Pexp_ident "_a1" (strip.ml[487,21321+46]..[487,21321+49])
                        ]
                  ]
                  expression (strip.ml[487,21321+53]..[487,21321+67])
                    Pexp_variant "ClassType"
                    Some
                      expression (strip.ml[487,21321+64]..[487,21321+67])
                        Pexp_ident "_a1" (strip.ml[487,21321+64]..[487,21321+67])
              <case>
                pattern (strip.ml[488,21389+4]..[488,21389+22])
                  Ppat_variant "Sem"
                  Some
                    pattern (strip.ml[488,21389+9]..[488,21389+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[488,21389+10]..[488,21389+13])
                          Ppat_var "_a0" (strip.ml[488,21389+10]..[488,21389+13])
                        pattern (strip.ml[488,21389+14]..[488,21389+17])
                          Ppat_var "_a1" (strip.ml[488,21389+14]..[488,21389+17])
                        pattern (strip.ml[488,21389+18]..[488,21389+21])
                          Ppat_var "_a2" (strip.ml[488,21389+18]..[488,21389+21])
                      ]
                expression (strip.ml[489,21415+6]..[489,21415+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[489,21415+10]..[489,21415+13])
                        Ppat_var "_a1" (strip.ml[489,21415+10]..[489,21415+13])
                      expression (strip.ml[489,21415+16]..[489,21415+24])
                        Pexp_apply
                        expression (strip.ml[489,21415+16]..[489,21415+20])
                          Pexp_ident "stru" (strip.ml[489,21415+16]..[489,21415+20])
                        [
                          <label> ""
                            expression (strip.ml[489,21415+21]..[489,21415+24])
                              Pexp_ident "_a1" (strip.ml[489,21415+21]..[489,21415+24])
                        ]
                  ]
                  expression (strip.ml[489,21415+28]..[489,21415+65])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[489,21415+32]..[489,21415+35])
                          Ppat_var "_a2" (strip.ml[489,21415+32]..[489,21415+35])
                        expression (strip.ml[489,21415+38]..[489,21415+46])
                          Pexp_apply
                          expression (strip.ml[489,21415+38]..[489,21415+42])
                            Pexp_ident "stru" (strip.ml[489,21415+38]..[489,21415+42])
                          [
                            <label> ""
                              expression (strip.ml[489,21415+43]..[489,21415+46])
                                Pexp_ident "_a2" (strip.ml[489,21415+43]..[489,21415+46])
                          ]
                    ]
                    expression (strip.ml[489,21415+50]..[489,21415+65])
                      Pexp_variant "Sem"
                      Some
                        expression (strip.ml[489,21415+55]..[489,21415+65])
                          Pexp_tuple
                          [
                            expression (strip.ml[489,21415+56]..[489,21415+59])
                              Pexp_ident "_a1" (strip.ml[489,21415+56]..[489,21415+59])
                            expression (strip.ml[489,21415+61]..[489,21415+64])
                              Pexp_ident "_a2" (strip.ml[489,21415+61]..[489,21415+64])
                          ]
              <case>
                pattern (strip.ml[490,21481+4]..[490,21481+30])
                  Ppat_variant "DirectiveSimple"
                  Some
                    pattern (strip.ml[490,21481+21]..[490,21481+30])
                      Ppat_tuple
                      [
                        pattern (strip.ml[490,21481+22]..[490,21481+25])
                          Ppat_var "_a0" (strip.ml[490,21481+22]..[490,21481+25])
                        pattern (strip.ml[490,21481+26]..[490,21481+29])
                          Ppat_var "_a1" (strip.ml[490,21481+26]..[490,21481+29])
                      ]
                expression (strip.ml[491,21515+6]..[491,21515+51])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[491,21515+10]..[491,21515+13])
                        Ppat_var "_a1" (strip.ml[491,21515+10]..[491,21515+13])
                      expression (strip.ml[491,21515+16]..[491,21515+27])
                        Pexp_apply
                        expression (strip.ml[491,21515+16]..[491,21515+23])
                          Pexp_ident "alident" (strip.ml[491,21515+16]..[491,21515+23])
                        [
                          <label> ""
                            expression (strip.ml[491,21515+24]..[491,21515+27])
                              Pexp_ident "_a1" (strip.ml[491,21515+24]..[491,21515+27])
                        ]
                  ]
                  expression (strip.ml[491,21515+31]..[491,21515+51])
                    Pexp_variant "DirectiveSimple"
                    Some
                      expression (strip.ml[491,21515+48]..[491,21515+51])
                        Pexp_ident "_a1" (strip.ml[491,21515+48]..[491,21515+51])
              <case>
                pattern (strip.ml[492,21567+4]..[492,21567+28])
                  Ppat_variant "Directive"
                  Some
                    pattern (strip.ml[492,21567+15]..[492,21567+28])
                      Ppat_tuple
                      [
                        pattern (strip.ml[492,21567+16]..[492,21567+19])
                          Ppat_var "_a0" (strip.ml[492,21567+16]..[492,21567+19])
                        pattern (strip.ml[492,21567+20]..[492,21567+23])
                          Ppat_var "_a1" (strip.ml[492,21567+20]..[492,21567+23])
                        pattern (strip.ml[492,21567+24]..[492,21567+27])
                          Ppat_var "_a2" (strip.ml[492,21567+24]..[492,21567+27])
                      ]
                expression (strip.ml[493,21599+6]..[493,21599+73])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[493,21599+10]..[493,21599+13])
                        Ppat_var "_a1" (strip.ml[493,21599+10]..[493,21599+13])
                      expression (strip.ml[493,21599+16]..[493,21599+27])
                        Pexp_apply
                        expression (strip.ml[493,21599+16]..[493,21599+23])
                          Pexp_ident "alident" (strip.ml[493,21599+16]..[493,21599+23])
                        [
                          <label> ""
                            expression (strip.ml[493,21599+24]..[493,21599+27])
                              Pexp_ident "_a1" (strip.ml[493,21599+24]..[493,21599+27])
                        ]
                  ]
                  expression (strip.ml[493,21599+31]..[493,21599+73])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[493,21599+35]..[493,21599+38])
                          Ppat_var "_a2" (strip.ml[493,21599+35]..[493,21599+38])
                        expression (strip.ml[493,21599+41]..[493,21599+48])
                          Pexp_apply
                          expression (strip.ml[493,21599+41]..[493,21599+44])
                            Pexp_ident "exp" (strip.ml[493,21599+41]..[493,21599+44])
                          [
                            <label> ""
                              expression (strip.ml[493,21599+45]..[493,21599+48])
                                Pexp_ident "_a2" (strip.ml[493,21599+45]..[493,21599+48])
                          ]
                    ]
                    expression (strip.ml[493,21599+52]..[493,21599+73])
                      Pexp_variant "Directive"
                      Some
                        expression (strip.ml[493,21599+63]..[493,21599+73])
                          Pexp_tuple
                          [
                            expression (strip.ml[493,21599+64]..[493,21599+67])
                              Pexp_ident "_a1" (strip.ml[493,21599+64]..[493,21599+67])
                            expression (strip.ml[493,21599+69]..[493,21599+72])
                              Pexp_ident "_a2" (strip.ml[493,21599+69]..[493,21599+72])
                          ]
              <case>
                pattern (strip.ml[494,21673+4]..[494,21673+24])
                  Ppat_variant "Exception"
                  Some
                    pattern (strip.ml[494,21673+15]..[494,21673+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[494,21673+16]..[494,21673+19])
                          Ppat_var "_a0" (strip.ml[494,21673+16]..[494,21673+19])
                        pattern (strip.ml[494,21673+20]..[494,21673+23])
                          Ppat_var "_a1" (strip.ml[494,21673+20]..[494,21673+23])
                      ]
                expression (strip.ml[494,21673+28]..[494,21673+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[494,21673+32]..[494,21673+35])
                        Ppat_var "_a1" (strip.ml[494,21673+32]..[494,21673+35])
                      expression (strip.ml[494,21673+38]..[494,21673+49])
                        Pexp_apply
                        expression (strip.ml[494,21673+38]..[494,21673+45])
                          Pexp_ident "of_ctyp" (strip.ml[494,21673+38]..[494,21673+45])
                        [
                          <label> ""
                            expression (strip.ml[494,21673+46]..[494,21673+49])
                              Pexp_ident "_a1" (strip.ml[494,21673+46]..[494,21673+49])
                        ]
                  ]
                  expression (strip.ml[494,21673+53]..[494,21673+67])
                    Pexp_variant "Exception"
                    Some
                      expression (strip.ml[494,21673+64]..[494,21673+67])
                        Pexp_ident "_a1" (strip.ml[494,21673+64]..[494,21673+67])
              <case>
                pattern (strip.ml[495,21741+4]..[495,21741+20])
                  Ppat_variant "StExp"
                  Some
                    pattern (strip.ml[495,21741+11]..[495,21741+20])
                      Ppat_tuple
                      [
                        pattern (strip.ml[495,21741+12]..[495,21741+15])
                          Ppat_var "_a0" (strip.ml[495,21741+12]..[495,21741+15])
                        pattern (strip.ml[495,21741+16]..[495,21741+19])
                          Ppat_var "_a1" (strip.ml[495,21741+16]..[495,21741+19])
                      ]
                expression (strip.ml[495,21741+24]..[495,21741+55])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[495,21741+28]..[495,21741+31])
                        Ppat_var "_a1" (strip.ml[495,21741+28]..[495,21741+31])
                      expression (strip.ml[495,21741+34]..[495,21741+41])
                        Pexp_apply
                        expression (strip.ml[495,21741+34]..[495,21741+37])
                          Pexp_ident "exp" (strip.ml[495,21741+34]..[495,21741+37])
                        [
                          <label> ""
                            expression (strip.ml[495,21741+38]..[495,21741+41])
                              Pexp_ident "_a1" (strip.ml[495,21741+38]..[495,21741+41])
                        ]
                  ]
                  expression (strip.ml[495,21741+45]..[495,21741+55])
                    Pexp_variant "StExp"
                    Some
                      expression (strip.ml[495,21741+52]..[495,21741+55])
                        Pexp_ident "_a1" (strip.ml[495,21741+52]..[495,21741+55])
              <case>
                pattern (strip.ml[496,21797+4]..[496,21797+31])
                  Ppat_variant "External"
                  Some
                    pattern (strip.ml[496,21797+14]..[496,21797+31])
                      Ppat_tuple
                      [
                        pattern (strip.ml[496,21797+15]..[496,21797+18])
                          Ppat_var "_a0" (strip.ml[496,21797+15]..[496,21797+18])
                        pattern (strip.ml[496,21797+19]..[496,21797+22])
                          Ppat_var "_a1" (strip.ml[496,21797+19]..[496,21797+22])
                        pattern (strip.ml[496,21797+23]..[496,21797+26])
                          Ppat_var "_a2" (strip.ml[496,21797+23]..[496,21797+26])
                        pattern (strip.ml[496,21797+27]..[496,21797+30])
                          Ppat_var "_a3" (strip.ml[496,21797+27]..[496,21797+30])
                      ]
                expression (strip.ml[497,21832+6]..[499,21891+56])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[497,21832+10]..[497,21832+13])
                        Ppat_var "_a1" (strip.ml[497,21832+10]..[497,21832+13])
                      expression (strip.ml[497,21832+16]..[497,21832+27])
                        Pexp_apply
                        expression (strip.ml[497,21832+16]..[497,21832+23])
                          Pexp_ident "alident" (strip.ml[497,21832+16]..[497,21832+23])
                        [
                          <label> ""
                            expression (strip.ml[497,21832+24]..[497,21832+27])
                              Pexp_ident "_a1" (strip.ml[497,21832+24]..[497,21832+27])
                        ]
                  ]
                  expression (strip.ml[498,21863+6]..[499,21891+56])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[498,21863+10]..[498,21863+13])
                          Ppat_var "_a2" (strip.ml[498,21863+10]..[498,21863+13])
                        expression (strip.ml[498,21863+16]..[498,21863+24])
                          Pexp_apply
                          expression (strip.ml[498,21863+16]..[498,21863+20])
                            Pexp_ident "ctyp" (strip.ml[498,21863+16]..[498,21863+20])
                          [
                            <label> ""
                              expression (strip.ml[498,21863+21]..[498,21863+24])
                                Pexp_ident "_a2" (strip.ml[498,21863+21]..[498,21863+24])
                          ]
                    ]
                    expression (strip.ml[499,21891+6]..[499,21891+56])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[499,21891+10]..[499,21891+13])
                            Ppat_var "_a3" (strip.ml[499,21891+10]..[499,21891+13])
                          expression (strip.ml[499,21891+16]..[499,21891+27])
                            Pexp_apply
                            expression (strip.ml[499,21891+16]..[499,21891+23])
                              Pexp_ident "strings" (strip.ml[499,21891+16]..[499,21891+23])
                            [
                              <label> ""
                                expression (strip.ml[499,21891+24]..[499,21891+27])
                                  Pexp_ident "_a3" (strip.ml[499,21891+24]..[499,21891+27])
                            ]
                      ]
                      expression (strip.ml[499,21891+31]..[499,21891+56])
                        Pexp_variant "External"
                        Some
                          expression (strip.ml[499,21891+41]..[499,21891+56])
                            Pexp_tuple
                            [
                              expression (strip.ml[499,21891+42]..[499,21891+45])
                                Pexp_ident "_a1" (strip.ml[499,21891+42]..[499,21891+45])
                              expression (strip.ml[499,21891+47]..[499,21891+50])
                                Pexp_ident "_a2" (strip.ml[499,21891+47]..[499,21891+50])
                              expression (strip.ml[499,21891+52]..[499,21891+55])
                                Pexp_ident "_a3" (strip.ml[499,21891+52]..[499,21891+55])
                            ]
              <case>
                pattern (strip.ml[500,21948+4]..[500,21948+22])
                  Ppat_variant "Include"
                  Some
                    pattern (strip.ml[500,21948+13]..[500,21948+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[500,21948+14]..[500,21948+17])
                          Ppat_var "_a0" (strip.ml[500,21948+14]..[500,21948+17])
                        pattern (strip.ml[500,21948+18]..[500,21948+21])
                          Ppat_var "_a1" (strip.ml[500,21948+18]..[500,21948+21])
                      ]
                expression (strip.ml[500,21948+26]..[500,21948+60])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[500,21948+30]..[500,21948+33])
                        Ppat_var "_a1" (strip.ml[500,21948+30]..[500,21948+33])
                      expression (strip.ml[500,21948+36]..[500,21948+44])
                        Pexp_apply
                        expression (strip.ml[500,21948+36]..[500,21948+40])
                          Pexp_ident "mexp" (strip.ml[500,21948+36]..[500,21948+40])
                        [
                          <label> ""
                            expression (strip.ml[500,21948+41]..[500,21948+44])
                              Pexp_ident "_a1" (strip.ml[500,21948+41]..[500,21948+44])
                        ]
                  ]
                  expression (strip.ml[500,21948+48]..[500,21948+60])
                    Pexp_variant "Include"
                    Some
                      expression (strip.ml[500,21948+57]..[500,21948+60])
                        Pexp_ident "_a1" (strip.ml[500,21948+57]..[500,21948+60])
              <case>
                pattern (strip.ml[501,22009+4]..[501,22009+25])
                  Ppat_variant "Module"
                  Some
                    pattern (strip.ml[501,22009+12]..[501,22009+25])
                      Ppat_tuple
                      [
                        pattern (strip.ml[501,22009+13]..[501,22009+16])
                          Ppat_var "_a0" (strip.ml[501,22009+13]..[501,22009+16])
                        pattern (strip.ml[501,22009+17]..[501,22009+20])
                          Ppat_var "_a1" (strip.ml[501,22009+17]..[501,22009+20])
                        pattern (strip.ml[501,22009+21]..[501,22009+24])
                          Ppat_var "_a2" (strip.ml[501,22009+21]..[501,22009+24])
                      ]
                expression (strip.ml[502,22038+6]..[502,22038+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[502,22038+10]..[502,22038+13])
                        Ppat_var "_a1" (strip.ml[502,22038+10]..[502,22038+13])
                      expression (strip.ml[502,22038+16]..[502,22038+27])
                        Pexp_apply
                        expression (strip.ml[502,22038+16]..[502,22038+23])
                          Pexp_ident "auident" (strip.ml[502,22038+16]..[502,22038+23])
                        [
                          <label> ""
                            expression (strip.ml[502,22038+24]..[502,22038+27])
                              Pexp_ident "_a1" (strip.ml[502,22038+24]..[502,22038+27])
                        ]
                  ]
                  expression (strip.ml[502,22038+31]..[502,22038+71])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[502,22038+35]..[502,22038+38])
                          Ppat_var "_a2" (strip.ml[502,22038+35]..[502,22038+38])
                        expression (strip.ml[502,22038+41]..[502,22038+49])
                          Pexp_apply
                          expression (strip.ml[502,22038+41]..[502,22038+45])
                            Pexp_ident "mexp" (strip.ml[502,22038+41]..[502,22038+45])
                          [
                            <label> ""
                              expression (strip.ml[502,22038+46]..[502,22038+49])
                                Pexp_ident "_a2" (strip.ml[502,22038+46]..[502,22038+49])
                          ]
                    ]
                    expression (strip.ml[502,22038+53]..[502,22038+71])
                      Pexp_variant "Module"
                      Some
                        expression (strip.ml[502,22038+61]..[502,22038+71])
                          Pexp_tuple
                          [
                            expression (strip.ml[502,22038+62]..[502,22038+65])
                              Pexp_ident "_a1" (strip.ml[502,22038+62]..[502,22038+65])
                            expression (strip.ml[502,22038+67]..[502,22038+70])
                              Pexp_ident "_a2" (strip.ml[502,22038+67]..[502,22038+70])
                          ]
              <case>
                pattern (strip.ml[503,22110+4]..[503,22110+24])
                  Ppat_variant "RecModule"
                  Some
                    pattern (strip.ml[503,22110+15]..[503,22110+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[503,22110+16]..[503,22110+19])
                          Ppat_var "_a0" (strip.ml[503,22110+16]..[503,22110+19])
                        pattern (strip.ml[503,22110+20]..[503,22110+23])
                          Ppat_var "_a1" (strip.ml[503,22110+20]..[503,22110+23])
                      ]
                expression (strip.ml[503,22110+28]..[503,22110+65])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[503,22110+32]..[503,22110+35])
                        Ppat_var "_a1" (strip.ml[503,22110+32]..[503,22110+35])
                      expression (strip.ml[503,22110+38]..[503,22110+47])
                        Pexp_apply
                        expression (strip.ml[503,22110+38]..[503,22110+43])
                          Pexp_ident "mbind" (strip.ml[503,22110+38]..[503,22110+43])
                        [
                          <label> ""
                            expression (strip.ml[503,22110+44]..[503,22110+47])
                              Pexp_ident "_a1" (strip.ml[503,22110+44]..[503,22110+47])
                        ]
                  ]
                  expression (strip.ml[503,22110+51]..[503,22110+65])
                    Pexp_variant "RecModule"
                    Some
                      expression (strip.ml[503,22110+62]..[503,22110+65])
                        Pexp_ident "_a1" (strip.ml[503,22110+62]..[503,22110+65])
              <case>
                pattern (strip.ml[504,22176+4]..[504,22176+29])
                  Ppat_variant "ModuleType"
                  Some
                    pattern (strip.ml[504,22176+16]..[504,22176+29])
                      Ppat_tuple
                      [
                        pattern (strip.ml[504,22176+17]..[504,22176+20])
                          Ppat_var "_a0" (strip.ml[504,22176+17]..[504,22176+20])
                        pattern (strip.ml[504,22176+21]..[504,22176+24])
                          Ppat_var "_a1" (strip.ml[504,22176+21]..[504,22176+24])
                        pattern (strip.ml[504,22176+25]..[504,22176+28])
                          Ppat_var "_a2" (strip.ml[504,22176+25]..[504,22176+28])
                      ]
                expression (strip.ml[505,22209+6]..[505,22209+75])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[505,22209+10]..[505,22209+13])
                        Ppat_var "_a1" (strip.ml[505,22209+10]..[505,22209+13])
                      expression (strip.ml[505,22209+16]..[505,22209+27])
                        Pexp_apply
                        expression (strip.ml[505,22209+16]..[505,22209+23])
                          Pexp_ident "auident" (strip.ml[505,22209+16]..[505,22209+23])
                        [
                          <label> ""
                            expression (strip.ml[505,22209+24]..[505,22209+27])
                              Pexp_ident "_a1" (strip.ml[505,22209+24]..[505,22209+27])
                        ]
                  ]
                  expression (strip.ml[505,22209+31]..[505,22209+75])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[505,22209+35]..[505,22209+38])
                          Ppat_var "_a2" (strip.ml[505,22209+35]..[505,22209+38])
                        expression (strip.ml[505,22209+41]..[505,22209+49])
                          Pexp_apply
                          expression (strip.ml[505,22209+41]..[505,22209+45])
                            Pexp_ident "mtyp" (strip.ml[505,22209+41]..[505,22209+45])
                          [
                            <label> ""
                              expression (strip.ml[505,22209+46]..[505,22209+49])
                                Pexp_ident "_a2" (strip.ml[505,22209+46]..[505,22209+49])
                          ]
                    ]
                    expression (strip.ml[505,22209+53]..[505,22209+75])
                      Pexp_variant "ModuleType"
                      Some
                        expression (strip.ml[505,22209+65]..[505,22209+75])
                          Pexp_tuple
                          [
                            expression (strip.ml[505,22209+66]..[505,22209+69])
                              Pexp_ident "_a1" (strip.ml[505,22209+66]..[505,22209+69])
                            expression (strip.ml[505,22209+71]..[505,22209+74])
                              Pexp_ident "_a2" (strip.ml[505,22209+71]..[505,22209+74])
                          ]
              <case>
                pattern (strip.ml[506,22285+4]..[506,22285+23])
                  Ppat_variant "Open"
                  Some
                    pattern (strip.ml[506,22285+10]..[506,22285+23])
                      Ppat_tuple
                      [
                        pattern (strip.ml[506,22285+11]..[506,22285+14])
                          Ppat_var "_a0" (strip.ml[506,22285+11]..[506,22285+14])
                        pattern (strip.ml[506,22285+15]..[506,22285+18])
                          Ppat_var "_a1" (strip.ml[506,22285+15]..[506,22285+18])
                        pattern (strip.ml[506,22285+19]..[506,22285+22])
                          Ppat_var "_a2" (strip.ml[506,22285+19]..[506,22285+22])
                      ]
                expression (strip.ml[507,22312+6]..[507,22312+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[507,22312+10]..[507,22312+13])
                        Ppat_var "_a1" (strip.ml[507,22312+10]..[507,22312+13])
                      expression (strip.ml[507,22312+16]..[507,22312+24])
                        Pexp_apply
                        expression (strip.ml[507,22312+16]..[507,22312+20])
                          Pexp_ident "flag" (strip.ml[507,22312+16]..[507,22312+20])
                        [
                          <label> ""
                            expression (strip.ml[507,22312+21]..[507,22312+24])
                              Pexp_ident "_a1" (strip.ml[507,22312+21]..[507,22312+24])
                        ]
                  ]
                  expression (strip.ml[507,22312+28]..[507,22312+67])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[507,22312+32]..[507,22312+35])
                          Ppat_var "_a2" (strip.ml[507,22312+32]..[507,22312+35])
                        expression (strip.ml[507,22312+38]..[507,22312+47])
                          Pexp_apply
                          expression (strip.ml[507,22312+38]..[507,22312+43])
                            Pexp_ident "ident" (strip.ml[507,22312+38]..[507,22312+43])
                          [
                            <label> ""
                              expression (strip.ml[507,22312+44]..[507,22312+47])
                                Pexp_ident "_a2" (strip.ml[507,22312+44]..[507,22312+47])
                          ]
                    ]
                    expression (strip.ml[507,22312+51]..[507,22312+67])
                      Pexp_variant "Open"
                      Some
                        expression (strip.ml[507,22312+57]..[507,22312+67])
                          Pexp_tuple
                          [
                            expression (strip.ml[507,22312+58]..[507,22312+61])
                              Pexp_ident "_a1" (strip.ml[507,22312+58]..[507,22312+61])
                            expression (strip.ml[507,22312+63]..[507,22312+66])
                              Pexp_ident "_a2" (strip.ml[507,22312+63]..[507,22312+66])
                          ]
              <case>
                pattern (strip.ml[508,22380+4]..[508,22380+19])
                  Ppat_variant "Type"
                  Some
                    pattern (strip.ml[508,22380+10]..[508,22380+19])
                      Ppat_tuple
                      [
                        pattern (strip.ml[508,22380+11]..[508,22380+14])
                          Ppat_var "_a0" (strip.ml[508,22380+11]..[508,22380+14])
                        pattern (strip.ml[508,22380+15]..[508,22380+18])
                          Ppat_var "_a1" (strip.ml[508,22380+15]..[508,22380+18])
                      ]
                expression (strip.ml[508,22380+23]..[508,22380+58])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[508,22380+27]..[508,22380+30])
                        Ppat_var "_a1" (strip.ml[508,22380+27]..[508,22380+30])
                      expression (strip.ml[508,22380+33]..[508,22380+45])
                        Pexp_apply
                        expression (strip.ml[508,22380+33]..[508,22380+41])
                          Pexp_ident "typedecl" (strip.ml[508,22380+33]..[508,22380+41])
                        [
                          <label> ""
                            expression (strip.ml[508,22380+42]..[508,22380+45])
                              Pexp_ident "_a1" (strip.ml[508,22380+42]..[508,22380+45])
                        ]
                  ]
                  expression (strip.ml[508,22380+49]..[508,22380+58])
                    Pexp_variant "Type"
                    Some
                      expression (strip.ml[508,22380+55]..[508,22380+58])
                        Pexp_ident "_a1" (strip.ml[508,22380+55]..[508,22380+58])
              <case>
                pattern (strip.ml[509,22439+4]..[509,22439+27])
                  Ppat_variant "TypeWith"
                  Some
                    pattern (strip.ml[509,22439+14]..[509,22439+27])
                      Ppat_tuple
                      [
                        pattern (strip.ml[509,22439+15]..[509,22439+18])
                          Ppat_var "_a0" (strip.ml[509,22439+15]..[509,22439+18])
                        pattern (strip.ml[509,22439+19]..[509,22439+22])
                          Ppat_var "_a1" (strip.ml[509,22439+19]..[509,22439+22])
                        pattern (strip.ml[509,22439+23]..[509,22439+26])
                          Ppat_var "_a2" (strip.ml[509,22439+23]..[509,22439+26])
                      ]
                expression (strip.ml[510,22470+6]..[510,22470+77])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[510,22470+10]..[510,22470+13])
                        Ppat_var "_a1" (strip.ml[510,22470+10]..[510,22470+13])
                      expression (strip.ml[510,22470+16]..[510,22470+28])
                        Pexp_apply
                        expression (strip.ml[510,22470+16]..[510,22470+24])
                          Pexp_ident "typedecl" (strip.ml[510,22470+16]..[510,22470+24])
                        [
                          <label> ""
                            expression (strip.ml[510,22470+25]..[510,22470+28])
                              Pexp_ident "_a1" (strip.ml[510,22470+25]..[510,22470+28])
                        ]
                  ]
                  expression (strip.ml[510,22470+32]..[510,22470+77])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[510,22470+36]..[510,22470+39])
                          Ppat_var "_a2" (strip.ml[510,22470+36]..[510,22470+39])
                        expression (strip.ml[510,22470+42]..[510,22470+53])
                          Pexp_apply
                          expression (strip.ml[510,22470+42]..[510,22470+49])
                            Pexp_ident "strings" (strip.ml[510,22470+42]..[510,22470+49])
                          [
                            <label> ""
                              expression (strip.ml[510,22470+50]..[510,22470+53])
                                Pexp_ident "_a2" (strip.ml[510,22470+50]..[510,22470+53])
                          ]
                    ]
                    expression (strip.ml[510,22470+57]..[510,22470+77])
                      Pexp_variant "TypeWith"
                      Some
                        expression (strip.ml[510,22470+67]..[510,22470+77])
                          Pexp_tuple
                          [
                            expression (strip.ml[510,22470+68]..[510,22470+71])
                              Pexp_ident "_a1" (strip.ml[510,22470+68]..[510,22470+71])
                            expression (strip.ml[510,22470+73]..[510,22470+76])
                              Pexp_ident "_a2" (strip.ml[510,22470+73]..[510,22470+76])
                          ]
              <case>
                pattern (strip.ml[511,22548+4]..[511,22548+24])
                  Ppat_variant "Value"
                  Some
                    pattern (strip.ml[511,22548+11]..[511,22548+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[511,22548+12]..[511,22548+15])
                          Ppat_var "_a0" (strip.ml[511,22548+12]..[511,22548+15])
                        pattern (strip.ml[511,22548+16]..[511,22548+19])
                          Ppat_var "_a1" (strip.ml[511,22548+16]..[511,22548+19])
                        pattern (strip.ml[511,22548+20]..[511,22548+23])
                          Ppat_var "_a2" (strip.ml[511,22548+20]..[511,22548+23])
                      ]
                expression (strip.ml[512,22576+6]..[512,22576+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[512,22576+10]..[512,22576+13])
                        Ppat_var "_a1" (strip.ml[512,22576+10]..[512,22576+13])
                      expression (strip.ml[512,22576+16]..[512,22576+24])
                        Pexp_apply
                        expression (strip.ml[512,22576+16]..[512,22576+20])
                          Pexp_ident "flag" (strip.ml[512,22576+16]..[512,22576+20])
                        [
                          <label> ""
                            expression (strip.ml[512,22576+21]..[512,22576+24])
                              Pexp_ident "_a1" (strip.ml[512,22576+21]..[512,22576+24])
                        ]
                  ]
                  expression (strip.ml[512,22576+28]..[512,22576+67])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[512,22576+32]..[512,22576+35])
                          Ppat_var "_a2" (strip.ml[512,22576+32]..[512,22576+35])
                        expression (strip.ml[512,22576+38]..[512,22576+46])
                          Pexp_apply
                          expression (strip.ml[512,22576+38]..[512,22576+42])
                            Pexp_ident "bind" (strip.ml[512,22576+38]..[512,22576+42])
                          [
                            <label> ""
                              expression (strip.ml[512,22576+43]..[512,22576+46])
                                Pexp_ident "_a2" (strip.ml[512,22576+43]..[512,22576+46])
                          ]
                    ]
                    expression (strip.ml[512,22576+50]..[512,22576+67])
                      Pexp_variant "Value"
                      Some
                        expression (strip.ml[512,22576+57]..[512,22576+67])
                          Pexp_tuple
                          [
                            expression (strip.ml[512,22576+58]..[512,22576+61])
                              Pexp_ident "_a1" (strip.ml[512,22576+58]..[512,22576+61])
                            expression (strip.ml[512,22576+63]..[512,22576+66])
                              Pexp_ident "_a2" (strip.ml[512,22576+63]..[512,22576+66])
                          ]
              <case>
                pattern (strip.ml[513,22644+4]..[513,22644+15])
                  Ppat_alias "_a0" (strip.ml[513,22644+12]..[513,22644+15])
                  pattern (strip.ml[513,22644+4]..[513,22644+8])
                    Ppat_type
                    "ant" (strip.ml[513,22644+5]..[513,22644+8])
                expression (strip.ml[513,22644+19]..[513,22644+42]) ghost
                  Pexp_coerce
                  expression (strip.ml[513,22644+20]..[513,22644+27])
                    Pexp_apply
                    expression (strip.ml[513,22644+20]..[513,22644+23])
                      Pexp_ident "ant" (strip.ml[513,22644+20]..[513,22644+23])
                    [
                      <label> ""
                        expression (strip.ml[513,22644+24]..[513,22644+27])
                          Pexp_ident "_a0" (strip.ml[513,22644+24]..[513,22644+27])
                    ]
                  None
                  core_type (strip.ml[513,22644+31]..[513,22644+41])
                    Ptyp_constr "Astfn.stru" (strip.ml[513,22644+31]..[513,22644+41])
                    []
            ]
          core_type (strip.ml[484,21215+10]..[484,21215+33])
            Ptyp_arrow
            ""
            core_type (strip.ml[484,21215+10]..[484,21215+19])
              Ptyp_constr "Astf.stru" (strip.ml[484,21215+10]..[484,21215+19])
              []
            core_type (strip.ml[484,21215+23]..[484,21215+33])
              Ptyp_constr "Astfn.stru" (strip.ml[484,21215+23]..[484,21215+33])
              []
      <def>
        pattern (strip.ml[514,22687+4]..[514,22687+11])
          Ppat_var "cltdecl" (strip.ml[514,22687+4]..[514,22687+11])
        expression (strip.ml[514,22687+11]..[526,23171+45]) ghost
          Pexp_constraint
          expression (strip.ml[515,22732+2]..[526,23171+45])
            Pexp_function
            [
              <case>
                pattern (strip.ml[516,22743+4]..[516,22743+22])
                  Ppat_variant "And"
                  Some
                    pattern (strip.ml[516,22743+9]..[516,22743+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[516,22743+10]..[516,22743+13])
                          Ppat_var "_a0" (strip.ml[516,22743+10]..[516,22743+13])
                        pattern (strip.ml[516,22743+14]..[516,22743+17])
                          Ppat_var "_a1" (strip.ml[516,22743+14]..[516,22743+17])
                        pattern (strip.ml[516,22743+18]..[516,22743+21])
                          Ppat_var "_a2" (strip.ml[516,22743+18]..[516,22743+21])
                      ]
                expression (strip.ml[517,22769+6]..[517,22769+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[517,22769+10]..[517,22769+13])
                        Ppat_var "_a1" (strip.ml[517,22769+10]..[517,22769+13])
                      expression (strip.ml[517,22769+16]..[517,22769+27])
                        Pexp_apply
                        expression (strip.ml[517,22769+16]..[517,22769+23])
                          Pexp_ident "cltdecl" (strip.ml[517,22769+16]..[517,22769+23])
                        [
                          <label> ""
                            expression (strip.ml[517,22769+24]..[517,22769+27])
                              Pexp_ident "_a1" (strip.ml[517,22769+24]..[517,22769+27])
                        ]
                  ]
                  expression (strip.ml[517,22769+31]..[517,22769+71])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[517,22769+35]..[517,22769+38])
                          Ppat_var "_a2" (strip.ml[517,22769+35]..[517,22769+38])
                        expression (strip.ml[517,22769+41]..[517,22769+52])
                          Pexp_apply
                          expression (strip.ml[517,22769+41]..[517,22769+48])
                            Pexp_ident "cltdecl" (strip.ml[517,22769+41]..[517,22769+48])
                          [
                            <label> ""
                              expression (strip.ml[517,22769+49]..[517,22769+52])
                                Pexp_ident "_a2" (strip.ml[517,22769+49]..[517,22769+52])
                          ]
                    ]
                    expression (strip.ml[517,22769+56]..[517,22769+71])
                      Pexp_variant "And"
                      Some
                        expression (strip.ml[517,22769+61]..[517,22769+71])
                          Pexp_tuple
                          [
                            expression (strip.ml[517,22769+62]..[517,22769+65])
                              Pexp_ident "_a1" (strip.ml[517,22769+62]..[517,22769+65])
                            expression (strip.ml[517,22769+67]..[517,22769+70])
                              Pexp_ident "_a2" (strip.ml[517,22769+67]..[517,22769+70])
                          ]
              <case>
                pattern (strip.ml[518,22841+4]..[518,22841+33])
                  Ppat_variant "CtDecl"
                  Some
                    pattern (strip.ml[518,22841+12]..[518,22841+33])
                      Ppat_tuple
                      [
                        pattern (strip.ml[518,22841+13]..[518,22841+16])
                          Ppat_var "_a0" (strip.ml[518,22841+13]..[518,22841+16])
                        pattern (strip.ml[518,22841+17]..[518,22841+20])
                          Ppat_var "_a1" (strip.ml[518,22841+17]..[518,22841+20])
                        pattern (strip.ml[518,22841+21]..[518,22841+24])
                          Ppat_var "_a2" (strip.ml[518,22841+21]..[518,22841+24])
                        pattern (strip.ml[518,22841+25]..[518,22841+28])
                          Ppat_var "_a3" (strip.ml[518,22841+25]..[518,22841+28])
                        pattern (strip.ml[518,22841+29]..[518,22841+32])
                          Ppat_var "_a4" (strip.ml[518,22841+29]..[518,22841+32])
                      ]
                expression (strip.ml[519,22878+6]..[522,22974+57])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[519,22878+10]..[519,22878+13])
                        Ppat_var "_a1" (strip.ml[519,22878+10]..[519,22878+13])
                      expression (strip.ml[519,22878+16]..[519,22878+24])
                        Pexp_apply
                        expression (strip.ml[519,22878+16]..[519,22878+20])
                          Pexp_ident "flag" (strip.ml[519,22878+16]..[519,22878+20])
                        [
                          <label> ""
                            expression (strip.ml[519,22878+21]..[519,22878+24])
                              Pexp_ident "_a1" (strip.ml[519,22878+21]..[519,22878+24])
                        ]
                  ]
                  expression (strip.ml[520,22906+6]..[522,22974+57])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[520,22906+10]..[520,22906+13])
                          Ppat_var "_a2" (strip.ml[520,22906+10]..[520,22906+13])
                        expression (strip.ml[520,22906+16]..[520,22906+25])
                          Pexp_apply
                          expression (strip.ml[520,22906+16]..[520,22906+21])
                            Pexp_ident "ident" (strip.ml[520,22906+16]..[520,22906+21])
                          [
                            <label> ""
                              expression (strip.ml[520,22906+22]..[520,22906+25])
                                Pexp_ident "_a2" (strip.ml[520,22906+22]..[520,22906+25])
                          ]
                    ]
                    expression (strip.ml[521,22935+6]..[522,22974+57])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[521,22935+10]..[521,22935+13])
                            Ppat_var "_a3" (strip.ml[521,22935+10]..[521,22935+13])
                          expression (strip.ml[521,22935+16]..[521,22935+35])
                            Pexp_apply
                            expression (strip.ml[521,22935+16]..[521,22935+31])
                              Pexp_ident "type_parameters" (strip.ml[521,22935+16]..[521,22935+31])
                            [
                              <label> ""
                                expression (strip.ml[521,22935+32]..[521,22935+35])
                                  Pexp_ident "_a3" (strip.ml[521,22935+32]..[521,22935+35])
                            ]
                      ]
                      expression (strip.ml[522,22974+6]..[522,22974+57])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (strip.ml[522,22974+10]..[522,22974+13])
                              Ppat_var "_a4" (strip.ml[522,22974+10]..[522,22974+13])
                            expression (strip.ml[522,22974+16]..[522,22974+25])
                              Pexp_apply
                              expression (strip.ml[522,22974+16]..[522,22974+21])
                                Pexp_ident "cltyp" (strip.ml[522,22974+16]..[522,22974+21])
                              [
                                <label> ""
                                  expression (strip.ml[522,22974+22]..[522,22974+25])
                                    Pexp_ident "_a4" (strip.ml[522,22974+22]..[522,22974+25])
                              ]
                        ]
                        expression (strip.ml[522,22974+29]..[522,22974+57])
                          Pexp_variant "CtDecl"
                          Some
                            expression (strip.ml[522,22974+37]..[522,22974+57])
                              Pexp_tuple
                              [
                                expression (strip.ml[522,22974+38]..[522,22974+41])
                                  Pexp_ident "_a1" (strip.ml[522,22974+38]..[522,22974+41])
                                expression (strip.ml[522,22974+43]..[522,22974+46])
                                  Pexp_ident "_a2" (strip.ml[522,22974+43]..[522,22974+46])
                                expression (strip.ml[522,22974+48]..[522,22974+51])
                                  Pexp_ident "_a3" (strip.ml[522,22974+48]..[522,22974+51])
                                expression (strip.ml[522,22974+53]..[522,22974+56])
                                  Pexp_ident "_a4" (strip.ml[522,22974+53]..[522,22974+56])
                              ]
              <case>
                pattern (strip.ml[523,23032+4]..[523,23032+30])
                  Ppat_variant "CtDeclS"
                  Some
                    pattern (strip.ml[523,23032+13]..[523,23032+30])
                      Ppat_tuple
                      [
                        pattern (strip.ml[523,23032+14]..[523,23032+17])
                          Ppat_var "_a0" (strip.ml[523,23032+14]..[523,23032+17])
                        pattern (strip.ml[523,23032+18]..[523,23032+21])
                          Ppat_var "_a1" (strip.ml[523,23032+18]..[523,23032+21])
                        pattern (strip.ml[523,23032+22]..[523,23032+25])
                          Ppat_var "_a2" (strip.ml[523,23032+22]..[523,23032+25])
                        pattern (strip.ml[523,23032+26]..[523,23032+29])
                          Ppat_var "_a3" (strip.ml[523,23032+26]..[523,23032+29])
                      ]
                expression (strip.ml[524,23066+6]..[525,23094+76])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[524,23066+10]..[524,23066+13])
                        Ppat_var "_a1" (strip.ml[524,23066+10]..[524,23066+13])
                      expression (strip.ml[524,23066+16]..[524,23066+24])
                        Pexp_apply
                        expression (strip.ml[524,23066+16]..[524,23066+20])
                          Pexp_ident "flag" (strip.ml[524,23066+16]..[524,23066+20])
                        [
                          <label> ""
                            expression (strip.ml[524,23066+21]..[524,23066+24])
                              Pexp_ident "_a1" (strip.ml[524,23066+21]..[524,23066+24])
                        ]
                  ]
                  expression (strip.ml[525,23094+6]..[525,23094+76])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[525,23094+10]..[525,23094+13])
                          Ppat_var "_a2" (strip.ml[525,23094+10]..[525,23094+13])
                        expression (strip.ml[525,23094+16]..[525,23094+25])
                          Pexp_apply
                          expression (strip.ml[525,23094+16]..[525,23094+21])
                            Pexp_ident "ident" (strip.ml[525,23094+16]..[525,23094+21])
                          [
                            <label> ""
                              expression (strip.ml[525,23094+22]..[525,23094+25])
                                Pexp_ident "_a2" (strip.ml[525,23094+22]..[525,23094+25])
                          ]
                    ]
                    expression (strip.ml[525,23094+29]..[525,23094+76])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[525,23094+33]..[525,23094+36])
                            Ppat_var "_a3" (strip.ml[525,23094+33]..[525,23094+36])
                          expression (strip.ml[525,23094+39]..[525,23094+48])
                            Pexp_apply
                            expression (strip.ml[525,23094+39]..[525,23094+44])
                              Pexp_ident "cltyp" (strip.ml[525,23094+39]..[525,23094+44])
                            [
                              <label> ""
                                expression (strip.ml[525,23094+45]..[525,23094+48])
                                  Pexp_ident "_a3" (strip.ml[525,23094+45]..[525,23094+48])
                            ]
                      ]
                      expression (strip.ml[525,23094+52]..[525,23094+76])
                        Pexp_variant "CtDeclS"
                        Some
                          expression (strip.ml[525,23094+61]..[525,23094+76])
                            Pexp_tuple
                            [
                              expression (strip.ml[525,23094+62]..[525,23094+65])
                                Pexp_ident "_a1" (strip.ml[525,23094+62]..[525,23094+65])
                              expression (strip.ml[525,23094+67]..[525,23094+70])
                                Pexp_ident "_a2" (strip.ml[525,23094+67]..[525,23094+70])
                              expression (strip.ml[525,23094+72]..[525,23094+75])
                                Pexp_ident "_a3" (strip.ml[525,23094+72]..[525,23094+75])
                            ]
              <case>
                pattern (strip.ml[526,23171+4]..[526,23171+15])
                  Ppat_alias "_a0" (strip.ml[526,23171+12]..[526,23171+15])
                  pattern (strip.ml[526,23171+4]..[526,23171+8])
                    Ppat_type
                    "ant" (strip.ml[526,23171+5]..[526,23171+8])
                expression (strip.ml[526,23171+19]..[526,23171+45]) ghost
                  Pexp_coerce
                  expression (strip.ml[526,23171+20]..[526,23171+27])
                    Pexp_apply
                    expression (strip.ml[526,23171+20]..[526,23171+23])
                      Pexp_ident "ant" (strip.ml[526,23171+20]..[526,23171+23])
                    [
                      <label> ""
                        expression (strip.ml[526,23171+24]..[526,23171+27])
                          Pexp_ident "_a0" (strip.ml[526,23171+24]..[526,23171+27])
                    ]
                  None
                  core_type (strip.ml[526,23171+31]..[526,23171+44])
                    Ptyp_constr "Astfn.cltdecl" (strip.ml[526,23171+31]..[526,23171+44])
                    []
            ]
          core_type (strip.ml[514,22687+13]..[514,22687+42])
            Ptyp_arrow
            ""
            core_type (strip.ml[514,22687+13]..[514,22687+25])
              Ptyp_constr "Astf.cltdecl" (strip.ml[514,22687+13]..[514,22687+25])
              []
            core_type (strip.ml[514,22687+29]..[514,22687+42])
              Ptyp_constr "Astfn.cltdecl" (strip.ml[514,22687+29]..[514,22687+42])
              []
      <def>
        pattern (strip.ml[527,23217+4]..[527,23217+9])
          Ppat_var "cltyp" (strip.ml[527,23217+4]..[527,23217+9])
        expression (strip.ml[527,23217+9]..[542,23863+43]) ghost
          Pexp_constraint
          expression (strip.ml[528,23256+2]..[542,23863+43])
            Pexp_function
            [
              <case>
                pattern (strip.ml[529,23267+4]..[529,23267+16])
                  Ppat_alias "_a0" (strip.ml[529,23267+13]..[529,23267+16])
                  pattern (strip.ml[529,23267+4]..[529,23267+9])
                    Ppat_type
                    "vid'" (strip.ml[529,23267+5]..[529,23267+9])
                expression (strip.ml[529,23267+20]..[529,23267+45]) ghost
                  Pexp_coerce
                  expression (strip.ml[529,23267+21]..[529,23267+29])
                    Pexp_apply
                    expression (strip.ml[529,23267+21]..[529,23267+25])
                      Pexp_ident "vid'" (strip.ml[529,23267+21]..[529,23267+25])
                    [
                      <label> ""
                        expression (strip.ml[529,23267+26]..[529,23267+29])
                          Pexp_ident "_a0" (strip.ml[529,23267+26]..[529,23267+29])
                    ]
                  None
                  core_type (strip.ml[529,23267+33]..[529,23267+44])
                    Ptyp_constr "Astfn.cltyp" (strip.ml[529,23267+33]..[529,23267+44])
                    []
              <case>
                pattern (strip.ml[530,23313+4]..[530,23313+26])
                  Ppat_variant "ClApply"
                  Some
                    pattern (strip.ml[530,23313+13]..[530,23313+26])
                      Ppat_tuple
                      [
                        pattern (strip.ml[530,23313+14]..[530,23313+17])
                          Ppat_var "_a0" (strip.ml[530,23313+14]..[530,23313+17])
                        pattern (strip.ml[530,23313+18]..[530,23313+21])
                          Ppat_var "_a1" (strip.ml[530,23313+18]..[530,23313+21])
                        pattern (strip.ml[530,23313+22]..[530,23313+25])
                          Ppat_var "_a2" (strip.ml[530,23313+22]..[530,23313+25])
                      ]
                expression (strip.ml[531,23343+6]..[532,23370+58])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[531,23343+10]..[531,23343+13])
                        Ppat_var "_a1" (strip.ml[531,23343+10]..[531,23343+13])
                      expression (strip.ml[531,23343+16]..[531,23343+23])
                        Pexp_apply
                        expression (strip.ml[531,23343+16]..[531,23343+19])
                          Pexp_ident "vid" (strip.ml[531,23343+16]..[531,23343+19])
                        [
                          <label> ""
                            expression (strip.ml[531,23343+20]..[531,23343+23])
                              Pexp_ident "_a1" (strip.ml[531,23343+20]..[531,23343+23])
                        ]
                  ]
                  expression (strip.ml[532,23370+6]..[532,23370+58])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[532,23370+10]..[532,23370+13])
                          Ppat_var "_a2" (strip.ml[532,23370+10]..[532,23370+13])
                        expression (strip.ml[532,23370+16]..[532,23370+35])
                          Pexp_apply
                          expression (strip.ml[532,23370+16]..[532,23370+31])
                            Pexp_ident "type_parameters" (strip.ml[532,23370+16]..[532,23370+31])
                          [
                            <label> ""
                              expression (strip.ml[532,23370+32]..[532,23370+35])
                                Pexp_ident "_a2" (strip.ml[532,23370+32]..[532,23370+35])
                          ]
                    ]
                    expression (strip.ml[532,23370+39]..[532,23370+58])
                      Pexp_variant "ClApply"
                      Some
                        expression (strip.ml[532,23370+48]..[532,23370+58])
                          Pexp_tuple
                          [
                            expression (strip.ml[532,23370+49]..[532,23370+52])
                              Pexp_ident "_a1" (strip.ml[532,23370+49]..[532,23370+52])
                            expression (strip.ml[532,23370+54]..[532,23370+57])
                              Pexp_ident "_a2" (strip.ml[532,23370+54]..[532,23370+57])
                          ]
              <case>
                pattern (strip.ml[533,23429+4]..[533,23429+24])
                  Ppat_variant "CtFun"
                  Some
                    pattern (strip.ml[533,23429+11]..[533,23429+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[533,23429+12]..[533,23429+15])
                          Ppat_var "_a0" (strip.ml[533,23429+12]..[533,23429+15])
                        pattern (strip.ml[533,23429+16]..[533,23429+19])
                          Ppat_var "_a1" (strip.ml[533,23429+16]..[533,23429+19])
                        pattern (strip.ml[533,23429+20]..[533,23429+23])
                          Ppat_var "_a2" (strip.ml[533,23429+20]..[533,23429+23])
                      ]
                expression (strip.ml[534,23457+6]..[534,23457+68])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[534,23457+10]..[534,23457+13])
                        Ppat_var "_a1" (strip.ml[534,23457+10]..[534,23457+13])
                      expression (strip.ml[534,23457+16]..[534,23457+24])
                        Pexp_apply
                        expression (strip.ml[534,23457+16]..[534,23457+20])
                          Pexp_ident "ctyp" (strip.ml[534,23457+16]..[534,23457+20])
                        [
                          <label> ""
                            expression (strip.ml[534,23457+21]..[534,23457+24])
                              Pexp_ident "_a1" (strip.ml[534,23457+21]..[534,23457+24])
                        ]
                  ]
                  expression (strip.ml[534,23457+28]..[534,23457+68])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[534,23457+32]..[534,23457+35])
                          Ppat_var "_a2" (strip.ml[534,23457+32]..[534,23457+35])
                        expression (strip.ml[534,23457+38]..[534,23457+47])
                          Pexp_apply
                          expression (strip.ml[534,23457+38]..[534,23457+43])
                            Pexp_ident "cltyp" (strip.ml[534,23457+38]..[534,23457+43])
                          [
                            <label> ""
                              expression (strip.ml[534,23457+44]..[534,23457+47])
                                Pexp_ident "_a2" (strip.ml[534,23457+44]..[534,23457+47])
                          ]
                    ]
                    expression (strip.ml[534,23457+51]..[534,23457+68])
                      Pexp_variant "CtFun"
                      Some
                        expression (strip.ml[534,23457+58]..[534,23457+68])
                          Pexp_tuple
                          [
                            expression (strip.ml[534,23457+59]..[534,23457+62])
                              Pexp_ident "_a1" (strip.ml[534,23457+59]..[534,23457+62])
                            expression (strip.ml[534,23457+64]..[534,23457+67])
                              Pexp_ident "_a2" (strip.ml[534,23457+64]..[534,23457+67])
                          ]
              <case>
                pattern (strip.ml[535,23526+4]..[535,23526+24])
                  Ppat_variant "ObjTy"
                  Some
                    pattern (strip.ml[535,23526+11]..[535,23526+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[535,23526+12]..[535,23526+15])
                          Ppat_var "_a0" (strip.ml[535,23526+12]..[535,23526+15])
                        pattern (strip.ml[535,23526+16]..[535,23526+19])
                          Ppat_var "_a1" (strip.ml[535,23526+16]..[535,23526+19])
                        pattern (strip.ml[535,23526+20]..[535,23526+23])
                          Ppat_var "_a2" (strip.ml[535,23526+20]..[535,23526+23])
                      ]
                expression (strip.ml[536,23554+6]..[536,23554+69])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[536,23554+10]..[536,23554+13])
                        Ppat_var "_a1" (strip.ml[536,23554+10]..[536,23554+13])
                      expression (strip.ml[536,23554+16]..[536,23554+24])
                        Pexp_apply
                        expression (strip.ml[536,23554+16]..[536,23554+20])
                          Pexp_ident "ctyp" (strip.ml[536,23554+16]..[536,23554+20])
                        [
                          <label> ""
                            expression (strip.ml[536,23554+21]..[536,23554+24])
                              Pexp_ident "_a1" (strip.ml[536,23554+21]..[536,23554+24])
                        ]
                  ]
                  expression (strip.ml[536,23554+28]..[536,23554+69])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[536,23554+32]..[536,23554+35])
                          Ppat_var "_a2" (strip.ml[536,23554+32]..[536,23554+35])
                        expression (strip.ml[536,23554+38]..[536,23554+48])
                          Pexp_apply
                          expression (strip.ml[536,23554+38]..[536,23554+44])
                            Pexp_ident "clsigi" (strip.ml[536,23554+38]..[536,23554+44])
                          [
                            <label> ""
                              expression (strip.ml[536,23554+45]..[536,23554+48])
                                Pexp_ident "_a2" (strip.ml[536,23554+45]..[536,23554+48])
                          ]
                    ]
                    expression (strip.ml[536,23554+52]..[536,23554+69])
                      Pexp_variant "ObjTy"
                      Some
                        expression (strip.ml[536,23554+59]..[536,23554+69])
                          Pexp_tuple
                          [
                            expression (strip.ml[536,23554+60]..[536,23554+63])
                              Pexp_ident "_a1" (strip.ml[536,23554+60]..[536,23554+63])
                            expression (strip.ml[536,23554+65]..[536,23554+68])
                              Pexp_ident "_a2" (strip.ml[536,23554+65]..[536,23554+68])
                          ]
              <case>
                pattern (strip.ml[537,23624+4]..[537,23624+23])
                  Ppat_variant "ObjTyEnd"
                  Some
                    pattern (strip.ml[537,23624+14]..[537,23624+23])
                      Ppat_tuple
                      [
                        pattern (strip.ml[537,23624+15]..[537,23624+18])
                          Ppat_var "_a0" (strip.ml[537,23624+15]..[537,23624+18])
                        pattern (strip.ml[537,23624+19]..[537,23624+22])
                          Ppat_var "_a1" (strip.ml[537,23624+19]..[537,23624+22])
                      ]
                expression (strip.ml[537,23624+27]..[537,23624+62])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[537,23624+31]..[537,23624+34])
                        Ppat_var "_a1" (strip.ml[537,23624+31]..[537,23624+34])
                      expression (strip.ml[537,23624+37]..[537,23624+45])
                        Pexp_apply
                        expression (strip.ml[537,23624+37]..[537,23624+41])
                          Pexp_ident "ctyp" (strip.ml[537,23624+37]..[537,23624+41])
                        [
                          <label> ""
                            expression (strip.ml[537,23624+42]..[537,23624+45])
                              Pexp_ident "_a1" (strip.ml[537,23624+42]..[537,23624+45])
                        ]
                  ]
                  expression (strip.ml[537,23624+49]..[537,23624+62])
                    Pexp_variant "ObjTyEnd"
                    Some
                      expression (strip.ml[537,23624+59]..[537,23624+62])
                        Pexp_ident "_a1" (strip.ml[537,23624+59]..[537,23624+62])
              <case>
                pattern (strip.ml[538,23687+4]..[538,23687+18])
                  Ppat_variant "Obj"
                  Some
                    pattern (strip.ml[538,23687+9]..[538,23687+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[538,23687+10]..[538,23687+13])
                          Ppat_var "_a0" (strip.ml[538,23687+10]..[538,23687+13])
                        pattern (strip.ml[538,23687+14]..[538,23687+17])
                          Ppat_var "_a1" (strip.ml[538,23687+14]..[538,23687+17])
                      ]
                expression (strip.ml[538,23687+22]..[538,23687+54])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[538,23687+26]..[538,23687+29])
                        Ppat_var "_a1" (strip.ml[538,23687+26]..[538,23687+29])
                      expression (strip.ml[538,23687+32]..[538,23687+42])
                        Pexp_apply
                        expression (strip.ml[538,23687+32]..[538,23687+38])
                          Pexp_ident "clsigi" (strip.ml[538,23687+32]..[538,23687+38])
                        [
                          <label> ""
                            expression (strip.ml[538,23687+39]..[538,23687+42])
                              Pexp_ident "_a1" (strip.ml[538,23687+39]..[538,23687+42])
                        ]
                  ]
                  expression (strip.ml[538,23687+46]..[538,23687+54])
                    Pexp_variant "Obj"
                    Some
                      expression (strip.ml[538,23687+51]..[538,23687+54])
                        Pexp_ident "_a1" (strip.ml[538,23687+51]..[538,23687+54])
              <case>
                pattern (strip.ml[539,23742+4]..[539,23742+15])
                  Ppat_variant "ObjEnd"
                  Some
                    pattern (strip.ml[539,23742+12]..[539,23742+15])
                      Ppat_var "_a0" (strip.ml[539,23742+12]..[539,23742+15])
                expression (strip.ml[539,23742+19]..[539,23742+26])
                  Pexp_variant "ObjEnd"
                  None
              <case>
                pattern (strip.ml[540,23769+4]..[540,23769+22])
                  Ppat_variant "And"
                  Some
                    pattern (strip.ml[540,23769+9]..[540,23769+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[540,23769+10]..[540,23769+13])
                          Ppat_var "_a0" (strip.ml[540,23769+10]..[540,23769+13])
                        pattern (strip.ml[540,23769+14]..[540,23769+17])
                          Ppat_var "_a1" (strip.ml[540,23769+14]..[540,23769+17])
                        pattern (strip.ml[540,23769+18]..[540,23769+21])
                          Ppat_var "_a2" (strip.ml[540,23769+18]..[540,23769+21])
                      ]
                expression (strip.ml[541,23795+6]..[541,23795+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[541,23795+10]..[541,23795+13])
                        Ppat_var "_a1" (strip.ml[541,23795+10]..[541,23795+13])
                      expression (strip.ml[541,23795+16]..[541,23795+25])
                        Pexp_apply
                        expression (strip.ml[541,23795+16]..[541,23795+21])
                          Pexp_ident "cltyp" (strip.ml[541,23795+16]..[541,23795+21])
                        [
                          <label> ""
                            expression (strip.ml[541,23795+22]..[541,23795+25])
                              Pexp_ident "_a1" (strip.ml[541,23795+22]..[541,23795+25])
                        ]
                  ]
                  expression (strip.ml[541,23795+29]..[541,23795+67])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[541,23795+33]..[541,23795+36])
                          Ppat_var "_a2" (strip.ml[541,23795+33]..[541,23795+36])
                        expression (strip.ml[541,23795+39]..[541,23795+48])
                          Pexp_apply
                          expression (strip.ml[541,23795+39]..[541,23795+44])
                            Pexp_ident "cltyp" (strip.ml[541,23795+39]..[541,23795+44])
                          [
                            <label> ""
                              expression (strip.ml[541,23795+45]..[541,23795+48])
                                Pexp_ident "_a2" (strip.ml[541,23795+45]..[541,23795+48])
                          ]
                    ]
                    expression (strip.ml[541,23795+52]..[541,23795+67])
                      Pexp_variant "And"
                      Some
                        expression (strip.ml[541,23795+57]..[541,23795+67])
                          Pexp_tuple
                          [
                            expression (strip.ml[541,23795+58]..[541,23795+61])
                              Pexp_ident "_a1" (strip.ml[541,23795+58]..[541,23795+61])
                            expression (strip.ml[541,23795+63]..[541,23795+66])
                              Pexp_ident "_a2" (strip.ml[541,23795+63]..[541,23795+66])
                          ]
              <case>
                pattern (strip.ml[542,23863+4]..[542,23863+15])
                  Ppat_alias "_a0" (strip.ml[542,23863+12]..[542,23863+15])
                  pattern (strip.ml[542,23863+4]..[542,23863+8])
                    Ppat_type
                    "ant" (strip.ml[542,23863+5]..[542,23863+8])
                expression (strip.ml[542,23863+19]..[542,23863+43]) ghost
                  Pexp_coerce
                  expression (strip.ml[542,23863+20]..[542,23863+27])
                    Pexp_apply
                    expression (strip.ml[542,23863+20]..[542,23863+23])
                      Pexp_ident "ant" (strip.ml[542,23863+20]..[542,23863+23])
                    [
                      <label> ""
                        expression (strip.ml[542,23863+24]..[542,23863+27])
                          Pexp_ident "_a0" (strip.ml[542,23863+24]..[542,23863+27])
                    ]
                  None
                  core_type (strip.ml[542,23863+31]..[542,23863+42])
                    Ptyp_constr "Astfn.cltyp" (strip.ml[542,23863+31]..[542,23863+42])
                    []
            ]
          core_type (strip.ml[527,23217+11]..[527,23217+36])
            Ptyp_arrow
            ""
            core_type (strip.ml[527,23217+11]..[527,23217+21])
              Ptyp_constr "Astf.cltyp" (strip.ml[527,23217+11]..[527,23217+21])
              []
            core_type (strip.ml[527,23217+25]..[527,23217+36])
              Ptyp_constr "Astfn.cltyp" (strip.ml[527,23217+25]..[527,23217+36])
              []
      <def>
        pattern (strip.ml[543,23907+4]..[543,23907+10])
          Ppat_var "clsigi" (strip.ml[543,23907+4]..[543,23907+10])
        expression (strip.ml[543,23907+10]..[560,24665+44]) ghost
          Pexp_constraint
          expression (strip.ml[544,23949+2]..[560,24665+44])
            Pexp_function
            [
              <case>
                pattern (strip.ml[545,23960+4]..[545,23960+22])
                  Ppat_variant "Sem"
                  Some
                    pattern (strip.ml[545,23960+9]..[545,23960+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[545,23960+10]..[545,23960+13])
                          Ppat_var "_a0" (strip.ml[545,23960+10]..[545,23960+13])
                        pattern (strip.ml[545,23960+14]..[545,23960+17])
                          Ppat_var "_a1" (strip.ml[545,23960+14]..[545,23960+17])
                        pattern (strip.ml[545,23960+18]..[545,23960+21])
                          Ppat_var "_a2" (strip.ml[545,23960+18]..[545,23960+21])
                      ]
                expression (strip.ml[546,23986+6]..[546,23986+69])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[546,23986+10]..[546,23986+13])
                        Ppat_var "_a1" (strip.ml[546,23986+10]..[546,23986+13])
                      expression (strip.ml[546,23986+16]..[546,23986+26])
                        Pexp_apply
                        expression (strip.ml[546,23986+16]..[546,23986+22])
                          Pexp_ident "clsigi" (strip.ml[546,23986+16]..[546,23986+22])
                        [
                          <label> ""
                            expression (strip.ml[546,23986+23]..[546,23986+26])
                              Pexp_ident "_a1" (strip.ml[546,23986+23]..[546,23986+26])
                        ]
                  ]
                  expression (strip.ml[546,23986+30]..[546,23986+69])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[546,23986+34]..[546,23986+37])
                          Ppat_var "_a2" (strip.ml[546,23986+34]..[546,23986+37])
                        expression (strip.ml[546,23986+40]..[546,23986+50])
                          Pexp_apply
                          expression (strip.ml[546,23986+40]..[546,23986+46])
                            Pexp_ident "clsigi" (strip.ml[546,23986+40]..[546,23986+46])
                          [
                            <label> ""
                              expression (strip.ml[546,23986+47]..[546,23986+50])
                                Pexp_ident "_a2" (strip.ml[546,23986+47]..[546,23986+50])
                          ]
                    ]
                    expression (strip.ml[546,23986+54]..[546,23986+69])
                      Pexp_variant "Sem"
                      Some
                        expression (strip.ml[546,23986+59]..[546,23986+69])
                          Pexp_tuple
                          [
                            expression (strip.ml[546,23986+60]..[546,23986+63])
                              Pexp_ident "_a1" (strip.ml[546,23986+60]..[546,23986+63])
                            expression (strip.ml[546,23986+65]..[546,23986+68])
                              Pexp_ident "_a2" (strip.ml[546,23986+65]..[546,23986+68])
                          ]
              <case>
                pattern (strip.ml[547,24056+4]..[547,24056+25])
                  Ppat_variant "SigInherit"
                  Some
                    pattern (strip.ml[547,24056+16]..[547,24056+25])
                      Ppat_tuple
                      [
                        pattern (strip.ml[547,24056+17]..[547,24056+20])
                          Ppat_var "_a0" (strip.ml[547,24056+17]..[547,24056+20])
                        pattern (strip.ml[547,24056+21]..[547,24056+24])
                          Ppat_var "_a1" (strip.ml[547,24056+21]..[547,24056+24])
                      ]
                expression (strip.ml[547,24056+29]..[547,24056+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[547,24056+33]..[547,24056+36])
                        Ppat_var "_a1" (strip.ml[547,24056+33]..[547,24056+36])
                      expression (strip.ml[547,24056+39]..[547,24056+48])
                        Pexp_apply
                        expression (strip.ml[547,24056+39]..[547,24056+44])
                          Pexp_ident "cltyp" (strip.ml[547,24056+39]..[547,24056+44])
                        [
                          <label> ""
                            expression (strip.ml[547,24056+45]..[547,24056+48])
                              Pexp_ident "_a1" (strip.ml[547,24056+45]..[547,24056+48])
                        ]
                  ]
                  expression (strip.ml[547,24056+52]..[547,24056+67])
                    Pexp_variant "SigInherit"
                    Some
                      expression (strip.ml[547,24056+64]..[547,24056+67])
                        Pexp_ident "_a1" (strip.ml[547,24056+64]..[547,24056+67])
              <case>
                pattern (strip.ml[548,24124+4]..[548,24124+32])
                  Ppat_variant "CgVal"
                  Some
                    pattern (strip.ml[548,24124+11]..[548,24124+32])
                      Ppat_tuple
                      [
                        pattern (strip.ml[548,24124+12]..[548,24124+15])
                          Ppat_var "_a0" (strip.ml[548,24124+12]..[548,24124+15])
                        pattern (strip.ml[548,24124+16]..[548,24124+19])
                          Ppat_var "_a1" (strip.ml[548,24124+16]..[548,24124+19])
                        pattern (strip.ml[548,24124+20]..[548,24124+23])
                          Ppat_var "_a2" (strip.ml[548,24124+20]..[548,24124+23])
                        pattern (strip.ml[548,24124+24]..[548,24124+27])
                          Ppat_var "_a3" (strip.ml[548,24124+24]..[548,24124+27])
                        pattern (strip.ml[548,24124+28]..[548,24124+31])
                          Ppat_var "_a4" (strip.ml[548,24124+28]..[548,24124+31])
                      ]
                expression (strip.ml[549,24160+6]..[551,24219+77])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[549,24160+10]..[549,24160+13])
                        Ppat_var "_a1" (strip.ml[549,24160+10]..[549,24160+13])
                      expression (strip.ml[549,24160+16]..[549,24160+27])
                        Pexp_apply
                        expression (strip.ml[549,24160+16]..[549,24160+23])
                          Pexp_ident "alident" (strip.ml[549,24160+16]..[549,24160+23])
                        [
                          <label> ""
                            expression (strip.ml[549,24160+24]..[549,24160+27])
                              Pexp_ident "_a1" (strip.ml[549,24160+24]..[549,24160+27])
                        ]
                  ]
                  expression (strip.ml[550,24191+6]..[551,24219+77])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[550,24191+10]..[550,24191+13])
                          Ppat_var "_a2" (strip.ml[550,24191+10]..[550,24191+13])
                        expression (strip.ml[550,24191+16]..[550,24191+24])
                          Pexp_apply
                          expression (strip.ml[550,24191+16]..[550,24191+20])
                            Pexp_ident "flag" (strip.ml[550,24191+16]..[550,24191+20])
                          [
                            <label> ""
                              expression (strip.ml[550,24191+21]..[550,24191+24])
                                Pexp_ident "_a2" (strip.ml[550,24191+21]..[550,24191+24])
                          ]
                    ]
                    expression (strip.ml[551,24219+6]..[551,24219+77])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[551,24219+10]..[551,24219+13])
                            Ppat_var "_a3" (strip.ml[551,24219+10]..[551,24219+13])
                          expression (strip.ml[551,24219+16]..[551,24219+24])
                            Pexp_apply
                            expression (strip.ml[551,24219+16]..[551,24219+20])
                              Pexp_ident "flag" (strip.ml[551,24219+16]..[551,24219+20])
                            [
                              <label> ""
                                expression (strip.ml[551,24219+21]..[551,24219+24])
                                  Pexp_ident "_a3" (strip.ml[551,24219+21]..[551,24219+24])
                            ]
                      ]
                      expression (strip.ml[551,24219+28]..[551,24219+77])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (strip.ml[551,24219+32]..[551,24219+35])
                              Ppat_var "_a4" (strip.ml[551,24219+32]..[551,24219+35])
                            expression (strip.ml[551,24219+38]..[551,24219+46])
                              Pexp_apply
                              expression (strip.ml[551,24219+38]..[551,24219+42])
                                Pexp_ident "ctyp" (strip.ml[551,24219+38]..[551,24219+42])
                              [
                                <label> ""
                                  expression (strip.ml[551,24219+43]..[551,24219+46])
                                    Pexp_ident "_a4" (strip.ml[551,24219+43]..[551,24219+46])
                              ]
                        ]
                        expression (strip.ml[551,24219+50]..[551,24219+77])
                          Pexp_variant "CgVal"
                          Some
                            expression (strip.ml[551,24219+57]..[551,24219+77])
                              Pexp_tuple
                              [
                                expression (strip.ml[551,24219+58]..[551,24219+61])
                                  Pexp_ident "_a1" (strip.ml[551,24219+58]..[551,24219+61])
                                expression (strip.ml[551,24219+63]..[551,24219+66])
                                  Pexp_ident "_a2" (strip.ml[551,24219+63]..[551,24219+66])
                                expression (strip.ml[551,24219+68]..[551,24219+71])
                                  Pexp_ident "_a3" (strip.ml[551,24219+68]..[551,24219+71])
                                expression (strip.ml[551,24219+73]..[551,24219+76])
                                  Pexp_ident "_a4" (strip.ml[551,24219+73]..[551,24219+76])
                              ]
              <case>
                pattern (strip.ml[552,24297+4]..[552,24297+29])
                  Ppat_variant "Method"
                  Some
                    pattern (strip.ml[552,24297+12]..[552,24297+29])
                      Ppat_tuple
                      [
                        pattern (strip.ml[552,24297+13]..[552,24297+16])
                          Ppat_var "_a0" (strip.ml[552,24297+13]..[552,24297+16])
                        pattern (strip.ml[552,24297+17]..[552,24297+20])
                          Ppat_var "_a1" (strip.ml[552,24297+17]..[552,24297+20])
                        pattern (strip.ml[552,24297+21]..[552,24297+24])
                          Ppat_var "_a2" (strip.ml[552,24297+21]..[552,24297+24])
                        pattern (strip.ml[552,24297+25]..[552,24297+28])
                          Ppat_var "_a3" (strip.ml[552,24297+25]..[552,24297+28])
                      ]
                expression (strip.ml[553,24330+6]..[554,24361+73])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[553,24330+10]..[553,24330+13])
                        Ppat_var "_a1" (strip.ml[553,24330+10]..[553,24330+13])
                      expression (strip.ml[553,24330+16]..[553,24330+27])
                        Pexp_apply
                        expression (strip.ml[553,24330+16]..[553,24330+23])
                          Pexp_ident "alident" (strip.ml[553,24330+16]..[553,24330+23])
                        [
                          <label> ""
                            expression (strip.ml[553,24330+24]..[553,24330+27])
                              Pexp_ident "_a1" (strip.ml[553,24330+24]..[553,24330+27])
                        ]
                  ]
                  expression (strip.ml[554,24361+6]..[554,24361+73])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[554,24361+10]..[554,24361+13])
                          Ppat_var "_a2" (strip.ml[554,24361+10]..[554,24361+13])
                        expression (strip.ml[554,24361+16]..[554,24361+24])
                          Pexp_apply
                          expression (strip.ml[554,24361+16]..[554,24361+20])
                            Pexp_ident "flag" (strip.ml[554,24361+16]..[554,24361+20])
                          [
                            <label> ""
                              expression (strip.ml[554,24361+21]..[554,24361+24])
                                Pexp_ident "_a2" (strip.ml[554,24361+21]..[554,24361+24])
                          ]
                    ]
                    expression (strip.ml[554,24361+28]..[554,24361+73])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[554,24361+32]..[554,24361+35])
                            Ppat_var "_a3" (strip.ml[554,24361+32]..[554,24361+35])
                          expression (strip.ml[554,24361+38]..[554,24361+46])
                            Pexp_apply
                            expression (strip.ml[554,24361+38]..[554,24361+42])
                              Pexp_ident "ctyp" (strip.ml[554,24361+38]..[554,24361+42])
                            [
                              <label> ""
                                expression (strip.ml[554,24361+43]..[554,24361+46])
                                  Pexp_ident "_a3" (strip.ml[554,24361+43]..[554,24361+46])
                            ]
                      ]
                      expression (strip.ml[554,24361+50]..[554,24361+73])
                        Pexp_variant "Method"
                        Some
                          expression (strip.ml[554,24361+58]..[554,24361+73])
                            Pexp_tuple
                            [
                              expression (strip.ml[554,24361+59]..[554,24361+62])
                                Pexp_ident "_a1" (strip.ml[554,24361+59]..[554,24361+62])
                              expression (strip.ml[554,24361+64]..[554,24361+67])
                                Pexp_ident "_a2" (strip.ml[554,24361+64]..[554,24361+67])
                              expression (strip.ml[554,24361+69]..[554,24361+72])
                                Pexp_ident "_a3" (strip.ml[554,24361+69]..[554,24361+72])
                            ]
              <case>
                pattern (strip.ml[555,24435+4]..[555,24435+30])
                  Ppat_variant "VirMeth"
                  Some
                    pattern (strip.ml[555,24435+13]..[555,24435+30])
                      Ppat_tuple
                      [
                        pattern (strip.ml[555,24435+14]..[555,24435+17])
                          Ppat_var "_a0" (strip.ml[555,24435+14]..[555,24435+17])
                        pattern (strip.ml[555,24435+18]..[555,24435+21])
                          Ppat_var "_a1" (strip.ml[555,24435+18]..[555,24435+21])
                        pattern (strip.ml[555,24435+22]..[555,24435+25])
                          Ppat_var "_a2" (strip.ml[555,24435+22]..[555,24435+25])
                        pattern (strip.ml[555,24435+26]..[555,24435+29])
                          Ppat_var "_a3" (strip.ml[555,24435+26]..[555,24435+29])
                      ]
                expression (strip.ml[556,24469+6]..[557,24500+74])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[556,24469+10]..[556,24469+13])
                        Ppat_var "_a1" (strip.ml[556,24469+10]..[556,24469+13])
                      expression (strip.ml[556,24469+16]..[556,24469+27])
                        Pexp_apply
                        expression (strip.ml[556,24469+16]..[556,24469+23])
                          Pexp_ident "alident" (strip.ml[556,24469+16]..[556,24469+23])
                        [
                          <label> ""
                            expression (strip.ml[556,24469+24]..[556,24469+27])
                              Pexp_ident "_a1" (strip.ml[556,24469+24]..[556,24469+27])
                        ]
                  ]
                  expression (strip.ml[557,24500+6]..[557,24500+74])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[557,24500+10]..[557,24500+13])
                          Ppat_var "_a2" (strip.ml[557,24500+10]..[557,24500+13])
                        expression (strip.ml[557,24500+16]..[557,24500+24])
                          Pexp_apply
                          expression (strip.ml[557,24500+16]..[557,24500+20])
                            Pexp_ident "flag" (strip.ml[557,24500+16]..[557,24500+20])
                          [
                            <label> ""
                              expression (strip.ml[557,24500+21]..[557,24500+24])
                                Pexp_ident "_a2" (strip.ml[557,24500+21]..[557,24500+24])
                          ]
                    ]
                    expression (strip.ml[557,24500+28]..[557,24500+74])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[557,24500+32]..[557,24500+35])
                            Ppat_var "_a3" (strip.ml[557,24500+32]..[557,24500+35])
                          expression (strip.ml[557,24500+38]..[557,24500+46])
                            Pexp_apply
                            expression (strip.ml[557,24500+38]..[557,24500+42])
                              Pexp_ident "ctyp" (strip.ml[557,24500+38]..[557,24500+42])
                            [
                              <label> ""
                                expression (strip.ml[557,24500+43]..[557,24500+46])
                                  Pexp_ident "_a3" (strip.ml[557,24500+43]..[557,24500+46])
                            ]
                      ]
                      expression (strip.ml[557,24500+50]..[557,24500+74])
                        Pexp_variant "VirMeth"
                        Some
                          expression (strip.ml[557,24500+59]..[557,24500+74])
                            Pexp_tuple
                            [
                              expression (strip.ml[557,24500+60]..[557,24500+63])
                                Pexp_ident "_a1" (strip.ml[557,24500+60]..[557,24500+63])
                              expression (strip.ml[557,24500+65]..[557,24500+68])
                                Pexp_ident "_a2" (strip.ml[557,24500+65]..[557,24500+68])
                              expression (strip.ml[557,24500+70]..[557,24500+73])
                                Pexp_ident "_a3" (strip.ml[557,24500+70]..[557,24500+73])
                            ]
              <case>
                pattern (strip.ml[558,24575+4]..[558,24575+21])
                  Ppat_variant "Eq"
                  Some
                    pattern (strip.ml[558,24575+8]..[558,24575+21])
                      Ppat_tuple
                      [
                        pattern (strip.ml[558,24575+9]..[558,24575+12])
                          Ppat_var "_a0" (strip.ml[558,24575+9]..[558,24575+12])
                        pattern (strip.ml[558,24575+13]..[558,24575+16])
                          Ppat_var "_a1" (strip.ml[558,24575+13]..[558,24575+16])
                        pattern (strip.ml[558,24575+17]..[558,24575+20])
                          Ppat_var "_a2" (strip.ml[558,24575+17]..[558,24575+20])
                      ]
                expression (strip.ml[559,24600+6]..[559,24600+64])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[559,24600+10]..[559,24600+13])
                        Ppat_var "_a1" (strip.ml[559,24600+10]..[559,24600+13])
                      expression (strip.ml[559,24600+16]..[559,24600+24])
                        Pexp_apply
                        expression (strip.ml[559,24600+16]..[559,24600+20])
                          Pexp_ident "ctyp" (strip.ml[559,24600+16]..[559,24600+20])
                        [
                          <label> ""
                            expression (strip.ml[559,24600+21]..[559,24600+24])
                              Pexp_ident "_a1" (strip.ml[559,24600+21]..[559,24600+24])
                        ]
                  ]
                  expression (strip.ml[559,24600+28]..[559,24600+64])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[559,24600+32]..[559,24600+35])
                          Ppat_var "_a2" (strip.ml[559,24600+32]..[559,24600+35])
                        expression (strip.ml[559,24600+38]..[559,24600+46])
                          Pexp_apply
                          expression (strip.ml[559,24600+38]..[559,24600+42])
                            Pexp_ident "ctyp" (strip.ml[559,24600+38]..[559,24600+42])
                          [
                            <label> ""
                              expression (strip.ml[559,24600+43]..[559,24600+46])
                                Pexp_ident "_a2" (strip.ml[559,24600+43]..[559,24600+46])
                          ]
                    ]
                    expression (strip.ml[559,24600+50]..[559,24600+64])
                      Pexp_variant "Eq"
                      Some
                        expression (strip.ml[559,24600+54]..[559,24600+64])
                          Pexp_tuple
                          [
                            expression (strip.ml[559,24600+55]..[559,24600+58])
                              Pexp_ident "_a1" (strip.ml[559,24600+55]..[559,24600+58])
                            expression (strip.ml[559,24600+60]..[559,24600+63])
                              Pexp_ident "_a2" (strip.ml[559,24600+60]..[559,24600+63])
                          ]
              <case>
                pattern (strip.ml[560,24665+4]..[560,24665+15])
                  Ppat_alias "_a0" (strip.ml[560,24665+12]..[560,24665+15])
                  pattern (strip.ml[560,24665+4]..[560,24665+8])
                    Ppat_type
                    "ant" (strip.ml[560,24665+5]..[560,24665+8])
                expression (strip.ml[560,24665+19]..[560,24665+44]) ghost
                  Pexp_coerce
                  expression (strip.ml[560,24665+20]..[560,24665+27])
                    Pexp_apply
                    expression (strip.ml[560,24665+20]..[560,24665+23])
                      Pexp_ident "ant" (strip.ml[560,24665+20]..[560,24665+23])
                    [
                      <label> ""
                        expression (strip.ml[560,24665+24]..[560,24665+27])
                          Pexp_ident "_a0" (strip.ml[560,24665+24]..[560,24665+27])
                    ]
                  None
                  core_type (strip.ml[560,24665+31]..[560,24665+43])
                    Ptyp_constr "Astfn.clsigi" (strip.ml[560,24665+31]..[560,24665+43])
                    []
            ]
          core_type (strip.ml[543,23907+12]..[543,23907+39])
            Ptyp_arrow
            ""
            core_type (strip.ml[543,23907+12]..[543,23907+23])
              Ptyp_constr "Astf.clsigi" (strip.ml[543,23907+12]..[543,23907+23])
              []
            core_type (strip.ml[543,23907+27]..[543,23907+39])
              Ptyp_constr "Astfn.clsigi" (strip.ml[543,23907+27]..[543,23907+39])
              []
      <def>
        pattern (strip.ml[561,24710+4]..[561,24710+10])
          Ppat_var "cldecl" (strip.ml[561,24710+4]..[561,24710+10])
        expression (strip.ml[561,24710+10]..[573,25189+44]) ghost
          Pexp_constraint
          expression (strip.ml[562,24752+2]..[573,25189+44])
            Pexp_function
            [
              <case>
                pattern (strip.ml[563,24763+4]..[563,24763+33])
                  Ppat_variant "ClDecl"
                  Some
                    pattern (strip.ml[563,24763+12]..[563,24763+33])
                      Ppat_tuple
                      [
                        pattern (strip.ml[563,24763+13]..[563,24763+16])
                          Ppat_var "_a0" (strip.ml[563,24763+13]..[563,24763+16])
                        pattern (strip.ml[563,24763+17]..[563,24763+20])
                          Ppat_var "_a1" (strip.ml[563,24763+17]..[563,24763+20])
                        pattern (strip.ml[563,24763+21]..[563,24763+24])
                          Ppat_var "_a2" (strip.ml[563,24763+21]..[563,24763+24])
                        pattern (strip.ml[563,24763+25]..[563,24763+28])
                          Ppat_var "_a3" (strip.ml[563,24763+25]..[563,24763+28])
                        pattern (strip.ml[563,24763+29]..[563,24763+32])
                          Ppat_var "_a4" (strip.ml[563,24763+29]..[563,24763+32])
                      ]
                expression (strip.ml[564,24800+6]..[567,24896+57])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[564,24800+10]..[564,24800+13])
                        Ppat_var "_a1" (strip.ml[564,24800+10]..[564,24800+13])
                      expression (strip.ml[564,24800+16]..[564,24800+24])
                        Pexp_apply
                        expression (strip.ml[564,24800+16]..[564,24800+20])
                          Pexp_ident "flag" (strip.ml[564,24800+16]..[564,24800+20])
                        [
                          <label> ""
                            expression (strip.ml[564,24800+21]..[564,24800+24])
                              Pexp_ident "_a1" (strip.ml[564,24800+21]..[564,24800+24])
                        ]
                  ]
                  expression (strip.ml[565,24828+6]..[567,24896+57])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[565,24828+10]..[565,24828+13])
                          Ppat_var "_a2" (strip.ml[565,24828+10]..[565,24828+13])
                        expression (strip.ml[565,24828+16]..[565,24828+25])
                          Pexp_apply
                          expression (strip.ml[565,24828+16]..[565,24828+21])
                            Pexp_ident "ident" (strip.ml[565,24828+16]..[565,24828+21])
                          [
                            <label> ""
                              expression (strip.ml[565,24828+22]..[565,24828+25])
                                Pexp_ident "_a2" (strip.ml[565,24828+22]..[565,24828+25])
                          ]
                    ]
                    expression (strip.ml[566,24857+6]..[567,24896+57])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[566,24857+10]..[566,24857+13])
                            Ppat_var "_a3" (strip.ml[566,24857+10]..[566,24857+13])
                          expression (strip.ml[566,24857+16]..[566,24857+35])
                            Pexp_apply
                            expression (strip.ml[566,24857+16]..[566,24857+31])
                              Pexp_ident "type_parameters" (strip.ml[566,24857+16]..[566,24857+31])
                            [
                              <label> ""
                                expression (strip.ml[566,24857+32]..[566,24857+35])
                                  Pexp_ident "_a3" (strip.ml[566,24857+32]..[566,24857+35])
                            ]
                      ]
                      expression (strip.ml[567,24896+6]..[567,24896+57])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (strip.ml[567,24896+10]..[567,24896+13])
                              Ppat_var "_a4" (strip.ml[567,24896+10]..[567,24896+13])
                            expression (strip.ml[567,24896+16]..[567,24896+25])
                              Pexp_apply
                              expression (strip.ml[567,24896+16]..[567,24896+21])
                                Pexp_ident "clexp" (strip.ml[567,24896+16]..[567,24896+21])
                              [
                                <label> ""
                                  expression (strip.ml[567,24896+22]..[567,24896+25])
                                    Pexp_ident "_a4" (strip.ml[567,24896+22]..[567,24896+25])
                              ]
                        ]
                        expression (strip.ml[567,24896+29]..[567,24896+57])
                          Pexp_variant "ClDecl"
                          Some
                            expression (strip.ml[567,24896+37]..[567,24896+57])
                              Pexp_tuple
                              [
                                expression (strip.ml[567,24896+38]..[567,24896+41])
                                  Pexp_ident "_a1" (strip.ml[567,24896+38]..[567,24896+41])
                                expression (strip.ml[567,24896+43]..[567,24896+46])
                                  Pexp_ident "_a2" (strip.ml[567,24896+43]..[567,24896+46])
                                expression (strip.ml[567,24896+48]..[567,24896+51])
                                  Pexp_ident "_a3" (strip.ml[567,24896+48]..[567,24896+51])
                                expression (strip.ml[567,24896+53]..[567,24896+56])
                                  Pexp_ident "_a4" (strip.ml[567,24896+53]..[567,24896+56])
                              ]
              <case>
                pattern (strip.ml[568,24954+4]..[568,24954+30])
                  Ppat_variant "ClDeclS"
                  Some
                    pattern (strip.ml[568,24954+13]..[568,24954+30])
                      Ppat_tuple
                      [
                        pattern (strip.ml[568,24954+14]..[568,24954+17])
                          Ppat_var "_a0" (strip.ml[568,24954+14]..[568,24954+17])
                        pattern (strip.ml[568,24954+18]..[568,24954+21])
                          Ppat_var "_a1" (strip.ml[568,24954+18]..[568,24954+21])
                        pattern (strip.ml[568,24954+22]..[568,24954+25])
                          Ppat_var "_a2" (strip.ml[568,24954+22]..[568,24954+25])
                        pattern (strip.ml[568,24954+26]..[568,24954+29])
                          Ppat_var "_a3" (strip.ml[568,24954+26]..[568,24954+29])
                      ]
                expression (strip.ml[569,24988+6]..[570,25016+76])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[569,24988+10]..[569,24988+13])
                        Ppat_var "_a1" (strip.ml[569,24988+10]..[569,24988+13])
                      expression (strip.ml[569,24988+16]..[569,24988+24])
                        Pexp_apply
                        expression (strip.ml[569,24988+16]..[569,24988+20])
                          Pexp_ident "flag" (strip.ml[569,24988+16]..[569,24988+20])
                        [
                          <label> ""
                            expression (strip.ml[569,24988+21]..[569,24988+24])
                              Pexp_ident "_a1" (strip.ml[569,24988+21]..[569,24988+24])
                        ]
                  ]
                  expression (strip.ml[570,25016+6]..[570,25016+76])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[570,25016+10]..[570,25016+13])
                          Ppat_var "_a2" (strip.ml[570,25016+10]..[570,25016+13])
                        expression (strip.ml[570,25016+16]..[570,25016+25])
                          Pexp_apply
                          expression (strip.ml[570,25016+16]..[570,25016+21])
                            Pexp_ident "ident" (strip.ml[570,25016+16]..[570,25016+21])
                          [
                            <label> ""
                              expression (strip.ml[570,25016+22]..[570,25016+25])
                                Pexp_ident "_a2" (strip.ml[570,25016+22]..[570,25016+25])
                          ]
                    ]
                    expression (strip.ml[570,25016+29]..[570,25016+76])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[570,25016+33]..[570,25016+36])
                            Ppat_var "_a3" (strip.ml[570,25016+33]..[570,25016+36])
                          expression (strip.ml[570,25016+39]..[570,25016+48])
                            Pexp_apply
                            expression (strip.ml[570,25016+39]..[570,25016+44])
                              Pexp_ident "clexp" (strip.ml[570,25016+39]..[570,25016+44])
                            [
                              <label> ""
                                expression (strip.ml[570,25016+45]..[570,25016+48])
                                  Pexp_ident "_a3" (strip.ml[570,25016+45]..[570,25016+48])
                            ]
                      ]
                      expression (strip.ml[570,25016+52]..[570,25016+76])
                        Pexp_variant "ClDeclS"
                        Some
                          expression (strip.ml[570,25016+61]..[570,25016+76])
                            Pexp_tuple
                            [
                              expression (strip.ml[570,25016+62]..[570,25016+65])
                                Pexp_ident "_a1" (strip.ml[570,25016+62]..[570,25016+65])
                              expression (strip.ml[570,25016+67]..[570,25016+70])
                                Pexp_ident "_a2" (strip.ml[570,25016+67]..[570,25016+70])
                              expression (strip.ml[570,25016+72]..[570,25016+75])
                                Pexp_ident "_a3" (strip.ml[570,25016+72]..[570,25016+75])
                            ]
              <case>
                pattern (strip.ml[571,25093+4]..[571,25093+22])
                  Ppat_variant "And"
                  Some
                    pattern (strip.ml[571,25093+9]..[571,25093+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[571,25093+10]..[571,25093+13])
                          Ppat_var "_a0" (strip.ml[571,25093+10]..[571,25093+13])
                        pattern (strip.ml[571,25093+14]..[571,25093+17])
                          Ppat_var "_a1" (strip.ml[571,25093+14]..[571,25093+17])
                        pattern (strip.ml[571,25093+18]..[571,25093+21])
                          Ppat_var "_a2" (strip.ml[571,25093+18]..[571,25093+21])
                      ]
                expression (strip.ml[572,25119+6]..[572,25119+69])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[572,25119+10]..[572,25119+13])
                        Ppat_var "_a1" (strip.ml[572,25119+10]..[572,25119+13])
                      expression (strip.ml[572,25119+16]..[572,25119+26])
                        Pexp_apply
                        expression (strip.ml[572,25119+16]..[572,25119+22])
                          Pexp_ident "cldecl" (strip.ml[572,25119+16]..[572,25119+22])
                        [
                          <label> ""
                            expression (strip.ml[572,25119+23]..[572,25119+26])
                              Pexp_ident "_a1" (strip.ml[572,25119+23]..[572,25119+26])
                        ]
                  ]
                  expression (strip.ml[572,25119+30]..[572,25119+69])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[572,25119+34]..[572,25119+37])
                          Ppat_var "_a2" (strip.ml[572,25119+34]..[572,25119+37])
                        expression (strip.ml[572,25119+40]..[572,25119+50])
                          Pexp_apply
                          expression (strip.ml[572,25119+40]..[572,25119+46])
                            Pexp_ident "cldecl" (strip.ml[572,25119+40]..[572,25119+46])
                          [
                            <label> ""
                              expression (strip.ml[572,25119+47]..[572,25119+50])
                                Pexp_ident "_a2" (strip.ml[572,25119+47]..[572,25119+50])
                          ]
                    ]
                    expression (strip.ml[572,25119+54]..[572,25119+69])
                      Pexp_variant "And"
                      Some
                        expression (strip.ml[572,25119+59]..[572,25119+69])
                          Pexp_tuple
                          [
                            expression (strip.ml[572,25119+60]..[572,25119+63])
                              Pexp_ident "_a1" (strip.ml[572,25119+60]..[572,25119+63])
                            expression (strip.ml[572,25119+65]..[572,25119+68])
                              Pexp_ident "_a2" (strip.ml[572,25119+65]..[572,25119+68])
                          ]
              <case>
                pattern (strip.ml[573,25189+4]..[573,25189+15])
                  Ppat_alias "_a0" (strip.ml[573,25189+12]..[573,25189+15])
                  pattern (strip.ml[573,25189+4]..[573,25189+8])
                    Ppat_type
                    "ant" (strip.ml[573,25189+5]..[573,25189+8])
                expression (strip.ml[573,25189+19]..[573,25189+44]) ghost
                  Pexp_coerce
                  expression (strip.ml[573,25189+20]..[573,25189+27])
                    Pexp_apply
                    expression (strip.ml[573,25189+20]..[573,25189+23])
                      Pexp_ident "ant" (strip.ml[573,25189+20]..[573,25189+23])
                    [
                      <label> ""
                        expression (strip.ml[573,25189+24]..[573,25189+27])
                          Pexp_ident "_a0" (strip.ml[573,25189+24]..[573,25189+27])
                    ]
                  None
                  core_type (strip.ml[573,25189+31]..[573,25189+43])
                    Ptyp_constr "Astfn.cldecl" (strip.ml[573,25189+31]..[573,25189+43])
                    []
            ]
          core_type (strip.ml[561,24710+12]..[561,24710+39])
            Ptyp_arrow
            ""
            core_type (strip.ml[561,24710+12]..[561,24710+23])
              Ptyp_constr "Astf.cldecl" (strip.ml[561,24710+12]..[561,24710+23])
              []
            core_type (strip.ml[561,24710+27]..[561,24710+39])
              Ptyp_constr "Astfn.cldecl" (strip.ml[561,24710+27]..[561,24710+39])
              []
      <def>
        pattern (strip.ml[574,25234+4]..[574,25234+9])
          Ppat_var "clexp" (strip.ml[574,25234+4]..[574,25234+9])
        expression (strip.ml[574,25234+9]..[594,26127+43]) ghost
          Pexp_constraint
          expression (strip.ml[575,25273+2]..[594,26127+43])
            Pexp_function
            [
              <case>
                pattern (strip.ml[576,25284+4]..[576,25284+24])
                  Ppat_variant "CeApp"
                  Some
                    pattern (strip.ml[576,25284+11]..[576,25284+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[576,25284+12]..[576,25284+15])
                          Ppat_var "_a0" (strip.ml[576,25284+12]..[576,25284+15])
                        pattern (strip.ml[576,25284+16]..[576,25284+19])
                          Ppat_var "_a1" (strip.ml[576,25284+16]..[576,25284+19])
                        pattern (strip.ml[576,25284+20]..[576,25284+23])
                          Ppat_var "_a2" (strip.ml[576,25284+20]..[576,25284+23])
                      ]
                expression (strip.ml[577,25312+6]..[577,25312+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[577,25312+10]..[577,25312+13])
                        Ppat_var "_a1" (strip.ml[577,25312+10]..[577,25312+13])
                      expression (strip.ml[577,25312+16]..[577,25312+25])
                        Pexp_apply
                        expression (strip.ml[577,25312+16]..[577,25312+21])
                          Pexp_ident "clexp" (strip.ml[577,25312+16]..[577,25312+21])
                        [
                          <label> ""
                            expression (strip.ml[577,25312+22]..[577,25312+25])
                              Pexp_ident "_a1" (strip.ml[577,25312+22]..[577,25312+25])
                        ]
                  ]
                  expression (strip.ml[577,25312+29]..[577,25312+67])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[577,25312+33]..[577,25312+36])
                          Ppat_var "_a2" (strip.ml[577,25312+33]..[577,25312+36])
                        expression (strip.ml[577,25312+39]..[577,25312+46])
                          Pexp_apply
                          expression (strip.ml[577,25312+39]..[577,25312+42])
                            Pexp_ident "exp" (strip.ml[577,25312+39]..[577,25312+42])
                          [
                            <label> ""
                              expression (strip.ml[577,25312+43]..[577,25312+46])
                                Pexp_ident "_a2" (strip.ml[577,25312+43]..[577,25312+46])
                          ]
                    ]
                    expression (strip.ml[577,25312+50]..[577,25312+67])
                      Pexp_variant "CeApp"
                      Some
                        expression (strip.ml[577,25312+57]..[577,25312+67])
                          Pexp_tuple
                          [
                            expression (strip.ml[577,25312+58]..[577,25312+61])
                              Pexp_ident "_a1" (strip.ml[577,25312+58]..[577,25312+61])
                            expression (strip.ml[577,25312+63]..[577,25312+66])
                              Pexp_ident "_a2" (strip.ml[577,25312+63]..[577,25312+66])
                          ]
              <case>
                pattern (strip.ml[578,25380+4]..[578,25380+16])
                  Ppat_alias "_a0" (strip.ml[578,25380+13]..[578,25380+16])
                  pattern (strip.ml[578,25380+4]..[578,25380+9])
                    Ppat_type
                    "vid'" (strip.ml[578,25380+5]..[578,25380+9])
                expression (strip.ml[578,25380+20]..[578,25380+45]) ghost
                  Pexp_coerce
                  expression (strip.ml[578,25380+21]..[578,25380+29])
                    Pexp_apply
                    expression (strip.ml[578,25380+21]..[578,25380+25])
                      Pexp_ident "vid'" (strip.ml[578,25380+21]..[578,25380+25])
                    [
                      <label> ""
                        expression (strip.ml[578,25380+26]..[578,25380+29])
                          Pexp_ident "_a0" (strip.ml[578,25380+26]..[578,25380+29])
                    ]
                  None
                  core_type (strip.ml[578,25380+33]..[578,25380+44])
                    Ptyp_constr "Astfn.clexp" (strip.ml[578,25380+33]..[578,25380+44])
                    []
              <case>
                pattern (strip.ml[579,25426+4]..[579,25426+26])
                  Ppat_variant "ClApply"
                  Some
                    pattern (strip.ml[579,25426+13]..[579,25426+26])
                      Ppat_tuple
                      [
                        pattern (strip.ml[579,25426+14]..[579,25426+17])
                          Ppat_var "_a0" (strip.ml[579,25426+14]..[579,25426+17])
                        pattern (strip.ml[579,25426+18]..[579,25426+21])
                          Ppat_var "_a1" (strip.ml[579,25426+18]..[579,25426+21])
                        pattern (strip.ml[579,25426+22]..[579,25426+25])
                          Ppat_var "_a2" (strip.ml[579,25426+22]..[579,25426+25])
                      ]
                expression (strip.ml[580,25456+6]..[581,25483+58])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[580,25456+10]..[580,25456+13])
                        Ppat_var "_a1" (strip.ml[580,25456+10]..[580,25456+13])
                      expression (strip.ml[580,25456+16]..[580,25456+23])
                        Pexp_apply
                        expression (strip.ml[580,25456+16]..[580,25456+19])
                          Pexp_ident "vid" (strip.ml[580,25456+16]..[580,25456+19])
                        [
                          <label> ""
                            expression (strip.ml[580,25456+20]..[580,25456+23])
                              Pexp_ident "_a1" (strip.ml[580,25456+20]..[580,25456+23])
                        ]
                  ]
                  expression (strip.ml[581,25483+6]..[581,25483+58])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[581,25483+10]..[581,25483+13])
                          Ppat_var "_a2" (strip.ml[581,25483+10]..[581,25483+13])
                        expression (strip.ml[581,25483+16]..[581,25483+35])
                          Pexp_apply
                          expression (strip.ml[581,25483+16]..[581,25483+31])
                            Pexp_ident "type_parameters" (strip.ml[581,25483+16]..[581,25483+31])
                          [
                            <label> ""
                              expression (strip.ml[581,25483+32]..[581,25483+35])
                                Pexp_ident "_a2" (strip.ml[581,25483+32]..[581,25483+35])
                          ]
                    ]
                    expression (strip.ml[581,25483+39]..[581,25483+58])
                      Pexp_variant "ClApply"
                      Some
                        expression (strip.ml[581,25483+48]..[581,25483+58])
                          Pexp_tuple
                          [
                            expression (strip.ml[581,25483+49]..[581,25483+52])
                              Pexp_ident "_a1" (strip.ml[581,25483+49]..[581,25483+52])
                            expression (strip.ml[581,25483+54]..[581,25483+57])
                              Pexp_ident "_a2" (strip.ml[581,25483+54]..[581,25483+57])
                          ]
              <case>
                pattern (strip.ml[582,25542+4]..[582,25542+24])
                  Ppat_variant "CeFun"
                  Some
                    pattern (strip.ml[582,25542+11]..[582,25542+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[582,25542+12]..[582,25542+15])
                          Ppat_var "_a0" (strip.ml[582,25542+12]..[582,25542+15])
                        pattern (strip.ml[582,25542+16]..[582,25542+19])
                          Ppat_var "_a1" (strip.ml[582,25542+16]..[582,25542+19])
                        pattern (strip.ml[582,25542+20]..[582,25542+23])
                          Ppat_var "_a2" (strip.ml[582,25542+20]..[582,25542+23])
                      ]
                expression (strip.ml[583,25570+6]..[583,25570+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[583,25570+10]..[583,25570+13])
                        Ppat_var "_a1" (strip.ml[583,25570+10]..[583,25570+13])
                      expression (strip.ml[583,25570+16]..[583,25570+23])
                        Pexp_apply
                        expression (strip.ml[583,25570+16]..[583,25570+19])
                          Pexp_ident "pat" (strip.ml[583,25570+16]..[583,25570+19])
                        [
                          <label> ""
                            expression (strip.ml[583,25570+20]..[583,25570+23])
                              Pexp_ident "_a1" (strip.ml[583,25570+20]..[583,25570+23])
                        ]
                  ]
                  expression (strip.ml[583,25570+27]..[583,25570+67])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[583,25570+31]..[583,25570+34])
                          Ppat_var "_a2" (strip.ml[583,25570+31]..[583,25570+34])
                        expression (strip.ml[583,25570+37]..[583,25570+46])
                          Pexp_apply
                          expression (strip.ml[583,25570+37]..[583,25570+42])
                            Pexp_ident "clexp" (strip.ml[583,25570+37]..[583,25570+42])
                          [
                            <label> ""
                              expression (strip.ml[583,25570+43]..[583,25570+46])
                                Pexp_ident "_a2" (strip.ml[583,25570+43]..[583,25570+46])
                          ]
                    ]
                    expression (strip.ml[583,25570+50]..[583,25570+67])
                      Pexp_variant "CeFun"
                      Some
                        expression (strip.ml[583,25570+57]..[583,25570+67])
                          Pexp_tuple
                          [
                            expression (strip.ml[583,25570+58]..[583,25570+61])
                              Pexp_ident "_a1" (strip.ml[583,25570+58]..[583,25570+61])
                            expression (strip.ml[583,25570+63]..[583,25570+66])
                              Pexp_ident "_a2" (strip.ml[583,25570+63]..[583,25570+66])
                          ]
              <case>
                pattern (strip.ml[584,25638+4]..[584,25638+28])
                  Ppat_variant "LetIn"
                  Some
                    pattern (strip.ml[584,25638+11]..[584,25638+28])
                      Ppat_tuple
                      [
                        pattern (strip.ml[584,25638+12]..[584,25638+15])
                          Ppat_var "_a0" (strip.ml[584,25638+12]..[584,25638+15])
                        pattern (strip.ml[584,25638+16]..[584,25638+19])
                          Ppat_var "_a1" (strip.ml[584,25638+16]..[584,25638+19])
                        pattern (strip.ml[584,25638+20]..[584,25638+23])
                          Ppat_var "_a2" (strip.ml[584,25638+20]..[584,25638+23])
                        pattern (strip.ml[584,25638+24]..[584,25638+27])
                          Ppat_var "_a3" (strip.ml[584,25638+24]..[584,25638+27])
                      ]
                expression (strip.ml[585,25670+6]..[586,25698+73])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[585,25670+10]..[585,25670+13])
                        Ppat_var "_a1" (strip.ml[585,25670+10]..[585,25670+13])
                      expression (strip.ml[585,25670+16]..[585,25670+24])
                        Pexp_apply
                        expression (strip.ml[585,25670+16]..[585,25670+20])
                          Pexp_ident "flag" (strip.ml[585,25670+16]..[585,25670+20])
                        [
                          <label> ""
                            expression (strip.ml[585,25670+21]..[585,25670+24])
                              Pexp_ident "_a1" (strip.ml[585,25670+21]..[585,25670+24])
                        ]
                  ]
                  expression (strip.ml[586,25698+6]..[586,25698+73])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[586,25698+10]..[586,25698+13])
                          Ppat_var "_a2" (strip.ml[586,25698+10]..[586,25698+13])
                        expression (strip.ml[586,25698+16]..[586,25698+24])
                          Pexp_apply
                          expression (strip.ml[586,25698+16]..[586,25698+20])
                            Pexp_ident "bind" (strip.ml[586,25698+16]..[586,25698+20])
                          [
                            <label> ""
                              expression (strip.ml[586,25698+21]..[586,25698+24])
                                Pexp_ident "_a2" (strip.ml[586,25698+21]..[586,25698+24])
                          ]
                    ]
                    expression (strip.ml[586,25698+28]..[586,25698+73])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[586,25698+32]..[586,25698+35])
                            Ppat_var "_a3" (strip.ml[586,25698+32]..[586,25698+35])
                          expression (strip.ml[586,25698+38]..[586,25698+47])
                            Pexp_apply
                            expression (strip.ml[586,25698+38]..[586,25698+43])
                              Pexp_ident "clexp" (strip.ml[586,25698+38]..[586,25698+43])
                            [
                              <label> ""
                                expression (strip.ml[586,25698+44]..[586,25698+47])
                                  Pexp_ident "_a3" (strip.ml[586,25698+44]..[586,25698+47])
                            ]
                      ]
                      expression (strip.ml[586,25698+51]..[586,25698+73])
                        Pexp_variant "LetIn"
                        Some
                          expression (strip.ml[586,25698+58]..[586,25698+73])
                            Pexp_tuple
                            [
                              expression (strip.ml[586,25698+59]..[586,25698+62])
                                Pexp_ident "_a1" (strip.ml[586,25698+59]..[586,25698+62])
                              expression (strip.ml[586,25698+64]..[586,25698+67])
                                Pexp_ident "_a2" (strip.ml[586,25698+64]..[586,25698+67])
                              expression (strip.ml[586,25698+69]..[586,25698+72])
                                Pexp_ident "_a3" (strip.ml[586,25698+69]..[586,25698+72])
                            ]
              <case>
                pattern (strip.ml[587,25772+4]..[587,25772+18])
                  Ppat_variant "Obj"
                  Some
                    pattern (strip.ml[587,25772+9]..[587,25772+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[587,25772+10]..[587,25772+13])
                          Ppat_var "_a0" (strip.ml[587,25772+10]..[587,25772+13])
                        pattern (strip.ml[587,25772+14]..[587,25772+17])
                          Ppat_var "_a1" (strip.ml[587,25772+14]..[587,25772+17])
                      ]
                expression (strip.ml[587,25772+22]..[587,25772+55])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[587,25772+26]..[587,25772+29])
                        Ppat_var "_a1" (strip.ml[587,25772+26]..[587,25772+29])
                      expression (strip.ml[587,25772+32]..[587,25772+43])
                        Pexp_apply
                        expression (strip.ml[587,25772+32]..[587,25772+39])
                          Pexp_ident "clfield" (strip.ml[587,25772+32]..[587,25772+39])
                        [
                          <label> ""
                            expression (strip.ml[587,25772+40]..[587,25772+43])
                              Pexp_ident "_a1" (strip.ml[587,25772+40]..[587,25772+43])
                        ]
                  ]
                  expression (strip.ml[587,25772+47]..[587,25772+55])
                    Pexp_variant "Obj"
                    Some
                      expression (strip.ml[587,25772+52]..[587,25772+55])
                        Pexp_ident "_a1" (strip.ml[587,25772+52]..[587,25772+55])
              <case>
                pattern (strip.ml[588,25828+4]..[588,25828+15])
                  Ppat_variant "ObjEnd"
                  Some
                    pattern (strip.ml[588,25828+12]..[588,25828+15])
                      Ppat_var "_a0" (strip.ml[588,25828+12]..[588,25828+15])
                expression (strip.ml[588,25828+19]..[588,25828+26])
                  Pexp_variant "ObjEnd"
                  None
              <case>
                pattern (strip.ml[589,25855+4]..[589,25855+25])
                  Ppat_variant "ObjPat"
                  Some
                    pattern (strip.ml[589,25855+12]..[589,25855+25])
                      Ppat_tuple
                      [
                        pattern (strip.ml[589,25855+13]..[589,25855+16])
                          Ppat_var "_a0" (strip.ml[589,25855+13]..[589,25855+16])
                        pattern (strip.ml[589,25855+17]..[589,25855+20])
                          Ppat_var "_a1" (strip.ml[589,25855+17]..[589,25855+20])
                        pattern (strip.ml[589,25855+21]..[589,25855+24])
                          Ppat_var "_a2" (strip.ml[589,25855+21]..[589,25855+24])
                      ]
                expression (strip.ml[590,25884+6]..[590,25884+70])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[590,25884+10]..[590,25884+13])
                        Ppat_var "_a1" (strip.ml[590,25884+10]..[590,25884+13])
                      expression (strip.ml[590,25884+16]..[590,25884+23])
                        Pexp_apply
                        expression (strip.ml[590,25884+16]..[590,25884+19])
                          Pexp_ident "pat" (strip.ml[590,25884+16]..[590,25884+19])
                        [
                          <label> ""
                            expression (strip.ml[590,25884+20]..[590,25884+23])
                              Pexp_ident "_a1" (strip.ml[590,25884+20]..[590,25884+23])
                        ]
                  ]
                  expression (strip.ml[590,25884+27]..[590,25884+70])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[590,25884+31]..[590,25884+34])
                          Ppat_var "_a2" (strip.ml[590,25884+31]..[590,25884+34])
                        expression (strip.ml[590,25884+37]..[590,25884+48])
                          Pexp_apply
                          expression (strip.ml[590,25884+37]..[590,25884+44])
                            Pexp_ident "clfield" (strip.ml[590,25884+37]..[590,25884+44])
                          [
                            <label> ""
                              expression (strip.ml[590,25884+45]..[590,25884+48])
                                Pexp_ident "_a2" (strip.ml[590,25884+45]..[590,25884+48])
                          ]
                    ]
                    expression (strip.ml[590,25884+52]..[590,25884+70])
                      Pexp_variant "ObjPat"
                      Some
                        expression (strip.ml[590,25884+60]..[590,25884+70])
                          Pexp_tuple
                          [
                            expression (strip.ml[590,25884+61]..[590,25884+64])
                              Pexp_ident "_a1" (strip.ml[590,25884+61]..[590,25884+64])
                            expression (strip.ml[590,25884+66]..[590,25884+69])
                              Pexp_ident "_a2" (strip.ml[590,25884+66]..[590,25884+69])
                          ]
              <case>
                pattern (strip.ml[591,25955+4]..[591,25955+24])
                  Ppat_variant "ObjPatEnd"
                  Some
                    pattern (strip.ml[591,25955+15]..[591,25955+24])
                      Ppat_tuple
                      [
                        pattern (strip.ml[591,25955+16]..[591,25955+19])
                          Ppat_var "_a0" (strip.ml[591,25955+16]..[591,25955+19])
                        pattern (strip.ml[591,25955+20]..[591,25955+23])
                          Ppat_var "_a1" (strip.ml[591,25955+20]..[591,25955+23])
                      ]
                expression (strip.ml[591,25955+28]..[591,25955+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[591,25955+32]..[591,25955+35])
                        Ppat_var "_a1" (strip.ml[591,25955+32]..[591,25955+35])
                      expression (strip.ml[591,25955+38]..[591,25955+45])
                        Pexp_apply
                        expression (strip.ml[591,25955+38]..[591,25955+41])
                          Pexp_ident "pat" (strip.ml[591,25955+38]..[591,25955+41])
                        [
                          <label> ""
                            expression (strip.ml[591,25955+42]..[591,25955+45])
                              Pexp_ident "_a1" (strip.ml[591,25955+42]..[591,25955+45])
                        ]
                  ]
                  expression (strip.ml[591,25955+49]..[591,25955+63])
                    Pexp_variant "ObjPatEnd"
                    Some
                      expression (strip.ml[591,25955+60]..[591,25955+63])
                        Pexp_ident "_a1" (strip.ml[591,25955+60]..[591,25955+63])
              <case>
                pattern (strip.ml[592,26019+4]..[592,26019+29])
                  Ppat_variant "Constraint"
                  Some
                    pattern (strip.ml[592,26019+16]..[592,26019+29])
                      Ppat_tuple
                      [
                        pattern (strip.ml[592,26019+17]..[592,26019+20])
                          Ppat_var "_a0" (strip.ml[592,26019+17]..[592,26019+20])
                        pattern (strip.ml[592,26019+21]..[592,26019+24])
                          Ppat_var "_a1" (strip.ml[592,26019+21]..[592,26019+24])
                        pattern (strip.ml[592,26019+25]..[592,26019+28])
                          Ppat_var "_a2" (strip.ml[592,26019+25]..[592,26019+28])
                      ]
                expression (strip.ml[593,26052+6]..[593,26052+74])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[593,26052+10]..[593,26052+13])
                        Ppat_var "_a1" (strip.ml[593,26052+10]..[593,26052+13])
                      expression (strip.ml[593,26052+16]..[593,26052+25])
                        Pexp_apply
                        expression (strip.ml[593,26052+16]..[593,26052+21])
                          Pexp_ident "clexp" (strip.ml[593,26052+16]..[593,26052+21])
                        [
                          <label> ""
                            expression (strip.ml[593,26052+22]..[593,26052+25])
                              Pexp_ident "_a1" (strip.ml[593,26052+22]..[593,26052+25])
                        ]
                  ]
                  expression (strip.ml[593,26052+29]..[593,26052+74])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[593,26052+33]..[593,26052+36])
                          Ppat_var "_a2" (strip.ml[593,26052+33]..[593,26052+36])
                        expression (strip.ml[593,26052+39]..[593,26052+48])
                          Pexp_apply
                          expression (strip.ml[593,26052+39]..[593,26052+44])
                            Pexp_ident "cltyp" (strip.ml[593,26052+39]..[593,26052+44])
                          [
                            <label> ""
                              expression (strip.ml[593,26052+45]..[593,26052+48])
                                Pexp_ident "_a2" (strip.ml[593,26052+45]..[593,26052+48])
                          ]
                    ]
                    expression (strip.ml[593,26052+52]..[593,26052+74])
                      Pexp_variant "Constraint"
                      Some
                        expression (strip.ml[593,26052+64]..[593,26052+74])
                          Pexp_tuple
                          [
                            expression (strip.ml[593,26052+65]..[593,26052+68])
                              Pexp_ident "_a1" (strip.ml[593,26052+65]..[593,26052+68])
                            expression (strip.ml[593,26052+70]..[593,26052+73])
                              Pexp_ident "_a2" (strip.ml[593,26052+70]..[593,26052+73])
                          ]
              <case>
                pattern (strip.ml[594,26127+4]..[594,26127+15])
                  Ppat_alias "_a0" (strip.ml[594,26127+12]..[594,26127+15])
                  pattern (strip.ml[594,26127+4]..[594,26127+8])
                    Ppat_type
                    "ant" (strip.ml[594,26127+5]..[594,26127+8])
                expression (strip.ml[594,26127+19]..[594,26127+43]) ghost
                  Pexp_coerce
                  expression (strip.ml[594,26127+20]..[594,26127+27])
                    Pexp_apply
                    expression (strip.ml[594,26127+20]..[594,26127+23])
                      Pexp_ident "ant" (strip.ml[594,26127+20]..[594,26127+23])
                    [
                      <label> ""
                        expression (strip.ml[594,26127+24]..[594,26127+27])
                          Pexp_ident "_a0" (strip.ml[594,26127+24]..[594,26127+27])
                    ]
                  None
                  core_type (strip.ml[594,26127+31]..[594,26127+42])
                    Ptyp_constr "Astfn.clexp" (strip.ml[594,26127+31]..[594,26127+42])
                    []
            ]
          core_type (strip.ml[574,25234+11]..[574,25234+36])
            Ptyp_arrow
            ""
            core_type (strip.ml[574,25234+11]..[574,25234+21])
              Ptyp_constr "Astf.clexp" (strip.ml[574,25234+11]..[574,25234+21])
              []
            core_type (strip.ml[574,25234+25]..[574,25234+36])
              Ptyp_constr "Astfn.clexp" (strip.ml[574,25234+25]..[574,25234+36])
              []
      <def>
        pattern (strip.ml[595,26171+4]..[595,26171+11])
          Ppat_var "clfield" (strip.ml[595,26171+4]..[595,26171+11])
        expression (strip.ml[595,26171+11]..[628,27574+45]) ghost
          Pexp_constraint
          expression (strip.ml[596,26216+2]..[628,27574+45])
            Pexp_function
            [
              <case>
                pattern (strip.ml[597,26227+4]..[597,26227+22])
                  Ppat_variant "Sem"
                  Some
                    pattern (strip.ml[597,26227+9]..[597,26227+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[597,26227+10]..[597,26227+13])
                          Ppat_var "_a0" (strip.ml[597,26227+10]..[597,26227+13])
                        pattern (strip.ml[597,26227+14]..[597,26227+17])
                          Ppat_var "_a1" (strip.ml[597,26227+14]..[597,26227+17])
                        pattern (strip.ml[597,26227+18]..[597,26227+21])
                          Ppat_var "_a2" (strip.ml[597,26227+18]..[597,26227+21])
                      ]
                expression (strip.ml[598,26253+6]..[598,26253+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[598,26253+10]..[598,26253+13])
                        Ppat_var "_a1" (strip.ml[598,26253+10]..[598,26253+13])
                      expression (strip.ml[598,26253+16]..[598,26253+27])
                        Pexp_apply
                        expression (strip.ml[598,26253+16]..[598,26253+23])
                          Pexp_ident "clfield" (strip.ml[598,26253+16]..[598,26253+23])
                        [
                          <label> ""
                            expression (strip.ml[598,26253+24]..[598,26253+27])
                              Pexp_ident "_a1" (strip.ml[598,26253+24]..[598,26253+27])
                        ]
                  ]
                  expression (strip.ml[598,26253+31]..[598,26253+71])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[598,26253+35]..[598,26253+38])
                          Ppat_var "_a2" (strip.ml[598,26253+35]..[598,26253+38])
                        expression (strip.ml[598,26253+41]..[598,26253+52])
                          Pexp_apply
                          expression (strip.ml[598,26253+41]..[598,26253+48])
                            Pexp_ident "clfield" (strip.ml[598,26253+41]..[598,26253+48])
                          [
                            <label> ""
                              expression (strip.ml[598,26253+49]..[598,26253+52])
                                Pexp_ident "_a2" (strip.ml[598,26253+49]..[598,26253+52])
                          ]
                    ]
                    expression (strip.ml[598,26253+56]..[598,26253+71])
                      Pexp_variant "Sem"
                      Some
                        expression (strip.ml[598,26253+61]..[598,26253+71])
                          Pexp_tuple
                          [
                            expression (strip.ml[598,26253+62]..[598,26253+65])
                              Pexp_ident "_a1" (strip.ml[598,26253+62]..[598,26253+65])
                            expression (strip.ml[598,26253+67]..[598,26253+70])
                              Pexp_ident "_a2" (strip.ml[598,26253+67]..[598,26253+70])
                          ]
              <case>
                pattern (strip.ml[599,26325+4]..[599,26325+26])
                  Ppat_variant "Inherit"
                  Some
                    pattern (strip.ml[599,26325+13]..[599,26325+26])
                      Ppat_tuple
                      [
                        pattern (strip.ml[599,26325+14]..[599,26325+17])
                          Ppat_var "_a0" (strip.ml[599,26325+14]..[599,26325+17])
                        pattern (strip.ml[599,26325+18]..[599,26325+21])
                          Ppat_var "_a1" (strip.ml[599,26325+18]..[599,26325+21])
                        pattern (strip.ml[599,26325+22]..[599,26325+25])
                          Ppat_var "_a2" (strip.ml[599,26325+22]..[599,26325+25])
                      ]
                expression (strip.ml[600,26355+6]..[600,26355+70])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[600,26355+10]..[600,26355+13])
                        Ppat_var "_a1" (strip.ml[600,26355+10]..[600,26355+13])
                      expression (strip.ml[600,26355+16]..[600,26355+24])
                        Pexp_apply
                        expression (strip.ml[600,26355+16]..[600,26355+20])
                          Pexp_ident "flag" (strip.ml[600,26355+16]..[600,26355+20])
                        [
                          <label> ""
                            expression (strip.ml[600,26355+21]..[600,26355+24])
                              Pexp_ident "_a1" (strip.ml[600,26355+21]..[600,26355+24])
                        ]
                  ]
                  expression (strip.ml[600,26355+28]..[600,26355+70])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[600,26355+32]..[600,26355+35])
                          Ppat_var "_a2" (strip.ml[600,26355+32]..[600,26355+35])
                        expression (strip.ml[600,26355+38]..[600,26355+47])
                          Pexp_apply
                          expression (strip.ml[600,26355+38]..[600,26355+43])
                            Pexp_ident "clexp" (strip.ml[600,26355+38]..[600,26355+43])
                          [
                            <label> ""
                              expression (strip.ml[600,26355+44]..[600,26355+47])
                                Pexp_ident "_a2" (strip.ml[600,26355+44]..[600,26355+47])
                          ]
                    ]
                    expression (strip.ml[600,26355+51]..[600,26355+70])
                      Pexp_variant "Inherit"
                      Some
                        expression (strip.ml[600,26355+60]..[600,26355+70])
                          Pexp_tuple
                          [
                            expression (strip.ml[600,26355+61]..[600,26355+64])
                              Pexp_ident "_a1" (strip.ml[600,26355+61]..[600,26355+64])
                            expression (strip.ml[600,26355+66]..[600,26355+69])
                              Pexp_ident "_a2" (strip.ml[600,26355+66]..[600,26355+69])
                          ]
              <case>
                pattern (strip.ml[601,26426+4]..[601,26426+32])
                  Ppat_variant "InheritAs"
                  Some
                    pattern (strip.ml[601,26426+15]..[601,26426+32])
                      Ppat_tuple
                      [
                        pattern (strip.ml[601,26426+16]..[601,26426+19])
                          Ppat_var "_a0" (strip.ml[601,26426+16]..[601,26426+19])
                        pattern (strip.ml[601,26426+20]..[601,26426+23])
                          Ppat_var "_a1" (strip.ml[601,26426+20]..[601,26426+23])
                        pattern (strip.ml[601,26426+24]..[601,26426+27])
                          Ppat_var "_a2" (strip.ml[601,26426+24]..[601,26426+27])
                        pattern (strip.ml[601,26426+28]..[601,26426+31])
                          Ppat_var "_a3" (strip.ml[601,26426+28]..[601,26426+31])
                      ]
                expression (strip.ml[602,26462+6]..[604,26519+57])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[602,26462+10]..[602,26462+13])
                        Ppat_var "_a1" (strip.ml[602,26462+10]..[602,26462+13])
                      expression (strip.ml[602,26462+16]..[602,26462+24])
                        Pexp_apply
                        expression (strip.ml[602,26462+16]..[602,26462+20])
                          Pexp_ident "flag" (strip.ml[602,26462+16]..[602,26462+20])
                        [
                          <label> ""
                            expression (strip.ml[602,26462+21]..[602,26462+24])
                              Pexp_ident "_a1" (strip.ml[602,26462+21]..[602,26462+24])
                        ]
                  ]
                  expression (strip.ml[603,26490+6]..[604,26519+57])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[603,26490+10]..[603,26490+13])
                          Ppat_var "_a2" (strip.ml[603,26490+10]..[603,26490+13])
                        expression (strip.ml[603,26490+16]..[603,26490+25])
                          Pexp_apply
                          expression (strip.ml[603,26490+16]..[603,26490+21])
                            Pexp_ident "clexp" (strip.ml[603,26490+16]..[603,26490+21])
                          [
                            <label> ""
                              expression (strip.ml[603,26490+22]..[603,26490+25])
                                Pexp_ident "_a2" (strip.ml[603,26490+22]..[603,26490+25])
                          ]
                    ]
                    expression (strip.ml[604,26519+6]..[604,26519+57])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[604,26519+10]..[604,26519+13])
                            Ppat_var "_a3" (strip.ml[604,26519+10]..[604,26519+13])
                          expression (strip.ml[604,26519+16]..[604,26519+27])
                            Pexp_apply
                            expression (strip.ml[604,26519+16]..[604,26519+23])
                              Pexp_ident "alident" (strip.ml[604,26519+16]..[604,26519+23])
                            [
                              <label> ""
                                expression (strip.ml[604,26519+24]..[604,26519+27])
                                  Pexp_ident "_a3" (strip.ml[604,26519+24]..[604,26519+27])
                            ]
                      ]
                      expression (strip.ml[604,26519+31]..[604,26519+57])
                        Pexp_variant "InheritAs"
                        Some
                          expression (strip.ml[604,26519+42]..[604,26519+57])
                            Pexp_tuple
                            [
                              expression (strip.ml[604,26519+43]..[604,26519+46])
                                Pexp_ident "_a1" (strip.ml[604,26519+43]..[604,26519+46])
                              expression (strip.ml[604,26519+48]..[604,26519+51])
                                Pexp_ident "_a2" (strip.ml[604,26519+48]..[604,26519+51])
                              expression (strip.ml[604,26519+53]..[604,26519+56])
                                Pexp_ident "_a3" (strip.ml[604,26519+53]..[604,26519+56])
                            ]
              <case>
                pattern (strip.ml[605,26577+4]..[605,26577+32])
                  Ppat_variant "CrVal"
                  Some
                    pattern (strip.ml[605,26577+11]..[605,26577+32])
                      Ppat_tuple
                      [
                        pattern (strip.ml[605,26577+12]..[605,26577+15])
                          Ppat_var "_a0" (strip.ml[605,26577+12]..[605,26577+15])
                        pattern (strip.ml[605,26577+16]..[605,26577+19])
                          Ppat_var "_a1" (strip.ml[605,26577+16]..[605,26577+19])
                        pattern (strip.ml[605,26577+20]..[605,26577+23])
                          Ppat_var "_a2" (strip.ml[605,26577+20]..[605,26577+23])
                        pattern (strip.ml[605,26577+24]..[605,26577+27])
                          Ppat_var "_a3" (strip.ml[605,26577+24]..[605,26577+27])
                        pattern (strip.ml[605,26577+28]..[605,26577+31])
                          Ppat_var "_a4" (strip.ml[605,26577+28]..[605,26577+31])
                      ]
                expression (strip.ml[606,26613+6]..[608,26672+76])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[606,26613+10]..[606,26613+13])
                        Ppat_var "_a1" (strip.ml[606,26613+10]..[606,26613+13])
                      expression (strip.ml[606,26613+16]..[606,26613+27])
                        Pexp_apply
                        expression (strip.ml[606,26613+16]..[606,26613+23])
                          Pexp_ident "alident" (strip.ml[606,26613+16]..[606,26613+23])
                        [
                          <label> ""
                            expression (strip.ml[606,26613+24]..[606,26613+27])
                              Pexp_ident "_a1" (strip.ml[606,26613+24]..[606,26613+27])
                        ]
                  ]
                  expression (strip.ml[607,26644+6]..[608,26672+76])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[607,26644+10]..[607,26644+13])
                          Ppat_var "_a2" (strip.ml[607,26644+10]..[607,26644+13])
                        expression (strip.ml[607,26644+16]..[607,26644+24])
                          Pexp_apply
                          expression (strip.ml[607,26644+16]..[607,26644+20])
                            Pexp_ident "flag" (strip.ml[607,26644+16]..[607,26644+20])
                          [
                            <label> ""
                              expression (strip.ml[607,26644+21]..[607,26644+24])
                                Pexp_ident "_a2" (strip.ml[607,26644+21]..[607,26644+24])
                          ]
                    ]
                    expression (strip.ml[608,26672+6]..[608,26672+76])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[608,26672+10]..[608,26672+13])
                            Ppat_var "_a3" (strip.ml[608,26672+10]..[608,26672+13])
                          expression (strip.ml[608,26672+16]..[608,26672+24])
                            Pexp_apply
                            expression (strip.ml[608,26672+16]..[608,26672+20])
                              Pexp_ident "flag" (strip.ml[608,26672+16]..[608,26672+20])
                            [
                              <label> ""
                                expression (strip.ml[608,26672+21]..[608,26672+24])
                                  Pexp_ident "_a3" (strip.ml[608,26672+21]..[608,26672+24])
                            ]
                      ]
                      expression (strip.ml[608,26672+28]..[608,26672+76])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (strip.ml[608,26672+32]..[608,26672+35])
                              Ppat_var "_a4" (strip.ml[608,26672+32]..[608,26672+35])
                            expression (strip.ml[608,26672+38]..[608,26672+45])
                              Pexp_apply
                              expression (strip.ml[608,26672+38]..[608,26672+41])
                                Pexp_ident "exp" (strip.ml[608,26672+38]..[608,26672+41])
                              [
                                <label> ""
                                  expression (strip.ml[608,26672+42]..[608,26672+45])
                                    Pexp_ident "_a4" (strip.ml[608,26672+42]..[608,26672+45])
                              ]
                        ]
                        expression (strip.ml[608,26672+49]..[608,26672+76])
                          Pexp_variant "CrVal"
                          Some
                            expression (strip.ml[608,26672+56]..[608,26672+76])
                              Pexp_tuple
                              [
                                expression (strip.ml[608,26672+57]..[608,26672+60])
                                  Pexp_ident "_a1" (strip.ml[608,26672+57]..[608,26672+60])
                                expression (strip.ml[608,26672+62]..[608,26672+65])
                                  Pexp_ident "_a2" (strip.ml[608,26672+62]..[608,26672+65])
                                expression (strip.ml[608,26672+67]..[608,26672+70])
                                  Pexp_ident "_a3" (strip.ml[608,26672+67]..[608,26672+70])
                                expression (strip.ml[608,26672+72]..[608,26672+75])
                                  Pexp_ident "_a4" (strip.ml[608,26672+72]..[608,26672+75])
                              ]
              <case>
                pattern (strip.ml[609,26749+4]..[609,26749+29])
                  Ppat_variant "VirVal"
                  Some
                    pattern (strip.ml[609,26749+12]..[609,26749+29])
                      Ppat_tuple
                      [
                        pattern (strip.ml[609,26749+13]..[609,26749+16])
                          Ppat_var "_a0" (strip.ml[609,26749+13]..[609,26749+16])
                        pattern (strip.ml[609,26749+17]..[609,26749+20])
                          Ppat_var "_a1" (strip.ml[609,26749+17]..[609,26749+20])
                        pattern (strip.ml[609,26749+21]..[609,26749+24])
                          Ppat_var "_a2" (strip.ml[609,26749+21]..[609,26749+24])
                        pattern (strip.ml[609,26749+25]..[609,26749+28])
                          Ppat_var "_a3" (strip.ml[609,26749+25]..[609,26749+28])
                      ]
                expression (strip.ml[610,26782+6]..[611,26813+73])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[610,26782+10]..[610,26782+13])
                        Ppat_var "_a1" (strip.ml[610,26782+10]..[610,26782+13])
                      expression (strip.ml[610,26782+16]..[610,26782+27])
                        Pexp_apply
                        expression (strip.ml[610,26782+16]..[610,26782+23])
                          Pexp_ident "alident" (strip.ml[610,26782+16]..[610,26782+23])
                        [
                          <label> ""
                            expression (strip.ml[610,26782+24]..[610,26782+27])
                              Pexp_ident "_a1" (strip.ml[610,26782+24]..[610,26782+27])
                        ]
                  ]
                  expression (strip.ml[611,26813+6]..[611,26813+73])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[611,26813+10]..[611,26813+13])
                          Ppat_var "_a2" (strip.ml[611,26813+10]..[611,26813+13])
                        expression (strip.ml[611,26813+16]..[611,26813+24])
                          Pexp_apply
                          expression (strip.ml[611,26813+16]..[611,26813+20])
                            Pexp_ident "flag" (strip.ml[611,26813+16]..[611,26813+20])
                          [
                            <label> ""
                              expression (strip.ml[611,26813+21]..[611,26813+24])
                                Pexp_ident "_a2" (strip.ml[611,26813+21]..[611,26813+24])
                          ]
                    ]
                    expression (strip.ml[611,26813+28]..[611,26813+73])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[611,26813+32]..[611,26813+35])
                            Ppat_var "_a3" (strip.ml[611,26813+32]..[611,26813+35])
                          expression (strip.ml[611,26813+38]..[611,26813+46])
                            Pexp_apply
                            expression (strip.ml[611,26813+38]..[611,26813+42])
                              Pexp_ident "ctyp" (strip.ml[611,26813+38]..[611,26813+42])
                            [
                              <label> ""
                                expression (strip.ml[611,26813+43]..[611,26813+46])
                                  Pexp_ident "_a3" (strip.ml[611,26813+43]..[611,26813+46])
                            ]
                      ]
                      expression (strip.ml[611,26813+50]..[611,26813+73])
                        Pexp_variant "VirVal"
                        Some
                          expression (strip.ml[611,26813+58]..[611,26813+73])
                            Pexp_tuple
                            [
                              expression (strip.ml[611,26813+59]..[611,26813+62])
                                Pexp_ident "_a1" (strip.ml[611,26813+59]..[611,26813+62])
                              expression (strip.ml[611,26813+64]..[611,26813+67])
                                Pexp_ident "_a2" (strip.ml[611,26813+64]..[611,26813+67])
                              expression (strip.ml[611,26813+69]..[611,26813+72])
                                Pexp_ident "_a3" (strip.ml[611,26813+69]..[611,26813+72])
                            ]
              <case>
                pattern (strip.ml[612,26887+4]..[612,26887+36])
                  Ppat_variant "CrMth"
                  Some
                    pattern (strip.ml[612,26887+11]..[612,26887+36])
                      Ppat_tuple
                      [
                        pattern (strip.ml[612,26887+12]..[612,26887+15])
                          Ppat_var "_a0" (strip.ml[612,26887+12]..[612,26887+15])
                        pattern (strip.ml[612,26887+16]..[612,26887+19])
                          Ppat_var "_a1" (strip.ml[612,26887+16]..[612,26887+19])
                        pattern (strip.ml[612,26887+20]..[612,26887+23])
                          Ppat_var "_a2" (strip.ml[612,26887+20]..[612,26887+23])
                        pattern (strip.ml[612,26887+24]..[612,26887+27])
                          Ppat_var "_a3" (strip.ml[612,26887+24]..[612,26887+27])
                        pattern (strip.ml[612,26887+28]..[612,26887+31])
                          Ppat_var "_a4" (strip.ml[612,26887+28]..[612,26887+31])
                        pattern (strip.ml[612,26887+32]..[612,26887+35])
                          Ppat_var "_a5" (strip.ml[612,26887+32]..[612,26887+35])
                      ]
                expression (strip.ml[613,26927+6]..[617,27041+60])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[613,26927+10]..[613,26927+13])
                        Ppat_var "_a1" (strip.ml[613,26927+10]..[613,26927+13])
                      expression (strip.ml[613,26927+16]..[613,26927+27])
                        Pexp_apply
                        expression (strip.ml[613,26927+16]..[613,26927+23])
                          Pexp_ident "alident" (strip.ml[613,26927+16]..[613,26927+23])
                        [
                          <label> ""
                            expression (strip.ml[613,26927+24]..[613,26927+27])
                              Pexp_ident "_a1" (strip.ml[613,26927+24]..[613,26927+27])
                        ]
                  ]
                  expression (strip.ml[614,26958+6]..[617,27041+60])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[614,26958+10]..[614,26958+13])
                          Ppat_var "_a2" (strip.ml[614,26958+10]..[614,26958+13])
                        expression (strip.ml[614,26958+16]..[614,26958+24])
                          Pexp_apply
                          expression (strip.ml[614,26958+16]..[614,26958+20])
                            Pexp_ident "flag" (strip.ml[614,26958+16]..[614,26958+20])
                          [
                            <label> ""
                              expression (strip.ml[614,26958+21]..[614,26958+24])
                                Pexp_ident "_a2" (strip.ml[614,26958+21]..[614,26958+24])
                          ]
                    ]
                    expression (strip.ml[615,26986+6]..[617,27041+60])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[615,26986+10]..[615,26986+13])
                            Ppat_var "_a3" (strip.ml[615,26986+10]..[615,26986+13])
                          expression (strip.ml[615,26986+16]..[615,26986+24])
                            Pexp_apply
                            expression (strip.ml[615,26986+16]..[615,26986+20])
                              Pexp_ident "flag" (strip.ml[615,26986+16]..[615,26986+20])
                            [
                              <label> ""
                                expression (strip.ml[615,26986+21]..[615,26986+24])
                                  Pexp_ident "_a3" (strip.ml[615,26986+21]..[615,26986+24])
                            ]
                      ]
                      expression (strip.ml[616,27014+6]..[617,27041+60])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (strip.ml[616,27014+10]..[616,27014+13])
                              Ppat_var "_a4" (strip.ml[616,27014+10]..[616,27014+13])
                            expression (strip.ml[616,27014+16]..[616,27014+23])
                              Pexp_apply
                              expression (strip.ml[616,27014+16]..[616,27014+19])
                                Pexp_ident "exp" (strip.ml[616,27014+16]..[616,27014+19])
                              [
                                <label> ""
                                  expression (strip.ml[616,27014+20]..[616,27014+23])
                                    Pexp_ident "_a4" (strip.ml[616,27014+20]..[616,27014+23])
                              ]
                        ]
                        expression (strip.ml[617,27041+6]..[617,27041+60])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (strip.ml[617,27041+10]..[617,27041+13])
                                Ppat_var "_a5" (strip.ml[617,27041+10]..[617,27041+13])
                              expression (strip.ml[617,27041+16]..[617,27041+24])
                                Pexp_apply
                                expression (strip.ml[617,27041+16]..[617,27041+20])
                                  Pexp_ident "ctyp" (strip.ml[617,27041+16]..[617,27041+20])
                                [
                                  <label> ""
                                    expression (strip.ml[617,27041+21]..[617,27041+24])
                                      Pexp_ident "_a5" (strip.ml[617,27041+21]..[617,27041+24])
                                ]
                          ]
                          expression (strip.ml[617,27041+28]..[617,27041+60])
                            Pexp_variant "CrMth"
                            Some
                              expression (strip.ml[617,27041+35]..[617,27041+60])
                                Pexp_tuple
                                [
                                  expression (strip.ml[617,27041+36]..[617,27041+39])
                                    Pexp_ident "_a1" (strip.ml[617,27041+36]..[617,27041+39])
                                  expression (strip.ml[617,27041+41]..[617,27041+44])
                                    Pexp_ident "_a2" (strip.ml[617,27041+41]..[617,27041+44])
                                  expression (strip.ml[617,27041+46]..[617,27041+49])
                                    Pexp_ident "_a3" (strip.ml[617,27041+46]..[617,27041+49])
                                  expression (strip.ml[617,27041+51]..[617,27041+54])
                                    Pexp_ident "_a4" (strip.ml[617,27041+51]..[617,27041+54])
                                  expression (strip.ml[617,27041+56]..[617,27041+59])
                                    Pexp_ident "_a5" (strip.ml[617,27041+56]..[617,27041+59])
                                ]
              <case>
                pattern (strip.ml[618,27102+4]..[618,27102+33])
                  Ppat_variant "CrMthS"
                  Some
                    pattern (strip.ml[618,27102+12]..[618,27102+33])
                      Ppat_tuple
                      [
                        pattern (strip.ml[618,27102+13]..[618,27102+16])
                          Ppat_var "_a0" (strip.ml[618,27102+13]..[618,27102+16])
                        pattern (strip.ml[618,27102+17]..[618,27102+20])
                          Ppat_var "_a1" (strip.ml[618,27102+17]..[618,27102+20])
                        pattern (strip.ml[618,27102+21]..[618,27102+24])
                          Ppat_var "_a2" (strip.ml[618,27102+21]..[618,27102+24])
                        pattern (strip.ml[618,27102+25]..[618,27102+28])
                          Ppat_var "_a3" (strip.ml[618,27102+25]..[618,27102+28])
                        pattern (strip.ml[618,27102+29]..[618,27102+32])
                          Ppat_var "_a4" (strip.ml[618,27102+29]..[618,27102+32])
                      ]
                expression (strip.ml[619,27139+6]..[621,27198+77])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[619,27139+10]..[619,27139+13])
                        Ppat_var "_a1" (strip.ml[619,27139+10]..[619,27139+13])
                      expression (strip.ml[619,27139+16]..[619,27139+27])
                        Pexp_apply
                        expression (strip.ml[619,27139+16]..[619,27139+23])
                          Pexp_ident "alident" (strip.ml[619,27139+16]..[619,27139+23])
                        [
                          <label> ""
                            expression (strip.ml[619,27139+24]..[619,27139+27])
                              Pexp_ident "_a1" (strip.ml[619,27139+24]..[619,27139+27])
                        ]
                  ]
                  expression (strip.ml[620,27170+6]..[621,27198+77])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[620,27170+10]..[620,27170+13])
                          Ppat_var "_a2" (strip.ml[620,27170+10]..[620,27170+13])
                        expression (strip.ml[620,27170+16]..[620,27170+24])
                          Pexp_apply
                          expression (strip.ml[620,27170+16]..[620,27170+20])
                            Pexp_ident "flag" (strip.ml[620,27170+16]..[620,27170+20])
                          [
                            <label> ""
                              expression (strip.ml[620,27170+21]..[620,27170+24])
                                Pexp_ident "_a2" (strip.ml[620,27170+21]..[620,27170+24])
                          ]
                    ]
                    expression (strip.ml[621,27198+6]..[621,27198+77])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[621,27198+10]..[621,27198+13])
                            Ppat_var "_a3" (strip.ml[621,27198+10]..[621,27198+13])
                          expression (strip.ml[621,27198+16]..[621,27198+24])
                            Pexp_apply
                            expression (strip.ml[621,27198+16]..[621,27198+20])
                              Pexp_ident "flag" (strip.ml[621,27198+16]..[621,27198+20])
                            [
                              <label> ""
                                expression (strip.ml[621,27198+21]..[621,27198+24])
                                  Pexp_ident "_a3" (strip.ml[621,27198+21]..[621,27198+24])
                            ]
                      ]
                      expression (strip.ml[621,27198+28]..[621,27198+77])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (strip.ml[621,27198+32]..[621,27198+35])
                              Ppat_var "_a4" (strip.ml[621,27198+32]..[621,27198+35])
                            expression (strip.ml[621,27198+38]..[621,27198+45])
                              Pexp_apply
                              expression (strip.ml[621,27198+38]..[621,27198+41])
                                Pexp_ident "exp" (strip.ml[621,27198+38]..[621,27198+41])
                              [
                                <label> ""
                                  expression (strip.ml[621,27198+42]..[621,27198+45])
                                    Pexp_ident "_a4" (strip.ml[621,27198+42]..[621,27198+45])
                              ]
                        ]
                        expression (strip.ml[621,27198+49]..[621,27198+77])
                          Pexp_variant "CrMthS"
                          Some
                            expression (strip.ml[621,27198+57]..[621,27198+77])
                              Pexp_tuple
                              [
                                expression (strip.ml[621,27198+58]..[621,27198+61])
                                  Pexp_ident "_a1" (strip.ml[621,27198+58]..[621,27198+61])
                                expression (strip.ml[621,27198+63]..[621,27198+66])
                                  Pexp_ident "_a2" (strip.ml[621,27198+63]..[621,27198+66])
                                expression (strip.ml[621,27198+68]..[621,27198+71])
                                  Pexp_ident "_a3" (strip.ml[621,27198+68]..[621,27198+71])
                                expression (strip.ml[621,27198+73]..[621,27198+76])
                                  Pexp_ident "_a4" (strip.ml[621,27198+73]..[621,27198+76])
                              ]
              <case>
                pattern (strip.ml[622,27276+4]..[622,27276+30])
                  Ppat_variant "VirMeth"
                  Some
                    pattern (strip.ml[622,27276+13]..[622,27276+30])
                      Ppat_tuple
                      [
                        pattern (strip.ml[622,27276+14]..[622,27276+17])
                          Ppat_var "_a0" (strip.ml[622,27276+14]..[622,27276+17])
                        pattern (strip.ml[622,27276+18]..[622,27276+21])
                          Ppat_var "_a1" (strip.ml[622,27276+18]..[622,27276+21])
                        pattern (strip.ml[622,27276+22]..[622,27276+25])
                          Ppat_var "_a2" (strip.ml[622,27276+22]..[622,27276+25])
                        pattern (strip.ml[622,27276+26]..[622,27276+29])
                          Ppat_var "_a3" (strip.ml[622,27276+26]..[622,27276+29])
                      ]
                expression (strip.ml[623,27310+6]..[624,27341+74])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[623,27310+10]..[623,27310+13])
                        Ppat_var "_a1" (strip.ml[623,27310+10]..[623,27310+13])
                      expression (strip.ml[623,27310+16]..[623,27310+27])
                        Pexp_apply
                        expression (strip.ml[623,27310+16]..[623,27310+23])
                          Pexp_ident "alident" (strip.ml[623,27310+16]..[623,27310+23])
                        [
                          <label> ""
                            expression (strip.ml[623,27310+24]..[623,27310+27])
                              Pexp_ident "_a1" (strip.ml[623,27310+24]..[623,27310+27])
                        ]
                  ]
                  expression (strip.ml[624,27341+6]..[624,27341+74])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[624,27341+10]..[624,27341+13])
                          Ppat_var "_a2" (strip.ml[624,27341+10]..[624,27341+13])
                        expression (strip.ml[624,27341+16]..[624,27341+24])
                          Pexp_apply
                          expression (strip.ml[624,27341+16]..[624,27341+20])
                            Pexp_ident "flag" (strip.ml[624,27341+16]..[624,27341+20])
                          [
                            <label> ""
                              expression (strip.ml[624,27341+21]..[624,27341+24])
                                Pexp_ident "_a2" (strip.ml[624,27341+21]..[624,27341+24])
                          ]
                    ]
                    expression (strip.ml[624,27341+28]..[624,27341+74])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (strip.ml[624,27341+32]..[624,27341+35])
                            Ppat_var "_a3" (strip.ml[624,27341+32]..[624,27341+35])
                          expression (strip.ml[624,27341+38]..[624,27341+46])
                            Pexp_apply
                            expression (strip.ml[624,27341+38]..[624,27341+42])
                              Pexp_ident "ctyp" (strip.ml[624,27341+38]..[624,27341+42])
                            [
                              <label> ""
                                expression (strip.ml[624,27341+43]..[624,27341+46])
                                  Pexp_ident "_a3" (strip.ml[624,27341+43]..[624,27341+46])
                            ]
                      ]
                      expression (strip.ml[624,27341+50]..[624,27341+74])
                        Pexp_variant "VirMeth"
                        Some
                          expression (strip.ml[624,27341+59]..[624,27341+74])
                            Pexp_tuple
                            [
                              expression (strip.ml[624,27341+60]..[624,27341+63])
                                Pexp_ident "_a1" (strip.ml[624,27341+60]..[624,27341+63])
                              expression (strip.ml[624,27341+65]..[624,27341+68])
                                Pexp_ident "_a2" (strip.ml[624,27341+65]..[624,27341+68])
                              expression (strip.ml[624,27341+70]..[624,27341+73])
                                Pexp_ident "_a3" (strip.ml[624,27341+70]..[624,27341+73])
                            ]
              <case>
                pattern (strip.ml[625,27416+4]..[625,27416+21])
                  Ppat_variant "Eq"
                  Some
                    pattern (strip.ml[625,27416+8]..[625,27416+21])
                      Ppat_tuple
                      [
                        pattern (strip.ml[625,27416+9]..[625,27416+12])
                          Ppat_var "_a0" (strip.ml[625,27416+9]..[625,27416+12])
                        pattern (strip.ml[625,27416+13]..[625,27416+16])
                          Ppat_var "_a1" (strip.ml[625,27416+13]..[625,27416+16])
                        pattern (strip.ml[625,27416+17]..[625,27416+20])
                          Ppat_var "_a2" (strip.ml[625,27416+17]..[625,27416+20])
                      ]
                expression (strip.ml[626,27441+6]..[626,27441+64])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[626,27441+10]..[626,27441+13])
                        Ppat_var "_a1" (strip.ml[626,27441+10]..[626,27441+13])
                      expression (strip.ml[626,27441+16]..[626,27441+24])
                        Pexp_apply
                        expression (strip.ml[626,27441+16]..[626,27441+20])
                          Pexp_ident "ctyp" (strip.ml[626,27441+16]..[626,27441+20])
                        [
                          <label> ""
                            expression (strip.ml[626,27441+21]..[626,27441+24])
                              Pexp_ident "_a1" (strip.ml[626,27441+21]..[626,27441+24])
                        ]
                  ]
                  expression (strip.ml[626,27441+28]..[626,27441+64])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[626,27441+32]..[626,27441+35])
                          Ppat_var "_a2" (strip.ml[626,27441+32]..[626,27441+35])
                        expression (strip.ml[626,27441+38]..[626,27441+46])
                          Pexp_apply
                          expression (strip.ml[626,27441+38]..[626,27441+42])
                            Pexp_ident "ctyp" (strip.ml[626,27441+38]..[626,27441+42])
                          [
                            <label> ""
                              expression (strip.ml[626,27441+43]..[626,27441+46])
                                Pexp_ident "_a2" (strip.ml[626,27441+43]..[626,27441+46])
                          ]
                    ]
                    expression (strip.ml[626,27441+50]..[626,27441+64])
                      Pexp_variant "Eq"
                      Some
                        expression (strip.ml[626,27441+54]..[626,27441+64])
                          Pexp_tuple
                          [
                            expression (strip.ml[626,27441+55]..[626,27441+58])
                              Pexp_ident "_a1" (strip.ml[626,27441+55]..[626,27441+58])
                            expression (strip.ml[626,27441+60]..[626,27441+63])
                              Pexp_ident "_a2" (strip.ml[626,27441+60]..[626,27441+63])
                          ]
              <case>
                pattern (strip.ml[627,27506+4]..[627,27506+26])
                  Ppat_variant "Initializer"
                  Some
                    pattern (strip.ml[627,27506+17]..[627,27506+26])
                      Ppat_tuple
                      [
                        pattern (strip.ml[627,27506+18]..[627,27506+21])
                          Ppat_var "_a0" (strip.ml[627,27506+18]..[627,27506+21])
                        pattern (strip.ml[627,27506+22]..[627,27506+25])
                          Ppat_var "_a1" (strip.ml[627,27506+22]..[627,27506+25])
                      ]
                expression (strip.ml[627,27506+30]..[627,27506+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[627,27506+34]..[627,27506+37])
                        Ppat_var "_a1" (strip.ml[627,27506+34]..[627,27506+37])
                      expression (strip.ml[627,27506+40]..[627,27506+47])
                        Pexp_apply
                        expression (strip.ml[627,27506+40]..[627,27506+43])
                          Pexp_ident "exp" (strip.ml[627,27506+40]..[627,27506+43])
                        [
                          <label> ""
                            expression (strip.ml[627,27506+44]..[627,27506+47])
                              Pexp_ident "_a1" (strip.ml[627,27506+44]..[627,27506+47])
                        ]
                  ]
                  expression (strip.ml[627,27506+51]..[627,27506+67])
                    Pexp_variant "Initializer"
                    Some
                      expression (strip.ml[627,27506+64]..[627,27506+67])
                        Pexp_ident "_a1" (strip.ml[627,27506+64]..[627,27506+67])
              <case>
                pattern (strip.ml[628,27574+4]..[628,27574+15])
                  Ppat_alias "_a0" (strip.ml[628,27574+12]..[628,27574+15])
                  pattern (strip.ml[628,27574+4]..[628,27574+8])
                    Ppat_type
                    "ant" (strip.ml[628,27574+5]..[628,27574+8])
                expression (strip.ml[628,27574+19]..[628,27574+45]) ghost
                  Pexp_coerce
                  expression (strip.ml[628,27574+20]..[628,27574+27])
                    Pexp_apply
                    expression (strip.ml[628,27574+20]..[628,27574+23])
                      Pexp_ident "ant" (strip.ml[628,27574+20]..[628,27574+23])
                    [
                      <label> ""
                        expression (strip.ml[628,27574+24]..[628,27574+27])
                          Pexp_ident "_a0" (strip.ml[628,27574+24]..[628,27574+27])
                    ]
                  None
                  core_type (strip.ml[628,27574+31]..[628,27574+44])
                    Ptyp_constr "Astfn.clfield" (strip.ml[628,27574+31]..[628,27574+44])
                    []
            ]
          core_type (strip.ml[595,26171+13]..[595,26171+42])
            Ptyp_arrow
            ""
            core_type (strip.ml[595,26171+13]..[595,26171+25])
              Ptyp_constr "Astf.clfield" (strip.ml[595,26171+13]..[595,26171+25])
              []
            core_type (strip.ml[595,26171+29]..[595,26171+42])
              Ptyp_constr "Astfn.clfield" (strip.ml[595,26171+29]..[595,26171+42])
              []
    ]
  structure_item (strip.ml[629,27620+0]..[654,28702+46])
    Pstr_value Rec
    [
      <def>
        pattern (strip.ml[629,27620+8]..[629,27620+10])
          Ppat_var "ep" (strip.ml[629,27620+8]..[629,27620+10])
        expression (strip.ml[629,27620+10]..[646,28350+48]) ghost
          Pexp_constraint
          expression (strip.ml[630,27654+2]..[646,28350+48])
            Pexp_function
            [
              <case>
                pattern (strip.ml[631,27665+4]..[631,27665+15])
                  Ppat_alias "_a0" (strip.ml[631,27665+12]..[631,27665+15])
                  pattern (strip.ml[631,27665+4]..[631,27665+8])
                    Ppat_type
                    "vid" (strip.ml[631,27665+5]..[631,27665+8])
                expression (strip.ml[631,27665+19]..[631,27665+40]) ghost
                  Pexp_coerce
                  expression (strip.ml[631,27665+20]..[631,27665+27])
                    Pexp_apply
                    expression (strip.ml[631,27665+20]..[631,27665+23])
                      Pexp_ident "vid" (strip.ml[631,27665+20]..[631,27665+23])
                    [
                      <label> ""
                        expression (strip.ml[631,27665+24]..[631,27665+27])
                          Pexp_ident "_a0" (strip.ml[631,27665+24]..[631,27665+27])
                    ]
                  None
                  core_type (strip.ml[631,27665+31]..[631,27665+39])
                    Ptyp_constr "Astfn.ep" (strip.ml[631,27665+31]..[631,27665+39])
                    []
              <case>
                pattern (strip.ml[632,27706+4]..[632,27706+22])
                  Ppat_variant "App"
                  Some
                    pattern (strip.ml[632,27706+9]..[632,27706+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[632,27706+10]..[632,27706+13])
                          Ppat_var "_a0" (strip.ml[632,27706+10]..[632,27706+13])
                        pattern (strip.ml[632,27706+14]..[632,27706+17])
                          Ppat_var "_a1" (strip.ml[632,27706+14]..[632,27706+17])
                        pattern (strip.ml[632,27706+18]..[632,27706+21])
                          Ppat_var "_a2" (strip.ml[632,27706+18]..[632,27706+21])
                      ]
                expression (strip.ml[633,27732+6]..[633,27732+61])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[633,27732+10]..[633,27732+13])
                        Ppat_var "_a1" (strip.ml[633,27732+10]..[633,27732+13])
                      expression (strip.ml[633,27732+16]..[633,27732+22])
                        Pexp_apply
                        expression (strip.ml[633,27732+16]..[633,27732+18])
                          Pexp_ident "ep" (strip.ml[633,27732+16]..[633,27732+18])
                        [
                          <label> ""
                            expression (strip.ml[633,27732+19]..[633,27732+22])
                              Pexp_ident "_a1" (strip.ml[633,27732+19]..[633,27732+22])
                        ]
                  ]
                  expression (strip.ml[633,27732+26]..[633,27732+61])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[633,27732+30]..[633,27732+33])
                          Ppat_var "_a2" (strip.ml[633,27732+30]..[633,27732+33])
                        expression (strip.ml[633,27732+36]..[633,27732+42])
                          Pexp_apply
                          expression (strip.ml[633,27732+36]..[633,27732+38])
                            Pexp_ident "ep" (strip.ml[633,27732+36]..[633,27732+38])
                          [
                            <label> ""
                              expression (strip.ml[633,27732+39]..[633,27732+42])
                                Pexp_ident "_a2" (strip.ml[633,27732+39]..[633,27732+42])
                          ]
                    ]
                    expression (strip.ml[633,27732+46]..[633,27732+61])
                      Pexp_variant "App"
                      Some
                        expression (strip.ml[633,27732+51]..[633,27732+61])
                          Pexp_tuple
                          [
                            expression (strip.ml[633,27732+52]..[633,27732+55])
                              Pexp_ident "_a1" (strip.ml[633,27732+52]..[633,27732+55])
                            expression (strip.ml[633,27732+57]..[633,27732+60])
                              Pexp_ident "_a2" (strip.ml[633,27732+57]..[633,27732+60])
                          ]
              <case>
                pattern (strip.ml[634,27794+4]..[634,27794+18])
                  Ppat_variant "Vrn"
                  Some
                    pattern (strip.ml[634,27794+9]..[634,27794+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[634,27794+10]..[634,27794+13])
                          Ppat_var "_a0" (strip.ml[634,27794+10]..[634,27794+13])
                        pattern (strip.ml[634,27794+14]..[634,27794+17])
                          Ppat_var "_a1" (strip.ml[634,27794+14]..[634,27794+17])
                      ]
                expression (strip.ml[634,27794+22]..[634,27794+30])
                  Pexp_variant "Vrn"
                  Some
                    expression (strip.ml[634,27794+27]..[634,27794+30])
                      Pexp_ident "_a1" (strip.ml[634,27794+27]..[634,27794+30])
              <case>
                pattern (strip.ml[635,27825+4]..[635,27825+22])
                  Ppat_variant "Com"
                  Some
                    pattern (strip.ml[635,27825+9]..[635,27825+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[635,27825+10]..[635,27825+13])
                          Ppat_var "_a0" (strip.ml[635,27825+10]..[635,27825+13])
                        pattern (strip.ml[635,27825+14]..[635,27825+17])
                          Ppat_var "_a1" (strip.ml[635,27825+14]..[635,27825+17])
                        pattern (strip.ml[635,27825+18]..[635,27825+21])
                          Ppat_var "_a2" (strip.ml[635,27825+18]..[635,27825+21])
                      ]
                expression (strip.ml[636,27851+6]..[636,27851+61])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[636,27851+10]..[636,27851+13])
                        Ppat_var "_a1" (strip.ml[636,27851+10]..[636,27851+13])
                      expression (strip.ml[636,27851+16]..[636,27851+22])
                        Pexp_apply
                        expression (strip.ml[636,27851+16]..[636,27851+18])
                          Pexp_ident "ep" (strip.ml[636,27851+16]..[636,27851+18])
                        [
                          <label> ""
                            expression (strip.ml[636,27851+19]..[636,27851+22])
                              Pexp_ident "_a1" (strip.ml[636,27851+19]..[636,27851+22])
                        ]
                  ]
                  expression (strip.ml[636,27851+26]..[636,27851+61])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[636,27851+30]..[636,27851+33])
                          Ppat_var "_a2" (strip.ml[636,27851+30]..[636,27851+33])
                        expression (strip.ml[636,27851+36]..[636,27851+42])
                          Pexp_apply
                          expression (strip.ml[636,27851+36]..[636,27851+38])
                            Pexp_ident "ep" (strip.ml[636,27851+36]..[636,27851+38])
                          [
                            <label> ""
                              expression (strip.ml[636,27851+39]..[636,27851+42])
                                Pexp_ident "_a2" (strip.ml[636,27851+39]..[636,27851+42])
                          ]
                    ]
                    expression (strip.ml[636,27851+46]..[636,27851+61])
                      Pexp_variant "Com"
                      Some
                        expression (strip.ml[636,27851+51]..[636,27851+61])
                          Pexp_tuple
                          [
                            expression (strip.ml[636,27851+52]..[636,27851+55])
                              Pexp_ident "_a1" (strip.ml[636,27851+52]..[636,27851+55])
                            expression (strip.ml[636,27851+57]..[636,27851+60])
                              Pexp_ident "_a2" (strip.ml[636,27851+57]..[636,27851+60])
                          ]
              <case>
                pattern (strip.ml[637,27913+4]..[637,27913+22])
                  Ppat_variant "Sem"
                  Some
                    pattern (strip.ml[637,27913+9]..[637,27913+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[637,27913+10]..[637,27913+13])
                          Ppat_var "_a0" (strip.ml[637,27913+10]..[637,27913+13])
                        pattern (strip.ml[637,27913+14]..[637,27913+17])
                          Ppat_var "_a1" (strip.ml[637,27913+14]..[637,27913+17])
                        pattern (strip.ml[637,27913+18]..[637,27913+21])
                          Ppat_var "_a2" (strip.ml[637,27913+18]..[637,27913+21])
                      ]
                expression (strip.ml[638,27939+6]..[638,27939+61])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[638,27939+10]..[638,27939+13])
                        Ppat_var "_a1" (strip.ml[638,27939+10]..[638,27939+13])
                      expression (strip.ml[638,27939+16]..[638,27939+22])
                        Pexp_apply
                        expression (strip.ml[638,27939+16]..[638,27939+18])
                          Pexp_ident "ep" (strip.ml[638,27939+16]..[638,27939+18])
                        [
                          <label> ""
                            expression (strip.ml[638,27939+19]..[638,27939+22])
                              Pexp_ident "_a1" (strip.ml[638,27939+19]..[638,27939+22])
                        ]
                  ]
                  expression (strip.ml[638,27939+26]..[638,27939+61])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[638,27939+30]..[638,27939+33])
                          Ppat_var "_a2" (strip.ml[638,27939+30]..[638,27939+33])
                        expression (strip.ml[638,27939+36]..[638,27939+42])
                          Pexp_apply
                          expression (strip.ml[638,27939+36]..[638,27939+38])
                            Pexp_ident "ep" (strip.ml[638,27939+36]..[638,27939+38])
                          [
                            <label> ""
                              expression (strip.ml[638,27939+39]..[638,27939+42])
                                Pexp_ident "_a2" (strip.ml[638,27939+39]..[638,27939+42])
                          ]
                    ]
                    expression (strip.ml[638,27939+46]..[638,27939+61])
                      Pexp_variant "Sem"
                      Some
                        expression (strip.ml[638,27939+51]..[638,27939+61])
                          Pexp_tuple
                          [
                            expression (strip.ml[638,27939+52]..[638,27939+55])
                              Pexp_ident "_a1" (strip.ml[638,27939+52]..[638,27939+55])
                            expression (strip.ml[638,27939+57]..[638,27939+60])
                              Pexp_ident "_a2" (strip.ml[638,27939+57]..[638,27939+60])
                          ]
              <case>
                pattern (strip.ml[639,28001+4]..[639,28001+18])
                  Ppat_variant "Par"
                  Some
                    pattern (strip.ml[639,28001+9]..[639,28001+18])
                      Ppat_tuple
                      [
                        pattern (strip.ml[639,28001+10]..[639,28001+13])
                          Ppat_var "_a0" (strip.ml[639,28001+10]..[639,28001+13])
                        pattern (strip.ml[639,28001+14]..[639,28001+17])
                          Ppat_var "_a1" (strip.ml[639,28001+14]..[639,28001+17])
                      ]
                expression (strip.ml[639,28001+22]..[639,28001+50])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[639,28001+26]..[639,28001+29])
                        Ppat_var "_a1" (strip.ml[639,28001+26]..[639,28001+29])
                      expression (strip.ml[639,28001+32]..[639,28001+38])
                        Pexp_apply
                        expression (strip.ml[639,28001+32]..[639,28001+34])
                          Pexp_ident "ep" (strip.ml[639,28001+32]..[639,28001+34])
                        [
                          <label> ""
                            expression (strip.ml[639,28001+35]..[639,28001+38])
                              Pexp_ident "_a1" (strip.ml[639,28001+35]..[639,28001+38])
                        ]
                  ]
                  expression (strip.ml[639,28001+42]..[639,28001+50])
                    Pexp_variant "Par"
                    Some
                      expression (strip.ml[639,28001+47]..[639,28001+50])
                        Pexp_ident "_a1" (strip.ml[639,28001+47]..[639,28001+50])
              <case>
                pattern (strip.ml[640,28052+4]..[640,28052+29])
                  Ppat_variant "Constraint"
                  Some
                    pattern (strip.ml[640,28052+16]..[640,28052+29])
                      Ppat_tuple
                      [
                        pattern (strip.ml[640,28052+17]..[640,28052+20])
                          Ppat_var "_a0" (strip.ml[640,28052+17]..[640,28052+20])
                        pattern (strip.ml[640,28052+21]..[640,28052+24])
                          Ppat_var "_a1" (strip.ml[640,28052+21]..[640,28052+24])
                        pattern (strip.ml[640,28052+25]..[640,28052+28])
                          Ppat_var "_a2" (strip.ml[640,28052+25]..[640,28052+28])
                      ]
                expression (strip.ml[641,28085+6]..[641,28085+70])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[641,28085+10]..[641,28085+13])
                        Ppat_var "_a1" (strip.ml[641,28085+10]..[641,28085+13])
                      expression (strip.ml[641,28085+16]..[641,28085+22])
                        Pexp_apply
                        expression (strip.ml[641,28085+16]..[641,28085+18])
                          Pexp_ident "ep" (strip.ml[641,28085+16]..[641,28085+18])
                        [
                          <label> ""
                            expression (strip.ml[641,28085+19]..[641,28085+22])
                              Pexp_ident "_a1" (strip.ml[641,28085+19]..[641,28085+22])
                        ]
                  ]
                  expression (strip.ml[641,28085+26]..[641,28085+70])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[641,28085+30]..[641,28085+33])
                          Ppat_var "_a2" (strip.ml[641,28085+30]..[641,28085+33])
                        expression (strip.ml[641,28085+36]..[641,28085+44])
                          Pexp_apply
                          expression (strip.ml[641,28085+36]..[641,28085+40])
                            Pexp_ident "ctyp" (strip.ml[641,28085+36]..[641,28085+40])
                          [
                            <label> ""
                              expression (strip.ml[641,28085+41]..[641,28085+44])
                                Pexp_ident "_a2" (strip.ml[641,28085+41]..[641,28085+44])
                          ]
                    ]
                    expression (strip.ml[641,28085+48]..[641,28085+70])
                      Pexp_variant "Constraint"
                      Some
                        expression (strip.ml[641,28085+60]..[641,28085+70])
                          Pexp_tuple
                          [
                            expression (strip.ml[641,28085+61]..[641,28085+64])
                              Pexp_ident "_a1" (strip.ml[641,28085+61]..[641,28085+64])
                            expression (strip.ml[641,28085+66]..[641,28085+69])
                              Pexp_ident "_a2" (strip.ml[641,28085+66]..[641,28085+69])
                          ]
              <case>
                pattern (strip.ml[642,28156+4]..[642,28156+15])
                  Ppat_alias "_a0" (strip.ml[642,28156+12]..[642,28156+15])
                  pattern (strip.ml[642,28156+4]..[642,28156+8])
                    Ppat_type
                    "any" (strip.ml[642,28156+5]..[642,28156+8])
                expression (strip.ml[642,28156+19]..[642,28156+40]) ghost
                  Pexp_coerce
                  expression (strip.ml[642,28156+20]..[642,28156+27])
                    Pexp_apply
                    expression (strip.ml[642,28156+20]..[642,28156+23])
                      Pexp_ident "any" (strip.ml[642,28156+20]..[642,28156+23])
                    [
                      <label> ""
                        expression (strip.ml[642,28156+24]..[642,28156+27])
                          Pexp_ident "_a0" (strip.ml[642,28156+24]..[642,28156+27])
                    ]
                  None
                  core_type (strip.ml[642,28156+31]..[642,28156+39])
                    Ptyp_constr "Astfn.ep" (strip.ml[642,28156+31]..[642,28156+39])
                    []
              <case>
                pattern (strip.ml[643,28197+4]..[643,28197+19])
                  Ppat_variant "ArrayEmpty"
                  Some
                    pattern (strip.ml[643,28197+16]..[643,28197+19])
                      Ppat_var "_a0" (strip.ml[643,28197+16]..[643,28197+19])
                expression (strip.ml[643,28197+23]..[643,28197+34])
                  Pexp_variant "ArrayEmpty"
                  None
              <case>
                pattern (strip.ml[644,28232+4]..[644,28232+20])
                  Ppat_variant "Array"
                  Some
                    pattern (strip.ml[644,28232+11]..[644,28232+20])
                      Ppat_tuple
                      [
                        pattern (strip.ml[644,28232+12]..[644,28232+15])
                          Ppat_var "_a0" (strip.ml[644,28232+12]..[644,28232+15])
                        pattern (strip.ml[644,28232+16]..[644,28232+19])
                          Ppat_var "_a1" (strip.ml[644,28232+16]..[644,28232+19])
                      ]
                expression (strip.ml[644,28232+24]..[644,28232+54])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[644,28232+28]..[644,28232+31])
                        Ppat_var "_a1" (strip.ml[644,28232+28]..[644,28232+31])
                      expression (strip.ml[644,28232+34]..[644,28232+40])
                        Pexp_apply
                        expression (strip.ml[644,28232+34]..[644,28232+36])
                          Pexp_ident "ep" (strip.ml[644,28232+34]..[644,28232+36])
                        [
                          <label> ""
                            expression (strip.ml[644,28232+37]..[644,28232+40])
                              Pexp_ident "_a1" (strip.ml[644,28232+37]..[644,28232+40])
                        ]
                  ]
                  expression (strip.ml[644,28232+44]..[644,28232+54])
                    Pexp_variant "Array"
                    Some
                      expression (strip.ml[644,28232+51]..[644,28232+54])
                        Pexp_ident "_a1" (strip.ml[644,28232+51]..[644,28232+54])
              <case>
                pattern (strip.ml[645,28287+4]..[645,28287+21])
                  Ppat_variant "Record"
                  Some
                    pattern (strip.ml[645,28287+12]..[645,28287+21])
                      Ppat_tuple
                      [
                        pattern (strip.ml[645,28287+13]..[645,28287+16])
                          Ppat_var "_a0" (strip.ml[645,28287+13]..[645,28287+16])
                        pattern (strip.ml[645,28287+17]..[645,28287+20])
                          Ppat_var "_a1" (strip.ml[645,28287+17]..[645,28287+20])
                      ]
                expression (strip.ml[645,28287+25]..[645,28287+62])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[645,28287+29]..[645,28287+32])
                        Ppat_var "_a1" (strip.ml[645,28287+29]..[645,28287+32])
                      expression (strip.ml[645,28287+35]..[645,28287+47])
                        Pexp_apply
                        expression (strip.ml[645,28287+35]..[645,28287+43])
                          Pexp_ident "rec_bind" (strip.ml[645,28287+35]..[645,28287+43])
                        [
                          <label> ""
                            expression (strip.ml[645,28287+44]..[645,28287+47])
                              Pexp_ident "_a1" (strip.ml[645,28287+44]..[645,28287+47])
                        ]
                  ]
                  expression (strip.ml[645,28287+51]..[645,28287+62])
                    Pexp_variant "Record"
                    Some
                      expression (strip.ml[645,28287+59]..[645,28287+62])
                        Pexp_ident "_a1" (strip.ml[645,28287+59]..[645,28287+62])
              <case>
                pattern (strip.ml[646,28350+4]..[646,28350+19])
                  Ppat_alias "_a0" (strip.ml[646,28350+16]..[646,28350+19])
                  pattern (strip.ml[646,28350+4]..[646,28350+12])
                    Ppat_type
                    "literal" (strip.ml[646,28350+5]..[646,28350+12])
                expression (strip.ml[646,28350+23]..[646,28350+48]) ghost
                  Pexp_coerce
                  expression (strip.ml[646,28350+24]..[646,28350+35])
                    Pexp_apply
                    expression (strip.ml[646,28350+24]..[646,28350+31])
                      Pexp_ident "literal" (strip.ml[646,28350+24]..[646,28350+31])
                    [
                      <label> ""
                        expression (strip.ml[646,28350+32]..[646,28350+35])
                          Pexp_ident "_a0" (strip.ml[646,28350+32]..[646,28350+35])
                    ]
                  None
                  core_type (strip.ml[646,28350+39]..[646,28350+47])
                    Ptyp_constr "Astfn.ep" (strip.ml[646,28350+39]..[646,28350+47])
                    []
            ]
          core_type (strip.ml[629,27620+12]..[629,27620+31])
            Ptyp_arrow
            ""
            core_type (strip.ml[629,27620+12]..[629,27620+19])
              Ptyp_constr "Astf.ep" (strip.ml[629,27620+12]..[629,27620+19])
              []
            core_type (strip.ml[629,27620+23]..[629,27620+31])
              Ptyp_constr "Astfn.ep" (strip.ml[629,27620+23]..[629,27620+31])
              []
      <def>
        pattern (strip.ml[647,28399+4]..[647,28399+12])
          Ppat_var "rec_bind" (strip.ml[647,28399+4]..[647,28399+12])
        expression (strip.ml[647,28399+12]..[654,28702+46]) ghost
          Pexp_constraint
          expression (strip.ml[648,28447+2]..[654,28702+46])
            Pexp_function
            [
              <case>
                pattern (strip.ml[649,28458+4]..[649,28458+26])
                  Ppat_variant "RecBind"
                  Some
                    pattern (strip.ml[649,28458+13]..[649,28458+26])
                      Ppat_tuple
                      [
                        pattern (strip.ml[649,28458+14]..[649,28458+17])
                          Ppat_var "_a0" (strip.ml[649,28458+14]..[649,28458+17])
                        pattern (strip.ml[649,28458+18]..[649,28458+21])
                          Ppat_var "_a1" (strip.ml[649,28458+18]..[649,28458+21])
                        pattern (strip.ml[649,28458+22]..[649,28458+25])
                          Ppat_var "_a2" (strip.ml[649,28458+22]..[649,28458+25])
                      ]
                expression (strip.ml[650,28488+6]..[650,28488+66])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[650,28488+10]..[650,28488+13])
                        Ppat_var "_a1" (strip.ml[650,28488+10]..[650,28488+13])
                      expression (strip.ml[650,28488+16]..[650,28488+23])
                        Pexp_apply
                        expression (strip.ml[650,28488+16]..[650,28488+19])
                          Pexp_ident "vid" (strip.ml[650,28488+16]..[650,28488+19])
                        [
                          <label> ""
                            expression (strip.ml[650,28488+20]..[650,28488+23])
                              Pexp_ident "_a1" (strip.ml[650,28488+20]..[650,28488+23])
                        ]
                  ]
                  expression (strip.ml[650,28488+27]..[650,28488+66])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[650,28488+31]..[650,28488+34])
                          Ppat_var "_a2" (strip.ml[650,28488+31]..[650,28488+34])
                        expression (strip.ml[650,28488+37]..[650,28488+43])
                          Pexp_apply
                          expression (strip.ml[650,28488+37]..[650,28488+39])
                            Pexp_ident "ep" (strip.ml[650,28488+37]..[650,28488+39])
                          [
                            <label> ""
                              expression (strip.ml[650,28488+40]..[650,28488+43])
                                Pexp_ident "_a2" (strip.ml[650,28488+40]..[650,28488+43])
                          ]
                    ]
                    expression (strip.ml[650,28488+47]..[650,28488+66])
                      Pexp_variant "RecBind"
                      Some
                        expression (strip.ml[650,28488+56]..[650,28488+66])
                          Pexp_tuple
                          [
                            expression (strip.ml[650,28488+57]..[650,28488+60])
                              Pexp_ident "_a1" (strip.ml[650,28488+57]..[650,28488+60])
                            expression (strip.ml[650,28488+62]..[650,28488+65])
                              Pexp_ident "_a2" (strip.ml[650,28488+62]..[650,28488+65])
                          ]
              <case>
                pattern (strip.ml[651,28555+4]..[651,28555+22])
                  Ppat_variant "Sem"
                  Some
                    pattern (strip.ml[651,28555+9]..[651,28555+22])
                      Ppat_tuple
                      [
                        pattern (strip.ml[651,28555+10]..[651,28555+13])
                          Ppat_var "_a0" (strip.ml[651,28555+10]..[651,28555+13])
                        pattern (strip.ml[651,28555+14]..[651,28555+17])
                          Ppat_var "_a1" (strip.ml[651,28555+14]..[651,28555+17])
                        pattern (strip.ml[651,28555+18]..[651,28555+21])
                          Ppat_var "_a2" (strip.ml[651,28555+18]..[651,28555+21])
                      ]
                expression (strip.ml[652,28581+6]..[652,28581+73])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (strip.ml[652,28581+10]..[652,28581+13])
                        Ppat_var "_a1" (strip.ml[652,28581+10]..[652,28581+13])
                      expression (strip.ml[652,28581+16]..[652,28581+28])
                        Pexp_apply
                        expression (strip.ml[652,28581+16]..[652,28581+24])
                          Pexp_ident "rec_bind" (strip.ml[652,28581+16]..[652,28581+24])
                        [
                          <label> ""
                            expression (strip.ml[652,28581+25]..[652,28581+28])
                              Pexp_ident "_a1" (strip.ml[652,28581+25]..[652,28581+28])
                        ]
                  ]
                  expression (strip.ml[652,28581+32]..[652,28581+73])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (strip.ml[652,28581+36]..[652,28581+39])
                          Ppat_var "_a2" (strip.ml[652,28581+36]..[652,28581+39])
                        expression (strip.ml[652,28581+42]..[652,28581+54])
                          Pexp_apply
                          expression (strip.ml[652,28581+42]..[652,28581+50])
                            Pexp_ident "rec_bind" (strip.ml[652,28581+42]..[652,28581+50])
                          [
                            <label> ""
                              expression (strip.ml[652,28581+51]..[652,28581+54])
                                Pexp_ident "_a2" (strip.ml[652,28581+51]..[652,28581+54])
                          ]
                    ]
                    expression (strip.ml[652,28581+58]..[652,28581+73])
                      Pexp_variant "Sem"
                      Some
                        expression (strip.ml[652,28581+63]..[652,28581+73])
                          Pexp_tuple
                          [
                            expression (strip.ml[652,28581+64]..[652,28581+67])
                              Pexp_ident "_a1" (strip.ml[652,28581+64]..[652,28581+67])
                            expression (strip.ml[652,28581+69]..[652,28581+72])
                              Pexp_ident "_a2" (strip.ml[652,28581+69]..[652,28581+72])
                          ]
              <case>
                pattern (strip.ml[653,28655+4]..[653,28655+15])
                  Ppat_alias "_a0" (strip.ml[653,28655+12]..[653,28655+15])
                  pattern (strip.ml[653,28655+4]..[653,28655+8])
                    Ppat_type
                    "any" (strip.ml[653,28655+5]..[653,28655+8])
                expression (strip.ml[653,28655+19]..[653,28655+46]) ghost
                  Pexp_coerce
                  expression (strip.ml[653,28655+20]..[653,28655+27])
                    Pexp_apply
                    expression (strip.ml[653,28655+20]..[653,28655+23])
                      Pexp_ident "any" (strip.ml[653,28655+20]..[653,28655+23])
                    [
                      <label> ""
                        expression (strip.ml[653,28655+24]..[653,28655+27])
                          Pexp_ident "_a0" (strip.ml[653,28655+24]..[653,28655+27])
                    ]
                  None
                  core_type (strip.ml[653,28655+31]..[653,28655+45])
                    Ptyp_constr "Astfn.rec_bind" (strip.ml[653,28655+31]..[653,28655+45])
                    []
              <case>
                pattern (strip.ml[654,28702+4]..[654,28702+15])
                  Ppat_alias "_a0" (strip.ml[654,28702+12]..[654,28702+15])
                  pattern (strip.ml[654,28702+4]..[654,28702+8])
                    Ppat_type
                    "ant" (strip.ml[654,28702+5]..[654,28702+8])
                expression (strip.ml[654,28702+19]..[654,28702+46]) ghost
                  Pexp_coerce
                  expression (strip.ml[654,28702+20]..[654,28702+27])
                    Pexp_apply
                    expression (strip.ml[654,28702+20]..[654,28702+23])
                      Pexp_ident "ant" (strip.ml[654,28702+20]..[654,28702+23])
                    [
                      <label> ""
                        expression (strip.ml[654,28702+24]..[654,28702+27])
                          Pexp_ident "_a0" (strip.ml[654,28702+24]..[654,28702+27])
                    ]
                  None
                  core_type (strip.ml[654,28702+31]..[654,28702+45])
                    Ptyp_constr "Astfn.rec_bind" (strip.ml[654,28702+31]..[654,28702+45])
                    []
            ]
          core_type (strip.ml[647,28399+14]..[647,28399+45])
            Ptyp_arrow
            ""
            core_type (strip.ml[647,28399+14]..[647,28399+27])
              Ptyp_constr "Astf.rec_bind" (strip.ml[647,28399+14]..[647,28399+27])
              []
            core_type (strip.ml[647,28399+31]..[647,28399+45])
              Ptyp_constr "Astfn.rec_bind" (strip.ml[647,28399+31]..[647,28399+45])
              []
    ]
]
