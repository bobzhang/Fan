[
  structure_item (objsN.ml[]..[])
    Pstr_open Fresh "StdFan" (objsN.ml[]..[])
  structure_item (objsN.ml[]..[])
    Pstr_open Fresh "Astfn" (objsN.ml[]..[])
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_loc" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Locf.pp_print_t" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "loc" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_ant" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Ant"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Ant@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_loc" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "Tokenf.pp_print_ant" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "ant" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_literal" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Chr"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Chr@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Int"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Int@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Int32"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Int32@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Int64"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Int64@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Flo"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Flo@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Nativeint"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Nativeint@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Str"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Str@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Bool"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Bool@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_bool" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Unit"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`Unit",None)
                        ]
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "literal" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_flag" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Positive"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`Positive",None)
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Negative"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`Negative",None)
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "flag" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_position_flag" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Positive"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`Positive",None)
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Negative"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`Negative",None)
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Normal"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`Normal",None)
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "position_flag" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Rec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_strings" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "App"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`App@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_strings" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_strings" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Str"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Str@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "strings" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_lident" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Lid"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Lid@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "lident" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_alident" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Lid"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Lid@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "alident" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_auident" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Uid"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Uid@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "auident" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_aident" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "alident" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "auident" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "aident" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_astring" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "C"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`C@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "astring" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Rec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_uident" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Dot"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Dot@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_uident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_uident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "App"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`App@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_uident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_uident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "auident" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "uident" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Rec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_ident" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Dot"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Dot@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Apply"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Apply@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "alident" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "auident" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "ident" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_ident'" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Dot"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Dot@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Apply"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Apply@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Lid"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Lid@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Uid"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Uid@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "ident'" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Rec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_vid" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Dot"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Dot@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_vid" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_vid" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Lid"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Lid@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Uid"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Uid@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "vid" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_vid'" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Dot"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Dot@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_vid" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_vid" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Lid"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Lid@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Uid"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Uid@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "vid'" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Rec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_dupath" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Dot"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Dot@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_dupath" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_dupath" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "auident" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "dupath" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_dlpath" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Dot"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Dot@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_dupath" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "alident" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "dlpath" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_any" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Any"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`Any",None)
                        ]
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "any" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Rec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_ctyp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Alias"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Alias@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "any" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_any" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "App"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`App@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Arrow"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Arrow@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ClassPath"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ClassPath@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Label"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Label@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "OptLabl"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`OptLabl@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ident'" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ident'" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TyObj"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TyObj@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_name_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TyObjEnd"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TyObjEnd@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TyPol"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TyPol@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TyPolEnd"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TyPolEnd@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TyTypePol"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TyTypePol@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Quote"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Quote@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_position_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "QuoteAny"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`QuoteAny@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_position_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Par"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Par@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Sta"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Sta@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "PolyEq"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`PolyEq@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_row_field" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "PolySup"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`PolySup@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_row_field" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "PolyInf"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`PolyInf@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_row_field" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Com"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Com@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "PolyInfSup"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`PolyInfSup@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_row_field" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_tag_names" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Package"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Package@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mtyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "ctyp" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_type_parameters" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Com"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Com@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_type_parameters" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_type_parameters" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Ctyp"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Ctyp@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "type_parameters" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_row_field" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Bar"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Bar@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_row_field" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_row_field" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TyVrn"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TyVrn@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_astring" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TyVrnOf"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TyVrnOf@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_astring" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Ctyp"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Ctyp@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "row_field" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_tag_names" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "App"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`App@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_tag_names" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_tag_names" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TyVrn"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TyVrn@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_astring" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "tag_names" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_typedecl" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TyDcl"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a3" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TyDcl@ %a@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_opt_decl_params" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_type_info" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_opt_type_constr" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a3" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TyAbstr"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TyAbstr@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_opt_decl_params" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_opt_type_constr" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "And"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`And@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_typedecl" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_typedecl" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "typedecl" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_type_constr" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "And"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`And@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_type_constr" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_type_constr" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Eq"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Eq@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "type_constr" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_opt_type_constr" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Some"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Some@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_type_constr" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "None"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`None",None)
                        ]
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "opt_type_constr" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_decl_param" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Quote"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Quote@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_position_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "QuoteAny"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`QuoteAny@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_position_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Any"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`Any",None)
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "decl_param" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_decl_params" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Quote"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Quote@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_position_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "QuoteAny"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`QuoteAny@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_position_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Any"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`Any",None)
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Com"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Com@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_decl_params" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_decl_params" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "decl_params" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_opt_decl_params" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Some"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Some@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_decl_params" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "None"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`None",None)
                        ]
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "opt_decl_params" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_type_info" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TyMan"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TyMan@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_type_repr" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TyRepr"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TyRepr@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_type_repr" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TyEq"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TyEq@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "type_info" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_type_repr" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Record"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Record@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_name_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Sum"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Sum@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_or_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "type_repr" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_name_ctyp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Sem"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_name_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_name_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TyCol"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TyCol@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TyColMut"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TyColMut@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "name_ctyp" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_or_ctyp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Bar"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Bar@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_or_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_or_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TyCol"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TyCol@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Of"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Of@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "auident" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "or_ctyp" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_of_ctyp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Of"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Of@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_vid" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "vid'" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_vid'" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "of_ctyp" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_pat" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "vid" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_vid" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "App"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`App@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Vrn"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Vrn@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Com"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Com@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Sem"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Par"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Par@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "any" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_any" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Record"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Record@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_rec_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "literal" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_literal" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Alias"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Alias@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ArrayEmpty"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`ArrayEmpty",None)
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Array"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Array@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "LabelS"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`LabelS@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Label"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Label@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "OptLabl"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`OptLabl@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "OptLablS"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`OptLablS@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "OptLablExpr"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`OptLablExpr@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Bar"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Bar@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "PaRng"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`PaRng@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Constraint"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Constraint@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ClassPath"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ClassPath@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Lazy"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Lazy@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ModuleUnpack"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ModuleUnpack@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ModuleConstraint"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ModuleConstraint@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "pat" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_rec_pat" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "RecBind"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`RecBind@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_vid" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Sem"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_rec_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_rec_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "any" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_any" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "rec_pat" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_exp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "vid" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_vid" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "App"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`App@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Vrn"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Vrn@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Com"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Com@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Sem"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Par"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Par@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "any" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_any" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Record"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Record@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_rec_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "literal" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_literal" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "RecordWith"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`RecordWith@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_rec_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Field"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Field@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_vid" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ArrayDot"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ArrayDot@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ArrayEmpty"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`ArrayEmpty",None)
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Array"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Array@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Assert"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Assert@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Assign"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Assign@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "For"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a3" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a4" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`For@ %a@ %a@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a3" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a4" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Fun"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Fun@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_case" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "IfThenElse"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`IfThenElse@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "IfThen"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`IfThen@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "LabelS"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`LabelS@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Label"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Label@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Lazy"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Lazy@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "LetIn"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`LetIn@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_bind" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "LetTryInWith"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a3" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`LetTryInWith@ %a@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_bind" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_case" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a3" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "LetModule"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`LetModule@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mexp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Match"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Match@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_case" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "New"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`New@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Obj"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Obj@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_clfield" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ObjEnd"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`ObjEnd",None)
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ObjPat"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ObjPat@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_clfield" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ObjPatEnd"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ObjPatEnd@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "OptLabl"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`OptLabl@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "OptLablS"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`OptLablS@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "OvrInst"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`OvrInst@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_rec_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "OvrInstEmpty"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`OvrInstEmpty",None)
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Seq"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Seq@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Send"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Send@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "StringDot"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`StringDot@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Try"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Try@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_case" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Constraint"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Constraint@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Coercion"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Coercion@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Subtype"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Subtype@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "While"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`While@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "LetOpen"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`LetOpen@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "LocalTypeFun"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`LocalTypeFun@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Package_exp"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Package_exp@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mexp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "exp" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_rec_exp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Sem"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_rec_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_rec_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "RecBind"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`RecBind@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_vid" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "any" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_any" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "rec_exp" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_mtyp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ident'" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ident'" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Sig"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Sig@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_sigi" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "SigEnd"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`SigEnd",None)
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Functor"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Functor@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mtyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mtyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "With"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`With@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mtyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_constr" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ModuleTypeOf"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ModuleTypeOf@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mexp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "mtyp" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_sigi" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Val"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Val@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "External"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`External@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_strings" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Type"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Type@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_typedecl" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Exception"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Exception@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_of_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Class"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Class@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_cltdecl" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ClassType"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ClassType@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_cltdecl" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Module"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Module@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mtyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ModuleTypeEnd"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ModuleTypeEnd@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ModuleType"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ModuleType@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mtyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Sem"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_sigi" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_sigi" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "DirectiveSimple"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`DirectiveSimple@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Directive"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Directive@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Open"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Open@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Include"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Include@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mtyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "RecModule"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`RecModule@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mbind" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "sigi" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_mbind" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "And"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`And@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mbind" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mbind" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ModuleBind"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ModuleBind@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mtyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mexp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Constraint"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Constraint@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mtyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "mbind" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_constr" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TypeEq"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TypeEq@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ModuleEq"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ModuleEq@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TypeEqPriv"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TypeEqPriv@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TypeSubst"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TypeSubst@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ModuleSubst"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ModuleSubst@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "And"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`And@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_constr" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_constr" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "constr" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_bind" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "And"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`And@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_bind" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_bind" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Bind"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Bind@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "bind" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_case" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Bar"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Bar@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_case" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_case" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Case"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Case@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "CaseWhen"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`CaseWhen@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "case" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_mexp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "vid'" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_vid'" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "App"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`App@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mexp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mexp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Functor"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Functor@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mtyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mexp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Struct"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Struct@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_stru" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "StructEnd"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`StructEnd",None)
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Constraint"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Constraint@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mexp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mtyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "PackageModule"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`PackageModule@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "mexp" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_stru" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Class"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Class@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_cldecl" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ClassType"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ClassType@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_cltdecl" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Sem"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_stru" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_stru" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "DirectiveSimple"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`DirectiveSimple@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Directive"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Directive@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Exception"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Exception@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_of_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "StExp"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`StExp@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "External"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`External@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_strings" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Include"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Include@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mexp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Module"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Module@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mexp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "RecModule"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`RecModule@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mbind" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ModuleType"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ModuleType@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_auident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_mtyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Open"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Open@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Type"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Type@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_typedecl" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "TypeWith"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`TypeWith@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_typedecl" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_strings" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Value"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Value@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_bind" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "stru" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_cltdecl" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "And"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`And@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_cltdecl" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_cltdecl" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "CtDecl"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a3" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`CtDecl@ %a@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_type_parameters" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_cltyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a3" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "CtDeclS"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`CtDeclS@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_cltyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "cltdecl" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_cltyp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "vid'" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_vid'" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ClApply"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ClApply@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_vid" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_type_parameters" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "CtFun"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`CtFun@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_cltyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ObjTy"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ObjTy@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_clsigi" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ObjTyEnd"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ObjTyEnd@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Obj"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Obj@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_clsigi" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ObjEnd"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`ObjEnd",None)
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "And"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`And@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_cltyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_cltyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "cltyp" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_clsigi" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Sem"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_clsigi" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_clsigi" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "SigInherit"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`SigInherit@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_cltyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "CgVal"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a3" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`CgVal@ %a@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a3" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Method"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Method@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "VirMeth"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`VirMeth@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Eq"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Eq@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "clsigi" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_cldecl" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ClDecl"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a3" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ClDecl@ %a@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_type_parameters" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_clexp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a3" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ClDeclS"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ClDeclS@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_clexp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "And"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`And@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_cldecl" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_cldecl" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "cldecl" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_clexp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "CeApp"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`CeApp@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_clexp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "vid'" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_vid'" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ClApply"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ClApply@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_vid" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_type_parameters" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "CeFun"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`CeFun@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_clexp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "LetIn"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`LetIn@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_bind" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_clexp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Obj"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Obj@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_clfield" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ObjEnd"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`ObjEnd",None)
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ObjPat"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ObjPat@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_clfield" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ObjPatEnd"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`ObjPatEnd@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_pat" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Constraint"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Constraint@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_clexp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_cltyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "clexp" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_clfield" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Sem"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_clfield" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_clfield" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Inherit"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Inherit@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_clexp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "InheritAs"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`InheritAs@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_clexp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "CrVal"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a3" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`CrVal@ %a@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a3" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "VirVal"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`VirVal@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "CrMth"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a3" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a4" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`CrMth@ %a@ %a@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a3" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a4" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "CrMthS"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a3" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`CrMthS@ %a@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a3" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "VirMeth"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a2" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`VirMeth@ %a@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_alident" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_flag" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a2" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Eq"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Eq@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Initializer"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Initializer@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_exp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "clfield" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Rec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_ep" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "vid" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_vid" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "App"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`App@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ep" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ep" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Vrn"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Vrn@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_string" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Com"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Com@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ep" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ep" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Sem"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ep" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ep" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Par"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Par@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ep" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Constraint"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Constraint@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ep" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ctyp" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "any" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_any" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "ArrayEmpty"
                        None
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("`ArrayEmpty",None)
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Array"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Array@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ep" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Record"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_var "_a0" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Record@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_rec_bind" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "literal" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_literal" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "ep" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "pp_print_rec_bind" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_constraint
          expression (objsN.ml[]..[])
            Pexp_function
            [
              <case>
                pattern (objsN.ml[]..[])
                  Ppat_var "fmt" (objsN.ml[]..[])
                expression (objsN.ml[]..[])
                  Pexp_function
                  [
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "RecBind"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`RecBind@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_vid" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_ep" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_variant "Sem"
                        Some
                          pattern (objsN.ml[]..[])
                            Ppat_tuple
                            [
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_var "_a1" (objsN.ml[]..[])
                            ]
                      expression (objsN.ml[]..[])
                        Pexp_apply
                        expression (objsN.ml[]..[])
                          Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                        [
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "fmt" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_rec_bind" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a0" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "pp_print_rec_bind" (objsN.ml[]..[])
                          <label> ""
                            expression (objsN.ml[]..[])
                              Pexp_ident "_a1" (objsN.ml[]..[])
                        ]
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "any" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_any" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                    <case>
                      pattern (objsN.ml[]..[])
                        Ppat_alias "_a0" (objsN.ml[]..[])
                        pattern (objsN.ml[]..[])
                          Ppat_type
                          "ant" (objsN.ml[]..[])
                      expression (objsN.ml[]..[])
                        Pexp_coerce
                        expression (objsN.ml[]..[])
                          Pexp_apply
                          expression (objsN.ml[]..[])
                            Pexp_ident "pp_print_ant" (objsN.ml[]..[])
                          [
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "fmt" (objsN.ml[]..[])
                            <label> ""
                              expression (objsN.ml[]..[])
                                Pexp_ident "_a0" (objsN.ml[]..[])
                          ]
                        None
                        core_type (objsN.ml[]..[])
                          Ptyp_constr "unit" (objsN.ml[]..[])
                          []
                  ]
            ]
          core_type (objsN.ml[]..[])
            Ptyp_arrow
            ""
            core_type (objsN.ml[]..[])
              Ptyp_constr "Format.formatter" (objsN.ml[]..[])
              []
            core_type (objsN.ml[]..[])
              Ptyp_arrow
              ""
              core_type (objsN.ml[]..[])
                Ptyp_constr "rec_bind" (objsN.ml[]..[])
                []
              core_type (objsN.ml[]..[])
                Ptyp_constr "unit" (objsN.ml[]..[])
                []
    ]
  structure_item (objsN.ml[]..[])
    Pstr_class
    [
      class_declaration (objsN.ml[]..[])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "print" (objsN.ml[]..[])
        pci_expr =
          class_expr (objsN.ml[]..[])
            Pcl_structure
            class_structure
              pattern (objsN.ml[]..[])
                Ppat_constraint
                pattern (objsN.ml[]..[])
                  Ppat_var "self" (objsN.ml[]..[])
                core_type (objsN.ml[]..[])
                  Ptyp_var self_type
              [
                class_field (objsN.ml[]..[])
                  Pcf_inherit Fresh
                    class_expr (objsN.ml[]..[])
                      Pcl_constr "printbase" (objsN.ml[]..[])
                      []
                    None
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "loc" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "locf_t"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "loc" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "ant" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Ant"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Ant@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "loc"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "tokenf_ant"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "ant" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "literal" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Chr"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Chr@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Int"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Int@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Int32"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Int32@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Int64"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Int64@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Flo"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Flo@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Nativeint"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Nativeint@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Str"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Str@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Bool"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Bool@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "bool"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Unit"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`Unit",None)
                                    ]
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "literal" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "flag" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Positive"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`Positive",None)
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Negative"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`Negative",None)
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "flag" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "position_flag" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Positive"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`Positive",None)
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Negative"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`Negative",None)
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Normal"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`Normal",None)
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "position_flag" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "strings" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "App"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`App@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "strings"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "strings"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Str"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Str@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "strings" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "lident" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Lid"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Lid@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "lident" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "alident" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Lid"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Lid@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "alident" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "auident" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Uid"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Uid@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "auident" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "aident" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "alident" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "alident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "auident" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "auident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "aident" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "astring" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "C"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`C@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "astring" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "uident" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Dot"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Dot@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "uident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "uident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "App"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`App@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "uident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "uident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "auident" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "auident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "uident" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "ident" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Dot"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Dot@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Apply"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Apply@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "alident" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "alident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "auident" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "auident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "ident" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "ident'" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Dot"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Dot@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Apply"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Apply@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Lid"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Lid@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Uid"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Uid@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "ident'" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "vid" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Dot"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Dot@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "vid"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "vid"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Lid"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Lid@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Uid"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Uid@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "vid" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "vid'" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Dot"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Dot@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "vid"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "vid"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Lid"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Lid@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Uid"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Uid@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "vid'" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "dupath" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Dot"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Dot@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "dupath"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "dupath"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "auident" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "auident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "dupath" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "dlpath" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Dot"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Dot@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "dupath"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "alident" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "alident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "dlpath" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "any" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Any"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`Any",None)
                                    ]
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "any" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "ctyp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Alias"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Alias@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "any" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "any"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "App"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`App@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Arrow"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Arrow@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ClassPath"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ClassPath@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Label"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Label@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "OptLabl"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`OptLabl@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ident'" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident'"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TyObj"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TyObj@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "name_ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TyObjEnd"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TyObjEnd@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TyPol"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TyPol@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TyPolEnd"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TyPolEnd@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TyTypePol"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TyTypePol@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Quote"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Quote@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "position_flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "QuoteAny"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`QuoteAny@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "position_flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Par"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Par@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Sta"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Sta@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "PolyEq"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`PolyEq@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "row_field"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "PolySup"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`PolySup@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "row_field"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "PolyInf"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`PolyInf@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "row_field"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Com"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Com@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "PolyInfSup"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`PolyInfSup@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "row_field"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "tag_names"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Package"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Package@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mtyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "ctyp" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "type_parameters" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Com"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Com@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_parameters"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_parameters"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Ctyp"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Ctyp@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "type_parameters" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "row_field" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Bar"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Bar@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "row_field"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "row_field"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TyVrn"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TyVrn@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "astring"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TyVrnOf"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TyVrnOf@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "astring"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Ctyp"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Ctyp@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "row_field" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "tag_names" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "App"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`App@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "tag_names"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "tag_names"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TyVrn"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TyVrn@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "astring"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "tag_names" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "typedecl" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TyDcl"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a3" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TyDcl@ %a@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "opt_decl_params"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_info"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "opt_type_constr"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a3" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TyAbstr"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TyAbstr@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "opt_decl_params"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "opt_type_constr"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "And"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`And@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "typedecl"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "typedecl"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "typedecl" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "type_constr" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "And"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`And@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_constr"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_constr"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Eq"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Eq@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "type_constr" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "opt_type_constr" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Some"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Some@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_constr"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "None"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`None",None)
                                    ]
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "opt_type_constr" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "decl_param" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Quote"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Quote@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "position_flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "QuoteAny"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`QuoteAny@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "position_flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Any"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`Any",None)
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "decl_param" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "decl_params" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Quote"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Quote@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "position_flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "QuoteAny"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`QuoteAny@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "position_flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Any"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`Any",None)
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Com"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Com@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "decl_params"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "decl_params"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "decl_params" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "opt_decl_params" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Some"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Some@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "decl_params"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "None"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`None",None)
                                    ]
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "opt_decl_params" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "type_info" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TyMan"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TyMan@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_repr"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TyRepr"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TyRepr@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_repr"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TyEq"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TyEq@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "type_info" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "type_repr" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Record"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Record@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "name_ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Sum"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Sum@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "or_ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "type_repr" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "name_ctyp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Sem"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "name_ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "name_ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TyCol"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TyCol@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TyColMut"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TyColMut@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "name_ctyp" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "or_ctyp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Bar"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Bar@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "or_ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "or_ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TyCol"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TyCol@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "auident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Of"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Of@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "auident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "auident" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "auident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "or_ctyp" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "of_ctyp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Of"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Of@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "vid"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "vid'" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "vid'"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "of_ctyp" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "pat" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "vid" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "vid"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "App"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`App@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Vrn"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Vrn@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Com"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Com@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Sem"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Par"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Par@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "any" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "any"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Record"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Record@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "rec_pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "literal" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "literal"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Alias"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Alias@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ArrayEmpty"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`ArrayEmpty",None)
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Array"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Array@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "LabelS"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`LabelS@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Label"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Label@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "OptLabl"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`OptLabl@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "OptLablS"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`OptLablS@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "OptLablExpr"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`OptLablExpr@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Bar"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Bar@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "PaRng"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`PaRng@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Constraint"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Constraint@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ClassPath"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ClassPath@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Lazy"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Lazy@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ModuleUnpack"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ModuleUnpack@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "auident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ModuleConstraint"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ModuleConstraint@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "auident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "pat" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "rec_pat" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "RecBind"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`RecBind@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "vid"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Sem"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "rec_pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "rec_pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "any" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "any"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "rec_pat" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "exp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "vid" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "vid"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "App"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`App@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Vrn"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Vrn@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Com"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Com@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Sem"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Par"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Par@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "any" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "any"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Record"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Record@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "rec_exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "literal" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "literal"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "RecordWith"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`RecordWith@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "rec_exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Field"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Field@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "vid"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ArrayDot"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ArrayDot@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ArrayEmpty"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`ArrayEmpty",None)
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Array"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Array@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Assert"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Assert@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Assign"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Assign@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "For"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a3" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a4" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`For@ %a@ %a@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a3" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a4" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Fun"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Fun@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "case"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "IfThenElse"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`IfThenElse@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "IfThen"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`IfThen@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "LabelS"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`LabelS@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Label"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Label@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Lazy"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Lazy@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "LetIn"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`LetIn@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "bind"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "LetTryInWith"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a3" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`LetTryInWith@ %a@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "bind"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "case"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a3" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "LetModule"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`LetModule@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "auident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Match"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Match@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "case"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "New"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`New@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Obj"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Obj@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clfield"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ObjEnd"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`ObjEnd",None)
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ObjPat"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ObjPat@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clfield"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ObjPatEnd"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ObjPatEnd@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "OptLabl"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`OptLabl@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "OptLablS"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`OptLablS@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "OvrInst"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`OvrInst@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "rec_exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "OvrInstEmpty"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`OvrInstEmpty",None)
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Seq"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Seq@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Send"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Send@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "StringDot"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`StringDot@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Try"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Try@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "case"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Constraint"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Constraint@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Coercion"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Coercion@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Subtype"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Subtype@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "While"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`While@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "LetOpen"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`LetOpen@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "LocalTypeFun"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`LocalTypeFun@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Package_exp"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Package_exp@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "exp" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "rec_exp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Sem"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "rec_exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "rec_exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "RecBind"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`RecBind@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "vid"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "any" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "any"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "rec_exp" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "mtyp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ident'" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident'"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Sig"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Sig@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "sigi"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "SigEnd"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`SigEnd",None)
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Functor"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Functor@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "auident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mtyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mtyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "With"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`With@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mtyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "constr"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ModuleTypeOf"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ModuleTypeOf@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "mtyp" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "sigi" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Val"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Val@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "External"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`External@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "strings"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Type"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Type@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "typedecl"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Exception"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Exception@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "of_ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Class"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Class@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cltdecl"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ClassType"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ClassType@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cltdecl"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Module"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Module@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "auident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mtyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ModuleTypeEnd"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ModuleTypeEnd@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "auident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ModuleType"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ModuleType@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "auident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mtyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Sem"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "sigi"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "sigi"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "DirectiveSimple"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`DirectiveSimple@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Directive"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Directive@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Open"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Open@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Include"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Include@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mtyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "RecModule"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`RecModule@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mbind"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "sigi" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "mbind" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "And"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`And@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mbind"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mbind"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ModuleBind"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ModuleBind@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "auident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mtyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Constraint"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Constraint@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "auident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mtyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "mbind" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "constr" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TypeEq"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TypeEq@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ModuleEq"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ModuleEq@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TypeEqPriv"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TypeEqPriv@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TypeSubst"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TypeSubst@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ModuleSubst"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ModuleSubst@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "And"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`And@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "constr"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "constr"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "constr" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "bind" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "And"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`And@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "bind"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "bind"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Bind"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Bind@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "bind" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "case" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Bar"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Bar@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "case"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "case"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Case"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Case@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "CaseWhen"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`CaseWhen@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "case" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "mexp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "vid'" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "vid'"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "App"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`App@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Functor"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Functor@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "auident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mtyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Struct"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Struct@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "stru"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "StructEnd"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`StructEnd",None)
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Constraint"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Constraint@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mtyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "PackageModule"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`PackageModule@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "mexp" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "stru" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Class"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Class@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cldecl"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ClassType"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ClassType@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cltdecl"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Sem"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "stru"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "stru"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "DirectiveSimple"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`DirectiveSimple@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Directive"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Directive@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Exception"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Exception@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "of_ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "StExp"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`StExp@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "External"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`External@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "strings"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Include"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Include@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Module"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Module@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "auident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "RecModule"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`RecModule@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mbind"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ModuleType"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ModuleType@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "auident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mtyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Open"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Open@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Type"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Type@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "typedecl"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "TypeWith"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`TypeWith@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "typedecl"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "strings"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Value"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Value@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "bind"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "stru" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "cltdecl" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "And"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`And@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cltdecl"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cltdecl"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "CtDecl"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a3" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`CtDecl@ %a@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_parameters"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cltyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a3" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "CtDeclS"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`CtDeclS@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cltyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "cltdecl" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "cltyp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "vid'" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "vid'"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ClApply"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ClApply@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "vid"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_parameters"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "CtFun"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`CtFun@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cltyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ObjTy"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ObjTy@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clsigi"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ObjTyEnd"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ObjTyEnd@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Obj"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Obj@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clsigi"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ObjEnd"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`ObjEnd",None)
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "And"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`And@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cltyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cltyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "cltyp" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "clsigi" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Sem"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clsigi"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clsigi"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "SigInherit"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`SigInherit@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cltyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "CgVal"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a3" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`CgVal@ %a@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a3" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Method"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Method@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "VirMeth"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`VirMeth@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Eq"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Eq@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "clsigi" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "cldecl" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ClDecl"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a3" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ClDecl@ %a@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_parameters"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a3" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ClDeclS"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ClDeclS@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "And"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`And@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cldecl"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cldecl"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "cldecl" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "clexp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "CeApp"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`CeApp@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "vid'" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "vid'"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ClApply"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ClApply@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "vid"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_parameters"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "CeFun"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`CeFun@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "LetIn"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`LetIn@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "bind"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Obj"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Obj@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clfield"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ObjEnd"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`ObjEnd",None)
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ObjPat"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ObjPat@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clfield"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ObjPatEnd"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`ObjPatEnd@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Constraint"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Constraint@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cltyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "clexp" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "clfield" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Sem"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clfield"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clfield"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Inherit"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Inherit@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "InheritAs"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`InheritAs@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "CrVal"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a3" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`CrVal@ %a@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a3" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "VirVal"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`VirVal@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "CrMth"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a3" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a4" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`CrMth@ %a@ %a@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a3" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a4" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "CrMthS"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a3" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`CrMthS@ %a@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a3" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "VirMeth"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a2" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`VirMeth@ %a@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a2" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Eq"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Eq@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Initializer"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Initializer@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "clfield" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "ep" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "vid" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "vid"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "App"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`App@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ep"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ep"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Vrn"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Vrn@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "string"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Com"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Com@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ep"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ep"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Sem"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ep"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ep"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Par"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Par@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ep"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Constraint"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Constraint@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ep"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "any" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "any"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "ArrayEmpty"
                                    None
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("`ArrayEmpty",None)
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Array"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Array@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ep"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Record"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Record@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "rec_bind"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "literal" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "literal"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "ep" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "rec_bind" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "fmt" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_function
                              [
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "RecBind"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`RecBind@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "vid"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ep"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_variant "Sem"
                                    Some
                                      pattern (objsN.ml[]..[])
                                        Ppat_tuple
                                        [
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a0" (objsN.ml[]..[])
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a1" (objsN.ml[]..[])
                                        ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "Format.fprintf" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "fmt" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_constant Const_string("@[<1>(`Sem@ %a@ %a)@]",None)
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "rec_bind"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_send "rec_bind"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                    ]
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "any" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "any"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                                <case>
                                  pattern (objsN.ml[]..[])
                                    Ppat_alias "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_type
                                      "ant" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_coerce
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "fmt" (objsN.ml[]..[])
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                      ]
                                    None
                                    core_type (objsN.ml[]..[])
                                      Ptyp_constr "unit" (objsN.ml[]..[])
                                      []
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "rec_bind" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "tokenf_ant" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_send "unknown"
                        expression (objsN.ml[]..[])
                          Pexp_ident "self" (objsN.ml[]..[])
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "Tokenf.ant" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "locf_t" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_send "unknown"
                        expression (objsN.ml[]..[])
                          Pexp_ident "self" (objsN.ml[]..[])
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_var fmt
                            core_type (objsN.ml[]..[])
                              Ptyp_arrow
                              ""
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "Locf.t" (objsN.ml[]..[])
                                []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "unit" (objsN.ml[]..[])
                                []
              ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_class
    [
      class_declaration (objsN.ml[]..[])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "map" (objsN.ml[]..[])
        pci_expr =
          class_expr (objsN.ml[]..[])
            Pcl_structure
            class_structure
              pattern (objsN.ml[]..[])
                Ppat_constraint
                pattern (objsN.ml[]..[])
                  Ppat_var "self" (objsN.ml[]..[])
                core_type (objsN.ml[]..[])
                  Ptyp_var self_type
              [
                class_field (objsN.ml[]..[])
                  Pcf_inherit Fresh
                    class_expr (objsN.ml[]..[])
                      Pcl_constr "mapbase" (objsN.ml[]..[])
                      []
                    None
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "loc" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "locf_t"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "loc" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "loc" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "ant" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Ant"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "loc"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "tokenf_ant"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Ant"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "ant" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "ant" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "literal" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Chr"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Chr"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Int"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Int"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Int32"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Int32"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Int64"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Int64"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Flo"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Flo"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Nativeint"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Nativeint"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Str"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Str"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Bool"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "bool"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Bool"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Unit"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "Unit"
                              None
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "literal" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "literal" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "flag" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Positive"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "Positive"
                              None
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Negative"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "Negative"
                              None
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "flag" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "flag" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "flag" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "position_flag" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Positive"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "Positive"
                              None
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Negative"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "Negative"
                              None
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Normal"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "Normal"
                              None
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "position_flag" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "position_flag" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "position_flag" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "strings" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "App"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "strings"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "strings"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "App"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Str"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Str"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "strings" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "strings" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "strings" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "lident" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Lid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Lid"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "lident" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "lident" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "alident" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Lid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Lid"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "alident" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "alident" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "alident" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "auident" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Uid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Uid"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "auident" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "auident" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "auident" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "aident" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "alident" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "alident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "alident" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "aident" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "auident" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "auident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "auident" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "aident" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "aident" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "aident" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "astring" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "C"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "C"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "astring" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "astring" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "astring" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "uident" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Dot"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "uident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "uident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Dot"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "App"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "uident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "uident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "App"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "auident" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "auident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "auident" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "uident" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "uident" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "uident" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "ident" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Dot"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Dot"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Apply"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Apply"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "alident" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "alident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "alident" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "ident" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "auident" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "auident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "auident" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "ident" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "ident" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "ident" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "ident'" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Dot"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Dot"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Apply"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Apply"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Lid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Lid"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Uid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Uid"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "ident'" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "ident'" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "vid" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Dot"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "vid"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "vid"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Dot"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Lid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Lid"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Uid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Uid"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "vid" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "vid" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "vid" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "vid'" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Dot"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "vid"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "vid"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Dot"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Lid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Lid"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Uid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Uid"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "vid'" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "vid'" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "dupath" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Dot"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "dupath"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "dupath"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Dot"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "auident" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "auident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "auident" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "dupath" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "dupath" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "dupath" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "dlpath" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Dot"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "dupath"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "alident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Dot"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "alident" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "alident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "alident" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "dlpath" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "dlpath" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "dlpath" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "any" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Any"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "Any"
                              None
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "any" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "any" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "ctyp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Alias"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "alident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Alias"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "any" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "any"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "any" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "ctyp" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "App"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "App"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Arrow"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Arrow"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ClassPath"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "ClassPath"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Label"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Label"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "OptLabl"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "OptLabl"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ident'" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ident'"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ident'" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "ctyp" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyObj"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "name_ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "TyObj"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyObjEnd"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "TyObjEnd"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyPol"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "TyPol"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyPolEnd"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "TyPolEnd"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyTypePol"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "TyTypePol"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Quote"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "position_flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "alident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Quote"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "QuoteAny"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "position_flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "QuoteAny"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Par"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Par"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sta"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Sta"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "PolyEq"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "row_field"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "PolyEq"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "PolySup"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "row_field"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "PolySup"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "PolyInf"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "row_field"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "PolyInf"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Com"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Com"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "PolyInfSup"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "row_field"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "tag_names"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "PolyInfSup"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Package"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "mtyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Package"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "ctyp" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "ctyp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "ctyp" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "type_parameters" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Com"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "type_parameters"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "type_parameters"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Com"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Ctyp"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Ctyp"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "type_parameters" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "type_parameters" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "type_parameters" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "row_field" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "row_field" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Bar"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "row_field"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "row_field"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Bar"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyVrn"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "astring"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "TyVrn"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyVrnOf"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "astring"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "TyVrnOf"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Ctyp"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Ctyp"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "row_field" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "row_field" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "tag_names" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "tag_names" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "App"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "tag_names"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "tag_names"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "App"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyVrn"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "astring"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "TyVrn"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "tag_names" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "tag_names" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "typedecl" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyDcl"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a3" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "opt_decl_params"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_info"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (objsN.ml[]..[])
                                          Ppat_var "_a3" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_apply
                                          expression (objsN.ml[]..[])
                                            Pexp_send "opt_type_constr"
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "self" (objsN.ml[]..[])
                                          [
                                            <label> ""
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a3" (objsN.ml[]..[])
                                          ]
                                    ]
                                    expression (objsN.ml[]..[])
                                      Pexp_variant "TyDcl"
                                      Some
                                        expression (objsN.ml[]..[])
                                          Pexp_tuple
                                          [
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a0" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a1" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a3" (objsN.ml[]..[])
                                          ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyAbstr"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "opt_decl_params"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "opt_type_constr"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "TyAbstr"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "And"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "typedecl"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "typedecl"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "And"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "typedecl" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "typedecl" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "typedecl" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "type_constr" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "And"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "type_constr"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "type_constr"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "And"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Eq"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Eq"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "type_constr" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "type_constr" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "type_constr" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "opt_type_constr" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Some"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "type_constr"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Some"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "None"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "None"
                              None
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "opt_type_constr" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "opt_type_constr" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "decl_param" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Quote"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "position_flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "alident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Quote"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "QuoteAny"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "position_flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "QuoteAny"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Any"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "Any"
                              None
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "decl_param" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "decl_param" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "decl_param" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "decl_params" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Quote"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "position_flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "alident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Quote"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "QuoteAny"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "position_flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "QuoteAny"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Any"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "Any"
                              None
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Com"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "decl_params"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "decl_params"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Com"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "decl_params" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "decl_params" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "decl_params" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "opt_decl_params" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Some"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "decl_params"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Some"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "None"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "None"
                              None
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "opt_decl_params" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "opt_decl_params" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "type_info" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyMan"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_repr"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "TyMan"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyRepr"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "type_repr"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "TyRepr"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyEq"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "TyEq"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "type_info" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "type_info" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "type_info" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "type_repr" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Record"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "name_ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Record"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sum"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "or_ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Sum"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "type_repr" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "type_repr" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "type_repr" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "name_ctyp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "name_ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "name_ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Sem"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyCol"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "TyCol"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyColMut"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "TyColMut"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "name_ctyp" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "name_ctyp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "name_ctyp" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "or_ctyp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Bar"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "or_ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "or_ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Bar"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyCol"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "TyCol"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Of"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Of"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "auident" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "auident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "auident" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "or_ctyp" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "or_ctyp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "or_ctyp" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "of_ctyp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Of"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "vid"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Of"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "vid'" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "vid'"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "vid'" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "of_ctyp" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "of_ctyp" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "of_ctyp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "of_ctyp" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "pat" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "vid" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "vid"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "vid" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "pat" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "App"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "pat"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "App"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Vrn"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Vrn"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Com"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "pat"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Com"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "pat"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Sem"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Par"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Par"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "any" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "any"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "any" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "pat" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Record"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "rec_pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Record"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "literal" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "literal"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "literal" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "pat" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Alias"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "alident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Alias"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ArrayEmpty"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "ArrayEmpty"
                              None
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Array"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Array"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "LabelS"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "LabelS"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Label"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "pat"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Label"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "OptLabl"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "pat"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "OptLabl"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "OptLablS"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "OptLablS"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "OptLablExpr"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "pat"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "OptLablExpr"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Bar"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "pat"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Bar"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "PaRng"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "pat"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "PaRng"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Constraint"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Constraint"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ClassPath"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "ClassPath"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Lazy"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Lazy"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ModuleUnpack"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "ModuleUnpack"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ModuleConstraint"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "ModuleConstraint"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "pat" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "pat" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "rec_pat" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "RecBind"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "vid"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "pat"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "RecBind"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "rec_pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "rec_pat"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Sem"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "any" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "any"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "any" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "rec_pat" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "rec_pat" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "rec_pat" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "rec_pat" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "exp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "vid" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "vid"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "vid" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "exp" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "App"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "App"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Vrn"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Vrn"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Com"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Com"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Sem"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Par"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Par"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "any" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "any"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "any" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "exp" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Record"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "rec_exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Record"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "literal" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "literal"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "literal" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "exp" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "RecordWith"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "rec_exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "RecordWith"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Field"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "vid"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Field"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ArrayDot"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "ArrayDot"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ArrayEmpty"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "ArrayEmpty"
                              None
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Array"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Array"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Assert"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Assert"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Assign"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Assign"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "For"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a3" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a4" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (objsN.ml[]..[])
                                          Ppat_var "_a3" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_apply
                                          expression (objsN.ml[]..[])
                                            Pexp_send "flag"
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "self" (objsN.ml[]..[])
                                          [
                                            <label> ""
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a3" (objsN.ml[]..[])
                                          ]
                                    ]
                                    expression (objsN.ml[]..[])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a4" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_apply
                                            expression (objsN.ml[]..[])
                                              Pexp_send "exp"
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "self" (objsN.ml[]..[])
                                            [
                                              <label> ""
                                                expression (objsN.ml[]..[])
                                                  Pexp_ident "_a4" (objsN.ml[]..[])
                                            ]
                                      ]
                                      expression (objsN.ml[]..[])
                                        Pexp_variant "For"
                                        Some
                                          expression (objsN.ml[]..[])
                                            Pexp_tuple
                                            [
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a0" (objsN.ml[]..[])
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a1" (objsN.ml[]..[])
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a2" (objsN.ml[]..[])
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a3" (objsN.ml[]..[])
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a4" (objsN.ml[]..[])
                                            ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Fun"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "case"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Fun"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "IfThenElse"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "IfThenElse"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "IfThen"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "IfThen"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "LabelS"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "LabelS"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Label"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Label"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Lazy"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Lazy"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "LetIn"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "bind"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "LetIn"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "LetTryInWith"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a3" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "bind"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (objsN.ml[]..[])
                                          Ppat_var "_a3" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_apply
                                          expression (objsN.ml[]..[])
                                            Pexp_send "case"
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "self" (objsN.ml[]..[])
                                          [
                                            <label> ""
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a3" (objsN.ml[]..[])
                                          ]
                                    ]
                                    expression (objsN.ml[]..[])
                                      Pexp_variant "LetTryInWith"
                                      Some
                                        expression (objsN.ml[]..[])
                                          Pexp_tuple
                                          [
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a0" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a1" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a3" (objsN.ml[]..[])
                                          ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "LetModule"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "mexp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "LetModule"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Match"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "case"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Match"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "New"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "New"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Obj"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "clfield"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Obj"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ObjEnd"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "ObjEnd"
                              None
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ObjPat"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "clfield"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "ObjPat"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ObjPatEnd"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "ObjPatEnd"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "OptLabl"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "OptLabl"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "OptLablS"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "OptLablS"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "OvrInst"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "rec_exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "OvrInst"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "OvrInstEmpty"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "OvrInstEmpty"
                              None
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Seq"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Seq"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Send"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "alident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Send"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "StringDot"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "StringDot"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Try"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "case"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Try"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Constraint"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Constraint"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Coercion"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "Coercion"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Subtype"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Subtype"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "While"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "While"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "LetOpen"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "LetOpen"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "LocalTypeFun"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "LocalTypeFun"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Package_exp"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "mexp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Package_exp"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "exp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "exp" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "rec_exp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "rec_exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "rec_exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Sem"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "RecBind"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "vid"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "RecBind"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "any" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "any"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "any" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "rec_exp" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "rec_exp" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "rec_exp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "rec_exp" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "mtyp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ident'" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ident'"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ident'" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "mtyp" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sig"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "sigi"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Sig"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "SigEnd"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "SigEnd"
                              None
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Functor"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "mtyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mtyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "Functor"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "With"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "mtyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "constr"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "With"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ModuleTypeOf"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "mexp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "ModuleTypeOf"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "mtyp" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "mtyp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "mtyp" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "sigi" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Val"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Val"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "External"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "strings"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "External"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Type"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "typedecl"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Type"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Exception"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "of_ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Exception"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Class"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "cltdecl"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Class"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ClassType"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "cltdecl"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "ClassType"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Module"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "mtyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Module"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ModuleTypeEnd"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "ModuleTypeEnd"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ModuleType"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "mtyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "ModuleType"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "sigi"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "sigi"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Sem"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "DirectiveSimple"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "DirectiveSimple"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Directive"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Directive"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Open"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Open"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Include"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "mtyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Include"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "RecModule"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "mbind"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "RecModule"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "sigi" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "sigi" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "sigi" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "mbind" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "And"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "mbind"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "mbind"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "And"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ModuleBind"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "mtyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "ModuleBind"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Constraint"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "mtyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Constraint"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "mbind" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "mbind" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "mbind" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "constr" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TypeEq"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "TypeEq"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ModuleEq"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "ModuleEq"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TypeEqPriv"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "TypeEqPriv"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TypeSubst"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "TypeSubst"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ModuleSubst"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "ModuleSubst"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "And"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "constr"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "constr"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "And"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "constr" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "constr" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "constr" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "bind" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "And"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "bind"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "bind"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "And"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Bind"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Bind"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "bind" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "bind" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "bind" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "case" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Bar"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "case"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "case"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Bar"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Case"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Case"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CaseWhen"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "CaseWhen"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "case" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "case" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "case" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "mexp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "vid'" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "vid'"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "vid'" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "mexp" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "App"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "mexp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "mexp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "App"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Functor"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "mtyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "Functor"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Struct"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "stru"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Struct"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "StructEnd"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "StructEnd"
                              None
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Constraint"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "mexp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "mtyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Constraint"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "PackageModule"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "PackageModule"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "mexp" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "mexp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "mexp" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "stru" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Class"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "cldecl"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Class"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ClassType"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "cltdecl"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "ClassType"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "stru"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "stru"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Sem"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "DirectiveSimple"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "DirectiveSimple"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Directive"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Directive"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Exception"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "of_ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Exception"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "StExp"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "StExp"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "External"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "strings"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "External"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Include"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "mexp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Include"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Module"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "mexp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Module"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "RecModule"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "mbind"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "RecModule"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ModuleType"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "mtyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "ModuleType"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Open"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Open"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Type"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "typedecl"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Type"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TypeWith"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "typedecl"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "strings"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "TypeWith"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Value"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "bind"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Value"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "stru" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "stru" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "stru" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "cltdecl" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "And"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "cltdecl"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "cltdecl"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "And"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CtDecl"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a3" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_parameters"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (objsN.ml[]..[])
                                          Ppat_var "_a3" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_apply
                                          expression (objsN.ml[]..[])
                                            Pexp_send "cltyp"
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "self" (objsN.ml[]..[])
                                          [
                                            <label> ""
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a3" (objsN.ml[]..[])
                                          ]
                                    ]
                                    expression (objsN.ml[]..[])
                                      Pexp_variant "CtDecl"
                                      Some
                                        expression (objsN.ml[]..[])
                                          Pexp_tuple
                                          [
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a0" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a1" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a3" (objsN.ml[]..[])
                                          ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CtDeclS"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cltyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "CtDeclS"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "cltdecl" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "cltdecl" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "cltdecl" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "cltyp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "vid'" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "vid'"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "vid'" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "cltyp" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ClApply"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "vid"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "type_parameters"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "ClApply"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CtFun"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "cltyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "CtFun"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ObjTy"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "clsigi"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "ObjTy"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ObjTyEnd"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "ObjTyEnd"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Obj"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "clsigi"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Obj"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ObjEnd"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "ObjEnd"
                              None
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "And"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "cltyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "cltyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "And"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "cltyp" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "cltyp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "cltyp" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "clsigi" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "clsigi"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "clsigi"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Sem"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "SigInherit"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "cltyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "SigInherit"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CgVal"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a3" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (objsN.ml[]..[])
                                          Ppat_var "_a3" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_apply
                                          expression (objsN.ml[]..[])
                                            Pexp_send "ctyp"
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "self" (objsN.ml[]..[])
                                          [
                                            <label> ""
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a3" (objsN.ml[]..[])
                                          ]
                                    ]
                                    expression (objsN.ml[]..[])
                                      Pexp_variant "CgVal"
                                      Some
                                        expression (objsN.ml[]..[])
                                          Pexp_tuple
                                          [
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a0" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a1" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a3" (objsN.ml[]..[])
                                          ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Method"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "Method"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "VirMeth"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "VirMeth"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Eq"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Eq"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "clsigi" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "clsigi" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "clsigi" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "cldecl" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ClDecl"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a3" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_parameters"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (objsN.ml[]..[])
                                          Ppat_var "_a3" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_apply
                                          expression (objsN.ml[]..[])
                                            Pexp_send "clexp"
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "self" (objsN.ml[]..[])
                                          [
                                            <label> ""
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a3" (objsN.ml[]..[])
                                          ]
                                    ]
                                    expression (objsN.ml[]..[])
                                      Pexp_variant "ClDecl"
                                      Some
                                        expression (objsN.ml[]..[])
                                          Pexp_tuple
                                          [
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a0" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a1" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a3" (objsN.ml[]..[])
                                          ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ClDeclS"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "ClDeclS"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "And"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "cldecl"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "cldecl"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "And"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "cldecl" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "cldecl" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "cldecl" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "clexp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CeApp"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "clexp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "CeApp"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "vid'" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "vid'"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "vid'" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "clexp" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ClApply"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "vid"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "type_parameters"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "ClApply"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CeFun"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "clexp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "CeFun"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "LetIn"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "bind"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "LetIn"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Obj"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "clfield"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Obj"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ObjEnd"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "ObjEnd"
                              None
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ObjPat"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "clfield"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "ObjPat"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ObjPatEnd"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "ObjPatEnd"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Constraint"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "clexp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "cltyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Constraint"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "clexp" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "clexp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "clexp" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "clfield" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "clfield"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "clfield"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Sem"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Inherit"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "clexp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Inherit"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "InheritAs"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "clexp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "InheritAs"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CrVal"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a3" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (objsN.ml[]..[])
                                          Ppat_var "_a3" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_apply
                                          expression (objsN.ml[]..[])
                                            Pexp_send "exp"
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "self" (objsN.ml[]..[])
                                          [
                                            <label> ""
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a3" (objsN.ml[]..[])
                                          ]
                                    ]
                                    expression (objsN.ml[]..[])
                                      Pexp_variant "CrVal"
                                      Some
                                        expression (objsN.ml[]..[])
                                          Pexp_tuple
                                          [
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a0" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a1" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a3" (objsN.ml[]..[])
                                          ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "VirVal"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "VirVal"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CrMth"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a3" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a4" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (objsN.ml[]..[])
                                          Ppat_var "_a3" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_apply
                                          expression (objsN.ml[]..[])
                                            Pexp_send "exp"
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "self" (objsN.ml[]..[])
                                          [
                                            <label> ""
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a3" (objsN.ml[]..[])
                                          ]
                                    ]
                                    expression (objsN.ml[]..[])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (objsN.ml[]..[])
                                            Ppat_var "_a4" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_apply
                                            expression (objsN.ml[]..[])
                                              Pexp_send "ctyp"
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "self" (objsN.ml[]..[])
                                            [
                                              <label> ""
                                                expression (objsN.ml[]..[])
                                                  Pexp_ident "_a4" (objsN.ml[]..[])
                                            ]
                                      ]
                                      expression (objsN.ml[]..[])
                                        Pexp_variant "CrMth"
                                        Some
                                          expression (objsN.ml[]..[])
                                            Pexp_tuple
                                            [
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a0" (objsN.ml[]..[])
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a1" (objsN.ml[]..[])
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a2" (objsN.ml[]..[])
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a3" (objsN.ml[]..[])
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a4" (objsN.ml[]..[])
                                            ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CrMthS"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a3" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (objsN.ml[]..[])
                                          Ppat_var "_a3" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_apply
                                          expression (objsN.ml[]..[])
                                            Pexp_send "exp"
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "self" (objsN.ml[]..[])
                                          [
                                            <label> ""
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a3" (objsN.ml[]..[])
                                          ]
                                    ]
                                    expression (objsN.ml[]..[])
                                      Pexp_variant "CrMthS"
                                      Some
                                        expression (objsN.ml[]..[])
                                          Pexp_tuple
                                          [
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a0" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a1" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a3" (objsN.ml[]..[])
                                          ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "VirMeth"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "_a2" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_variant "VirMeth"
                                    Some
                                      expression (objsN.ml[]..[])
                                        Pexp_tuple
                                        [
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a0" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Eq"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Eq"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Initializer"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Initializer"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "clfield" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "clfield" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "clfield" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "ep" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "vid" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "vid"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "vid" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "ep" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "App"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ep"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ep"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "App"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Vrn"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "string"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Vrn"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Com"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ep"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ep"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Com"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ep"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ep"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Sem"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Par"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ep"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Par"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Constraint"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ep"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Constraint"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "any" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "any"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "any" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "ep" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ArrayEmpty"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_variant "ArrayEmpty"
                              None
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Array"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ep"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Array"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Record"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "rec_bind"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_variant "Record"
                                Some
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "literal" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "literal"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "literal" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "ep" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "ep" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "ep" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "rec_bind" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "RecBind"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "vid"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ep"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "RecBind"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "_a0" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "rec_bind"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "rec_bind"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_variant "Sem"
                                  Some
                                    expression (objsN.ml[]..[])
                                      Pexp_tuple
                                      [
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "any" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "any"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "any" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "rec_bind" (objsN.ml[]..[])
                                []
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              Some
                                core_type (objsN.ml[]..[])
                                  Ptyp_constr "ant" (objsN.ml[]..[])
                                  []
                              core_type (objsN.ml[]..[])
                                Ptyp_constr "rec_bind" (objsN.ml[]..[])
                                []
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "rec_bind" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "rec_bind" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "tokenf_ant" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_send "unknown"
                        expression (objsN.ml[]..[])
                          Pexp_ident "self" (objsN.ml[]..[])
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "Tokenf.ant" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "Tokenf.ant" (objsN.ml[]..[])
                              []
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "locf_t" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_send "unknown"
                        expression (objsN.ml[]..[])
                          Pexp_ident "self" (objsN.ml[]..[])
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "Locf.t" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "Locf.t" (objsN.ml[]..[])
                              []
              ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_class
    [
      class_declaration (objsN.ml[]..[])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "fold" (objsN.ml[]..[])
        pci_expr =
          class_expr (objsN.ml[]..[])
            Pcl_structure
            class_structure
              pattern (objsN.ml[]..[])
                Ppat_constraint
                pattern (objsN.ml[]..[])
                  Ppat_var "self" (objsN.ml[]..[])
                core_type (objsN.ml[]..[])
                  Ptyp_var self_type
              [
                class_field (objsN.ml[]..[])
                  Pcf_inherit Fresh
                    class_expr (objsN.ml[]..[])
                      Pcl_constr "foldbase" (objsN.ml[]..[])
                      []
                    None
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "loc" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "locf_t"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "loc" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "ant" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Ant"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "loc"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "tokenf_ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "ant" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "literal" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Chr"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Int"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Int32"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Int64"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Flo"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Nativeint"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Str"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Bool"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "bool"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Unit"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "literal" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "flag" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Positive"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Negative"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "flag" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "position_flag" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Positive"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Negative"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Normal"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "position_flag" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "strings" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "App"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "strings"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "strings"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Str"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "strings" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "lident" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Lid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "lident" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "alident" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Lid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "alident" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "auident" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Uid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "auident" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "aident" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "alident" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "alident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "auident" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "auident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "aident" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "astring" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "C"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "astring" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "uident" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Dot"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "uident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "uident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "App"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "uident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "uident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "auident" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "auident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "uident" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "ident" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Dot"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Apply"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "alident" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "alident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "auident" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "auident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "ident" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "ident'" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Dot"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Apply"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Lid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Uid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "ident'" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "vid" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Dot"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "vid"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "vid"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Lid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Uid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "vid" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "vid'" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Dot"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "vid"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "vid"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Lid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Uid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "vid'" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "dupath" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Dot"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "dupath"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "dupath"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "auident" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "auident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "dupath" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "dlpath" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Dot"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "dupath"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "alident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "alident" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "alident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "dlpath" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "any" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Any"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "any" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "ctyp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Alias"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "alident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "any" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "any"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "App"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Arrow"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ClassPath"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "ident"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Label"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "OptLabl"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ident'" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ident'"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyObj"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "name_ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "flag"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyObjEnd"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "flag"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyPol"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyPolEnd"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "ctyp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyTypePol"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Quote"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "position_flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "alident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "QuoteAny"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "position_flag"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Par"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "ctyp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sta"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "PolyEq"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "row_field"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "PolySup"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "row_field"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "PolyInf"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "row_field"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Com"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "PolyInfSup"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "row_field"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "tag_names"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Package"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "mtyp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "ctyp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "type_parameters" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Com"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "type_parameters"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "type_parameters"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Ctyp"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "ctyp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "type_parameters" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "row_field" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Bar"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "row_field"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "row_field"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyVrn"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "astring"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyVrnOf"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "astring"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Ctyp"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "ctyp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "row_field" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "tag_names" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "App"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "tag_names"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "tag_names"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyVrn"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "astring"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "tag_names" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "typedecl" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyDcl"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a3" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "opt_decl_params"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "self" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_info"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "opt_type_constr"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a3" (objsN.ml[]..[])
                                    ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyAbstr"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "opt_decl_params"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "opt_type_constr"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "And"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "typedecl"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "typedecl"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "typedecl" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "type_constr" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "And"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "type_constr"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "type_constr"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Eq"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "type_constr" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "opt_type_constr" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Some"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "type_constr"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "None"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "opt_type_constr" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "decl_param" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Quote"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "position_flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "alident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "QuoteAny"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "position_flag"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Any"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "decl_param" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "decl_params" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Quote"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "position_flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "alident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "QuoteAny"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "position_flag"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Any"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Com"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "decl_params"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "decl_params"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "decl_params" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "opt_decl_params" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Some"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "decl_params"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "None"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "opt_decl_params" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "type_info" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyMan"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "type_repr"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyRepr"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "type_repr"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyEq"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "type_info" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "type_repr" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Record"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "name_ctyp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sum"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "or_ctyp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "type_repr" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "name_ctyp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "name_ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "name_ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyCol"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyColMut"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "name_ctyp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "or_ctyp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Bar"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "or_ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "or_ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TyCol"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Of"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "auident" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "auident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "or_ctyp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "of_ctyp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Of"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "vid"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "vid'" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "vid'"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "of_ctyp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "pat" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "vid" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "vid"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "App"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "pat"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Vrn"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Com"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "pat"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "pat"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Par"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "pat"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "any" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "any"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Record"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "rec_pat"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "literal" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "literal"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Alias"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "alident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ArrayEmpty"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Array"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "pat"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "LabelS"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "alident"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Label"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "pat"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "OptLabl"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "pat"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "OptLablS"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "alident"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "OptLablExpr"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "pat"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "exp"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Bar"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "pat"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "PaRng"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "pat"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Constraint"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ClassPath"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "ident"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Lazy"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "pat"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ModuleUnpack"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "auident"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ModuleConstraint"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "pat" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "rec_pat" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "RecBind"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "vid"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "pat"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "rec_pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "rec_pat"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "any" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "any"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "rec_pat" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "exp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "vid" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "vid"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "App"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Vrn"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Com"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Par"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "exp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "any" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "any"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Record"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "rec_exp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "literal" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "literal"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "RecordWith"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "rec_exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Field"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "vid"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ArrayDot"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ArrayEmpty"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Array"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "exp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Assert"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "exp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Assign"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "For"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a3" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a4" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "self" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (objsN.ml[]..[])
                                          Ppat_var "self" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_apply
                                          expression (objsN.ml[]..[])
                                            Pexp_send "flag"
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "self" (objsN.ml[]..[])
                                          [
                                            <label> ""
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a3" (objsN.ml[]..[])
                                          ]
                                    ]
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a4" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Fun"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "case"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "IfThenElse"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "exp"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "IfThen"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "LabelS"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "alident"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Label"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Lazy"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "exp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "LetIn"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "bind"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "exp"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "LetTryInWith"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a3" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "bind"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "self" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "case"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a3" (objsN.ml[]..[])
                                    ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "LetModule"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "mexp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "exp"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Match"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "case"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "New"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "ident"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Obj"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "clfield"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ObjEnd"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ObjPat"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "clfield"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ObjPatEnd"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "pat"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "OptLabl"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "OptLablS"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "alident"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "OvrInst"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "rec_exp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "OvrInstEmpty"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Seq"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "exp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Send"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "alident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "StringDot"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Try"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "case"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Constraint"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Coercion"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "ctyp"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Subtype"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "While"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "LetOpen"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "exp"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "LocalTypeFun"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Package_exp"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "mexp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "exp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "rec_exp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "rec_exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "rec_exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "RecBind"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "vid"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "any" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "any"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "rec_exp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "mtyp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ident'" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ident'"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sig"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "sigi"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "SigEnd"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Functor"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "mtyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "mtyp"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "With"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "mtyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "constr"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ModuleTypeOf"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "mexp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "mtyp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "sigi" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Val"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "External"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "strings"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Type"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "typedecl"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Exception"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "of_ctyp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Class"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "cltdecl"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ClassType"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "cltdecl"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Module"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "mtyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ModuleTypeEnd"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "auident"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ModuleType"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "mtyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "sigi"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "sigi"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "DirectiveSimple"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "alident"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Directive"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Open"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Include"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "mtyp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "RecModule"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "mbind"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "sigi" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "mbind" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "And"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "mbind"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "mbind"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ModuleBind"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "mtyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "mexp"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Constraint"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "mtyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "mbind" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "constr" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TypeEq"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ModuleEq"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TypeEqPriv"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TypeSubst"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ModuleSubst"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "And"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "constr"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "constr"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "constr" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "bind" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "And"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "bind"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "bind"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Bind"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "bind" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "case" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Bar"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "case"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "case"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Case"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CaseWhen"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "exp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "exp"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "case" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "mexp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "vid'" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "vid'"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "App"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "mexp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "mexp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Functor"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "mtyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "mexp"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Struct"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "stru"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "StructEnd"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Constraint"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "mexp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "mtyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "PackageModule"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "exp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "mexp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "stru" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Class"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "cldecl"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ClassType"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "cltdecl"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "stru"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "stru"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "DirectiveSimple"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "alident"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Directive"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Exception"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "of_ctyp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "StExp"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "exp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "External"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "strings"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Include"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "mexp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Module"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "mexp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "RecModule"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "mbind"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ModuleType"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "auident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "mtyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Open"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ident"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Type"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "typedecl"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "TypeWith"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "typedecl"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "strings"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Value"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "bind"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "stru" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "cltdecl" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "And"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "cltdecl"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "cltdecl"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CtDecl"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a3" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "self" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_parameters"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "cltyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a3" (objsN.ml[]..[])
                                    ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CtDeclS"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "cltyp"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "cltdecl" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "cltyp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "vid'" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "vid'"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ClApply"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "vid"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "type_parameters"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CtFun"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "cltyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ObjTy"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "clsigi"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ObjTyEnd"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "ctyp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Obj"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "clsigi"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ObjEnd"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "And"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "cltyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "cltyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "cltyp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "clsigi" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "clsigi"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "clsigi"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "SigInherit"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "cltyp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CgVal"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a3" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "self" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a3" (objsN.ml[]..[])
                                    ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Method"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "ctyp"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "VirMeth"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "ctyp"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Eq"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "clsigi" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "cldecl" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ClDecl"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a3" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "self" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_parameters"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "clexp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a3" (objsN.ml[]..[])
                                    ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ClDeclS"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ident"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "clexp"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "And"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "cldecl"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "cldecl"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "cldecl" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "clexp" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CeApp"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "clexp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "exp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "vid'" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "vid'"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ClApply"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "vid"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "type_parameters"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CeFun"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "clexp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "LetIn"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "bind"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "clexp"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Obj"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "clfield"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ObjEnd"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ObjPat"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "pat"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "clfield"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ObjPatEnd"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "pat"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Constraint"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "clexp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "cltyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "clexp" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "clfield" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "clfield"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "clfield"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Inherit"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "clexp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "InheritAs"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "flag"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "clexp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "alident"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CrVal"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a3" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "self" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a3" (objsN.ml[]..[])
                                    ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "VirVal"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "ctyp"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CrMth"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a3" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a4" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "self" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (objsN.ml[]..[])
                                          Ppat_var "self" (objsN.ml[]..[])
                                        expression (objsN.ml[]..[])
                                          Pexp_apply
                                          expression (objsN.ml[]..[])
                                            Pexp_send "exp"
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "self" (objsN.ml[]..[])
                                          [
                                            <label> ""
                                              expression (objsN.ml[]..[])
                                                Pexp_ident "_a3" (objsN.ml[]..[])
                                          ]
                                    ]
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "ctyp"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a4" (objsN.ml[]..[])
                                      ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "CrMthS"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a3" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (objsN.ml[]..[])
                                        Ppat_var "self" (objsN.ml[]..[])
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "self" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "_a2" (objsN.ml[]..[])
                                        ]
                                  ]
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "exp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a3" (objsN.ml[]..[])
                                    ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "VirMeth"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a2" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "alident"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "self" (objsN.ml[]..[])
                                    expression (objsN.ml[]..[])
                                      Pexp_apply
                                      expression (objsN.ml[]..[])
                                        Pexp_send "flag"
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "self" (objsN.ml[]..[])
                                      [
                                        <label> ""
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "_a1" (objsN.ml[]..[])
                                      ]
                                ]
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_send "ctyp"
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "self" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "_a2" (objsN.ml[]..[])
                                  ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Eq"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ctyp"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Initializer"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "exp"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "clfield" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "ep" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "vid" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "vid"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "App"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ep"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ep"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Vrn"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "string"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Com"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ep"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ep"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ep"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ep"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Par"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "ep"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Constraint"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "ep"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ctyp"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "any" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "any"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "ArrayEmpty"
                              None
                            expression (objsN.ml[]..[])
                              Pexp_ident "self" (objsN.ml[]..[])
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Array"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "ep"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Record"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_a0" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_apply
                              expression (objsN.ml[]..[])
                                Pexp_send "rec_bind"
                                expression (objsN.ml[]..[])
                                  Pexp_ident "self" (objsN.ml[]..[])
                              [
                                <label> ""
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "_a0" (objsN.ml[]..[])
                              ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "literal" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "literal"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "ep" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "rec_bind" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_function
                        [
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "RecBind"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "vid"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ep"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Sem"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a0" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "_a1" (objsN.ml[]..[])
                                  ]
                            expression (objsN.ml[]..[])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (objsN.ml[]..[])
                                    Ppat_var "self" (objsN.ml[]..[])
                                  expression (objsN.ml[]..[])
                                    Pexp_apply
                                    expression (objsN.ml[]..[])
                                      Pexp_send "rec_bind"
                                      expression (objsN.ml[]..[])
                                        Pexp_ident "self" (objsN.ml[]..[])
                                    [
                                      <label> ""
                                        expression (objsN.ml[]..[])
                                          Pexp_ident "_a0" (objsN.ml[]..[])
                                    ]
                              ]
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "rec_bind"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a1" (objsN.ml[]..[])
                                ]
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "any" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "any"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                          <case>
                            pattern (objsN.ml[]..[])
                              Ppat_alias "_a0" (objsN.ml[]..[])
                              pattern (objsN.ml[]..[])
                                Ppat_type
                                "ant" (objsN.ml[]..[])
                            expression (objsN.ml[]..[])
                              Pexp_coerce
                              expression (objsN.ml[]..[])
                                Pexp_apply
                                expression (objsN.ml[]..[])
                                  Pexp_send "ant"
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "self" (objsN.ml[]..[])
                                [
                                  <label> ""
                                    expression (objsN.ml[]..[])
                                      Pexp_ident "_a0" (objsN.ml[]..[])
                                ]
                              None
                              core_type (objsN.ml[]..[])
                                Ptyp_var self_type
                        ]
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "rec_bind" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "tokenf_ant" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_send "unknown"
                        expression (objsN.ml[]..[])
                          Pexp_ident "self" (objsN.ml[]..[])
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "Tokenf.ant" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
                class_field (objsN.ml[]..[])
                  Pcf_method Public
                    "locf_t" (objsN.ml[]..[])
                    Concrete Fresh
                    expression (objsN.ml[]..[])
                      Pexp_poly
                      expression (objsN.ml[]..[])
                        Pexp_send "unknown"
                        expression (objsN.ml[]..[])
                          Pexp_ident "self" (objsN.ml[]..[])
                      Some
                        core_type (objsN.ml[]..[])
                          Ptyp_poly
                          core_type (objsN.ml[]..[])
                            Ptyp_arrow
                            ""
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "Locf.t" (objsN.ml[]..[])
                              []
                            core_type (objsN.ml[]..[])
                              Ptyp_var self_type
              ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_loc" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "loc" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "loc"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_ant" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "ant" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ant"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_literal" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "literal" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "literal"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_flag" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "flag" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_position_flag" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "position_flag" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "position_flag"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_strings" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "strings" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "strings"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_lident" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "lident" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "lident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_alident" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "alident" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "alident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_auident" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "auident" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "auident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_aident" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "aident" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "aident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_astring" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "astring" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "astring"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_uident" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "uident" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "uident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_ident" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "ident" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_ident'" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "ident'" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ident'"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_vid" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "vid" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "vid"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_vid'" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "vid'" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "vid'"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_dupath" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "dupath" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "dupath"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_dlpath" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "dlpath" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "dlpath"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_any" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "any" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "any"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_ctyp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "ctyp" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_type_parameters" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "type_parameters" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_parameters"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_row_field" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "row_field" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "row_field"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_tag_names" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "tag_names" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "tag_names"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_typedecl" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "typedecl" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "typedecl"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_type_constr" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "type_constr" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_constr"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_opt_type_constr" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "opt_type_constr" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "opt_type_constr"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_decl_param" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "decl_param" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "decl_param"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_decl_params" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "decl_params" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "decl_params"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_opt_decl_params" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "opt_decl_params" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "opt_decl_params"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_type_info" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "type_info" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_info"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_type_repr" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "type_repr" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "type_repr"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_name_ctyp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "name_ctyp" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "name_ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_or_ctyp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "or_ctyp" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "or_ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_of_ctyp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "of_ctyp" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "of_ctyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_pat" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "pat" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_rec_pat" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "rec_pat" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "rec_pat"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_exp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "exp" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_rec_exp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "rec_exp" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "rec_exp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_mtyp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "mtyp" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mtyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_sigi" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "sigi" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "sigi"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_mbind" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "mbind" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mbind"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_constr" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "constr" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "constr"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_bind" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "bind" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "bind"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_case" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "case" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "case"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_mexp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "mexp" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "mexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_stru" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "stru" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "stru"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_cltdecl" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "cltdecl" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cltdecl"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_cltyp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "cltyp" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cltyp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_clsigi" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "clsigi" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clsigi"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_cldecl" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "cldecl" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "cldecl"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_clexp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "clexp" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clexp"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_clfield" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "clfield" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "clfield"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_ep" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "ep" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "ep"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "map_rec_bind" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_function
          [
            <case>
              pattern (objsN.ml[]..[])
                Ppat_var "f" (objsN.ml[]..[])
              expression (objsN.ml[]..[])
                Pexp_object
                class_structure
                  pattern (objsN.ml[]..[])
                    Ppat_any
                  [
                    class_field (objsN.ml[]..[])
                      Pcf_inherit Fresh
                        class_expr (objsN.ml[]..[])
                          Pcl_constr "map" (objsN.ml[]..[])
                          []
                        Some
                          "super"
                    class_field (objsN.ml[]..[])
                      Pcf_method Public
                        "rec_bind" (objsN.ml[]..[])
                        Concrete Override
                        expression (objsN.ml[]..[])
                          Pexp_poly
                          expression (objsN.ml[]..[])
                            Pexp_function
                            [
                              <case>
                                pattern (objsN.ml[]..[])
                                  Ppat_var "x" (objsN.ml[]..[])
                                expression (objsN.ml[]..[])
                                  Pexp_apply
                                  expression (objsN.ml[]..[])
                                    Pexp_ident "f" (objsN.ml[]..[])
                                  [
                                    <label> ""
                                      expression (objsN.ml[]..[])
                                        Pexp_apply
                                        expression (objsN.ml[]..[])
                                          Pexp_send "rec_bind"
                                          expression (objsN.ml[]..[])
                                            Pexp_ident "super" (objsN.ml[]..[])
                                        [
                                          <label> ""
                                            expression (objsN.ml[]..[])
                                              Pexp_ident "x" (objsN.ml[]..[])
                                        ]
                                  ]
                            ]
                          None
                  ]
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_new "print" (objsN.ml[]..[])
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_literal" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "literal"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_flag" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "flag"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_position_flag" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "position_flag"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_strings" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "strings"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_lident" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "lident"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_alident" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "alident"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_auident" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "auident"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_aident" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "aident"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_astring" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "astring"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_uident" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "uident"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_ident" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "ident"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_ident'" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "ident'"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_vid" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "vid"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_vid'" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "vid'"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_dupath" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "dupath"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_dlpath" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "dlpath"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_any" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "any"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_ctyp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "ctyp"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_type_parameters" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "type_parameters"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_row_field" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "row_field"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_tag_names" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "tag_names"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_typedecl" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "typedecl"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_type_constr" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "type_constr"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_opt_type_constr" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "opt_type_constr"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_decl_param" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "decl_param"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_decl_params" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "decl_params"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_opt_decl_params" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "opt_decl_params"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_type_info" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "type_info"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_type_repr" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "type_repr"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_name_ctyp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "name_ctyp"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_or_ctyp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "or_ctyp"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_of_ctyp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "of_ctyp"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_pat" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "pat"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_rec_pat" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "rec_pat"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_exp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "exp"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_rec_exp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "rec_exp"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_mtyp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "mtyp"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_sigi" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "sigi"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_mbind" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "mbind"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_constr" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "constr"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_bind" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "bind"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_case" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "case"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_mexp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "mexp"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_stru" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "stru"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_cltdecl" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "cltdecl"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_cltyp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "cltyp"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_clsigi" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "clsigi"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_cldecl" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "cldecl"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_clexp" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "clexp"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_clfield" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "clfield"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_ep" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "ep"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "dump_rec_bind" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_apply
          expression (objsN.ml[]..[])
            Pexp_ident "Formatf.to_string" (objsN.ml[]..[])
          [
            <label> ""
              expression (objsN.ml[]..[])
                Pexp_send "rec_bind"
                expression (objsN.ml[]..[])
                  Pexp_ident "dump" (objsN.ml[]..[])
          ]
    ]
  structure_item (objsN.ml[]..[])
    Pstr_value Nonrec
    [
      <def>
        pattern (objsN.ml[]..[])
          Ppat_var "wildcarder" (objsN.ml[]..[])
        expression (objsN.ml[]..[])
          Pexp_object
          class_structure
            pattern (objsN.ml[]..[])
              Ppat_var "self" (objsN.ml[]..[])
            [
              class_field (objsN.ml[]..[])
                Pcf_inherit Fresh
                  class_expr (objsN.ml[]..[])
                    Pcl_constr "map" (objsN.ml[]..[])
                    []
                  Some
                    "super"
              class_field (objsN.ml[]..[])
                Pcf_method Public
                  "pat" (objsN.ml[]..[])
                  Concrete Override
                  expression (objsN.ml[]..[])
                    Pexp_poly
                    expression (objsN.ml[]..[])
                      Pexp_function
                      [
                        <case>
                          pattern (objsN.ml[]..[])
                            Ppat_constraint
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Lid"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_var "_loc" (objsN.ml[]..[])
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "Astfn.pat" (objsN.ml[]..[])
                              []
                          expression (objsN.ml[]..[])
                            Pexp_coerce
                            expression (objsN.ml[]..[])
                              Pexp_variant "Any"
                              None
                            None
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "Astfn.pat" (objsN.ml[]..[])
                              []
                        <case>
                          pattern (objsN.ml[]..[])
                            Ppat_constraint
                            pattern (objsN.ml[]..[])
                              Ppat_variant "Alias"
                              Some
                                pattern (objsN.ml[]..[])
                                  Ppat_tuple
                                  [
                                    pattern (objsN.ml[]..[])
                                      Ppat_var "p" (objsN.ml[]..[])
                                    pattern (objsN.ml[]..[])
                                      Ppat_any
                                  ]
                            core_type (objsN.ml[]..[])
                              Ptyp_constr "Astfn.pat" (objsN.ml[]..[])
                              []
                          expression (objsN.ml[]..[])
                            Pexp_apply
                            expression (objsN.ml[]..[])
                              Pexp_send "pat"
                              expression (objsN.ml[]..[])
                                Pexp_ident "self" (objsN.ml[]..[])
                            [
                              <label> ""
                                expression (objsN.ml[]..[])
                                  Pexp_ident "p" (objsN.ml[]..[])
                            ]
                        <case>
                          pattern (objsN.ml[]..[])
                            Ppat_var "p" (objsN.ml[]..[])
                          expression (objsN.ml[]..[])
                            Pexp_apply
                            expression (objsN.ml[]..[])
                              Pexp_send "pat"
                              expression (objsN.ml[]..[])
                                Pexp_ident "super" (objsN.ml[]..[])
                            [
                              <label> ""
                                expression (objsN.ml[]..[])
                                  Pexp_ident "p" (objsN.ml[]..[])
                            ]
                      ]
                    None
            ]
    ]
]
