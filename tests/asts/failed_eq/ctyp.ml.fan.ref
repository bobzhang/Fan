[
  structure_item (ctyp.ml[1,0+0]..[1,0+10])
    Pstr_open Fresh "Astfn" (ctyp.ml[1,0+5]..[1,0+10])
  structure_item (ctyp.ml[2,11+0]..[2,11+14])
    Pstr_open Fresh "Astn_util" (ctyp.ml[2,11+5]..[2,11+14])
  structure_item (ctyp.ml[3,26+0]..[3,26+9])
    Pstr_open Fresh "Util" (ctyp.ml[3,26+5]..[3,26+9])
  structure_item (ctyp.ml[4,36+0]..[4,36+8])
    Pstr_open Fresh "Fid" (ctyp.ml[4,36+5]..[4,36+8])
  structure_item (ctyp.ml[5,45+0]..[11,118+11])
    Pstr_type
    [
      type_declaration "vrn" (ctyp.ml[5,45+5]..[5,45+8]) (ctyp.ml[5,45+5]..[11,118+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (ctyp.ml[6,56+4]..[6,56+7])
                "Sum" (ctyp.ml[6,56+4]..[6,56+7])
                []
                None
              (ctyp.ml[7,64+4]..[7,64+11])
                "TyVrnEq" (ctyp.ml[7,64+4]..[7,64+11])
                []
                None
              (ctyp.ml[8,76+4]..[8,76+12])
                "TyVrnSup" (ctyp.ml[8,76+4]..[8,76+12])
                []
                None
              (ctyp.ml[9,89+4]..[9,89+12])
                "TyVrnInf" (ctyp.ml[9,89+4]..[9,89+12])
                []
                None
              (ctyp.ml[10,102+4]..[10,102+15])
                "TyVrnInfSup" (ctyp.ml[10,102+4]..[10,102+15])
                []
                None
              (ctyp.ml[11,118+4]..[11,118+11])
                "TyAbstr" (ctyp.ml[11,118+4]..[11,118+11])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (ctyp.ml[12,130+0]..[15,180+12])
    Pstr_type
    [
      type_declaration "col" (ctyp.ml[12,130+5]..[12,130+8]) (ctyp.ml[12,130+5]..[15,180+12])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (ctyp.ml[13,143+2]..[13,143+15])
                Immutable
                "label" (ctyp.ml[13,143+2]..[13,143+7])                core_type (ctyp.ml[13,143+9]..[13,143+15])
                  Ptyp_poly
                  core_type (ctyp.ml[13,143+9]..[13,143+15])
                    Ptyp_constr "string" (ctyp.ml[13,143+9]..[13,143+15])
                    []
              (ctyp.ml[14,160+2]..[14,160+18])
                Immutable
                "is_mutable" (ctyp.ml[14,160+2]..[14,160+12])                core_type (ctyp.ml[14,160+14]..[14,160+18])
                  Ptyp_poly
                  core_type (ctyp.ml[14,160+14]..[14,160+18])
                    Ptyp_constr "bool" (ctyp.ml[14,160+14]..[14,160+18])
                    []
              (ctyp.ml[15,180+2]..[15,180+10])
                Immutable
                "ty" (ctyp.ml[15,180+2]..[15,180+4])                core_type (ctyp.ml[15,180+6]..[15,180+10])
                  Ptyp_poly
                  core_type (ctyp.ml[15,180+6]..[15,180+10])
                    Ptyp_constr "ctyp" (ctyp.ml[15,180+6]..[15,180+10])
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (ctyp.ml[16,193+0]..[23,289+12])
    Pstr_type
    [
      type_declaration "ty_info" (ctyp.ml[16,193+5]..[16,193+12]) (ctyp.ml[16,193+5]..[23,289+12])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (ctyp.ml[18,212+2]..[18,212+15])
                Immutable
                "name_exp" (ctyp.ml[18,212+2]..[18,212+10])                core_type (ctyp.ml[18,212+12]..[18,212+15])
                  Ptyp_poly
                  core_type (ctyp.ml[18,212+12]..[18,212+15])
                    Ptyp_constr "exp" (ctyp.ml[18,212+12]..[18,212+15])
                    []
              (ctyp.ml[19,229+2]..[19,229+15])
                Immutable
                "info_exp" (ctyp.ml[19,229+2]..[19,229+10])                core_type (ctyp.ml[19,229+12]..[19,229+15])
                  Ptyp_poly
                  core_type (ctyp.ml[19,229+12]..[19,229+15])
                    Ptyp_constr "exp" (ctyp.ml[19,229+12]..[19,229+15])
                    []
              (ctyp.ml[20,246+2]..[20,246+9])
                Immutable
                "ep0" (ctyp.ml[20,246+2]..[20,246+5])                core_type (ctyp.ml[20,246+7]..[20,246+9])
                  Ptyp_poly
                  core_type (ctyp.ml[20,246+7]..[20,246+9])
                    Ptyp_constr "ep" (ctyp.ml[20,246+7]..[20,246+9])
                    []
              (ctyp.ml[21,257+2]..[21,257+11])
                Immutable
                "id_ep" (ctyp.ml[21,257+2]..[21,257+7])                core_type (ctyp.ml[21,257+9]..[21,257+11])
                  Ptyp_poly
                  core_type (ctyp.ml[21,257+9]..[21,257+11])
                    Ptyp_constr "ep" (ctyp.ml[21,257+9]..[21,257+11])
                    []
              (ctyp.ml[22,270+2]..[22,270+17])
                Immutable
                "id_eps" (ctyp.ml[22,270+2]..[22,270+8])                core_type (ctyp.ml[22,270+10]..[22,270+17])
                  Ptyp_poly
                  core_type (ctyp.ml[22,270+10]..[22,270+17])
                    Ptyp_constr "list" (ctyp.ml[22,270+13]..[22,270+17])
                    [
                      core_type (ctyp.ml[22,270+10]..[22,270+12])
                        Ptyp_constr "ep" (ctyp.ml[22,270+10]..[22,270+12])
                        []
                    ]
              (ctyp.ml[23,289+2]..[23,289+10])
                Immutable
                "ty" (ctyp.ml[23,289+2]..[23,289+4])                core_type (ctyp.ml[23,289+6]..[23,289+10])
                  Ptyp_poly
                  core_type (ctyp.ml[23,289+6]..[23,289+10])
                    Ptyp_constr "ctyp" (ctyp.ml[23,289+6]..[23,289+10])
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (ctyp.ml[24,302+0]..[24,302+70])
    Pstr_type
    [
      type_declaration "vbranch" (ctyp.ml[24,302+5]..[24,302+12]) (ctyp.ml[24,302+5]..[24,302+70])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (ctyp.ml[24,302+15]..[24,302+70])
              Ptyp_variant closed=Closed
              [
                Rtag "variant" false
                  [
                    core_type (ctyp.ml[24,302+29]..[24,302+48])
                      Ptyp_tuple
                      [
                        core_type (ctyp.ml[24,302+30]..[24,302+36])
                          Ptyp_constr "string" (ctyp.ml[24,302+30]..[24,302+36])
                          []
                        core_type (ctyp.ml[24,302+38]..[24,302+47])
                          Ptyp_constr "list" (ctyp.ml[24,302+43]..[24,302+47])
                          [
                            core_type (ctyp.ml[24,302+38]..[24,302+42])
                              Ptyp_constr "ctyp" (ctyp.ml[24,302+38]..[24,302+42])
                              []
                          ]
                      ]
                  ]
                Rtag "abbrev" false
                  [
                    core_type (ctyp.ml[24,302+63]..[24,302+68])
                      Ptyp_constr "ident" (ctyp.ml[24,302+63]..[24,302+68])
                      []
                  ]
              ]
              None
    ]
  structure_item (ctyp.ml[25,373+0]..[25,373+48])
    Pstr_type
    [
      type_declaration "branch" (ctyp.ml[25,373+5]..[25,373+11]) (ctyp.ml[25,373+5]..[25,373+48])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (ctyp.ml[25,373+14]..[25,373+48])
              Ptyp_variant closed=Closed
              [
                Rtag "branch" false
                  [
                    core_type (ctyp.ml[25,373+27]..[25,373+46])
                      Ptyp_tuple
                      [
                        core_type (ctyp.ml[25,373+28]..[25,373+34])
                          Ptyp_constr "string" (ctyp.ml[25,373+28]..[25,373+34])
                          []
                        core_type (ctyp.ml[25,373+36]..[25,373+45])
                          Ptyp_constr "list" (ctyp.ml[25,373+41]..[25,373+45])
                          [
                            core_type (ctyp.ml[25,373+36]..[25,373+40])
                              Ptyp_constr "ctyp" (ctyp.ml[25,373+36]..[25,373+40])
                              []
                          ]
                      ]
                  ]
              ]
              None
    ]
  structure_item (ctyp.ml[26,422+0]..[33,507+20])
    Pstr_type
    [
      type_declaration "destination" (ctyp.ml[26,422+5]..[26,422+16]) (ctyp.ml[26,422+5]..[28,457+12])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (ctyp.ml[27,441+4]..[27,441+15])
                "Obj" (ctyp.ml[27,441+4]..[27,441+7])
                [
                  core_type (ctyp.ml[27,441+11]..[27,441+15])
                    Ptyp_constr "kind" (ctyp.ml[27,441+11]..[27,441+15])
                    []
                ]
                None
              (ctyp.ml[28,457+4]..[28,457+12])
                "Str_item" (ctyp.ml[28,457+4]..[28,457+12])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "kind" (ctyp.ml[29,470+4]..[29,470+8]) (ctyp.ml[29,470+4]..[33,507+20])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (ctyp.ml[30,481+4]..[30,481+8])
                "Fold" (ctyp.ml[30,481+4]..[30,481+8])
                []
                None
              (ctyp.ml[31,490+4]..[31,490+8])
                "Iter" (ctyp.ml[31,490+4]..[31,490+8])
                []
                None
              (ctyp.ml[32,499+4]..[32,499+7])
                "Map" (ctyp.ml[32,499+4]..[32,499+7])
                []
                None
              (ctyp.ml[33,507+4]..[33,507+20])
                "Concrete" (ctyp.ml[33,507+4]..[33,507+12])
                [
                  core_type (ctyp.ml[33,507+16]..[33,507+20])
                    Ptyp_constr "ctyp" (ctyp.ml[33,507+16]..[33,507+20])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (ctyp.ml[34,528+0]..[34,528+11])
    Pstr_open Fresh "Format" (ctyp.ml[34,528+5]..[34,528+11])
  structure_item (ctyp.ml[35,540+0]..[37,583+23])
    Pstr_type
    [
      type_declaration "warning_type" (ctyp.ml[35,540+5]..[35,540+17]) (ctyp.ml[35,540+5]..[37,583+23])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (ctyp.ml[36,560+4]..[36,560+22])
                "Abstract" (ctyp.ml[36,560+4]..[36,560+12])
                [
                  core_type (ctyp.ml[36,560+16]..[36,560+22])
                    Ptyp_constr "string" (ctyp.ml[36,560+16]..[36,560+22])
                    []
                ]
                None
              (ctyp.ml[37,583+4]..[37,583+23])
                "Qualified" (ctyp.ml[37,583+4]..[37,583+13])
                [
                  core_type (ctyp.ml[37,583+17]..[37,583+23])
                    Ptyp_constr "string" (ctyp.ml[37,583+17]..[37,583+23])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (ctyp.ml[38,607+0]..[45,840+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[38,607+4]..[38,607+25])
          Ppat_var "pp_print_warning_type" (ctyp.ml[38,607+4]..[38,607+25])
        expression (ctyp.ml[38,607+25]..[45,840+75])
          Pexp_constraint
          expression (ctyp.ml[39,677+2]..[45,840+75])
            Pexp_function
            [
              <case>
                pattern (ctyp.ml[40,688+4]..[40,688+7])
                  Ppat_var "fmt" (ctyp.ml[40,688+4]..[40,688+7])
                expression (ctyp.ml[41,699+7]..[45,840+74])
                  Pexp_function
                  [
                    <case>
                      pattern (ctyp.ml[42,715+9]..[42,715+21])
                        Ppat_construct "Abstract" (ctyp.ml[42,715+9]..[42,715+17])
                        Some
                          pattern (ctyp.ml[42,715+18]..[42,715+21])
                            Ppat_var "_a0" (ctyp.ml[42,715+18]..[42,715+21])
                      expression (ctyp.ml[43,740+11]..[43,740+73])
                        Pexp_apply
                        expression (ctyp.ml[43,740+11]..[43,740+25])
                          Pexp_ident "Format.fprintf" (ctyp.ml[43,740+11]..[43,740+25])
                        [
                          <label> ""
                            expression (ctyp.ml[43,740+26]..[43,740+29])
                              Pexp_ident "fmt" (ctyp.ml[43,740+26]..[43,740+29])
                          <label> ""
                            expression (ctyp.ml[43,740+30]..[43,740+53])
                              Pexp_constant Const_string("@[<1>(Abstract@ %a)@]",None)
                          <label> ""
                            expression (ctyp.ml[43,740+54]..[43,740+69])
                              Pexp_ident "pp_print_string" (ctyp.ml[43,740+54]..[43,740+69])
                          <label> ""
                            expression (ctyp.ml[43,740+70]..[43,740+73])
                              Pexp_ident "_a0" (ctyp.ml[43,740+70]..[43,740+73])
                        ]
                    <case>
                      pattern (ctyp.ml[44,814+9]..[44,814+22])
                        Ppat_construct "Qualified" (ctyp.ml[44,814+9]..[44,814+18])
                        Some
                          pattern (ctyp.ml[44,814+19]..[44,814+22])
                            Ppat_var "_a0" (ctyp.ml[44,814+19]..[44,814+22])
                      expression (ctyp.ml[45,840+11]..[45,840+74])
                        Pexp_apply
                        expression (ctyp.ml[45,840+11]..[45,840+25])
                          Pexp_ident "Format.fprintf" (ctyp.ml[45,840+11]..[45,840+25])
                        [
                          <label> ""
                            expression (ctyp.ml[45,840+26]..[45,840+29])
                              Pexp_ident "fmt" (ctyp.ml[45,840+26]..[45,840+29])
                          <label> ""
                            expression (ctyp.ml[45,840+30]..[45,840+54])
                              Pexp_constant Const_string("@[<1>(Qualified@ %a)@]",None)
                          <label> ""
                            expression (ctyp.ml[45,840+55]..[45,840+70])
                              Pexp_ident "pp_print_string" (ctyp.ml[45,840+55]..[45,840+70])
                          <label> ""
                            expression (ctyp.ml[45,840+71]..[45,840+74])
                              Pexp_ident "_a0" (ctyp.ml[45,840+71]..[45,840+74])
                        ]
                  ]
            ]
          core_type (ctyp.ml[38,607+27]..[38,607+67])
            Ptyp_arrow
            ""
            core_type (ctyp.ml[38,607+27]..[38,607+43])
              Ptyp_constr "Format.formatter" (ctyp.ml[38,607+27]..[38,607+43])
              []
            core_type (ctyp.ml[38,607+47]..[38,607+67])
              Ptyp_arrow
              ""
              core_type (ctyp.ml[38,607+47]..[38,607+59])
                Ptyp_constr "warning_type" (ctyp.ml[38,607+47]..[38,607+59])
                []
              core_type (ctyp.ml[38,607+63]..[38,607+67])
                Ptyp_constr "unit" (ctyp.ml[38,607+63]..[38,607+67])
                []
    ]
  structure_item (ctyp.ml[46,916+0]..[49,973+17])
    Pstr_type
    [
      type_declaration "record_col" (ctyp.ml[46,916+5]..[46,916+15]) (ctyp.ml[46,916+5]..[49,973+17])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (ctyp.ml[47,936+2]..[47,936+15])
                Immutable
                "label" (ctyp.ml[47,936+2]..[47,936+7])                core_type (ctyp.ml[47,936+9]..[47,936+15])
                  Ptyp_poly
                  core_type (ctyp.ml[47,936+9]..[47,936+15])
                    Ptyp_constr "string" (ctyp.ml[47,936+9]..[47,936+15])
                    []
              (ctyp.ml[48,953+2]..[48,953+18])
                Immutable
                "is_mutable" (ctyp.ml[48,953+2]..[48,953+12])                core_type (ctyp.ml[48,953+14]..[48,953+18])
                  Ptyp_poly
                  core_type (ctyp.ml[48,953+14]..[48,953+18])
                    Ptyp_constr "bool" (ctyp.ml[48,953+14]..[48,953+18])
                    []
              (ctyp.ml[49,973+2]..[49,973+15])
                Immutable
                "info" (ctyp.ml[49,973+2]..[49,973+6])                core_type (ctyp.ml[49,973+8]..[49,973+15])
                  Ptyp_poly
                  core_type (ctyp.ml[49,973+8]..[49,973+15])
                    Ptyp_constr "ty_info" (ctyp.ml[49,973+8]..[49,973+15])
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (ctyp.ml[50,991+0]..[50,991+34])
    Pstr_type
    [
      type_declaration "record_info" (ctyp.ml[50,991+5]..[50,991+16]) (ctyp.ml[50,991+5]..[50,991+34])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (ctyp.ml[50,991+19]..[50,991+34])
              Ptyp_constr "list" (ctyp.ml[50,991+30]..[50,991+34])
              [
                core_type (ctyp.ml[50,991+19]..[50,991+29])
                  Ptyp_constr "record_col" (ctyp.ml[50,991+19]..[50,991+29])
                  []
              ]
    ]
  structure_item (ctyp.ml[51,1026+0]..[52,1052+67])
    Pstr_type
    [
      type_declaration "basic_id_transform" (ctyp.ml[51,1026+5]..[51,1026+23]) (ctyp.ml[51,1026+5]..[52,1052+67])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (ctyp.ml[52,1052+2]..[52,1052+67])
              Ptyp_variant closed=Closed
              [
                Rtag "Pre" false
                  [
                    core_type (ctyp.ml[52,1052+12]..[52,1052+18])
                      Ptyp_constr "string" (ctyp.ml[52,1052+12]..[52,1052+18])
                      []
                  ]
                Rtag "Post" false
                  [
                    core_type (ctyp.ml[52,1052+31]..[52,1052+37])
                      Ptyp_constr "string" (ctyp.ml[52,1052+31]..[52,1052+37])
                      []
                  ]
                Rtag "Fun" false
                  [
                    core_type (ctyp.ml[52,1052+49]..[52,1052+65])
                      Ptyp_arrow
                      ""
                      core_type (ctyp.ml[52,1052+49]..[52,1052+55])
                        Ptyp_constr "string" (ctyp.ml[52,1052+49]..[52,1052+55])
                        []
                      core_type (ctyp.ml[52,1052+59]..[52,1052+65])
                        Ptyp_constr "string" (ctyp.ml[52,1052+59]..[52,1052+65])
                        []
                  ]
              ]
              None
    ]
  structure_item (ctyp.ml[53,1120+0]..[53,1120+76])
    Pstr_type
    [
      type_declaration "rhs_basic_id_transform" (ctyp.ml[53,1120+5]..[53,1120+27]) (ctyp.ml[53,1120+5]..[53,1120+76])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (ctyp.ml[53,1120+30]..[53,1120+76])
              Ptyp_variant closed=Closed
              [
                Rinherit
                  core_type (ctyp.ml[53,1120+32]..[53,1120+50])
                    Ptyp_constr "basic_id_transform" (ctyp.ml[53,1120+32]..[53,1120+50])
                    []
                Rtag "Exp" false
                  [
                    core_type (ctyp.ml[53,1120+61]..[53,1120+74])
                      Ptyp_arrow
                      ""
                      core_type (ctyp.ml[53,1120+61]..[53,1120+67])
                        Ptyp_constr "string" (ctyp.ml[53,1120+61]..[53,1120+67])
                        []
                      core_type (ctyp.ml[53,1120+71]..[53,1120+74])
                        Ptyp_constr "exp" (ctyp.ml[53,1120+71]..[53,1120+74])
                        []
                  ]
              ]
              None
    ]
  structure_item (ctyp.ml[54,1197+0]..[56,1296+56])
    Pstr_type
    [
      type_declaration "full_id_transform" (ctyp.ml[54,1197+5]..[54,1197+22]) (ctyp.ml[54,1197+5]..[56,1296+56])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (ctyp.ml[55,1222+2]..[56,1296+56])
              Ptyp_variant closed=Closed
              [
                Rinherit
                  core_type (ctyp.ml[55,1222+4]..[55,1222+22])
                    Ptyp_constr "basic_id_transform" (ctyp.ml[55,1222+4]..[55,1222+22])
                    []
                Rtag "Idents" false
                  [
                    core_type (ctyp.ml[55,1222+36]..[55,1222+51])
                      Ptyp_arrow
                      ""
                      core_type (ctyp.ml[55,1222+36]..[55,1222+44])
                        Ptyp_constr "list" (ctyp.ml[55,1222+40]..[55,1222+44])
                        [
                          core_type (ctyp.ml[55,1222+36]..[55,1222+39])
                            Ptyp_constr "vid" (ctyp.ml[55,1222+36]..[55,1222+39])
                            []
                        ]
                      core_type (ctyp.ml[55,1222+48]..[55,1222+51])
                        Ptyp_constr "vid" (ctyp.ml[55,1222+48]..[55,1222+51])
                        []
                  ]
                Rtag "Id" false
                  [
                    core_type (ctyp.ml[55,1222+62]..[55,1222+72])
                      Ptyp_arrow
                      ""
                      core_type (ctyp.ml[55,1222+62]..[55,1222+65])
                        Ptyp_constr "vid" (ctyp.ml[55,1222+62]..[55,1222+65])
                        []
                      core_type (ctyp.ml[55,1222+69]..[55,1222+72])
                        Ptyp_constr "vid" (ctyp.ml[55,1222+69]..[55,1222+72])
                        []
                  ]
                Rtag "Last" false
                  [
                    core_type (ctyp.ml[56,1296+13]..[56,1296+26])
                      Ptyp_arrow
                      ""
                      core_type (ctyp.ml[56,1296+13]..[56,1296+19])
                        Ptyp_constr "string" (ctyp.ml[56,1296+13]..[56,1296+19])
                        []
                      core_type (ctyp.ml[56,1296+23]..[56,1296+26])
                        Ptyp_constr "vid" (ctyp.ml[56,1296+23]..[56,1296+26])
                        []
                  ]
                Rtag "Obj" false
                  [
                    core_type (ctyp.ml[56,1296+38]..[56,1296+54])
                      Ptyp_arrow
                      ""
                      core_type (ctyp.ml[56,1296+38]..[56,1296+44])
                        Ptyp_constr "string" (ctyp.ml[56,1296+38]..[56,1296+44])
                        []
                      core_type (ctyp.ml[56,1296+48]..[56,1296+54])
                        Ptyp_constr "string" (ctyp.ml[56,1296+48]..[56,1296+54])
                        []
                  ]
              ]
              None
    ]
  structure_item (ctyp.ml[57,1353+0]..[57,1353+62])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[57,1353+4]..[57,1353+17])
          Ppat_var "arrow_of_list" (ctyp.ml[57,1353+4]..[57,1353+17])
        expression (ctyp.ml[57,1353+20]..[57,1353+62])
          Pexp_function
          [
            <case>
              pattern (ctyp.ml[57,1353+31]..[57,1353+32])
                Ppat_var "f" (ctyp.ml[57,1353+31]..[57,1353+32])
              expression (ctyp.ml[57,1353+36]..[57,1353+62])
                Pexp_apply
                expression (ctyp.ml[57,1353+36]..[57,1353+54])
                  Pexp_ident "Listf.reduce_right" (ctyp.ml[57,1353+36]..[57,1353+54])
                [
                  <label> ""
                    expression (ctyp.ml[57,1353+55]..[57,1353+60])
                      Pexp_ident "arrow" (ctyp.ml[57,1353+55]..[57,1353+60])
                  <label> ""
                    expression (ctyp.ml[57,1353+61]..[57,1353+62])
                      Pexp_ident "f" (ctyp.ml[57,1353+61]..[57,1353+62])
                ]
          ]
    ]
  structure_item (ctyp.ml[58,1416+0]..[59,1432+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[58,1416+4]..[58,1416+13])
          Ppat_var "app_arrow" (ctyp.ml[58,1416+4]..[58,1416+13])
        expression (ctyp.ml[59,1432+2]..[59,1432+69])
          Pexp_function
          [
            <case>
              pattern (ctyp.ml[59,1432+13]..[59,1432+16])
                Ppat_var "lst" (ctyp.ml[59,1432+13]..[59,1432+16])
              expression (ctyp.ml[59,1432+21]..[59,1432+68])
                Pexp_function
                [
                  <case>
                    pattern (ctyp.ml[59,1432+32]..[59,1432+35])
                      Ppat_var "acc" (ctyp.ml[59,1432+32]..[59,1432+35])
                    expression (ctyp.ml[59,1432+39]..[59,1432+68])
                      Pexp_apply
                      expression (ctyp.ml[59,1432+39]..[59,1432+54])
                        Pexp_ident "List.fold_right" (ctyp.ml[59,1432+39]..[59,1432+54])
                      [
                        <label> ""
                          expression (ctyp.ml[59,1432+55]..[59,1432+60])
                            Pexp_ident "arrow" (ctyp.ml[59,1432+55]..[59,1432+60])
                        <label> ""
                          expression (ctyp.ml[59,1432+61]..[59,1432+64])
                            Pexp_ident "lst" (ctyp.ml[59,1432+61]..[59,1432+64])
                        <label> ""
                          expression (ctyp.ml[59,1432+65]..[59,1432+68])
                            Pexp_ident "acc" (ctyp.ml[59,1432+65]..[59,1432+68])
                      ]
                ]
          ]
    ]
  structure_item (ctyp.ml[60,1502+0]..[72,1814+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[60,1502+4]..[60,1502+8])
          Ppat_var "<+" (ctyp.ml[60,1502+4]..[60,1502+8])
        expression (ctyp.ml[61,1513+2]..[72,1814+75])
          Pexp_function
          [
            <case>
              pattern (ctyp.ml[62,1524+4]..[62,1524+25])
                Ppat_constraint
                pattern (ctyp.ml[62,1524+5]..[62,1524+10])
                  Ppat_var "names" (ctyp.ml[62,1524+5]..[62,1524+10])
                core_type (ctyp.ml[62,1524+13]..[62,1524+24])
                  Ptyp_constr "list" (ctyp.ml[62,1524+20]..[62,1524+24])
                  [
                    core_type (ctyp.ml[62,1524+13]..[62,1524+19])
                      Ptyp_constr "string" (ctyp.ml[62,1524+13]..[62,1524+19])
                      []
                  ]
              expression (ctyp.ml[63,1553+7]..[72,1814+74])
                Pexp_function
                [
                  <case>
                    pattern (ctyp.ml[64,1569+9]..[64,1569+20])
                      Ppat_constraint
                      pattern (ctyp.ml[64,1569+10]..[64,1569+12])
                        Ppat_var "ty" (ctyp.ml[64,1569+10]..[64,1569+12])
                      core_type (ctyp.ml[64,1569+15]..[64,1569+19])
                        Ptyp_constr "ctyp" (ctyp.ml[64,1569+15]..[64,1569+19])
                        []
                    expression (ctyp.ml[65,1593+11]..[72,1814+74])
                      Pexp_apply
                      expression (ctyp.ml[65,1593+11]..[65,1593+26])
                        Pexp_ident "List.fold_right" (ctyp.ml[65,1593+11]..[65,1593+26])
                      [
                        <label> ""
                          expression (ctyp.ml[66,1620+14]..[72,1814+64])
                            Pexp_function
                            [
                              <case>
                                pattern (ctyp.ml[67,1643+16]..[67,1643+20])
                                  Ppat_var "name" (ctyp.ml[67,1643+16]..[67,1643+20])
                                expression (ctyp.ml[68,1667+19]..[72,1814+63])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (ctyp.ml[69,1695+21]..[69,1695+24])
                                        Ppat_var "acc" (ctyp.ml[69,1695+21]..[69,1695+24])
                                      expression (ctyp.ml[70,1723+23]..[72,1814+63])
                                        Pexp_coerce
                                        expression (ctyp.ml[70,1723+24]..[72,1814+48])
                                          Pexp_variant "Arrow"
                                          Some
                                            expression (ctyp.ml[71,1754+26]..[72,1814+48])
                                              Pexp_tuple
                                              [
                                                expression (ctyp.ml[71,1754+28]..[71,1754+57])
                                                  Pexp_variant "Quote"
                                                  Some
                                                    expression (ctyp.ml[71,1754+35]..[71,1754+57])
                                                      Pexp_tuple
                                                      [
                                                        expression (ctyp.ml[71,1754+36]..[71,1754+43])
                                                          Pexp_variant "Normal"
                                                          None
                                                        expression (ctyp.ml[71,1754+46]..[71,1754+55])
                                                          Pexp_variant "Lid"
                                                          Some
                                                            expression (ctyp.ml[71,1754+51]..[71,1754+55])
                                                              Pexp_ident "name" (ctyp.ml[71,1754+51]..[71,1754+55])
                                                      ]
                                                expression (ctyp.ml[72,1814+28]..[72,1814+47])
                                                  Pexp_coerce
                                                  expression (ctyp.ml[72,1814+29]..[72,1814+32])
                                                    Pexp_ident "acc" (ctyp.ml[72,1814+29]..[72,1814+32])
                                                  None
                                                  core_type (ctyp.ml[72,1814+36]..[72,1814+46])
                                                    Ptyp_constr "Astfn.ctyp" (ctyp.ml[72,1814+36]..[72,1814+46])
                                                    []
                                              ]
                                        None
                                        core_type (ctyp.ml[72,1814+52]..[72,1814+62])
                                          Ptyp_constr "Astfn.ctyp" (ctyp.ml[72,1814+52]..[72,1814+62])
                                          []
                                  ]
                            ]
                        <label> ""
                          expression (ctyp.ml[72,1814+66]..[72,1814+71])
                            Pexp_ident "names" (ctyp.ml[72,1814+66]..[72,1814+71])
                        <label> ""
                          expression (ctyp.ml[72,1814+72]..[72,1814+74])
                            Pexp_ident "ty" (ctyp.ml[72,1814+72]..[72,1814+74])
                      ]
                ]
          ]
    ]
  structure_item (ctyp.ml[73,1890+0]..[76,1940+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[73,1890+4]..[73,1890+8])
          Ppat_var "+>" (ctyp.ml[73,1890+4]..[73,1890+8])
        expression (ctyp.ml[74,1901+2]..[76,1940+69])
          Pexp_function
          [
            <case>
              pattern (ctyp.ml[75,1912+4]..[75,1912+24])
                Ppat_constraint
                pattern (ctyp.ml[75,1912+5]..[75,1912+11])
                  Ppat_var "params" (ctyp.ml[75,1912+5]..[75,1912+11])
                core_type (ctyp.ml[75,1912+14]..[75,1912+23])
                  Ptyp_constr "list" (ctyp.ml[75,1912+19]..[75,1912+23])
                  [
                    core_type (ctyp.ml[75,1912+14]..[75,1912+18])
                      Ptyp_constr "ctyp" (ctyp.ml[75,1912+14]..[75,1912+18])
                      []
                  ]
              expression (ctyp.ml[76,1940+7]..[76,1940+68])
                Pexp_function
                [
                  <case>
                    pattern (ctyp.ml[76,1940+18]..[76,1940+31])
                      Ppat_constraint
                      pattern (ctyp.ml[76,1940+19]..[76,1940+23])
                        Ppat_var "base" (ctyp.ml[76,1940+19]..[76,1940+23])
                      core_type (ctyp.ml[76,1940+26]..[76,1940+30])
                        Ptyp_constr "ctyp" (ctyp.ml[76,1940+26]..[76,1940+30])
                        []
                    expression (ctyp.ml[76,1940+35]..[76,1940+68])
                      Pexp_apply
                      expression (ctyp.ml[76,1940+35]..[76,1940+50])
                        Pexp_ident "List.fold_right" (ctyp.ml[76,1940+35]..[76,1940+50])
                      [
                        <label> ""
                          expression (ctyp.ml[76,1940+51]..[76,1940+56])
                            Pexp_ident "arrow" (ctyp.ml[76,1940+51]..[76,1940+56])
                        <label> ""
                          expression (ctyp.ml[76,1940+57]..[76,1940+63])
                            Pexp_ident "params" (ctyp.ml[76,1940+57]..[76,1940+63])
                        <label> ""
                          expression (ctyp.ml[76,1940+64]..[76,1940+68])
                            Pexp_ident "base" (ctyp.ml[76,1940+64]..[76,1940+68])
                      ]
                ]
          ]
    ]
  structure_item (ctyp.ml[77,2010+0]..[88,2367+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[77,2010+4]..[77,2010+24])
          Ppat_var "name_length_of_tydcl" (ctyp.ml[77,2010+4]..[77,2010+24])
        expression (ctyp.ml[78,2037+2]..[88,2367+59])
          Pexp_function
          [
            <case>
              pattern (ctyp.ml[79,2048+4]..[79,2048+18])
                Ppat_constraint
                pattern (ctyp.ml[79,2048+5]..[79,2048+6])
                  Ppat_var "x" (ctyp.ml[79,2048+5]..[79,2048+6])
                core_type (ctyp.ml[79,2048+9]..[79,2048+17])
                  Ptyp_constr "typedecl" (ctyp.ml[79,2048+9]..[79,2048+17])
                  []
              expression (ctyp.ml[80,2070+6]..[88,2367+59])
                Pexp_constraint
                expression (ctyp.ml[80,2070+8]..[88,2367+41])
                  Pexp_match
                  expression (ctyp.ml[80,2070+14]..[80,2070+15])
                    Pexp_ident "x" (ctyp.ml[80,2070+14]..[80,2070+15])
                  [
                    <case>
                      pattern (ctyp.ml[81,2091+10]..[81,2091+39])
                        Ppat_variant "TyDcl"
                        Some
                          pattern (ctyp.ml[81,2091+10]..[81,2091+39])
                            Ppat_tuple
                            [
                              pattern (ctyp.ml[81,2091+18]..[81,2091+27])
                                Ppat_variant "Lid"
                                Some
                                  pattern (ctyp.ml[81,2091+23]..[81,2091+27])
                                    Ppat_var "name" (ctyp.ml[81,2091+23]..[81,2091+27])
                              pattern (ctyp.ml[81,2091+28]..[81,2091+34])
                                Ppat_var "tyvars" (ctyp.ml[81,2091+28]..[81,2091+34])
                              pattern (ctyp.ml[81,2091+35]..[81,2091+36])
                                Ppat_any
                              pattern (ctyp.ml[81,2091+37]..[81,2091+38])
                                Ppat_any
                            ]
                      expression (ctyp.ml[82,2134+12]..[85,2216+79])
                        Pexp_tuple
                        [
                          expression (ctyp.ml[82,2134+13]..[82,2134+17])
                            Pexp_ident "name" (ctyp.ml[82,2134+13]..[82,2134+17])
                          expression (ctyp.ml[83,2153+16]..[85,2216+76])
                            Pexp_match
                            expression (ctyp.ml[83,2153+22]..[83,2153+28])
                              Pexp_ident "tyvars" (ctyp.ml[83,2153+22]..[83,2153+28])
                            [
                              <case>
                                pattern (ctyp.ml[84,2187+18]..[84,2187+23])
                                  Ppat_variant "None"
                                  None
                                expression (ctyp.ml[84,2187+27]..[84,2187+28])
                                  Pexp_constant Const_int 0
                              <case>
                                pattern (ctyp.ml[85,2216+18]..[85,2216+26])
                                  Ppat_variant "Some"
                                  Some
                                    pattern (ctyp.ml[85,2216+24]..[85,2216+26])
                                      Ppat_var "xs" (ctyp.ml[85,2216+24]..[85,2216+26])
                                expression (ctyp.ml[85,2216+30]..[85,2216+76])
                                  Pexp_apply
                                  expression (ctyp.ml[85,2216+42]..[85,2216+44])
                                    Pexp_ident "@@" (ctyp.ml[85,2216+42]..[85,2216+44])
                                  [
                                    <label> ""
                                      expression (ctyp.ml[85,2216+30]..[85,2216+41])
                                        Pexp_ident "List.length" (ctyp.ml[85,2216+30]..[85,2216+41])
                                    <label> ""
                                      expression (ctyp.ml[85,2216+46]..[85,2216+75])
                                        Pexp_apply
                                        expression (ctyp.ml[85,2216+46]..[85,2216+69])
                                          Pexp_ident "Ast_basic.N.list_of_com" (ctyp.ml[85,2216+46]..[85,2216+69])
                                        [
                                          <label> ""
                                            expression (ctyp.ml[85,2216+70]..[85,2216+72])
                                              Pexp_ident "xs" (ctyp.ml[85,2216+70]..[85,2216+72])
                                          <label> ""
                                            expression (ctyp.ml[85,2216+73]..[85,2216+75])
                                              Pexp_construct "[]" (ctyp.ml[85,2216+73]..[85,2216+75])
                                              None
                                        ]
                                  ]
                            ]
                        ]
                    <case>
                      pattern (ctyp.ml[86,2296+10]..[86,2296+15])
                        Ppat_var "tydcl" (ctyp.ml[86,2296+10]..[86,2296+15])
                      expression (ctyp.ml[87,2315+12]..[88,2367+41])
                        Pexp_apply
                        expression (ctyp.ml[87,2315+12]..[87,2315+21])
                          Pexp_ident "failwithf" (ctyp.ml[87,2315+12]..[87,2315+21])
                        [
                          <label> ""
                            expression (ctyp.ml[87,2315+22]..[87,2315+51])
                              Pexp_constant Const_string("name_length_of_tydcl  %s \n",None)
                          <label> ""
                            expression (ctyp.ml[88,2367+15]..[88,2367+40])
                              Pexp_apply
                              expression (ctyp.ml[88,2367+15]..[88,2367+34])
                                Pexp_ident "ObjsN.dump_typedecl" (ctyp.ml[88,2367+15]..[88,2367+34])
                              [
                                <label> ""
                                  expression (ctyp.ml[88,2367+35]..[88,2367+40])
                                    Pexp_ident "tydcl" (ctyp.ml[88,2367+35]..[88,2367+40])
                              ]
                        ]
                  ]
                core_type (ctyp.ml[88,2367+45]..[88,2367+58])
                  Ptyp_tuple
                  [
                    core_type (ctyp.ml[88,2367+46]..[88,2367+52])
                      Ptyp_constr "string" (ctyp.ml[88,2367+46]..[88,2367+52])
                      []
                    core_type (ctyp.ml[88,2367+54]..[88,2367+57])
                      Ptyp_constr "int" (ctyp.ml[88,2367+54]..[88,2367+57])
                      []
                  ]
          ]
    ]
  structure_item (ctyp.ml[89,2427+0]..[101,2770+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[89,2427+4]..[89,2427+20])
          Ppat_var "gen_quantifiers1" (ctyp.ml[89,2427+4]..[89,2427+20])
        expression (ctyp.ml[89,2427+21]..[101,2770+32])
          Pexp_fun "arity"
          None
          pattern (ctyp.ml[89,2427+22]..[89,2427+27])
            Ppat_var "arity" (ctyp.ml[89,2427+22]..[89,2427+27])
          expression (ctyp.ml[90,2458+2]..[101,2770+32])
            Pexp_function
            [
              <case>
                pattern (ctyp.ml[91,2469+4]..[91,2469+5])
                  Ppat_var "n" (ctyp.ml[91,2469+4]..[91,2469+5])
                expression (ctyp.ml[92,2478+6]..[101,2770+32])
                  Pexp_constraint
                  expression (ctyp.ml[92,2478+7]..[101,2770+24])
                    Pexp_apply
                    expression (ctyp.ml[101,2770+9]..[101,2770+11])
                      Pexp_ident "|>" (ctyp.ml[101,2770+9]..[101,2770+11])
                    [
                      <label> ""
                        expression (ctyp.ml[92,2478+8]..[100,2744+24])
                          Pexp_apply
                          expression (ctyp.ml[100,2744+10]..[100,2744+12])
                            Pexp_ident "|>" (ctyp.ml[100,2744+10]..[100,2744+12])
                          [
                            <label> ""
                              expression (ctyp.ml[92,2478+9]..[99,2704+38])
                                Pexp_apply
                                expression (ctyp.ml[92,2478+9]..[92,2478+19])
                                  Pexp_ident "Listf.init" (ctyp.ml[92,2478+9]..[92,2478+19])
                                [
                                  <label> ""
                                    expression (ctyp.ml[92,2478+20]..[92,2478+25])
                                      Pexp_ident "arity" (ctyp.ml[92,2478+20]..[92,2478+25])
                                  <label> ""
                                    expression (ctyp.ml[93,2504+12]..[99,2704+37])
                                      Pexp_function
                                      [
                                        <case>
                                          pattern (ctyp.ml[94,2525+14]..[94,2525+15])
                                            Ppat_var "i" (ctyp.ml[94,2525+14]..[94,2525+15])
                                          expression (ctyp.ml[95,2544+16]..[99,2704+37])
                                            Pexp_apply
                                            expression (ctyp.ml[95,2544+31]..[95,2544+33])
                                              Pexp_ident "@@" (ctyp.ml[95,2544+31]..[95,2544+33])
                                            [
                                              <label> ""
                                                expression (ctyp.ml[95,2544+17]..[95,2544+29])
                                                  Pexp_apply
                                                  expression (ctyp.ml[95,2544+17]..[95,2544+27])
                                                    Pexp_ident "Listf.init" (ctyp.ml[95,2544+17]..[95,2544+27])
                                                  [
                                                    <label> ""
                                                      expression (ctyp.ml[95,2544+28]..[95,2544+29])
                                                        Pexp_ident "n" (ctyp.ml[95,2544+28]..[95,2544+29])
                                                  ]
                                              <label> ""
                                                expression (ctyp.ml[96,2578+20]..[99,2704+35])
                                                  Pexp_function
                                                  [
                                                    <case>
                                                      pattern (ctyp.ml[97,2607+22]..[97,2607+23])
                                                        Ppat_var "j" (ctyp.ml[97,2607+22]..[97,2607+23])
                                                      expression (ctyp.ml[98,2634+24]..[99,2704+35])
                                                        Pexp_coerce
                                                        expression (ctyp.ml[98,2634+25]..[98,2634+65])
                                                          Pexp_variant "Quote"
                                                          Some
                                                            expression (ctyp.ml[98,2634+32]..[98,2634+65])
                                                              Pexp_tuple
                                                              [
                                                                expression (ctyp.ml[98,2634+33]..[98,2634+40])
                                                                  Pexp_variant "Normal"
                                                                  None
                                                                expression (ctyp.ml[98,2634+43]..[98,2634+63])
                                                                  Pexp_variant "Lid"
                                                                  Some
                                                                    expression (ctyp.ml[98,2634+49]..[98,2634+62])
                                                                      Pexp_apply
                                                                      expression (ctyp.ml[98,2634+49]..[98,2634+53])
Pexp_ident "allx" (ctyp.ml[98,2634+49]..[98,2634+53])
                                                                      [
<label> "off"
  expression (ctyp.ml[98,2634+59]..[98,2634+60])
    Pexp_ident "i" (ctyp.ml[98,2634+59]..[98,2634+60])
<label> ""
  expression (ctyp.ml[98,2634+61]..[98,2634+62])
    Pexp_ident "j" (ctyp.ml[98,2634+61]..[98,2634+62])
                                                                      ]
                                                              ]
                                                        None
                                                        core_type (ctyp.ml[99,2704+24]..[99,2704+34])
                                                          Ptyp_constr "Astfn.ctyp" (ctyp.ml[99,2704+24]..[99,2704+34])
                                                          []
                                                  ]
                                            ]
                                      ]
                                ]
                            <label> ""
                              expression (ctyp.ml[100,2744+13]..[100,2744+24])
                                Pexp_ident "List.concat" (ctyp.ml[100,2744+13]..[100,2744+24])
                          ]
                      <label> ""
                        expression (ctyp.ml[101,2770+12]..[101,2770+24])
                          Pexp_ident "appl_of_list" (ctyp.ml[101,2770+12]..[101,2770+24])
                    ]
                  core_type (ctyp.ml[101,2770+27]..[101,2770+31])
                    Ptyp_constr "ctyp" (ctyp.ml[101,2770+27]..[101,2770+31])
                    []
            ]
    ]
  structure_item (ctyp.ml[102,2803+0]..[108,2943+76])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[102,2803+4]..[102,2803+13])
          Ppat_var "of_id_len" (ctyp.ml[102,2803+4]..[102,2803+13])
        expression (ctyp.ml[102,2803+14]..[108,2943+76])
          Pexp_fun "off"
          None
          pattern (ctyp.ml[102,2803+15]..[102,2803+18])
            Ppat_var "off" (ctyp.ml[102,2803+15]..[102,2803+18])
          expression (ctyp.ml[103,2825+2]..[108,2943+76])
            Pexp_function
            [
              <case>
                pattern (ctyp.ml[104,2836+4]..[104,2836+22])
                  Ppat_tuple
                  [
                    pattern (ctyp.ml[104,2836+5]..[104,2836+17])
                      Ppat_constraint
                      pattern (ctyp.ml[104,2836+6]..[104,2836+8])
                        Ppat_var "id" (ctyp.ml[104,2836+6]..[104,2836+8])
                      core_type (ctyp.ml[104,2836+11]..[104,2836+16])
                        Ptyp_constr "ident" (ctyp.ml[104,2836+11]..[104,2836+16])
                        []
                    pattern (ctyp.ml[104,2836+18]..[104,2836+21])
                      Ppat_var "len" (ctyp.ml[104,2836+18]..[104,2836+21])
                  ]
                expression (ctyp.ml[105,2862+6]..[108,2943+76])
                  Pexp_apply
                  expression (ctyp.ml[105,2862+6]..[105,2862+18])
                    Pexp_ident "appl_of_list" (ctyp.ml[105,2862+6]..[105,2862+18])
                  [
                    <label> ""
                      expression (ctyp.ml[105,2862+20]..[108,2943+75])
                        Pexp_construct "::" (ctyp.ml[105,2862+33]..[105,2862+35])
                        Some
                          expression (ctyp.ml[105,2862+20]..[108,2943+75])
                            Pexp_tuple
                            [
                              expression (ctyp.ml[105,2862+20]..[105,2862+32])
                                Pexp_coerce
                                expression (ctyp.ml[105,2862+21]..[105,2862+23])
                                  Pexp_ident "id" (ctyp.ml[105,2862+21]..[105,2862+23])
                                None
                                core_type (ctyp.ml[105,2862+27]..[105,2862+31])
                                  Ptyp_constr "ctyp" (ctyp.ml[105,2862+27]..[105,2862+31])
                                  []
                              expression (ctyp.ml[106,2898+9]..[108,2943+74])
                                Pexp_apply
                                expression (ctyp.ml[106,2898+9]..[106,2898+19])
                                  Pexp_ident "Listf.init" (ctyp.ml[106,2898+9]..[106,2898+19])
                                [
                                  <label> ""
                                    expression (ctyp.ml[106,2898+20]..[106,2898+23])
                                      Pexp_ident "len" (ctyp.ml[106,2898+20]..[106,2898+23])
                                  <label> ""
                                    expression (ctyp.ml[107,2922+12]..[108,2943+73])
                                      Pexp_function
                                      [
                                        <case>
                                          pattern (ctyp.ml[108,2943+14]..[108,2943+15])
                                            Ppat_var "i" (ctyp.ml[108,2943+14]..[108,2943+15])
                                          expression (ctyp.ml[108,2943+19]..[108,2943+73])
                                            Pexp_coerce
                                            expression (ctyp.ml[108,2943+20]..[108,2943+58])
                                              Pexp_variant "Quote"
                                              Some
                                                expression (ctyp.ml[108,2943+27]..[108,2943+58])
                                                  Pexp_tuple
                                                  [
                                                    expression (ctyp.ml[108,2943+28]..[108,2943+35])
                                                      Pexp_variant "Normal"
                                                      None
                                                    expression (ctyp.ml[108,2943+38]..[108,2943+56])
                                                      Pexp_variant "Lid"
                                                      Some
                                                        expression (ctyp.ml[108,2943+44]..[108,2943+55])
                                                          Pexp_apply
                                                          expression (ctyp.ml[108,2943+44]..[108,2943+48])
                                                            Pexp_ident "allx" (ctyp.ml[108,2943+44]..[108,2943+48])
                                                          [
                                                            <label> "off"
                                                              expression (ctyp.ml[108,2943+50]..[108,2943+53])
                                                                Pexp_ident "off" (ctyp.ml[108,2943+50]..[108,2943+53])
                                                            <label> ""
                                                              expression (ctyp.ml[108,2943+54]..[108,2943+55])
                                                                Pexp_ident "i" (ctyp.ml[108,2943+54]..[108,2943+55])
                                                          ]
                                                  ]
                                            None
                                            core_type (ctyp.ml[108,2943+62]..[108,2943+72])
                                              Ptyp_constr "Astfn.ctyp" (ctyp.ml[108,2943+62]..[108,2943+72])
                                              []
                                      ]
                                ]
                            ]
                  ]
            ]
    ]
  structure_item (ctyp.ml[109,3020+0]..[110,3044+72])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[109,3020+4]..[109,3020+15])
          Ppat_var "of_name_len" (ctyp.ml[109,3020+4]..[109,3020+15])
        expression (ctyp.ml[109,3020+16]..[110,3044+72])
          Pexp_fun "off"
          None
          pattern (ctyp.ml[109,3020+17]..[109,3020+20])
            Ppat_var "off" (ctyp.ml[109,3020+17]..[109,3020+20])
          expression (ctyp.ml[110,3044+2]..[110,3044+72])
            Pexp_function
            [
              <case>
                pattern (ctyp.ml[110,3044+13]..[110,3044+23])
                  Ppat_tuple
                  [
                    pattern (ctyp.ml[110,3044+14]..[110,3044+18])
                      Ppat_var "name" (ctyp.ml[110,3044+14]..[110,3044+18])
                    pattern (ctyp.ml[110,3044+19]..[110,3044+22])
                      Ppat_var "len" (ctyp.ml[110,3044+19]..[110,3044+22])
                  ]
                expression (ctyp.ml[110,3044+27]..[110,3044+72])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (ctyp.ml[110,3044+31]..[110,3044+33])
                        Ppat_var "id" (ctyp.ml[110,3044+31]..[110,3044+33])
                      expression (ctyp.ml[110,3044+36]..[110,3044+44])
                        Pexp_apply
                        expression (ctyp.ml[110,3044+36]..[110,3044+39])
                          Pexp_ident "lid" (ctyp.ml[110,3044+36]..[110,3044+39])
                        [
                          <label> ""
                            expression (ctyp.ml[110,3044+40]..[110,3044+44])
                              Pexp_ident "name" (ctyp.ml[110,3044+40]..[110,3044+44])
                        ]
                  ]
                  expression (ctyp.ml[110,3044+48]..[110,3044+72])
                    Pexp_apply
                    expression (ctyp.ml[110,3044+48]..[110,3044+57])
                      Pexp_ident "of_id_len" (ctyp.ml[110,3044+48]..[110,3044+57])
                    [
                      <label> "off"
                        expression (ctyp.ml[110,3044+59]..[110,3044+62])
                          Pexp_ident "off" (ctyp.ml[110,3044+59]..[110,3044+62])
                      <label> ""
                        expression (ctyp.ml[110,3044+63]..[110,3044+72])
                          Pexp_tuple
                          [
                            expression (ctyp.ml[110,3044+64]..[110,3044+66])
                              Pexp_ident "id" (ctyp.ml[110,3044+64]..[110,3044+66])
                            expression (ctyp.ml[110,3044+68]..[110,3044+71])
                              Pexp_ident "len" (ctyp.ml[110,3044+68]..[110,3044+71])
                          ]
                    ]
            ]
    ]
  structure_item (ctyp.ml[111,3117+0]..[114,3182+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[111,3117+4]..[111,3117+19])
          Ppat_var "gen_ty_of_tydcl" (ctyp.ml[111,3117+4]..[111,3117+19])
        expression (ctyp.ml[111,3117+20]..[114,3182+59])
          Pexp_fun "off"
          None
          pattern (ctyp.ml[111,3117+21]..[111,3117+24])
            Ppat_var "off" (ctyp.ml[111,3117+21]..[111,3117+24])
          expression (ctyp.ml[112,3145+2]..[114,3182+59])
            Pexp_function
            [
              <case>
                pattern (ctyp.ml[113,3156+4]..[113,3156+22])
                  Ppat_constraint
                  pattern (ctyp.ml[113,3156+5]..[113,3156+10])
                    Ppat_var "tydcl" (ctyp.ml[113,3156+5]..[113,3156+10])
                  core_type (ctyp.ml[113,3156+13]..[113,3156+21])
                    Ptyp_constr "typedecl" (ctyp.ml[113,3156+13]..[113,3156+21])
                    []
                expression (ctyp.ml[114,3182+6]..[114,3182+59])
                  Pexp_apply
                  expression (ctyp.ml[114,3182+38]..[114,3182+40])
                    Pexp_ident "|>" (ctyp.ml[114,3182+38]..[114,3182+40])
                  [
                    <label> ""
                      expression (ctyp.ml[114,3182+7]..[114,3182+36])
                        Pexp_apply
                        expression (ctyp.ml[114,3182+13]..[114,3182+15])
                          Pexp_ident "|>" (ctyp.ml[114,3182+13]..[114,3182+15])
                        [
                          <label> ""
                            expression (ctyp.ml[114,3182+7]..[114,3182+12])
                              Pexp_ident "tydcl" (ctyp.ml[114,3182+7]..[114,3182+12])
                          <label> ""
                            expression (ctyp.ml[114,3182+16]..[114,3182+36])
                              Pexp_ident "name_length_of_tydcl" (ctyp.ml[114,3182+16]..[114,3182+36])
                        ]
                    <label> ""
                      expression (ctyp.ml[114,3182+42]..[114,3182+58])
                        Pexp_apply
                        expression (ctyp.ml[114,3182+42]..[114,3182+53])
                          Pexp_ident "of_name_len" (ctyp.ml[114,3182+42]..[114,3182+53])
                        [
                          <label> "off"
                            expression (ctyp.ml[114,3182+55]..[114,3182+58])
                              Pexp_ident "off" (ctyp.ml[114,3182+55]..[114,3182+58])
                        ]
                  ]
            ]
    ]
  structure_item (ctyp.ml[115,3242+0]..[125,3654+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[115,3242+4]..[115,3242+18])
          Ppat_var "list_of_record" (ctyp.ml[115,3242+4]..[115,3242+18])
        expression (ctyp.ml[116,3263+2]..[125,3654+15])
          Pexp_function
          [
            <case>
              pattern (ctyp.ml[117,3274+4]..[117,3274+20])
                Ppat_constraint
                pattern (ctyp.ml[117,3274+5]..[117,3274+7])
                  Ppat_var "ty" (ctyp.ml[117,3274+5]..[117,3274+7])
                core_type (ctyp.ml[117,3274+10]..[117,3274+19])
                  Ptyp_constr "name_ctyp" (ctyp.ml[117,3274+10]..[117,3274+19])
                  []
              expression (ctyp.ml[118,3298+6]..[125,3654+15])
                Pexp_constraint
                expression (ctyp.ml[118,3298+7]..[124,3572+78])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (ctyp.ml[118,3298+11]..[118,3298+32])
                        Ppat_constraint
                        pattern (ctyp.ml[118,3298+12]..[118,3298+15])
                          Ppat_var "tys" (ctyp.ml[118,3298+12]..[118,3298+15])
                        core_type (ctyp.ml[118,3298+17]..[118,3298+31])
                          Ptyp_constr "list" (ctyp.ml[118,3298+27]..[118,3298+31])
                          [
                            core_type (ctyp.ml[118,3298+17]..[118,3298+26])
                              Ptyp_constr "name_ctyp" (ctyp.ml[118,3298+17]..[118,3298+26])
                              []
                          ]
                      expression (ctyp.ml[118,3298+34]..[118,3298+63])
                        Pexp_apply
                        expression (ctyp.ml[118,3298+34]..[118,3298+57])
                          Pexp_ident "Ast_basic.N.list_of_sem" (ctyp.ml[118,3298+34]..[118,3298+57])
                        [
                          <label> ""
                            expression (ctyp.ml[118,3298+58]..[118,3298+60])
                              Pexp_ident "ty" (ctyp.ml[118,3298+58]..[118,3298+60])
                          <label> ""
                            expression (ctyp.ml[118,3298+61]..[118,3298+63])
                              Pexp_construct "[]" (ctyp.ml[118,3298+61]..[118,3298+63])
                              None
                        ]
                  ]
                  expression (ctyp.ml[119,3365+7]..[124,3572+78])
                    Pexp_apply
                    expression (ctyp.ml[119,3365+11]..[119,3365+13])
                      Pexp_ident "|>" (ctyp.ml[119,3365+11]..[119,3365+13])
                    [
                      <label> ""
                        expression (ctyp.ml[119,3365+7]..[119,3365+10])
                          Pexp_ident "tys" (ctyp.ml[119,3365+7]..[119,3365+10])
                      <label> ""
                        expression (ctyp.ml[120,3379+10]..[124,3572+77])
                          Pexp_apply
                          expression (ctyp.ml[120,3379+10]..[120,3379+18])
                            Pexp_ident "List.map" (ctyp.ml[120,3379+10]..[120,3379+18])
                          [
                            <label> ""
                              expression (ctyp.ml[121,3398+13]..[124,3572+76])
                                Pexp_function
                                [
                                  <case>
                                    pattern (ctyp.ml[122,3420+15]..[122,3420+40])
                                      Ppat_variant "TyColMut"
                                      Some
                                        pattern (ctyp.ml[122,3420+15]..[122,3420+40])
                                          Ppat_tuple
                                          [
                                            pattern (ctyp.ml[122,3420+26]..[122,3420+36])
                                              Ppat_variant "Lid"
                                              Some
                                                pattern (ctyp.ml[122,3420+31]..[122,3420+36])
                                                  Ppat_var "label" (ctyp.ml[122,3420+31]..[122,3420+36])
                                            pattern (ctyp.ml[122,3420+37]..[122,3420+39])
                                              Ppat_var "ty" (ctyp.ml[122,3420+37]..[122,3420+39])
                                          ]
                                    expression (ctyp.ml[122,3420+44]..[122,3420+76])
                                      Pexp_record
                                      [
                                        "label" (ctyp.ml[122,3420+46]..[122,3420+51])
                                          expression (ctyp.ml[122,3420+46]..[122,3420+51])
                                            Pexp_ident "label" (ctyp.ml[122,3420+46]..[122,3420+51])
                                        "ty" (ctyp.ml[122,3420+53]..[122,3420+55])
                                          expression (ctyp.ml[122,3420+53]..[122,3420+55])
                                            Pexp_ident "ty" (ctyp.ml[122,3420+53]..[122,3420+55])
                                        "is_mutable" (ctyp.ml[122,3420+57]..[122,3420+67])
                                          expression (ctyp.ml[122,3420+70]..[122,3420+74])
                                            Pexp_construct "true" (ctyp.ml[122,3420+70]..[122,3420+74])
                                            None
                                      ]
                                      None
                                  <case>
                                    pattern (ctyp.ml[123,3497+15]..[123,3497+37])
                                      Ppat_variant "TyCol"
                                      Some
                                        pattern (ctyp.ml[123,3497+15]..[123,3497+37])
                                          Ppat_tuple
                                          [
                                            pattern (ctyp.ml[123,3497+23]..[123,3497+33])
                                              Ppat_variant "Lid"
                                              Some
                                                pattern (ctyp.ml[123,3497+28]..[123,3497+33])
                                                  Ppat_var "label" (ctyp.ml[123,3497+28]..[123,3497+33])
                                            pattern (ctyp.ml[123,3497+34]..[123,3497+36])
                                              Ppat_var "ty" (ctyp.ml[123,3497+34]..[123,3497+36])
                                          ]
                                    expression (ctyp.ml[123,3497+41]..[123,3497+74])
                                      Pexp_record
                                      [
                                        "label" (ctyp.ml[123,3497+43]..[123,3497+48])
                                          expression (ctyp.ml[123,3497+43]..[123,3497+48])
                                            Pexp_ident "label" (ctyp.ml[123,3497+43]..[123,3497+48])
                                        "ty" (ctyp.ml[123,3497+50]..[123,3497+52])
                                          expression (ctyp.ml[123,3497+50]..[123,3497+52])
                                            Pexp_ident "ty" (ctyp.ml[123,3497+50]..[123,3497+52])
                                        "is_mutable" (ctyp.ml[123,3497+54]..[123,3497+64])
                                          expression (ctyp.ml[123,3497+67]..[123,3497+72])
                                            Pexp_construct "false" (ctyp.ml[123,3497+67]..[123,3497+72])
                                            None
                                      ]
                                      None
                                  <case>
                                    pattern (ctyp.ml[124,3572+15]..[124,3572+17])
                                      Ppat_var "t0" (ctyp.ml[124,3572+15]..[124,3572+17])
                                    expression (ctyp.ml[124,3572+21]..[124,3572+76])
                                      Pexp_apply
                                      expression (ctyp.ml[124,3572+21]..[124,3572+30])
                                        Pexp_ident "failwithf" (ctyp.ml[124,3572+21]..[124,3572+30])
                                      [
                                        <label> ""
                                          expression (ctyp.ml[124,3572+31]..[124,3572+50])
                                            Pexp_constant Const_string("list_of_record %s",None)
                                        <label> ""
                                          expression (ctyp.ml[124,3572+52]..[124,3572+75])
                                            Pexp_apply
                                            expression (ctyp.ml[124,3572+52]..[124,3572+72])
                                              Pexp_ident "ObjsN.dump_name_ctyp" (ctyp.ml[124,3572+52]..[124,3572+72])
                                            [
                                              <label> ""
                                                expression (ctyp.ml[124,3572+73]..[124,3572+75])
                                                  Pexp_ident "t0" (ctyp.ml[124,3572+73]..[124,3572+75])
                                            ]
                                      ]
                                ]
                          ]
                    ]
                core_type (ctyp.ml[125,3654+6]..[125,3654+14])
                  Ptyp_constr "list" (ctyp.ml[125,3654+10]..[125,3654+14])
                  [
                    core_type (ctyp.ml[125,3654+6]..[125,3654+9])
                      Ptyp_constr "col" (ctyp.ml[125,3654+6]..[125,3654+9])
                      []
                  ]
          ]
    ]
  structure_item (ctyp.ml[126,3670+0]..[128,3699+76])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[126,3670+4]..[126,3670+15])
          Ppat_var "gen_tuple_n" (ctyp.ml[126,3670+4]..[126,3670+15])
        expression (ctyp.ml[127,3688+2]..[128,3699+76])
          Pexp_function
          [
            <case>
              pattern (ctyp.ml[128,3699+4]..[128,3699+6])
                Ppat_var "ty" (ctyp.ml[128,3699+4]..[128,3699+6])
              expression (ctyp.ml[128,3699+11]..[128,3699+75])
                Pexp_function
                [
                  <case>
                    pattern (ctyp.ml[128,3699+22]..[128,3699+23])
                      Ppat_var "n" (ctyp.ml[128,3699+22]..[128,3699+23])
                    expression (ctyp.ml[128,3699+27]..[128,3699+75])
                      Pexp_apply
                      expression (ctyp.ml[128,3699+63]..[128,3699+65])
                        Pexp_ident "|>" (ctyp.ml[128,3699+63]..[128,3699+65])
                      [
                        <label> ""
                          expression (ctyp.ml[128,3699+28]..[128,3699+61])
                            Pexp_apply
                            expression (ctyp.ml[128,3699+28]..[128,3699+38])
                              Pexp_ident "Listf.init" (ctyp.ml[128,3699+28]..[128,3699+38])
                            [
                              <label> ""
                                expression (ctyp.ml[128,3699+39]..[128,3699+40])
                                  Pexp_ident "n" (ctyp.ml[128,3699+39]..[128,3699+40])
                              <label> ""
                                expression (ctyp.ml[128,3699+42]..[128,3699+60])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (ctyp.ml[128,3699+53]..[128,3699+54])
                                        Ppat_any
                                      expression (ctyp.ml[128,3699+58]..[128,3699+60])
                                        Pexp_ident "ty" (ctyp.ml[128,3699+58]..[128,3699+60])
                                  ]
                            ]
                        <label> ""
                          expression (ctyp.ml[128,3699+66]..[128,3699+75])
                            Pexp_ident "tuple_sta" (ctyp.ml[128,3699+66]..[128,3699+75])
                      ]
                ]
          ]
    ]
  structure_item (ctyp.ml[129,3776+0]..[132,3818+76])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[129,3776+4]..[129,3776+18])
          Ppat_var "repeat_arrow_n" (ctyp.ml[129,3776+4]..[129,3776+18])
        expression (ctyp.ml[130,3797+2]..[132,3818+76])
          Pexp_function
          [
            <case>
              pattern (ctyp.ml[131,3808+4]..[131,3808+6])
                Ppat_var "ty" (ctyp.ml[131,3808+4]..[131,3808+6])
              expression (ctyp.ml[132,3818+7]..[132,3818+75])
                Pexp_function
                [
                  <case>
                    pattern (ctyp.ml[132,3818+18]..[132,3818+19])
                      Ppat_var "n" (ctyp.ml[132,3818+18]..[132,3818+19])
                    expression (ctyp.ml[132,3818+23]..[132,3818+75])
                      Pexp_apply
                      expression (ctyp.ml[132,3818+59]..[132,3818+61])
                        Pexp_ident "|>" (ctyp.ml[132,3818+59]..[132,3818+61])
                      [
                        <label> ""
                          expression (ctyp.ml[132,3818+24]..[132,3818+57])
                            Pexp_apply
                            expression (ctyp.ml[132,3818+24]..[132,3818+34])
                              Pexp_ident "Listf.init" (ctyp.ml[132,3818+24]..[132,3818+34])
                            [
                              <label> ""
                                expression (ctyp.ml[132,3818+35]..[132,3818+36])
                                  Pexp_ident "n" (ctyp.ml[132,3818+35]..[132,3818+36])
                              <label> ""
                                expression (ctyp.ml[132,3818+38]..[132,3818+56])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (ctyp.ml[132,3818+49]..[132,3818+50])
                                        Ppat_any
                                      expression (ctyp.ml[132,3818+54]..[132,3818+56])
                                        Pexp_ident "ty" (ctyp.ml[132,3818+54]..[132,3818+56])
                                  ]
                            ]
                        <label> ""
                          expression (ctyp.ml[132,3818+62]..[132,3818+75])
                            Pexp_ident "arrow_of_list" (ctyp.ml[132,3818+62]..[132,3818+75])
                      ]
                ]
          ]
    ]
  structure_item (ctyp.ml[133,3895+0]..[133,3895+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[133,3895+4]..[133,3895+13])
          Ppat_var "result_id" (ctyp.ml[133,3895+4]..[133,3895+13])
        expression (ctyp.ml[133,3895+16]..[133,3895+21])
          Pexp_apply
          expression (ctyp.ml[133,3895+16]..[133,3895+19])
            Pexp_ident "ref" (ctyp.ml[133,3895+16]..[133,3895+19])
          [
            <label> ""
              expression (ctyp.ml[133,3895+20]..[133,3895+21])
                Pexp_constant Const_int 0
          ]
    ]
  structure_item (ctyp.ml[134,3917+0]..[193,6357+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[134,3917+4]..[134,3917+18])
          Ppat_var "mk_method_type" (ctyp.ml[134,3917+4]..[134,3917+18])
        expression (ctyp.ml[134,3917+19]..[193,6357+25])
          Pexp_fun "number"
          None
          pattern (ctyp.ml[134,3917+20]..[134,3917+26])
            Ppat_var "number" (ctyp.ml[134,3917+20]..[134,3917+26])
          expression (ctyp.ml[134,3917+28]..[193,6357+25])
            Pexp_fun "prefix"
            None
            pattern (ctyp.ml[134,3917+29]..[134,3917+35])
              Ppat_var "prefix" (ctyp.ml[134,3917+29]..[134,3917+35])
            expression (ctyp.ml[135,3956+2]..[193,6357+25])
              Pexp_function
              [
                <case>
                  pattern (ctyp.ml[136,3967+4]..[136,3967+12])
                    Ppat_tuple
                    [
                      pattern (ctyp.ml[136,3967+5]..[136,3967+7])
                        Ppat_var "id" (ctyp.ml[136,3967+5]..[136,3967+7])
                      pattern (ctyp.ml[136,3967+8]..[136,3967+11])
                        Ppat_var "len" (ctyp.ml[136,3967+8]..[136,3967+11])
                    ]
                  expression (ctyp.ml[137,3983+7]..[193,6357+24])
                    Pexp_function
                    [
                      <case>
                        pattern (ctyp.ml[138,3999+9]..[138,3999+26])
                          Ppat_constraint
                          pattern (ctyp.ml[138,3999+10]..[138,3999+11])
                            Ppat_var "k" (ctyp.ml[138,3999+10]..[138,3999+11])
                          core_type (ctyp.ml[138,3999+14]..[138,3999+25])
                            Ptyp_constr "destination" (ctyp.ml[138,3999+14]..[138,3999+25])
                            []
                        expression (ctyp.ml[139,4029+11]..[193,6357+24])
                          Pexp_constraint
                          expression (ctyp.ml[139,4029+12]..[192,6279+74])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (ctyp.ml[139,4029+16]..[139,4029+22])
                                  Ppat_var "prefix" (ctyp.ml[139,4029+16]..[139,4029+22])
                                expression (ctyp.ml[140,4054+14]..[143,4175+22])
                                  Pexp_apply
                                  expression (ctyp.ml[140,4054+14]..[140,4054+22])
                                    Pexp_ident "List.map" (ctyp.ml[140,4054+14]..[140,4054+22])
                                  [
                                    <label> ""
                                      expression (ctyp.ml[141,4077+17]..[142,4103+70])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (ctyp.ml[142,4103+19]..[142,4103+20])
                                              Ppat_var "s" (ctyp.ml[142,4103+19]..[142,4103+20])
                                            expression (ctyp.ml[142,4103+24]..[142,4103+70])
                                              Pexp_apply
                                              expression (ctyp.ml[142,4103+24]..[142,4103+42])
                                                Pexp_ident "Stringf.drop_while" (ctyp.ml[142,4103+24]..[142,4103+42])
                                              [
                                                <label> ""
                                                  expression (ctyp.ml[142,4103+44]..[142,4103+67])
                                                    Pexp_function
                                                    [
                                                      <case>
                                                        pattern (ctyp.ml[142,4103+55]..[142,4103+56])
                                                          Ppat_var "c" (ctyp.ml[142,4103+55]..[142,4103+56])
                                                        expression (ctyp.ml[142,4103+60]..[142,4103+67])
                                                          Pexp_apply
                                                          expression (ctyp.ml[142,4103+62]..[142,4103+63])
                                                            Pexp_ident "=" (ctyp.ml[142,4103+62]..[142,4103+63])
                                                          [
                                                            <label> ""
                                                              expression (ctyp.ml[142,4103+60]..[142,4103+61])
                                                                Pexp_ident "c" (ctyp.ml[142,4103+60]..[142,4103+61])
                                                            <label> ""
                                                              expression (ctyp.ml[142,4103+64]..[142,4103+67])
                                                                Pexp_constant Const_char 5f
                                                          ]
                                                    ]
                                                <label> ""
                                                  expression (ctyp.ml[142,4103+69]..[142,4103+70])
                                                    Pexp_ident "s" (ctyp.ml[142,4103+69]..[142,4103+70])
                                              ]
                                        ]
                                    <label> ""
                                      expression (ctyp.ml[143,4175+16]..[143,4175+22])
                                        Pexp_ident "prefix" (ctyp.ml[143,4175+16]..[143,4175+22])
                                  ]
                            ]
                            expression (ctyp.ml[144,4201+12]..[192,6279+74])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (ctyp.ml[144,4201+16]..[144,4201+23])
                                    Ppat_var "app_src" (ctyp.ml[144,4201+16]..[144,4201+23])
                                  expression (ctyp.ml[145,4227+14]..[147,4289+64])
                                    Pexp_apply
                                    expression (ctyp.ml[145,4227+24]..[145,4227+26])
                                      Pexp_ident "@@" (ctyp.ml[145,4227+24]..[145,4227+26])
                                    [
                                      <label> ""
                                        expression (ctyp.ml[145,4227+14]..[145,4227+23])
                                          Pexp_ident "app_arrow" (ctyp.ml[145,4227+14]..[145,4227+23])
                                      <label> ""
                                        expression (ctyp.ml[146,4254+17]..[147,4289+63])
                                          Pexp_apply
                                          expression (ctyp.ml[146,4254+17]..[146,4254+27])
                                            Pexp_ident "Listf.init" (ctyp.ml[146,4254+17]..[146,4254+27])
                                          [
                                            <label> ""
                                              expression (ctyp.ml[146,4254+28]..[146,4254+34])
                                                Pexp_ident "number" (ctyp.ml[146,4254+28]..[146,4254+34])
                                            <label> ""
                                              expression (ctyp.ml[147,4289+20]..[147,4289+62])
                                                Pexp_function
                                                [
                                                  <case>
                                                    pattern (ctyp.ml[147,4289+31]..[147,4289+32])
                                                      Ppat_any
                                                    expression (ctyp.ml[147,4289+36]..[147,4289+62])
                                                      Pexp_apply
                                                      expression (ctyp.ml[147,4289+36]..[147,4289+45])
                                                        Pexp_ident "of_id_len" (ctyp.ml[147,4289+36]..[147,4289+45])
                                                      [
                                                        <label> "off"
                                                          expression (ctyp.ml[147,4289+51]..[147,4289+52])
                                                            Pexp_constant Const_int 0
                                                        <label> ""
                                                          expression (ctyp.ml[147,4289+53]..[147,4289+62])
                                                            Pexp_tuple
                                                            [
                                                              expression (ctyp.ml[147,4289+54]..[147,4289+56])
                                                                Pexp_ident "id" (ctyp.ml[147,4289+54]..[147,4289+56])
                                                              expression (ctyp.ml[147,4289+58]..[147,4289+61])
                                                                Pexp_ident "len" (ctyp.ml[147,4289+58]..[147,4289+61])
                                                            ]
                                                      ]
                                                ]
                                          ]
                                    ]
                              ]
                              expression (ctyp.ml[148,4357+12]..[192,6279+74])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (ctyp.ml[148,4357+16]..[148,4357+27])
                                      Ppat_var "result_type" (ctyp.ml[148,4357+16]..[148,4357+27])
                                    expression (ctyp.ml[149,4387+14]..[151,4490+25])
                                      Pexp_coerce
                                      expression (ctyp.ml[149,4387+15]..[150,4409+76])
                                        Pexp_variant "Quote"
                                        Some
                                          expression (ctyp.ml[150,4409+17]..[150,4409+76])
                                            Pexp_tuple
                                            [
                                              expression (ctyp.ml[150,4409+18]..[150,4409+25])
                                                Pexp_variant "Normal"
                                                None
                                              expression (ctyp.ml[150,4409+28]..[150,4409+74])
                                                Pexp_variant "Lid"
                                                Some
                                                  expression (ctyp.ml[150,4409+34]..[150,4409+73])
                                                    Pexp_apply
                                                    expression (ctyp.ml[150,4409+43]..[150,4409+44])
                                                      Pexp_ident "^" (ctyp.ml[150,4409+43]..[150,4409+44])
                                                    [
                                                      <label> ""
                                                        expression (ctyp.ml[150,4409+34]..[150,4409+42])
                                                          Pexp_constant Const_string("result",None)
                                                      <label> ""
                                                        expression (ctyp.ml[150,4409+46]..[150,4409+72])
                                                          Pexp_apply
                                                          expression (ctyp.ml[150,4409+46]..[150,4409+59])
                                                            Pexp_ident "string_of_int" (ctyp.ml[150,4409+46]..[150,4409+59])
                                                          [
                                                            <label> ""
                                                              expression (ctyp.ml[150,4409+61]..[150,4409+71])
                                                                Pexp_apply
                                                                expression (ctyp.ml[150,4409+61]..[150,4409+62])
                                                                  Pexp_ident "!" (ctyp.ml[150,4409+61]..[150,4409+62])
                                                                [
                                                                  <label> ""
                                                                    expression (ctyp.ml[150,4409+62]..[150,4409+71])
                                                                      Pexp_ident "result_id" (ctyp.ml[150,4409+62]..[150,4409+71])
                                                                ]
                                                          ]
                                                    ]
                                            ]
                                      None
                                      core_type (ctyp.ml[151,4490+14]..[151,4490+24])
                                        Ptyp_constr "Astfn.ctyp" (ctyp.ml[151,4490+14]..[151,4490+24])
                                        []
                                ]
                                expression (ctyp.ml[152,4519+12]..[192,6279+74])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (ctyp.ml[152,4519+16]..[152,4519+17])
                                        Ppat_any
                                      expression (ctyp.ml[152,4519+20]..[152,4519+34])
                                        Pexp_apply
                                        expression (ctyp.ml[152,4519+20]..[152,4519+24])
                                          Pexp_ident "incr" (ctyp.ml[152,4519+20]..[152,4519+24])
                                        [
                                          <label> ""
                                            expression (ctyp.ml[152,4519+25]..[152,4519+34])
                                              Pexp_ident "result_id" (ctyp.ml[152,4519+25]..[152,4519+34])
                                        ]
                                  ]
                                  expression (ctyp.ml[153,4557+12]..[192,6279+74])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (ctyp.ml[153,4557+16]..[153,4557+25])
                                          Ppat_var "self_type" (ctyp.ml[153,4557+16]..[153,4557+25])
                                        expression (ctyp.ml[154,4585+14]..[154,4585+66])
                                          Pexp_coerce
                                          expression (ctyp.ml[154,4585+15]..[154,4585+51])
                                            Pexp_variant "Quote"
                                            Some
                                              expression (ctyp.ml[154,4585+22]..[154,4585+51])
                                                Pexp_tuple
                                                [
                                                  expression (ctyp.ml[154,4585+23]..[154,4585+30])
                                                    Pexp_variant "Normal"
                                                    None
                                                  expression (ctyp.ml[154,4585+33]..[154,4585+49])
                                                    Pexp_variant "Lid"
                                                    Some
                                                      expression (ctyp.ml[154,4585+38]..[154,4585+49])
                                                        Pexp_constant Const_string("self_type",None)
                                                ]
                                          None
                                          core_type (ctyp.ml[154,4585+55]..[154,4585+65])
                                            Ptyp_constr "Astfn.ctyp" (ctyp.ml[154,4585+55]..[154,4585+65])
                                            []
                                    ]
                                    expression (ctyp.ml[155,4655+12]..[192,6279+74])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (ctyp.ml[155,4655+16]..[155,4655+27])
                                            Ppat_tuple
                                            [
                                              pattern (ctyp.ml[155,4655+17]..[155,4655+22])
                                                Ppat_var "quant" (ctyp.ml[155,4655+17]..[155,4655+22])
                                              pattern (ctyp.ml[155,4655+23]..[155,4655+26])
                                                Ppat_var "dst" (ctyp.ml[155,4655+23]..[155,4655+26])
                                            ]
                                          expression (ctyp.ml[156,4685+14]..[161,4913+45])
                                            Pexp_match
                                            expression (ctyp.ml[156,4685+20]..[156,4685+21])
                                              Pexp_ident "k" (ctyp.ml[156,4685+20]..[156,4685+21])
                                            [
                                              <case>
                                                pattern (ctyp.ml[157,4712+16]..[157,4712+26])
                                                  Ppat_construct "Obj" (ctyp.ml[157,4712+16]..[157,4712+19])
                                                  Some
                                                    pattern (ctyp.ml[157,4712+21]..[157,4712+24])
                                                      Ppat_construct "Map" (ctyp.ml[157,4712+21]..[157,4712+24])
                                                      None
                                                expression (ctyp.ml[157,4712+30]..[157,4712+63])
                                                  Pexp_tuple
                                                  [
                                                    expression (ctyp.ml[157,4712+31]..[157,4712+32])
                                                      Pexp_constant Const_int 2
                                                    expression (ctyp.ml[157,4712+35]..[157,4712+61])
                                                      Pexp_apply
                                                      expression (ctyp.ml[157,4712+35]..[157,4712+44])
                                                        Pexp_ident "of_id_len" (ctyp.ml[157,4712+35]..[157,4712+44])
                                                      [
                                                        <label> "off"
                                                          expression (ctyp.ml[157,4712+50]..[157,4712+51])
                                                            Pexp_constant Const_int 1
                                                        <label> ""
                                                          expression (ctyp.ml[157,4712+52]..[157,4712+61])
                                                            Pexp_tuple
                                                            [
                                                              expression (ctyp.ml[157,4712+53]..[157,4712+55])
                                                                Pexp_ident "id" (ctyp.ml[157,4712+53]..[157,4712+55])
                                                              expression (ctyp.ml[157,4712+57]..[157,4712+60])
                                                                Pexp_ident "len" (ctyp.ml[157,4712+57]..[157,4712+60])
                                                            ]
                                                      ]
                                                  ]
                                              <case>
                                                pattern (ctyp.ml[158,4776+16]..[158,4776+27])
                                                  Ppat_construct "Obj" (ctyp.ml[158,4776+16]..[158,4776+19])
                                                  Some
                                                    pattern (ctyp.ml[158,4776+21]..[158,4776+25])
                                                      Ppat_construct "Iter" (ctyp.ml[158,4776+21]..[158,4776+25])
                                                      None
                                                expression (ctyp.ml[158,4776+31]..[158,4776+47])
                                                  Pexp_tuple
                                                  [
                                                    expression (ctyp.ml[158,4776+32]..[158,4776+33])
                                                      Pexp_constant Const_int 1
                                                    expression (ctyp.ml[158,4776+35]..[158,4776+46])
                                                      Pexp_ident "result_type" (ctyp.ml[158,4776+35]..[158,4776+46])
                                                  ]
                                              <case>
                                                pattern (ctyp.ml[159,4824+16]..[159,4824+27])
                                                  Ppat_construct "Obj" (ctyp.ml[159,4824+16]..[159,4824+19])
                                                  Some
                                                    pattern (ctyp.ml[159,4824+21]..[159,4824+25])
                                                      Ppat_construct "Fold" (ctyp.ml[159,4824+21]..[159,4824+25])
                                                      None
                                                expression (ctyp.ml[159,4824+31]..[159,4824+45])
                                                  Pexp_tuple
                                                  [
                                                    expression (ctyp.ml[159,4824+32]..[159,4824+33])
                                                      Pexp_constant Const_int 1
                                                    expression (ctyp.ml[159,4824+35]..[159,4824+44])
                                                      Pexp_ident "self_type" (ctyp.ml[159,4824+35]..[159,4824+44])
                                                  ]
                                              <case>
                                                pattern (ctyp.ml[160,4870+16]..[160,4870+32])
                                                  Ppat_construct "Obj" (ctyp.ml[160,4870+16]..[160,4870+19])
                                                  Some
                                                    pattern (ctyp.ml[160,4870+21]..[160,4870+31])
                                                      Ppat_construct "Concrete" (ctyp.ml[160,4870+21]..[160,4870+29])
                                                      Some
                                                        pattern (ctyp.ml[160,4870+30]..[160,4870+31])
                                                          Ppat_var "c" (ctyp.ml[160,4870+30]..[160,4870+31])
                                                expression (ctyp.ml[160,4870+36]..[160,4870+42])
                                                  Pexp_tuple
                                                  [
                                                    expression (ctyp.ml[160,4870+37]..[160,4870+38])
                                                      Pexp_constant Const_int 1
                                                    expression (ctyp.ml[160,4870+40]..[160,4870+41])
                                                      Pexp_ident "c" (ctyp.ml[160,4870+40]..[160,4870+41])
                                                  ]
                                              <case>
                                                pattern (ctyp.ml[161,4913+16]..[161,4913+24])
                                                  Ppat_construct "Str_item" (ctyp.ml[161,4913+16]..[161,4913+24])
                                                  None
                                                expression (ctyp.ml[161,4913+29]..[161,4913+45])
                                                  Pexp_tuple
                                                  [
                                                    expression (ctyp.ml[161,4913+30]..[161,4913+31])
                                                      Pexp_constant Const_int 1
                                                    expression (ctyp.ml[161,4913+33]..[161,4913+44])
                                                      Pexp_ident "result_type" (ctyp.ml[161,4913+33]..[161,4913+44])
                                                  ]
                                            ]
                                      ]
                                      expression (ctyp.ml[162,4962+12]..[192,6279+74])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (ctyp.ml[162,4962+16]..[162,4962+22])
                                              Ppat_var "params" (ctyp.ml[162,4962+16]..[162,4962+22])
                                            expression (ctyp.ml[163,4987+14]..[184,5931+70])
                                              Pexp_apply
                                              expression (ctyp.ml[163,4987+31]..[163,4987+33])
                                                Pexp_ident "@@" (ctyp.ml[163,4987+31]..[163,4987+33])
                                              [
                                                <label> ""
                                                  expression (ctyp.ml[163,4987+15]..[163,4987+29])
                                                    Pexp_apply
                                                    expression (ctyp.ml[163,4987+15]..[163,4987+25])
                                                      Pexp_ident "Listf.init" (ctyp.ml[163,4987+15]..[163,4987+25])
                                                    [
                                                      <label> ""
                                                        expression (ctyp.ml[163,4987+26]..[163,4987+29])
                                                          Pexp_ident "len" (ctyp.ml[163,4987+26]..[163,4987+29])
                                                    ]
                                                <label> ""
                                                  expression (ctyp.ml[164,5021+17]..[184,5931+69])
                                                    Pexp_function
                                                    [
                                                      <case>
                                                        pattern (ctyp.ml[165,5047+19]..[165,5047+20])
                                                          Ppat_var "i" (ctyp.ml[165,5047+19]..[165,5047+20])
                                                        expression (ctyp.ml[166,5071+21]..[184,5931+69])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (ctyp.ml[166,5071+25]..[166,5071+32])
                                                                Ppat_var "app_src" (ctyp.ml[166,5071+25]..[166,5071+32])
                                                              expression (ctyp.ml[167,5106+23]..[172,5344+46])
                                                                Pexp_apply
                                                                expression (ctyp.ml[167,5106+33]..[167,5106+35])
                                                                  Pexp_ident "@@" (ctyp.ml[167,5106+33]..[167,5106+35])
                                                                [
                                                                  <label> ""
                                                                    expression (ctyp.ml[167,5106+23]..[167,5106+32])
                                                                      Pexp_ident "app_arrow" (ctyp.ml[167,5106+23]..[167,5106+32])
                                                                  <label> ""
                                                                    expression (ctyp.ml[168,5142+26]..[172,5344+45])
                                                                      Pexp_apply
                                                                      expression (ctyp.ml[168,5142+46]..[168,5142+48])
Pexp_ident "@@" (ctyp.ml[168,5142+46]..[168,5142+48])
                                                                      [
<label> ""
  expression (ctyp.ml[168,5142+27]..[168,5142+44])
    Pexp_apply
    expression (ctyp.ml[168,5142+27]..[168,5142+37])
      Pexp_ident "Listf.init" (ctyp.ml[168,5142+27]..[168,5142+37])
    [
      <label> ""
        expression (ctyp.ml[168,5142+38]..[168,5142+44])
          Pexp_ident "number" (ctyp.ml[168,5142+38]..[168,5142+44])
    ]
<label> ""
  expression (ctyp.ml[169,5191+29]..[172,5344+44])
    Pexp_function
    [
      <case>
        pattern (ctyp.ml[170,5229+31]..[170,5229+32])
          Ppat_any
        expression (ctyp.ml[171,5265+33]..[172,5344+44])
          Pexp_coerce
          expression (ctyp.ml[171,5265+34]..[171,5265+74])
            Pexp_variant "Quote"
            Some
              expression (ctyp.ml[171,5265+41]..[171,5265+74])
                Pexp_tuple
                [
                  expression (ctyp.ml[171,5265+42]..[171,5265+49])
                    Pexp_variant "Normal"
                    None
                  expression (ctyp.ml[171,5265+52]..[171,5265+72])
                    Pexp_variant "Lid"
                    Some
                      expression (ctyp.ml[171,5265+58]..[171,5265+71])
                        Pexp_apply
                        expression (ctyp.ml[171,5265+58]..[171,5265+62])
                          Pexp_ident "allx" (ctyp.ml[171,5265+58]..[171,5265+62])
                        [
                          <label> "off"
                            expression (ctyp.ml[171,5265+68]..[171,5265+69])
                              Pexp_constant Const_int 0
                          <label> ""
                            expression (ctyp.ml[171,5265+70]..[171,5265+71])
                              Pexp_ident "i" (ctyp.ml[171,5265+70]..[171,5265+71])
                        ]
                ]
          None
          core_type (ctyp.ml[172,5344+33]..[172,5344+43])
            Ptyp_constr "Astfn.ctyp" (ctyp.ml[172,5344+33]..[172,5344+43])
            []
    ]
                                                                      ]
                                                                ]
                                                          ]
                                                          expression (ctyp.ml[173,5394+22]..[184,5931+68])
                                                            Pexp_match
                                                            expression (ctyp.ml[173,5394+28]..[173,5394+29])
                                                              Pexp_ident "k" (ctyp.ml[173,5394+28]..[173,5394+29])
                                                            [
                                                              <case>
                                                                pattern (ctyp.ml[174,5429+24]..[174,5429+29])
                                                                  Ppat_construct "Obj" (ctyp.ml[174,5429+24]..[174,5429+27])
                                                                  Some
                                                                    pattern (ctyp.ml[174,5429+28]..[174,5429+29])
                                                                      Ppat_var "u" (ctyp.ml[174,5429+28]..[174,5429+29])
                                                                expression (ctyp.ml[175,5462+26]..[183,5858+72])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (ctyp.ml[175,5462+30]..[175,5462+33])
Ppat_var "dst" (ctyp.ml[175,5462+30]..[175,5462+33])
                                                                      expression (ctyp.ml[176,5498+28]..[182,5806+48])
Pexp_match
expression (ctyp.ml[176,5498+34]..[176,5498+35])
  Pexp_ident "u" (ctyp.ml[176,5498+34]..[176,5498+35])
[
  <case>
    pattern (ctyp.ml[177,5539+30]..[177,5539+33])
      Ppat_construct "Map" (ctyp.ml[177,5539+30]..[177,5539+33])
      None
    expression (ctyp.ml[178,5577+32]..[179,5634+74])
      Pexp_let Nonrec
      [
        <def>
          pattern (ctyp.ml[178,5577+36]..[178,5577+37])
            Ppat_var "x" (ctyp.ml[178,5577+36]..[178,5577+37])
          expression (ctyp.ml[178,5577+40]..[178,5577+53])
            Pexp_apply
            expression (ctyp.ml[178,5577+40]..[178,5577+44])
              Pexp_ident "allx" (ctyp.ml[178,5577+40]..[178,5577+44])
            [
              <label> "off"
                expression (ctyp.ml[178,5577+50]..[178,5577+51])
                  Pexp_constant Const_int 1
              <label> ""
                expression (ctyp.ml[178,5577+52]..[178,5577+53])
                  Pexp_ident "i" (ctyp.ml[178,5577+52]..[178,5577+53])
            ]
      ]
      expression (ctyp.ml[179,5634+32]..[179,5634+74])
        Pexp_coerce
        expression (ctyp.ml[179,5634+33]..[179,5634+59])
          Pexp_variant "Quote"
          Some
            expression (ctyp.ml[179,5634+40]..[179,5634+59])
              Pexp_tuple
              [
                expression (ctyp.ml[179,5634+41]..[179,5634+48])
                  Pexp_variant "Normal"
                  None
                expression (ctyp.ml[179,5634+51]..[179,5634+57])
                  Pexp_variant "Lid"
                  Some
                    expression (ctyp.ml[179,5634+56]..[179,5634+57])
                      Pexp_ident "x" (ctyp.ml[179,5634+56]..[179,5634+57])
              ]
        None
        core_type (ctyp.ml[179,5634+63]..[179,5634+73])
          Ptyp_constr "Astfn.ctyp" (ctyp.ml[179,5634+63]..[179,5634+73])
          []
  <case>
    pattern (ctyp.ml[180,5709+30]..[180,5709+34])
      Ppat_construct "Iter" (ctyp.ml[180,5709+30]..[180,5709+34])
      None
    expression (ctyp.ml[180,5709+39]..[180,5709+50])
      Pexp_ident "result_type" (ctyp.ml[180,5709+39]..[180,5709+50])
  <case>
    pattern (ctyp.ml[181,5760+30]..[181,5760+40])
      Ppat_construct "Concrete" (ctyp.ml[181,5760+30]..[181,5760+38])
      Some
        pattern (ctyp.ml[181,5760+39]..[181,5760+40])
          Ppat_var "c" (ctyp.ml[181,5760+39]..[181,5760+40])
    expression (ctyp.ml[181,5760+44]..[181,5760+45])
      Pexp_ident "c" (ctyp.ml[181,5760+44]..[181,5760+45])
  <case>
    pattern (ctyp.ml[182,5806+30]..[182,5806+34])
      Ppat_construct "Fold" (ctyp.ml[182,5806+30]..[182,5806+34])
      None
    expression (ctyp.ml[182,5806+39]..[182,5806+48])
      Pexp_ident "self_type" (ctyp.ml[182,5806+39]..[182,5806+48])
]
                                                                  ]
                                                                  expression (ctyp.ml[183,5858+26]..[183,5858+72])
                                                                    Pexp_apply
                                                                    expression (ctyp.ml[183,5858+44]..[183,5858+46])
                                                                      Pexp_ident "@@" (ctyp.ml[183,5858+44]..[183,5858+46])
                                                                    [
                                                                      <label> ""
expression (ctyp.ml[183,5858+27]..[183,5858+42])
  Pexp_apply
  expression (ctyp.ml[183,5858+27]..[183,5858+32])
    Pexp_ident "arrow" (ctyp.ml[183,5858+27]..[183,5858+32])
  [
    <label> ""
      expression (ctyp.ml[183,5858+33]..[183,5858+42])
        Pexp_ident "self_type" (ctyp.ml[183,5858+33]..[183,5858+42])
  ]
                                                                      <label> ""
expression (ctyp.ml[183,5858+48]..[183,5858+71])
  Pexp_apply
  expression (ctyp.ml[183,5858+55]..[183,5858+57])
    Pexp_ident "<+" (ctyp.ml[183,5858+55]..[183,5858+57])
  [
    <label> ""
      expression (ctyp.ml[183,5858+48]..[183,5858+54])
        Pexp_ident "prefix" (ctyp.ml[183,5858+48]..[183,5858+54])
    <label> ""
      expression (ctyp.ml[183,5858+59]..[183,5858+70])
        Pexp_apply
        expression (ctyp.ml[183,5858+59]..[183,5858+66])
          Pexp_ident "app_src" (ctyp.ml[183,5858+59]..[183,5858+66])
        [
          <label> ""
            expression (ctyp.ml[183,5858+67]..[183,5858+70])
              Pexp_ident "dst" (ctyp.ml[183,5858+67]..[183,5858+70])
        ]
  ]
                                                                    ]
                                                              <case>
                                                                pattern (ctyp.ml[184,5931+24]..[184,5931+32])
                                                                  Ppat_construct "Str_item" (ctyp.ml[184,5931+24]..[184,5931+32])
                                                                  None
                                                                expression (ctyp.ml[184,5931+37]..[184,5931+68])
                                                                  Pexp_apply
                                                                  expression (ctyp.ml[184,5931+44]..[184,5931+46])
                                                                    Pexp_ident "<+" (ctyp.ml[184,5931+44]..[184,5931+46])
                                                                  [
                                                                    <label> ""
                                                                      expression (ctyp.ml[184,5931+37]..[184,5931+43])
Pexp_ident "prefix" (ctyp.ml[184,5931+37]..[184,5931+43])
                                                                    <label> ""
                                                                      expression (ctyp.ml[184,5931+48]..[184,5931+67])
Pexp_apply
expression (ctyp.ml[184,5931+48]..[184,5931+55])
  Pexp_ident "app_src" (ctyp.ml[184,5931+48]..[184,5931+55])
[
  <label> ""
    expression (ctyp.ml[184,5931+56]..[184,5931+67])
      Pexp_ident "result_type" (ctyp.ml[184,5931+56]..[184,5931+67])
]
                                                                  ]
                                                            ]
                                                    ]
                                              ]
                                        ]
                                        expression (ctyp.ml[185,6005+12]..[192,6279+74])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (ctyp.ml[185,6005+16]..[185,6005+20])
                                                Ppat_var "base" (ctyp.ml[185,6005+16]..[185,6005+20])
                                              expression (ctyp.ml[185,6005+23]..[185,6005+46])
                                                Pexp_apply
                                                expression (ctyp.ml[185,6005+30]..[185,6005+32])
                                                  Pexp_ident "<+" (ctyp.ml[185,6005+30]..[185,6005+32])
                                                [
                                                  <label> ""
                                                    expression (ctyp.ml[185,6005+23]..[185,6005+29])
                                                      Pexp_ident "prefix" (ctyp.ml[185,6005+23]..[185,6005+29])
                                                  <label> ""
                                                    expression (ctyp.ml[185,6005+34]..[185,6005+45])
                                                      Pexp_apply
                                                      expression (ctyp.ml[185,6005+34]..[185,6005+41])
                                                        Pexp_ident "app_src" (ctyp.ml[185,6005+34]..[185,6005+41])
                                                      [
                                                        <label> ""
                                                          expression (ctyp.ml[185,6005+42]..[185,6005+45])
                                                            Pexp_ident "dst" (ctyp.ml[185,6005+42]..[185,6005+45])
                                                      ]
                                                ]
                                          ]
                                          expression (ctyp.ml[186,6055+12]..[192,6279+74])
                                            Pexp_ifthenelse
                                            expression (ctyp.ml[186,6055+15]..[186,6055+22])
                                              Pexp_apply
                                              expression (ctyp.ml[186,6055+19]..[186,6055+20])
                                                Pexp_ident "=" (ctyp.ml[186,6055+19]..[186,6055+20])
                                              [
                                                <label> ""
                                                  expression (ctyp.ml[186,6055+15]..[186,6055+18])
                                                    Pexp_ident "len" (ctyp.ml[186,6055+15]..[186,6055+18])
                                                <label> ""
                                                  expression (ctyp.ml[186,6055+21]..[186,6055+22])
                                                    Pexp_constant Const_int 0
                                              ]
                                            expression (ctyp.ml[187,6078+17]..[187,6078+40])
                                              Pexp_tuple
                                              [
                                                expression (ctyp.ml[187,6078+19]..[187,6078+33])
                                                  Pexp_variant "TyPolEnd"
                                                  Some
                                                    expression (ctyp.ml[187,6078+29]..[187,6078+33])
                                                      Pexp_ident "base" (ctyp.ml[187,6078+29]..[187,6078+33])
                                                expression (ctyp.ml[187,6078+36]..[187,6078+39])
                                                  Pexp_ident "dst" (ctyp.ml[187,6078+36]..[187,6078+39])
                                              ]
                                            Some
                                              expression (ctyp.ml[189,6136+15]..[192,6279+73])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (ctyp.ml[189,6136+19]..[189,6136+30])
                                                      Ppat_var "quantifiers" (ctyp.ml[189,6136+19]..[189,6136+30])
                                                    expression (ctyp.ml[189,6136+33]..[189,6136+66])
                                                      Pexp_apply
                                                      expression (ctyp.ml[189,6136+33]..[189,6136+49])
                                                        Pexp_ident "gen_quantifiers1" (ctyp.ml[189,6136+33]..[189,6136+49])
                                                      [
                                                        <label> "arity"
                                                          expression (ctyp.ml[189,6136+57]..[189,6136+62])
                                                            Pexp_ident "quant" (ctyp.ml[189,6136+57]..[189,6136+62])
                                                        <label> ""
                                                          expression (ctyp.ml[189,6136+63]..[189,6136+66])
                                                            Pexp_ident "len" (ctyp.ml[189,6136+63]..[189,6136+66])
                                                      ]
                                                ]
                                                expression (ctyp.ml[190,6206+15]..[192,6279+73])
                                                  Pexp_tuple
                                                  [
                                                    expression (ctyp.ml[190,6206+16]..[192,6279+67])
                                                      Pexp_coerce
                                                      expression (ctyp.ml[190,6206+17]..[192,6279+52])
                                                        Pexp_variant "TyPol"
                                                        Some
                                                          expression (ctyp.ml[191,6230+19]..[192,6279+52])
                                                            Pexp_tuple
                                                            [
                                                              expression (ctyp.ml[191,6230+20]..[191,6230+47])
                                                                Pexp_coerce
                                                                expression (ctyp.ml[191,6230+21]..[191,6230+32])
                                                                  Pexp_ident "quantifiers" (ctyp.ml[191,6230+21]..[191,6230+32])
                                                                None
                                                                core_type (ctyp.ml[191,6230+36]..[191,6230+46])
                                                                  Ptyp_constr "Astfn.ctyp" (ctyp.ml[191,6230+36]..[191,6230+46])
                                                                  []
                                                              expression (ctyp.ml[192,6279+21]..[192,6279+51])
                                                                Pexp_coerce
                                                                expression (ctyp.ml[192,6279+22]..[192,6279+36])
                                                                  Pexp_apply
                                                                  expression (ctyp.ml[192,6279+29]..[192,6279+31])
                                                                    Pexp_ident "+>" (ctyp.ml[192,6279+29]..[192,6279+31])
                                                                  [
                                                                    <label> ""
                                                                      expression (ctyp.ml[192,6279+22]..[192,6279+28])
Pexp_ident "params" (ctyp.ml[192,6279+22]..[192,6279+28])
                                                                    <label> ""
                                                                      expression (ctyp.ml[192,6279+32]..[192,6279+36])
Pexp_ident "base" (ctyp.ml[192,6279+32]..[192,6279+36])
                                                                  ]
                                                                None
                                                                core_type (ctyp.ml[192,6279+40]..[192,6279+50])
                                                                  Ptyp_constr "Astfn.ctyp" (ctyp.ml[192,6279+40]..[192,6279+50])
                                                                  []
                                                            ]
                                                      None
                                                      core_type (ctyp.ml[192,6279+56]..[192,6279+66])
                                                        Ptyp_constr "Astfn.ctyp" (ctyp.ml[192,6279+56]..[192,6279+66])
                                                        []
                                                    expression (ctyp.ml[192,6279+69]..[192,6279+72])
                                                      Pexp_ident "dst" (ctyp.ml[192,6279+69]..[192,6279+72])
                                                  ]
                          core_type (ctyp.ml[193,6357+11]..[193,6357+23])
                            Ptyp_tuple
                            [
                              core_type (ctyp.ml[193,6357+12]..[193,6357+16])
                                Ptyp_constr "ctyp" (ctyp.ml[193,6357+12]..[193,6357+16])
                                []
                              core_type (ctyp.ml[193,6357+18]..[193,6357+22])
                                Ptyp_constr "ctyp" (ctyp.ml[193,6357+18]..[193,6357+22])
                                []
                            ]
                    ]
              ]
    ]
  structure_item (ctyp.ml[194,6383+0]..[199,6505+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[194,6383+4]..[194,6383+26])
          Ppat_var "mk_method_type_of_name" (ctyp.ml[194,6383+4]..[194,6383+26])
        expression (ctyp.ml[194,6383+27]..[199,6505+75])
          Pexp_fun "number"
          None
          pattern (ctyp.ml[194,6383+28]..[194,6383+34])
            Ppat_var "number" (ctyp.ml[194,6383+28]..[194,6383+34])
          expression (ctyp.ml[194,6383+36]..[199,6505+75])
            Pexp_fun "prefix"
            None
            pattern (ctyp.ml[194,6383+37]..[194,6383+43])
              Ppat_var "prefix" (ctyp.ml[194,6383+37]..[194,6383+43])
            expression (ctyp.ml[195,6430+2]..[199,6505+75])
              Pexp_function
              [
                <case>
                  pattern (ctyp.ml[196,6441+4]..[196,6441+14])
                    Ppat_tuple
                    [
                      pattern (ctyp.ml[196,6441+5]..[196,6441+9])
                        Ppat_var "name" (ctyp.ml[196,6441+5]..[196,6441+9])
                      pattern (ctyp.ml[196,6441+10]..[196,6441+13])
                        Ppat_var "len" (ctyp.ml[196,6441+10]..[196,6441+13])
                    ]
                  expression (ctyp.ml[197,6459+7]..[199,6505+74])
                    Pexp_function
                    [
                      <case>
                        pattern (ctyp.ml[198,6475+9]..[198,6475+26])
                          Ppat_constraint
                          pattern (ctyp.ml[198,6475+10]..[198,6475+11])
                            Ppat_var "k" (ctyp.ml[198,6475+10]..[198,6475+11])
                          core_type (ctyp.ml[198,6475+14]..[198,6475+25])
                            Ptyp_constr "destination" (ctyp.ml[198,6475+14]..[198,6475+25])
                            []
                        expression (ctyp.ml[199,6505+11]..[199,6505+74])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (ctyp.ml[199,6505+15]..[199,6505+17])
                                Ppat_var "id" (ctyp.ml[199,6505+15]..[199,6505+17])
                              expression (ctyp.ml[199,6505+20]..[199,6505+28])
                                Pexp_apply
                                expression (ctyp.ml[199,6505+20]..[199,6505+23])
                                  Pexp_ident "lid" (ctyp.ml[199,6505+20]..[199,6505+23])
                                [
                                  <label> ""
                                    expression (ctyp.ml[199,6505+24]..[199,6505+28])
                                      Pexp_ident "name" (ctyp.ml[199,6505+24]..[199,6505+28])
                                ]
                          ]
                          expression (ctyp.ml[199,6505+32]..[199,6505+74])
                            Pexp_apply
                            expression (ctyp.ml[199,6505+32]..[199,6505+46])
                              Pexp_ident "mk_method_type" (ctyp.ml[199,6505+32]..[199,6505+46])
                            [
                              <label> "number"
                                expression (ctyp.ml[199,6505+48]..[199,6505+54])
                                  Pexp_ident "number" (ctyp.ml[199,6505+48]..[199,6505+54])
                              <label> "prefix"
                                expression (ctyp.ml[199,6505+56]..[199,6505+62])
                                  Pexp_ident "prefix" (ctyp.ml[199,6505+56]..[199,6505+62])
                              <label> ""
                                expression (ctyp.ml[199,6505+63]..[199,6505+72])
                                  Pexp_tuple
                                  [
                                    expression (ctyp.ml[199,6505+64]..[199,6505+66])
                                      Pexp_ident "id" (ctyp.ml[199,6505+64]..[199,6505+66])
                                    expression (ctyp.ml[199,6505+68]..[199,6505+71])
                                      Pexp_ident "len" (ctyp.ml[199,6505+68]..[199,6505+71])
                                  ]
                              <label> ""
                                expression (ctyp.ml[199,6505+73]..[199,6505+74])
                                  Pexp_ident "k" (ctyp.ml[199,6505+73]..[199,6505+74])
                            ]
                    ]
              ]
    ]
  structure_item (ctyp.ml[200,6581+0]..[216,7106+80])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[200,6581+4]..[200,6581+10])
          Ppat_var "mk_obj" (ctyp.ml[200,6581+4]..[200,6581+10])
        expression (ctyp.ml[201,6594+2]..[216,7106+80])
          Pexp_function
          [
            <case>
              pattern (ctyp.ml[202,6605+4]..[202,6605+14])
                Ppat_var "class_name" (ctyp.ml[202,6605+4]..[202,6605+14])
              expression (ctyp.ml[203,6623+7]..[216,7106+79])
                Pexp_function
                [
                  <case>
                    pattern (ctyp.ml[204,6639+9]..[204,6639+13])
                      Ppat_var "base" (ctyp.ml[204,6639+9]..[204,6639+13])
                    expression (ctyp.ml[205,6656+12]..[216,7106+78])
                      Pexp_function
                      [
                        <case>
                          pattern (ctyp.ml[206,6677+14]..[206,6677+18])
                            Ppat_var "body" (ctyp.ml[206,6677+14]..[206,6677+18])
                          expression (ctyp.ml[207,6699+16]..[216,7106+78])
                            Pexp_coerce
                            expression (ctyp.ml[207,6699+17]..[216,7106+63])
                              Pexp_variant "Class"
                              Some
                                expression (ctyp.ml[208,6723+20]..[216,7106+62])
                                  Pexp_variant "ClDeclS"
                                  Some
                                    expression (ctyp.ml[209,6752+22]..[216,7106+62])
                                      Pexp_tuple
                                      [
                                        expression (ctyp.ml[209,6752+23]..[209,6752+32])
                                          Pexp_variant "Negative"
                                          None
                                        expression (ctyp.ml[209,6752+35]..[209,6752+50])
                                          Pexp_variant "Lid"
                                          Some
                                            expression (ctyp.ml[209,6752+40]..[209,6752+50])
                                              Pexp_ident "class_name" (ctyp.ml[209,6752+40]..[209,6752+50])
                                        expression (ctyp.ml[210,6805+25]..[216,7106+60])
                                          Pexp_variant "ObjPat"
                                          Some
                                            expression (ctyp.ml[211,6838+27]..[216,7106+60])
                                              Pexp_tuple
                                              [
                                                expression (ctyp.ml[211,6838+29]..[213,6926+72])
                                                  Pexp_variant "Constraint"
                                                  Some
                                                    expression (ctyp.ml[212,6879+31]..[213,6926+72])
                                                      Pexp_tuple
                                                      [
                                                        expression (ctyp.ml[212,6879+33]..[212,6879+44])
                                                          Pexp_variant "Lid"
                                                          Some
                                                            expression (ctyp.ml[212,6879+38]..[212,6879+44])
                                                              Pexp_constant Const_string("self",None)
                                                        expression (ctyp.ml[213,6926+34]..[213,6926+70])
                                                          Pexp_variant "Quote"
                                                          Some
                                                            expression (ctyp.ml[213,6926+41]..[213,6926+70])
                                                              Pexp_tuple
                                                              [
                                                                expression (ctyp.ml[213,6926+42]..[213,6926+49])
                                                                  Pexp_variant "Normal"
                                                                  None
                                                                expression (ctyp.ml[213,6926+52]..[213,6926+68])
                                                                  Pexp_variant "Lid"
                                                                  Some
                                                                    expression (ctyp.ml[213,6926+57]..[213,6926+68])
                                                                      Pexp_constant Const_string("self_type",None)
                                                              ]
                                                      ]
                                                expression (ctyp.ml[214,7001+30]..[216,7106+58])
                                                  Pexp_variant "Sem"
                                                  Some
                                                    expression (ctyp.ml[215,7036+32]..[216,7106+58])
                                                      Pexp_tuple
                                                      [
                                                        expression (ctyp.ml[215,7036+34]..[215,7036+67])
                                                          Pexp_variant "Inherit"
                                                          Some
                                                            expression (ctyp.ml[215,7036+43]..[215,7036+67])
                                                              Pexp_tuple
                                                              [
                                                                expression (ctyp.ml[215,7036+44]..[215,7036+53])
                                                                  Pexp_variant "Negative"
                                                                  None
                                                                expression (ctyp.ml[215,7036+56]..[215,7036+65])
                                                                  Pexp_variant "Lid"
                                                                  Some
                                                                    expression (ctyp.ml[215,7036+61]..[215,7036+65])
                                                                      Pexp_ident "base" (ctyp.ml[215,7036+61]..[215,7036+65])
                                                              ]
                                                        expression (ctyp.ml[216,7106+34]..[216,7106+57])
                                                          Pexp_coerce
                                                          expression (ctyp.ml[216,7106+35]..[216,7106+39])
                                                            Pexp_ident "body" (ctyp.ml[216,7106+35]..[216,7106+39])
                                                          None
                                                          core_type (ctyp.ml[216,7106+43]..[216,7106+56])
                                                            Ptyp_constr "Astfn.clfield" (ctyp.ml[216,7106+43]..[216,7106+56])
                                                            []
                                                      ]
                                              ]
                                      ]
                            None
                            core_type (ctyp.ml[216,7106+67]..[216,7106+77])
                              Ptyp_constr "Astfn.stru" (ctyp.ml[216,7106+67]..[216,7106+77])
                              []
                      ]
                ]
          ]
    ]
  structure_item (ctyp.ml[217,7187+0]..[237,7894+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[217,7187+4]..[217,7187+16])
          Ppat_var "is_recursive" (ctyp.ml[217,7187+4]..[217,7187+16])
        expression (ctyp.ml[218,7206+2]..[237,7894+42])
          Pexp_function
          [
            <case>
              pattern (ctyp.ml[219,7217+4]..[219,7217+10])
                Ppat_var "ty_dcl" (ctyp.ml[219,7217+4]..[219,7217+10])
              expression (ctyp.ml[220,7231+7]..[237,7894+41])
                Pexp_match
                expression (ctyp.ml[220,7231+13]..[220,7231+19])
                  Pexp_ident "ty_dcl" (ctyp.ml[220,7231+13]..[220,7231+19])
                [
                  <case>
                    pattern (ctyp.ml[221,7256+9]..[221,7256+36])
                      Ppat_variant "TyDcl"
                      Some
                        pattern (ctyp.ml[221,7256+9]..[221,7256+36])
                          Ppat_tuple
                          [
                            pattern (ctyp.ml[221,7256+17]..[221,7256+26])
                              Ppat_variant "Lid"
                              Some
                                pattern (ctyp.ml[221,7256+22]..[221,7256+26])
                                  Ppat_var "name" (ctyp.ml[221,7256+22]..[221,7256+26])
                            pattern (ctyp.ml[221,7256+27]..[221,7256+28])
                              Ppat_any
                            pattern (ctyp.ml[221,7256+29]..[221,7256+33])
                              Ppat_var "ctyp" (ctyp.ml[221,7256+29]..[221,7256+33])
                            pattern (ctyp.ml[221,7256+34]..[221,7256+35])
                              Ppat_any
                          ]
                    expression (ctyp.ml[222,7296+11]..[233,7751+44])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (ctyp.ml[222,7296+15]..[222,7296+18])
                            Ppat_var "obj" (ctyp.ml[222,7296+15]..[222,7296+18])
                          expression (ctyp.ml[223,7317+13]..[232,7731+16])
                            Pexp_object
                            class_structure
                              pattern (ctyp.ml[223,7317+13]..[232,7731+16])
                                Ppat_constraint
                                pattern (ctyp.ml[223,7317+21]..[223,7317+25])
                                  Ppat_var "self" (ctyp.ml[223,7317+21]..[223,7317+25])
                                core_type (ctyp.ml[223,7317+28]..[223,7317+38])
                                  Ptyp_var self_type
                              [
                                class_field (ctyp.ml[224,7357+15]..[224,7357+43])
                                  Pcf_inherit Fresh
                                    class_expr (ctyp.ml[224,7357+24]..[224,7357+34])
                                      Pcl_constr "ObjsN.fold" (ctyp.ml[224,7357+24]..[224,7357+34])
                                      []
                                    Some
                                      "super"
                                class_field (ctyp.ml[225,7401+15]..[225,7401+47])
                                  Pcf_val Mutable
                                    "is_recursive" (ctyp.ml[225,7401+27]..[225,7401+39])
                                    Concrete Fresh
                                    expression (ctyp.ml[225,7401+42]..[225,7401+47])
                                      Pexp_construct "false" (ctyp.ml[225,7401+42]..[225,7401+47])
                                      None
                                class_field (ctyp.ml[226,7449+15]..[230,7613+67])
                                  Pcf_method Public
                                    "ctyp" (ctyp.ml[226,7449+23]..[226,7449+27])
                                    Concrete Override
                                    expression (ctyp.ml[226,7449+15]..[230,7613+67])
                                      Pexp_poly
                                      expression (ctyp.ml[227,7479+17]..[230,7613+67])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (ctyp.ml[228,7505+19]..[228,7505+40])
                                              Ppat_constraint
                                              pattern (ctyp.ml[228,7505+20]..[228,7505+26])
                                                Ppat_variant "Lid"
                                                Some
                                                  pattern (ctyp.ml[228,7505+25]..[228,7505+26])
                                                    Ppat_var "i" (ctyp.ml[228,7505+25]..[228,7505+26])
                                              core_type (ctyp.ml[228,7505+29]..[228,7505+39])
                                                Ptyp_constr "Astfn.ctyp" (ctyp.ml[228,7505+29]..[228,7505+39])
                                                []
                                            <when>
                                              expression (ctyp.ml[228,7505+46]..[228,7505+54])
                                                Pexp_apply
                                                expression (ctyp.ml[228,7505+48]..[228,7505+49])
                                                  Pexp_ident "=" (ctyp.ml[228,7505+48]..[228,7505+49])
                                                [
                                                  <label> ""
                                                    expression (ctyp.ml[228,7505+46]..[228,7505+47])
                                                      Pexp_ident "i" (ctyp.ml[228,7505+46]..[228,7505+47])
                                                  <label> ""
                                                    expression (ctyp.ml[228,7505+50]..[228,7505+54])
                                                      Pexp_ident "name" (ctyp.ml[228,7505+50]..[228,7505+54])
                                                ]
                                            expression (ctyp.ml[229,7563+21]..[229,7563+49])
                                              Pexp_sequence
                                              expression (ctyp.ml[229,7563+22]..[229,7563+42])
                                                Pexp_setinstvar "is_recursive" (ctyp.ml[229,7563+22]..[229,7563+34])
                                                expression (ctyp.ml[229,7563+38]..[229,7563+42])
                                                  Pexp_construct "true" (ctyp.ml[229,7563+38]..[229,7563+42])
                                                  None
                                              expression (ctyp.ml[229,7563+21]..[229,7563+49])
                                                Pexp_ident "self" (ctyp.ml[229,7563+44]..[229,7563+48])
                                          <case>
                                            pattern (ctyp.ml[230,7613+19]..[230,7613+20])
                                              Ppat_var "x" (ctyp.ml[230,7613+19]..[230,7613+20])
                                            expression (ctyp.ml[230,7613+24]..[230,7613+67])
                                              Pexp_ifthenelse
                                              expression (ctyp.ml[230,7613+27]..[230,7613+39])
                                                Pexp_ident "is_recursive" (ctyp.ml[230,7613+27]..[230,7613+39])
                                              expression (ctyp.ml[230,7613+45]..[230,7613+49])
                                                Pexp_ident "self" (ctyp.ml[230,7613+45]..[230,7613+49])
                                              Some
                                                expression (ctyp.ml[230,7613+55]..[230,7613+67])
                                                  Pexp_apply
                                                  expression (ctyp.ml[230,7613+55]..[230,7613+65])
                                                    Pexp_send "ctyp"
                                                    expression (ctyp.ml[230,7613+55]..[230,7613+60])
                                                      Pexp_ident "super" (ctyp.ml[230,7613+55]..[230,7613+60])
                                                  [
                                                    <label> ""
                                                      expression (ctyp.ml[230,7613+66]..[230,7613+67])
                                                        Pexp_ident "x" (ctyp.ml[230,7613+66]..[230,7613+67])
                                                  ]
                                        ]
                                      None
                                class_field (ctyp.ml[231,7681+15]..[231,7681+49])
                                  Pcf_method Public
                                    "is_recursive" (ctyp.ml[231,7681+22]..[231,7681+34])
                                    Concrete Fresh
                                    expression (ctyp.ml[231,7681+15]..[231,7681+49])
                                      Pexp_poly
                                      expression (ctyp.ml[231,7681+37]..[231,7681+49])
                                        Pexp_ident "is_recursive" (ctyp.ml[231,7681+37]..[231,7681+49])
                                      None
                              ]
                      ]
                      expression (ctyp.ml[233,7751+11]..[233,7751+44])
                        Pexp_send "is_recursive"
                        expression (ctyp.ml[233,7751+12]..[233,7751+30])
                          Pexp_apply
                          expression (ctyp.ml[233,7751+12]..[233,7751+25])
                            Pexp_send "type_info"
                            expression (ctyp.ml[233,7751+12]..[233,7751+15])
                              Pexp_ident "obj" (ctyp.ml[233,7751+12]..[233,7751+15])
                          [
                            <label> ""
                              expression (ctyp.ml[233,7751+26]..[233,7751+30])
                                Pexp_ident "ctyp" (ctyp.ml[233,7751+26]..[233,7751+30])
                          ]
                  <case>
                    pattern (ctyp.ml[234,7796+9]..[234,7796+15])
                      Ppat_variant "And"
                      Some
                        pattern (ctyp.ml[234,7796+14]..[234,7796+15])
                          Ppat_any
                    expression (ctyp.ml[234,7796+19]..[234,7796+23])
                      Pexp_construct "true" (ctyp.ml[234,7796+19]..[234,7796+23])
                      None
                  <case>
                    pattern (ctyp.ml[235,7820+9]..[235,7820+10])
                      Ppat_any
                    expression (ctyp.ml[236,7834+11]..[237,7894+41])
                      Pexp_apply
                      expression (ctyp.ml[236,7834+11]..[236,7834+20])
                        Pexp_ident "failwithf" (ctyp.ml[236,7834+11]..[236,7834+20])
                      [
                        <label> ""
                          expression (ctyp.ml[236,7834+21]..[236,7834+59])
                            Pexp_constant Const_string("is_recursive not type declartion: %s",None)
                        <label> ""
                          expression (ctyp.ml[237,7894+14]..[237,7894+40])
                            Pexp_apply
                            expression (ctyp.ml[237,7894+14]..[237,7894+33])
                              Pexp_ident "ObjsN.dump_typedecl" (ctyp.ml[237,7894+14]..[237,7894+33])
                            [
                              <label> ""
                                expression (ctyp.ml[237,7894+34]..[237,7894+40])
                                  Pexp_ident "ty_dcl" (ctyp.ml[237,7894+34]..[237,7894+40])
                            ]
                      ]
                ]
          ]
    ]
  structure_item (ctyp.ml[238,7937+0]..[249,8310+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[238,7937+4]..[238,7937+22])
          Ppat_var "qualified_app_list" (ctyp.ml[238,7937+4]..[238,7937+22])
        expression (ctyp.ml[239,7962+2]..[249,8310+49])
          Pexp_function
          [
            <case>
              pattern (ctyp.ml[240,7973+4]..[240,7973+14])
                Ppat_constraint
                pattern (ctyp.ml[240,7973+5]..[240,7973+6])
                  Ppat_var "x" (ctyp.ml[240,7973+5]..[240,7973+6])
                core_type (ctyp.ml[240,7973+9]..[240,7973+13])
                  Ptyp_constr "ctyp" (ctyp.ml[240,7973+9]..[240,7973+13])
                  []
              expression (ctyp.ml[241,7991+6]..[249,8310+49])
                Pexp_constraint
                expression (ctyp.ml[241,7991+8]..[249,8310+19])
                  Pexp_match
                  expression (ctyp.ml[241,7991+14]..[241,7991+15])
                    Pexp_ident "x" (ctyp.ml[241,7991+14]..[241,7991+15])
                  [
                    <case>
                      pattern (ctyp.ml[242,8012+10]..[242,8012+43])
                        Ppat_alias "x" (ctyp.ml[242,8012+42]..[242,8012+43])
                        pattern (ctyp.ml[242,8012+10]..[242,8012+38])
                          Ppat_constraint
                          pattern (ctyp.ml[242,8012+11]..[242,8012+24])
                            Ppat_variant "App"
                            Some
                              pattern (ctyp.ml[242,8012+11]..[242,8012+24])
                                Ppat_tuple
                                [
                                  pattern (ctyp.ml[242,8012+17]..[242,8012+21])
                                    Ppat_var "_loc" (ctyp.ml[242,8012+17]..[242,8012+21])
                                  pattern (ctyp.ml[242,8012+22]..[242,8012+23])
                                    Ppat_any
                                ]
                          core_type (ctyp.ml[242,8012+27]..[242,8012+37])
                            Ptyp_constr "Astfn.ctyp" (ctyp.ml[242,8012+27]..[242,8012+37])
                            []
                      expression (ctyp.ml[243,8059+13]..[246,8213+24])
                        Pexp_match
                        expression (ctyp.ml[243,8059+19]..[243,8059+47])
                          Pexp_apply
                          expression (ctyp.ml[243,8059+19]..[243,8059+42])
                            Pexp_ident "Ast_basic.N.list_of_app" (ctyp.ml[243,8059+19]..[243,8059+42])
                          [
                            <label> ""
                              expression (ctyp.ml[243,8059+43]..[243,8059+44])
                                Pexp_ident "x" (ctyp.ml[243,8059+43]..[243,8059+44])
                            <label> ""
                              expression (ctyp.ml[243,8059+45]..[243,8059+47])
                                Pexp_construct "[]" (ctyp.ml[243,8059+45]..[243,8059+47])
                                None
                          ]
                        [
                          <case>
                            pattern (ctyp.ml[244,8112+15]..[244,8112+42])
                              Ppat_construct "::" (ctyp.ml[244,8112+15]..[244,8112+42])
                              Some
                                pattern (ctyp.ml[244,8112+15]..[244,8112+42])
                                  Ppat_tuple
                                  [
                                    pattern (ctyp.ml[244,8112+15]..[244,8112+39])
                                      Ppat_constraint
                                      pattern (ctyp.ml[244,8112+16]..[244,8112+25])
                                        Ppat_variant "Lid"
                                        Some
                                          pattern (ctyp.ml[244,8112+21]..[244,8112+25])
                                            Ppat_var "_loc" (ctyp.ml[244,8112+21]..[244,8112+25])
                                      core_type (ctyp.ml[244,8112+28]..[244,8112+38])
                                        Ptyp_constr "Astfn.ctyp" (ctyp.ml[244,8112+28]..[244,8112+38])
                                        []
                                    pattern (ctyp.ml[244,8112+41]..[244,8112+42])
                                      Ppat_any
                                  ]
                            expression (ctyp.ml[244,8112+46]..[244,8112+50])
                              Pexp_construct "None" (ctyp.ml[244,8112+46]..[244,8112+50])
                              None
                          <case>
                            pattern (ctyp.ml[245,8163+15]..[245,8163+33])
                              Ppat_construct "::" (ctyp.ml[245,8163+15]..[245,8163+33])
                              Some
                                pattern (ctyp.ml[245,8163+15]..[245,8163+33])
                                  Ppat_tuple
                                  [
                                    pattern (ctyp.ml[245,8163+15]..[245,8163+29])
                                      Ppat_alias "i" (ctyp.ml[245,8163+27]..[245,8163+28])
                                      pattern (ctyp.ml[245,8163+16]..[245,8163+23])
                                        Ppat_type
                                        "ident'" (ctyp.ml[245,8163+17]..[245,8163+23])
                                    pattern (ctyp.ml[245,8163+31]..[245,8163+33])
                                      Ppat_var "ys" (ctyp.ml[245,8163+31]..[245,8163+33])
                                  ]
                            expression (ctyp.ml[245,8163+37]..[245,8163+49])
                              Pexp_construct "Some" (ctyp.ml[245,8163+37]..[245,8163+41])
                              Some
                                expression (ctyp.ml[245,8163+42]..[245,8163+49])
                                  Pexp_tuple
                                  [
                                    expression (ctyp.ml[245,8163+43]..[245,8163+44])
                                      Pexp_ident "i" (ctyp.ml[245,8163+43]..[245,8163+44])
                                    expression (ctyp.ml[245,8163+46]..[245,8163+48])
                                      Pexp_ident "ys" (ctyp.ml[245,8163+46]..[245,8163+48])
                                  ]
                          <case>
                            pattern (ctyp.ml[246,8213+15]..[246,8213+16])
                              Ppat_any
                            expression (ctyp.ml[246,8213+20]..[246,8213+24])
                              Pexp_construct "None" (ctyp.ml[246,8213+20]..[246,8213+24])
                              None
                        ]
                    <case>
                      pattern (ctyp.ml[247,8239+10]..[247,8239+23])
                        Ppat_or
                        pattern (ctyp.ml[247,8239+10]..[247,8239+16])
                          Ppat_variant "Lid"
                          Some
                            pattern (ctyp.ml[247,8239+15]..[247,8239+16])
                              Ppat_any
                        pattern (ctyp.ml[247,8239+17]..[247,8239+23])
                          Ppat_variant "Uid"
                          Some
                            pattern (ctyp.ml[247,8239+22]..[247,8239+23])
                              Ppat_any
                      expression (ctyp.ml[247,8239+27]..[247,8239+31])
                        Pexp_construct "None" (ctyp.ml[247,8239+27]..[247,8239+31])
                        None
                    <case>
                      pattern (ctyp.ml[248,8271+10]..[248,8271+22])
                        Ppat_alias "i" (ctyp.ml[248,8271+21]..[248,8271+22])
                        pattern (ctyp.ml[248,8271+10]..[248,8271+17])
                          Ppat_type
                          "ident'" (ctyp.ml[248,8271+11]..[248,8271+17])
                      expression (ctyp.ml[248,8271+26]..[248,8271+38])
                        Pexp_construct "Some" (ctyp.ml[248,8271+26]..[248,8271+30])
                        Some
                          expression (ctyp.ml[248,8271+31]..[248,8271+38])
                            Pexp_tuple
                            [
                              expression (ctyp.ml[248,8271+32]..[248,8271+33])
                                Pexp_ident "i" (ctyp.ml[248,8271+32]..[248,8271+33])
                              expression (ctyp.ml[248,8271+35]..[248,8271+37])
                                Pexp_construct "[]" (ctyp.ml[248,8271+35]..[248,8271+37])
                                None
                            ]
                    <case>
                      pattern (ctyp.ml[249,8310+10]..[249,8310+11])
                        Ppat_any
                      expression (ctyp.ml[249,8310+15]..[249,8310+19])
                        Pexp_construct "None" (ctyp.ml[249,8310+15]..[249,8310+19])
                        None
                  ]
                core_type (ctyp.ml[249,8310+23]..[249,8310+48])
                  Ptyp_constr "option" (ctyp.ml[249,8310+42]..[249,8310+48])
                  [
                    core_type (ctyp.ml[249,8310+23]..[249,8310+41])
                      Ptyp_tuple
                      [
                        core_type (ctyp.ml[249,8310+24]..[249,8310+29])
                          Ptyp_constr "ident" (ctyp.ml[249,8310+24]..[249,8310+29])
                          []
                        core_type (ctyp.ml[249,8310+31]..[249,8310+40])
                          Ptyp_constr "list" (ctyp.ml[249,8310+36]..[249,8310+40])
                          [
                            core_type (ctyp.ml[249,8310+31]..[249,8310+35])
                              Ptyp_constr "ctyp" (ctyp.ml[249,8310+31]..[249,8310+35])
                              []
                          ]
                      ]
                  ]
          ]
    ]
  structure_item (ctyp.ml[250,8360+0]..[252,8389+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[250,8360+4]..[250,8360+15])
          Ppat_var "is_abstract" (ctyp.ml[250,8360+4]..[250,8360+15])
        expression (ctyp.ml[251,8378+2]..[252,8389+70])
          Pexp_function
          [
            <case>
              pattern (ctyp.ml[252,8389+4]..[252,8389+18])
                Ppat_constraint
                pattern (ctyp.ml[252,8389+5]..[252,8389+6])
                  Ppat_var "x" (ctyp.ml[252,8389+5]..[252,8389+6])
                core_type (ctyp.ml[252,8389+9]..[252,8389+17])
                  Ptyp_constr "typedecl" (ctyp.ml[252,8389+9]..[252,8389+17])
                  []
              expression (ctyp.ml[252,8389+23]..[252,8389+69])
                Pexp_match
                expression (ctyp.ml[252,8389+29]..[252,8389+30])
                  Pexp_ident "x" (ctyp.ml[252,8389+29]..[252,8389+30])
                [
                  <case>
                    pattern (ctyp.ml[252,8389+38]..[252,8389+48])
                      Ppat_variant "TyAbstr"
                      Some
                        pattern (ctyp.ml[252,8389+47]..[252,8389+48])
                          Ppat_any
                    expression (ctyp.ml[252,8389+52]..[252,8389+56])
                      Pexp_construct "true" (ctyp.ml[252,8389+52]..[252,8389+56])
                      None
                  <case>
                    pattern (ctyp.ml[252,8389+59]..[252,8389+60])
                      Ppat_any
                    expression (ctyp.ml[252,8389+64]..[252,8389+69])
                      Pexp_construct "false" (ctyp.ml[252,8389+64]..[252,8389+69])
                      None
                ]
          ]
    ]
  structure_item (ctyp.ml[253,8460+0]..[262,8718+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[253,8460+4]..[253,8460+17])
          Ppat_var "abstract_list" (ctyp.ml[253,8460+4]..[253,8460+17])
        expression (ctyp.ml[254,8480+2]..[262,8718+19])
          Pexp_function
          [
            <case>
              pattern (ctyp.ml[255,8491+4]..[255,8491+18])
                Ppat_constraint
                pattern (ctyp.ml[255,8491+5]..[255,8491+6])
                  Ppat_var "x" (ctyp.ml[255,8491+5]..[255,8491+6])
                core_type (ctyp.ml[255,8491+9]..[255,8491+17])
                  Ptyp_constr "typedecl" (ctyp.ml[255,8491+9]..[255,8491+17])
                  []
              expression (ctyp.ml[256,8513+7]..[262,8718+18])
                Pexp_match
                expression (ctyp.ml[256,8513+13]..[256,8513+14])
                  Pexp_ident "x" (ctyp.ml[256,8513+13]..[256,8513+14])
                [
                  <case>
                    pattern (ctyp.ml[257,8533+9]..[257,8533+27])
                      Ppat_variant "TyAbstr"
                      Some
                        pattern (ctyp.ml[257,8533+9]..[257,8533+27])
                          Ppat_tuple
                          [
                            pattern (ctyp.ml[257,8533+19]..[257,8533+20])
                              Ppat_any
                            pattern (ctyp.ml[257,8533+21]..[257,8533+24])
                              Ppat_var "lst" (ctyp.ml[257,8533+21]..[257,8533+24])
                            pattern (ctyp.ml[257,8533+25]..[257,8533+26])
                              Ppat_any
                          ]
                    expression (ctyp.ml[258,8564+12]..[261,8647+69])
                      Pexp_match
                      expression (ctyp.ml[258,8564+18]..[258,8564+21])
                        Pexp_ident "lst" (ctyp.ml[258,8564+18]..[258,8564+21])
                      [
                        <case>
                          pattern (ctyp.ml[259,8591+14]..[259,8591+19])
                            Ppat_variant "None"
                            None
                          expression (ctyp.ml[259,8591+23]..[259,8591+29])
                            Pexp_construct "Some" (ctyp.ml[259,8591+23]..[259,8591+27])
                            Some
                              expression (ctyp.ml[259,8591+28]..[259,8591+29])
                                Pexp_constant Const_int 0
                        <case>
                          pattern (ctyp.ml[260,8621+14]..[260,8621+22])
                            Ppat_variant "Some"
                            Some
                              pattern (ctyp.ml[260,8621+20]..[260,8621+22])
                                Ppat_var "xs" (ctyp.ml[260,8621+20]..[260,8621+22])
                          expression (ctyp.ml[261,8647+16]..[261,8647+69])
                            Pexp_construct "Some" (ctyp.ml[261,8647+16]..[261,8647+20])
                            Some
                              expression (ctyp.ml[261,8647+22]..[261,8647+68])
                                Pexp_apply
                                expression (ctyp.ml[261,8647+34]..[261,8647+36])
                                  Pexp_ident "@@" (ctyp.ml[261,8647+34]..[261,8647+36])
                                [
                                  <label> ""
                                    expression (ctyp.ml[261,8647+22]..[261,8647+33])
                                      Pexp_ident "List.length" (ctyp.ml[261,8647+22]..[261,8647+33])
                                  <label> ""
                                    expression (ctyp.ml[261,8647+38]..[261,8647+67])
                                      Pexp_apply
                                      expression (ctyp.ml[261,8647+38]..[261,8647+61])
                                        Pexp_ident "Ast_basic.N.list_of_com" (ctyp.ml[261,8647+38]..[261,8647+61])
                                      [
                                        <label> ""
                                          expression (ctyp.ml[261,8647+62]..[261,8647+64])
                                            Pexp_ident "xs" (ctyp.ml[261,8647+62]..[261,8647+64])
                                        <label> ""
                                          expression (ctyp.ml[261,8647+65]..[261,8647+67])
                                            Pexp_construct "[]" (ctyp.ml[261,8647+65]..[261,8647+67])
                                            None
                                      ]
                                ]
                      ]
                  <case>
                    pattern (ctyp.ml[262,8718+9]..[262,8718+10])
                      Ppat_any
                    expression (ctyp.ml[262,8718+14]..[262,8718+18])
                      Pexp_construct "None" (ctyp.ml[262,8718+14]..[262,8718+18])
                      None
                ]
          ]
    ]
  structure_item (ctyp.ml[263,8738+0]..[286,9658+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[263,8738+4]..[263,8738+21])
          Ppat_var "reduce_data_ctors" (ctyp.ml[263,8738+4]..[263,8738+21])
        expression (ctyp.ml[264,8762+2]..[286,9658+78])
          Pexp_function
          [
            <case>
              pattern (ctyp.ml[265,8773+4]..[265,8773+18])
                Ppat_constraint
                pattern (ctyp.ml[265,8773+5]..[265,8773+7])
                  Ppat_var "ty" (ctyp.ml[265,8773+5]..[265,8773+7])
                core_type (ctyp.ml[265,8773+10]..[265,8773+17])
                  Ptyp_constr "or_ctyp" (ctyp.ml[265,8773+10]..[265,8773+17])
                  []
              expression (ctyp.ml[266,8795+7]..[286,9658+77])
                Pexp_function
                [
                  <case>
                    pattern (ctyp.ml[267,8811+9]..[267,8811+20])
                      Ppat_constraint
                      pattern (ctyp.ml[267,8811+10]..[267,8811+14])
                        Ppat_var "init" (ctyp.ml[267,8811+10]..[267,8811+14])
                      core_type (ctyp.ml[267,8811+17]..[267,8811+19])
                        Ptyp_var a
                    expression (ctyp.ml[268,8835+16]..[268,8835+24])
                      Pexp_fun "compose"
                      None
                      pattern (ctyp.ml[268,8835+17]..[268,8835+24])
                        Ppat_var "compose" (ctyp.ml[268,8835+17]..[268,8835+24])
                      expression (ctyp.ml[269,8864+14]..[286,9658+76])
                        Pexp_function
                        [
                          <case>
                            pattern (ctyp.ml[270,8887+16]..[270,8887+47])
                              Ppat_constraint
                              pattern (ctyp.ml[270,8887+17]..[270,8887+18])
                                Ppat_var "f" (ctyp.ml[270,8887+17]..[270,8887+18])
                              core_type (ctyp.ml[270,8887+21]..[270,8887+46])
                                Ptyp_arrow
                                ""
                                core_type (ctyp.ml[270,8887+21]..[270,8887+27])
                                  Ptyp_constr "string" (ctyp.ml[270,8887+21]..[270,8887+27])
                                  []
                                core_type (ctyp.ml[270,8887+31]..[270,8887+46])
                                  Ptyp_arrow
                                  ""
                                  core_type (ctyp.ml[270,8887+31]..[270,8887+40])
                                    Ptyp_constr "list" (ctyp.ml[270,8887+36]..[270,8887+40])
                                    [
                                      core_type (ctyp.ml[270,8887+31]..[270,8887+35])
                                        Ptyp_constr "ctyp" (ctyp.ml[270,8887+31]..[270,8887+35])
                                        []
                                    ]
                                  core_type (ctyp.ml[270,8887+44]..[270,8887+46])
                                    Ptyp_var e
                            expression (ctyp.ml[271,8938+18]..[286,9658+76])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (ctyp.ml[271,8938+22]..[271,8938+30])
                                    Ppat_var "branches" (ctyp.ml[271,8938+22]..[271,8938+30])
                                  expression (ctyp.ml[271,8938+33]..[271,8938+62])
                                    Pexp_apply
                                    expression (ctyp.ml[271,8938+33]..[271,8938+56])
                                      Pexp_ident "Ast_basic.N.list_of_bar" (ctyp.ml[271,8938+33]..[271,8938+56])
                                    [
                                      <label> ""
                                        expression (ctyp.ml[271,8938+57]..[271,8938+59])
                                          Pexp_ident "ty" (ctyp.ml[271,8938+57]..[271,8938+59])
                                      <label> ""
                                        expression (ctyp.ml[271,8938+60]..[271,8938+62])
                                          Pexp_construct "[]" (ctyp.ml[271,8938+60]..[271,8938+62])
                                          None
                                    ]
                              ]
                              expression (ctyp.ml[272,9004+18]..[286,9658+76])
                                Pexp_apply
                                expression (ctyp.ml[272,9004+18]..[272,9004+32])
                                  Pexp_ident "List.fold_left" (ctyp.ml[272,9004+18]..[272,9004+32])
                                [
                                  <label> ""
                                    expression (ctyp.ml[273,9037+21]..[286,9658+61])
                                      Pexp_function
                                      [
                                        <case>
                                          pattern (ctyp.ml[274,9067+23]..[274,9067+26])
                                            Ppat_var "acc" (ctyp.ml[274,9067+23]..[274,9067+26])
                                          expression (ctyp.ml[275,9097+26]..[286,9658+60])
                                            Pexp_function
                                            [
                                              <case>
                                                pattern (ctyp.ml[276,9132+28]..[276,9132+29])
                                                  Ppat_var "x" (ctyp.ml[276,9132+28]..[276,9132+29])
                                                expression (ctyp.ml[277,9165+31]..[286,9658+59])
                                                  Pexp_match
                                                  expression (ctyp.ml[277,9165+37]..[277,9165+50])
                                                    Pexp_constraint
                                                    expression (ctyp.ml[277,9165+38]..[277,9165+39])
                                                      Pexp_ident "x" (ctyp.ml[277,9165+38]..[277,9165+39])
                                                    core_type (ctyp.ml[277,9165+42]..[277,9165+49])
                                                      Ptyp_constr "or_ctyp" (ctyp.ml[277,9165+42]..[277,9165+49])
                                                      []
                                                  [
                                                    <case>
                                                      pattern (ctyp.ml[278,9221+33]..[278,9221+52])
                                                        Ppat_variant "Of"
                                                        Some
                                                          pattern (ctyp.ml[278,9221+33]..[278,9221+52])
                                                            Ppat_tuple
                                                            [
                                                              pattern (ctyp.ml[278,9221+38]..[278,9221+47])
                                                                Ppat_variant "Uid"
                                                                Some
                                                                  pattern (ctyp.ml[278,9221+43]..[278,9221+47])
                                                                    Ppat_var "cons" (ctyp.ml[278,9221+43]..[278,9221+47])
                                                              pattern (ctyp.ml[278,9221+48]..[278,9221+51])
                                                                Ppat_var "tys" (ctyp.ml[278,9221+48]..[278,9221+51])
                                                            ]
                                                      expression (ctyp.ml[279,9277+35]..[282,9440+40])
                                                        Pexp_apply
                                                        expression (ctyp.ml[279,9277+35]..[279,9277+42])
                                                          Pexp_ident "compose" (ctyp.ml[279,9277+35]..[279,9277+42])
                                                        [
                                                          <label> ""
                                                            expression (ctyp.ml[280,9320+38]..[281,9365+73])
                                                              Pexp_apply
                                                              expression (ctyp.ml[280,9320+38]..[280,9320+39])
                                                                Pexp_ident "f" (ctyp.ml[280,9320+38]..[280,9320+39])
                                                              [
                                                                <label> ""
                                                                  expression (ctyp.ml[280,9320+40]..[280,9320+44])
                                                                    Pexp_ident "cons" (ctyp.ml[280,9320+40]..[280,9320+44])
                                                                <label> ""
                                                                  expression (ctyp.ml[281,9365+41]..[281,9365+72])
                                                                    Pexp_apply
                                                                    expression (ctyp.ml[281,9365+41]..[281,9365+65])
                                                                      Pexp_ident "Ast_basic.N.list_of_star" (ctyp.ml[281,9365+41]..[281,9365+65])
                                                                    [
                                                                      <label> ""
expression (ctyp.ml[281,9365+66]..[281,9365+69])
  Pexp_ident "tys" (ctyp.ml[281,9365+66]..[281,9365+69])
                                                                      <label> ""
expression (ctyp.ml[281,9365+70]..[281,9365+72])
  Pexp_construct "[]" (ctyp.ml[281,9365+70]..[281,9365+72])
  None
                                                                    ]
                                                              ]
                                                          <label> ""
                                                            expression (ctyp.ml[282,9440+37]..[282,9440+40])
                                                              Pexp_ident "acc" (ctyp.ml[282,9440+37]..[282,9440+40])
                                                        ]
                                                    <case>
                                                      pattern (ctyp.ml[283,9481+33]..[283,9481+42])
                                                        Ppat_variant "Uid"
                                                        Some
                                                          pattern (ctyp.ml[283,9481+38]..[283,9481+42])
                                                            Ppat_var "cons" (ctyp.ml[283,9481+38]..[283,9481+42])
                                                      expression (ctyp.ml[283,9481+46]..[283,9481+69])
                                                        Pexp_apply
                                                        expression (ctyp.ml[283,9481+46]..[283,9481+53])
                                                          Pexp_ident "compose" (ctyp.ml[283,9481+46]..[283,9481+53])
                                                        [
                                                          <label> ""
                                                            expression (ctyp.ml[283,9481+55]..[283,9481+64])
                                                              Pexp_apply
                                                              expression (ctyp.ml[283,9481+55]..[283,9481+56])
                                                                Pexp_ident "f" (ctyp.ml[283,9481+55]..[283,9481+56])
                                                              [
                                                                <label> ""
                                                                  expression (ctyp.ml[283,9481+57]..[283,9481+61])
                                                                    Pexp_ident "cons" (ctyp.ml[283,9481+57]..[283,9481+61])
                                                                <label> ""
                                                                  expression (ctyp.ml[283,9481+62]..[283,9481+64])
                                                                    Pexp_construct "[]" (ctyp.ml[283,9481+62]..[283,9481+64])
                                                                    None
                                                              ]
                                                          <label> ""
                                                            expression (ctyp.ml[283,9481+66]..[283,9481+69])
                                                              Pexp_ident "acc" (ctyp.ml[283,9481+66]..[283,9481+69])
                                                        ]
                                                    <case>
                                                      pattern (ctyp.ml[284,9551+33]..[284,9551+34])
                                                        Ppat_var "t" (ctyp.ml[284,9551+33]..[284,9551+34])
                                                      expression (ctyp.ml[285,9589+35]..[286,9658+59])
                                                        Pexp_apply
                                                        expression (ctyp.ml[285,9589+35]..[285,9589+44])
                                                          Pexp_ident "failwithf" (ctyp.ml[285,9589+35]..[285,9589+44])
                                                        [
                                                          <label> ""
                                                            expression (ctyp.ml[285,9589+45]..[285,9589+68])
                                                              Pexp_constant Const_string("reduce_data_ctors: %s",None)
                                                          <label> ""
                                                            expression (ctyp.ml[286,9658+38]..[286,9658+58])
                                                              Pexp_apply
                                                              expression (ctyp.ml[286,9658+38]..[286,9658+56])
                                                                Pexp_ident "ObjsN.dump_or_ctyp" (ctyp.ml[286,9658+38]..[286,9658+56])
                                                              [
                                                                <label> ""
                                                                  expression (ctyp.ml[286,9658+57]..[286,9658+58])
                                                                    Pexp_ident "t" (ctyp.ml[286,9658+57]..[286,9658+58])
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                      ]
                                  <label> ""
                                    expression (ctyp.ml[286,9658+63]..[286,9658+67])
                                      Pexp_ident "init" (ctyp.ml[286,9658+63]..[286,9658+67])
                                  <label> ""
                                    expression (ctyp.ml[286,9658+68]..[286,9658+76])
                                      Pexp_ident "branches" (ctyp.ml[286,9658+68]..[286,9658+76])
                                ]
                        ]
                ]
          ]
    ]
  structure_item (ctyp.ml[287,9737+0]..[296,10000+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[287,9737+4]..[287,9737+12])
          Ppat_var "view_sum" (ctyp.ml[287,9737+4]..[287,9737+12])
        expression (ctyp.ml[288,9752+2]..[296,10000+32])
          Pexp_function
          [
            <case>
              pattern (ctyp.ml[289,9763+4]..[289,9763+17])
                Ppat_constraint
                pattern (ctyp.ml[289,9763+5]..[289,9763+6])
                  Ppat_var "t" (ctyp.ml[289,9763+5]..[289,9763+6])
                core_type (ctyp.ml[289,9763+9]..[289,9763+16])
                  Ptyp_constr "or_ctyp" (ctyp.ml[289,9763+9]..[289,9763+16])
                  []
              expression (ctyp.ml[290,9784+6]..[296,10000+32])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (ctyp.ml[290,9784+10]..[290,9784+12])
                      Ppat_var "bs" (ctyp.ml[290,9784+10]..[290,9784+12])
                    expression (ctyp.ml[290,9784+15]..[290,9784+43])
                      Pexp_apply
                      expression (ctyp.ml[290,9784+15]..[290,9784+38])
                        Pexp_ident "Ast_basic.N.list_of_bar" (ctyp.ml[290,9784+15]..[290,9784+38])
                      [
                        <label> ""
                          expression (ctyp.ml[290,9784+39]..[290,9784+40])
                            Pexp_ident "t" (ctyp.ml[290,9784+39]..[290,9784+40])
                        <label> ""
                          expression (ctyp.ml[290,9784+41]..[290,9784+43])
                            Pexp_construct "[]" (ctyp.ml[290,9784+41]..[290,9784+43])
                            None
                      ]
                ]
                expression (ctyp.ml[291,9831+6]..[296,10000+32])
                  Pexp_apply
                  expression (ctyp.ml[291,9831+6]..[291,9831+14])
                    Pexp_ident "List.map" (ctyp.ml[291,9831+6]..[291,9831+14])
                  [
                    <label> ""
                      expression (ctyp.ml[292,9846+9]..[296,10000+28])
                        Pexp_function
                        [
                          <case>
                            pattern (ctyp.ml[293,9864+11]..[293,9864+20])
                              Ppat_variant "Uid"
                              Some
                                pattern (ctyp.ml[293,9864+16]..[293,9864+20])
                                  Ppat_var "cons" (ctyp.ml[293,9864+16]..[293,9864+20])
                            expression (ctyp.ml[293,9864+24]..[293,9864+42])
                              Pexp_variant "branch"
                              Some
                                expression (ctyp.ml[293,9864+32]..[293,9864+42])
                                  Pexp_tuple
                                  [
                                    expression (ctyp.ml[293,9864+33]..[293,9864+37])
                                      Pexp_ident "cons" (ctyp.ml[293,9864+33]..[293,9864+37])
                                    expression (ctyp.ml[293,9864+39]..[293,9864+41])
                                      Pexp_construct "[]" (ctyp.ml[293,9864+39]..[293,9864+41])
                                      None
                                  ]
                          <case>
                            pattern (ctyp.ml[294,9907+11]..[294,9907+28])
                              Ppat_variant "Of"
                              Some
                                pattern (ctyp.ml[294,9907+11]..[294,9907+28])
                                  Ppat_tuple
                                  [
                                    pattern (ctyp.ml[294,9907+16]..[294,9907+25])
                                      Ppat_variant "Uid"
                                      Some
                                        pattern (ctyp.ml[294,9907+21]..[294,9907+25])
                                          Ppat_var "cons" (ctyp.ml[294,9907+21]..[294,9907+25])
                                    pattern (ctyp.ml[294,9907+26]..[294,9907+27])
                                      Ppat_var "t" (ctyp.ml[294,9907+26]..[294,9907+27])
                                  ]
                            expression (ctyp.ml[295,9939+13]..[295,9939+60])
                              Pexp_variant "branch"
                              Some
                                expression (ctyp.ml[295,9939+21]..[295,9939+60])
                                  Pexp_tuple
                                  [
                                    expression (ctyp.ml[295,9939+22]..[295,9939+26])
                                      Pexp_ident "cons" (ctyp.ml[295,9939+22]..[295,9939+26])
                                    expression (ctyp.ml[295,9939+29]..[295,9939+58])
                                      Pexp_apply
                                      expression (ctyp.ml[295,9939+29]..[295,9939+53])
                                        Pexp_ident "Ast_basic.N.list_of_star" (ctyp.ml[295,9939+29]..[295,9939+53])
                                      [
                                        <label> ""
                                          expression (ctyp.ml[295,9939+54]..[295,9939+55])
                                            Pexp_ident "t" (ctyp.ml[295,9939+54]..[295,9939+55])
                                        <label> ""
                                          expression (ctyp.ml[295,9939+56]..[295,9939+58])
                                            Pexp_construct "[]" (ctyp.ml[295,9939+56]..[295,9939+58])
                                            None
                                      ]
                                  ]
                          <case>
                            pattern (ctyp.ml[296,10000+11]..[296,10000+12])
                              Ppat_any
                            expression (ctyp.ml[296,10000+16]..[296,10000+28])
                              Pexp_assert
                              expression (ctyp.ml[296,10000+23]..[296,10000+28])
                                Pexp_construct "false" (ctyp.ml[296,10000+23]..[296,10000+28])
                                None
                        ]
                    <label> ""
                      expression (ctyp.ml[296,10000+30]..[296,10000+32])
                        Pexp_ident "bs" (ctyp.ml[296,10000+30]..[296,10000+32])
                  ]
          ]
    ]
  structure_item (ctyp.ml[297,10033+0]..[309,10505+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[297,10033+4]..[297,10033+16])
          Ppat_var "view_variant" (ctyp.ml[297,10033+4]..[297,10033+16])
        expression (ctyp.ml[298,10052+2]..[309,10505+28])
          Pexp_function
          [
            <case>
              pattern (ctyp.ml[299,10063+4]..[299,10063+19])
                Ppat_constraint
                pattern (ctyp.ml[299,10063+5]..[299,10063+6])
                  Ppat_var "t" (ctyp.ml[299,10063+5]..[299,10063+6])
                core_type (ctyp.ml[299,10063+9]..[299,10063+18])
                  Ptyp_constr "row_field" (ctyp.ml[299,10063+9]..[299,10063+18])
                  []
              expression (ctyp.ml[300,10086+6]..[309,10505+28])
                Pexp_constraint
                expression (ctyp.ml[300,10086+7]..[309,10505+12])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (ctyp.ml[300,10086+11]..[300,10086+14])
                        Ppat_var "lst" (ctyp.ml[300,10086+11]..[300,10086+14])
                      expression (ctyp.ml[300,10086+17]..[300,10086+45])
                        Pexp_apply
                        expression (ctyp.ml[300,10086+17]..[300,10086+40])
                          Pexp_ident "Ast_basic.N.list_of_bar" (ctyp.ml[300,10086+17]..[300,10086+40])
                        [
                          <label> ""
                            expression (ctyp.ml[300,10086+41]..[300,10086+42])
                              Pexp_ident "t" (ctyp.ml[300,10086+41]..[300,10086+42])
                          <label> ""
                            expression (ctyp.ml[300,10086+43]..[300,10086+45])
                              Pexp_construct "[]" (ctyp.ml[300,10086+43]..[300,10086+45])
                              None
                        ]
                  ]
                  expression (ctyp.ml[301,10135+7]..[309,10505+12])
                    Pexp_apply
                    expression (ctyp.ml[301,10135+7]..[301,10135+15])
                      Pexp_ident "List.map" (ctyp.ml[301,10135+7]..[301,10135+15])
                    [
                      <label> ""
                        expression (ctyp.ml[302,10151+10]..[308,10429+74])
                          Pexp_function
                          [
                            <case>
                              pattern (ctyp.ml[303,10170+12]..[303,10170+37])
                                Ppat_variant "TyVrnOf"
                                Some
                                  pattern (ctyp.ml[303,10170+12]..[303,10170+37])
                                    Ppat_tuple
                                    [
                                      pattern (ctyp.ml[303,10170+22]..[303,10170+29])
                                        Ppat_variant "C"
                                        Some
                                          pattern (ctyp.ml[303,10170+25]..[303,10170+29])
                                            Ppat_var "cons" (ctyp.ml[303,10170+25]..[303,10170+29])
                                      pattern (ctyp.ml[303,10170+30]..[303,10170+36])
                                        Ppat_variant "Par"
                                        Some
                                          pattern (ctyp.ml[303,10170+35]..[303,10170+36])
                                            Ppat_var "t" (ctyp.ml[303,10170+35]..[303,10170+36])
                                    ]
                              expression (ctyp.ml[304,10211+14]..[304,10211+62])
                                Pexp_variant "variant"
                                Some
                                  expression (ctyp.ml[304,10211+23]..[304,10211+62])
                                    Pexp_tuple
                                    [
                                      expression (ctyp.ml[304,10211+24]..[304,10211+28])
                                        Pexp_ident "cons" (ctyp.ml[304,10211+24]..[304,10211+28])
                                      expression (ctyp.ml[304,10211+31]..[304,10211+60])
                                        Pexp_apply
                                        expression (ctyp.ml[304,10211+31]..[304,10211+55])
                                          Pexp_ident "Ast_basic.N.list_of_star" (ctyp.ml[304,10211+31]..[304,10211+55])
                                        [
                                          <label> ""
                                            expression (ctyp.ml[304,10211+56]..[304,10211+57])
                                              Pexp_ident "t" (ctyp.ml[304,10211+56]..[304,10211+57])
                                          <label> ""
                                            expression (ctyp.ml[304,10211+58]..[304,10211+60])
                                              Pexp_construct "[]" (ctyp.ml[304,10211+58]..[304,10211+60])
                                              None
                                        ]
                                    ]
                            <case>
                              pattern (ctyp.ml[305,10274+12]..[305,10274+32])
                                Ppat_variant "TyVrnOf"
                                Some
                                  pattern (ctyp.ml[305,10274+12]..[305,10274+32])
                                    Ppat_tuple
                                    [
                                      pattern (ctyp.ml[305,10274+22]..[305,10274+29])
                                        Ppat_variant "C"
                                        Some
                                          pattern (ctyp.ml[305,10274+25]..[305,10274+29])
                                            Ppat_var "cons" (ctyp.ml[305,10274+25]..[305,10274+29])
                                      pattern (ctyp.ml[305,10274+30]..[305,10274+31])
                                        Ppat_var "t" (ctyp.ml[305,10274+30]..[305,10274+31])
                                    ]
                              expression (ctyp.ml[305,10274+36]..[305,10274+56])
                                Pexp_variant "variant"
                                Some
                                  expression (ctyp.ml[305,10274+45]..[305,10274+56])
                                    Pexp_tuple
                                    [
                                      expression (ctyp.ml[305,10274+46]..[305,10274+50])
                                        Pexp_ident "cons" (ctyp.ml[305,10274+46]..[305,10274+50])
                                      expression (ctyp.ml[305,10274+53]..[305,10274+54])
                                        Pexp_construct "::" (ctyp.ml[305,10274+53]..[305,10274+54])
                                        Some
                                          expression (ctyp.ml[305,10274+53]..[305,10274+54])
                                            Pexp_tuple
                                            [
                                              expression (ctyp.ml[305,10274+53]..[305,10274+54])
                                                Pexp_ident "t" (ctyp.ml[305,10274+53]..[305,10274+54])
                                              expression (ctyp.ml[305,10274+53]..[305,10274+54])
                                                Pexp_construct "[]" (ctyp.ml[305,10274+53]..[305,10274+54])
                                                None
                                            ]
                                    ]
                            <case>
                              pattern (ctyp.ml[306,10331+12]..[306,10331+28])
                                Ppat_variant "TyVrn"
                                Some
                                  pattern (ctyp.ml[306,10331+20]..[306,10331+27])
                                    Ppat_variant "C"
                                    Some
                                      pattern (ctyp.ml[306,10331+23]..[306,10331+27])
                                        Ppat_var "cons" (ctyp.ml[306,10331+23]..[306,10331+27])
                              expression (ctyp.ml[306,10331+32]..[306,10331+51])
                                Pexp_variant "variant"
                                Some
                                  expression (ctyp.ml[306,10331+41]..[306,10331+51])
                                    Pexp_tuple
                                    [
                                      expression (ctyp.ml[306,10331+42]..[306,10331+46])
                                        Pexp_ident "cons" (ctyp.ml[306,10331+42]..[306,10331+46])
                                      expression (ctyp.ml[306,10331+48]..[306,10331+50])
                                        Pexp_construct "[]" (ctyp.ml[306,10331+48]..[306,10331+50])
                                        None
                                    ]
                            <case>
                              pattern (ctyp.ml[307,10383+12]..[307,10383+32])
                                Ppat_variant "Ctyp"
                                Some
                                  pattern (ctyp.ml[307,10383+18]..[307,10383+32])
                                    Ppat_alias "i" (ctyp.ml[307,10383+30]..[307,10383+31])
                                    pattern (ctyp.ml[307,10383+19]..[307,10383+26])
                                      Ppat_type
                                      "ident'" (ctyp.ml[307,10383+20]..[307,10383+26])
                              expression (ctyp.ml[307,10383+36]..[307,10383+45])
                                Pexp_variant "abbrev"
                                Some
                                  expression (ctyp.ml[307,10383+44]..[307,10383+45])
                                    Pexp_ident "i" (ctyp.ml[307,10383+44]..[307,10383+45])
                            <case>
                              pattern (ctyp.ml[308,10429+12]..[308,10429+13])
                                Ppat_var "u" (ctyp.ml[308,10429+12]..[308,10429+13])
                              expression (ctyp.ml[308,10429+17]..[308,10429+74])
                                Pexp_apply
                                expression (ctyp.ml[308,10429+17]..[308,10429+26])
                                  Pexp_ident "failwithf" (ctyp.ml[308,10429+17]..[308,10429+26])
                                [
                                  <label> ""
                                    expression (ctyp.ml[308,10429+27]..[308,10429+34])
                                      Pexp_constant Const_string("%s %s",None)
                                  <label> ""
                                    expression (ctyp.ml[308,10429+35]..[308,10429+49])
                                      Pexp_constant Const_string("view_variant",None)
                                  <label> ""
                                    expression (ctyp.ml[308,10429+51]..[308,10429+73])
                                      Pexp_apply
                                      expression (ctyp.ml[308,10429+51]..[308,10429+71])
                                        Pexp_ident "ObjsN.dump_row_field" (ctyp.ml[308,10429+51]..[308,10429+71])
                                      [
                                        <label> ""
                                          expression (ctyp.ml[308,10429+72]..[308,10429+73])
                                            Pexp_ident "u" (ctyp.ml[308,10429+72]..[308,10429+73])
                                      ]
                                ]
                          ]
                      <label> ""
                        expression (ctyp.ml[309,10505+9]..[309,10505+12])
                          Pexp_ident "lst" (ctyp.ml[309,10505+9]..[309,10505+12])
                    ]
                core_type (ctyp.ml[309,10505+15]..[309,10505+27])
                  Ptyp_constr "list" (ctyp.ml[309,10505+23]..[309,10505+27])
                  [
                    core_type (ctyp.ml[309,10505+15]..[309,10505+22])
                      Ptyp_constr "vbranch" (ctyp.ml[309,10505+15]..[309,10505+22])
                      []
                  ]
          ]
    ]
  structure_item (ctyp.ml[310,10534+0]..[310,10534+67])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[310,10534+4]..[310,10534+20])
          Ppat_var "conversion_table" (ctyp.ml[310,10534+4]..[310,10534+20])
        expression (ctyp.ml[310,10534+20]..[310,10534+67])
          Pexp_constraint
          expression (ctyp.ml[310,10534+50]..[310,10534+67])
            Pexp_apply
            expression (ctyp.ml[310,10534+50]..[310,10534+64])
              Pexp_ident "Hashtbl.create" (ctyp.ml[310,10534+50]..[310,10534+64])
            [
              <label> ""
                expression (ctyp.ml[310,10534+65]..[310,10534+67])
                  Pexp_constant Const_int 50
            ]
          core_type (ctyp.ml[310,10534+23]..[310,10534+47])
            Ptyp_constr "Hashtbl.t" (ctyp.ml[310,10534+38]..[310,10534+47])
            [
              core_type (ctyp.ml[310,10534+23]..[310,10534+29])
                Ptyp_constr "string" (ctyp.ml[310,10534+23]..[310,10534+29])
                []
              core_type (ctyp.ml[310,10534+30]..[310,10534+36])
                Ptyp_constr "string" (ctyp.ml[310,10534+30]..[310,10534+36])
                []
            ]
    ]
  structure_item (ctyp.ml[311,10602+0]..[335,11604+67])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[311,10602+4]..[311,10602+13])
          Ppat_var "transform" (ctyp.ml[311,10602+4]..[311,10602+13])
        expression (ctyp.ml[311,10602+13]..[335,11604+67])
          Pexp_constraint
          expression (ctyp.ml[312,10651+2]..[335,11604+67])
            Pexp_open Fresh ""IdN" (ctyp.ml[312,10651+11]..[312,10651+14])"
            expression (ctyp.ml[313,10669+4]..[335,11604+67])
              Pexp_function
              [
                <case>
                  pattern (ctyp.ml[314,10682+6]..[314,10682+14])
                    Ppat_variant "Pre"
                    Some
                      pattern (ctyp.ml[314,10682+11]..[314,10682+14])
                        Ppat_var "pre" (ctyp.ml[314,10682+11]..[314,10682+14])
                  expression (ctyp.ml[315,10700+9]..[315,10700+70])
                    Pexp_function
                    [
                      <case>
                        pattern (ctyp.ml[315,10700+20]..[315,10700+21])
                          Ppat_var "x" (ctyp.ml[315,10700+20]..[315,10700+21])
                        expression (ctyp.ml[315,10700+25]..[315,10700+70])
                          Pexp_constraint
                          expression (ctyp.ml[315,10700+26]..[315,10700+63])
                            Pexp_apply
                            expression (ctyp.ml[315,10700+26]..[315,10700+35])
                              Pexp_ident "ident_map" (ctyp.ml[315,10700+26]..[315,10700+35])
                            [
                              <label> ""
                                expression (ctyp.ml[315,10700+37]..[315,10700+60])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (ctyp.ml[315,10700+48]..[315,10700+49])
                                        Ppat_var "x" (ctyp.ml[315,10700+48]..[315,10700+49])
                                      expression (ctyp.ml[315,10700+53]..[315,10700+60])
                                        Pexp_apply
                                        expression (ctyp.ml[315,10700+57]..[315,10700+58])
                                          Pexp_ident "^" (ctyp.ml[315,10700+57]..[315,10700+58])
                                        [
                                          <label> ""
                                            expression (ctyp.ml[315,10700+53]..[315,10700+56])
                                              Pexp_ident "pre" (ctyp.ml[315,10700+53]..[315,10700+56])
                                          <label> ""
                                            expression (ctyp.ml[315,10700+59]..[315,10700+60])
                                              Pexp_ident "x" (ctyp.ml[315,10700+59]..[315,10700+60])
                                        ]
                                  ]
                              <label> ""
                                expression (ctyp.ml[315,10700+62]..[315,10700+63])
                                  Pexp_ident "x" (ctyp.ml[315,10700+62]..[315,10700+63])
                            ]
                          core_type (ctyp.ml[315,10700+66]..[315,10700+69])
                            Ptyp_constr "exp" (ctyp.ml[315,10700+66]..[315,10700+69])
                            []
                    ]
                <case>
                  pattern (ctyp.ml[316,10772+6]..[316,10772+16])
                    Ppat_variant "Post"
                    Some
                      pattern (ctyp.ml[316,10772+12]..[316,10772+16])
                        Ppat_var "post" (ctyp.ml[316,10772+12]..[316,10772+16])
                  expression (ctyp.ml[317,10792+9]..[317,10792+71])
                    Pexp_function
                    [
                      <case>
                        pattern (ctyp.ml[317,10792+20]..[317,10792+21])
                          Ppat_var "x" (ctyp.ml[317,10792+20]..[317,10792+21])
                        expression (ctyp.ml[317,10792+25]..[317,10792+71])
                          Pexp_constraint
                          expression (ctyp.ml[317,10792+26]..[317,10792+64])
                            Pexp_apply
                            expression (ctyp.ml[317,10792+26]..[317,10792+35])
                              Pexp_ident "ident_map" (ctyp.ml[317,10792+26]..[317,10792+35])
                            [
                              <label> ""
                                expression (ctyp.ml[317,10792+37]..[317,10792+61])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (ctyp.ml[317,10792+48]..[317,10792+49])
                                        Ppat_var "x" (ctyp.ml[317,10792+48]..[317,10792+49])
                                      expression (ctyp.ml[317,10792+53]..[317,10792+61])
                                        Pexp_apply
                                        expression (ctyp.ml[317,10792+55]..[317,10792+56])
                                          Pexp_ident "^" (ctyp.ml[317,10792+55]..[317,10792+56])
                                        [
                                          <label> ""
                                            expression (ctyp.ml[317,10792+53]..[317,10792+54])
                                              Pexp_ident "x" (ctyp.ml[317,10792+53]..[317,10792+54])
                                          <label> ""
                                            expression (ctyp.ml[317,10792+57]..[317,10792+61])
                                              Pexp_ident "post" (ctyp.ml[317,10792+57]..[317,10792+61])
                                        ]
                                  ]
                              <label> ""
                                expression (ctyp.ml[317,10792+63]..[317,10792+64])
                                  Pexp_ident "x" (ctyp.ml[317,10792+63]..[317,10792+64])
                            ]
                          core_type (ctyp.ml[317,10792+67]..[317,10792+70])
                            Ptyp_constr "exp" (ctyp.ml[317,10792+67]..[317,10792+70])
                            []
                    ]
                <case>
                  pattern (ctyp.ml[318,10865+6]..[318,10865+12])
                    Ppat_variant "Fun"
                    Some
                      pattern (ctyp.ml[318,10865+11]..[318,10865+12])
                        Ppat_var "f" (ctyp.ml[318,10865+11]..[318,10865+12])
                  expression (ctyp.ml[318,10865+17]..[318,10865+46])
                    Pexp_function
                    [
                      <case>
                        pattern (ctyp.ml[318,10865+28]..[318,10865+29])
                          Ppat_var "x" (ctyp.ml[318,10865+28]..[318,10865+29])
                        expression (ctyp.ml[318,10865+33]..[318,10865+46])
                          Pexp_apply
                          expression (ctyp.ml[318,10865+33]..[318,10865+42])
                            Pexp_ident "ident_map" (ctyp.ml[318,10865+33]..[318,10865+42])
                          [
                            <label> ""
                              expression (ctyp.ml[318,10865+43]..[318,10865+44])
                                Pexp_ident "f" (ctyp.ml[318,10865+43]..[318,10865+44])
                            <label> ""
                              expression (ctyp.ml[318,10865+45]..[318,10865+46])
                                Pexp_ident "x" (ctyp.ml[318,10865+45]..[318,10865+46])
                          ]
                    ]
                <case>
                  pattern (ctyp.ml[319,10913+6]..[319,10913+13])
                    Ppat_variant "Last"
                    Some
                      pattern (ctyp.ml[319,10913+12]..[319,10913+13])
                        Ppat_var "f" (ctyp.ml[319,10913+12]..[319,10913+13])
                  expression (ctyp.ml[319,10913+18]..[319,10913+72])
                    Pexp_function
                    [
                      <case>
                        pattern (ctyp.ml[319,10913+29]..[319,10913+30])
                          Ppat_var "x" (ctyp.ml[319,10913+29]..[319,10913+30])
                        expression (ctyp.ml[319,10913+34]..[319,10913+72])
                          Pexp_coerce
                          expression (ctyp.ml[319,10913+35]..[319,10913+57])
                            Pexp_apply
                            expression (ctyp.ml[319,10913+35]..[319,10913+53])
                              Pexp_ident "ident_map_of_ident" (ctyp.ml[319,10913+35]..[319,10913+53])
                            [
                              <label> ""
                                expression (ctyp.ml[319,10913+54]..[319,10913+55])
                                  Pexp_ident "f" (ctyp.ml[319,10913+54]..[319,10913+55])
                              <label> ""
                                expression (ctyp.ml[319,10913+56]..[319,10913+57])
                                  Pexp_ident "x" (ctyp.ml[319,10913+56]..[319,10913+57])
                            ]
                          Some
                            core_type (ctyp.ml[319,10913+60]..[319,10913+63])
                              Ptyp_constr "vid" (ctyp.ml[319,10913+60]..[319,10913+63])
                              []
                          core_type (ctyp.ml[319,10913+68]..[319,10913+71])
                            Ptyp_constr "exp" (ctyp.ml[319,10913+68]..[319,10913+71])
                            []
                    ]
                <case>
                  pattern (ctyp.ml[320,10987+6]..[320,10987+11])
                    Ppat_variant "Id"
                    Some
                      pattern (ctyp.ml[320,10987+10]..[320,10987+11])
                        Ppat_var "f" (ctyp.ml[320,10987+10]..[320,10987+11])
                  expression (ctyp.ml[320,10987+16]..[320,10987+51])
                    Pexp_function
                    [
                      <case>
                        pattern (ctyp.ml[320,10987+27]..[320,10987+28])
                          Ppat_var "x" (ctyp.ml[320,10987+27]..[320,10987+28])
                        expression (ctyp.ml[320,10987+32]..[320,10987+51])
                          Pexp_coerce
                          expression (ctyp.ml[320,10987+33]..[320,10987+36])
                            Pexp_apply
                            expression (ctyp.ml[320,10987+33]..[320,10987+34])
                              Pexp_ident "f" (ctyp.ml[320,10987+33]..[320,10987+34])
                            [
                              <label> ""
                                expression (ctyp.ml[320,10987+35]..[320,10987+36])
                                  Pexp_ident "x" (ctyp.ml[320,10987+35]..[320,10987+36])
                            ]
                          Some
                            core_type (ctyp.ml[320,10987+39]..[320,10987+42])
                              Ptyp_constr "vid" (ctyp.ml[320,10987+39]..[320,10987+42])
                              []
                          core_type (ctyp.ml[320,10987+47]..[320,10987+50])
                            Ptyp_constr "exp" (ctyp.ml[320,10987+47]..[320,10987+50])
                            []
                    ]
                <case>
                  pattern (ctyp.ml[321,11040+6]..[321,11040+15])
                    Ppat_variant "Idents"
                    Some
                      pattern (ctyp.ml[321,11040+14]..[321,11040+15])
                        Ppat_var "f" (ctyp.ml[321,11040+14]..[321,11040+15])
                  expression (ctyp.ml[322,11059+9]..[322,11059+73])
                    Pexp_function
                    [
                      <case>
                        pattern (ctyp.ml[322,11059+20]..[322,11059+21])
                          Ppat_var "x" (ctyp.ml[322,11059+20]..[322,11059+21])
                        expression (ctyp.ml[322,11059+25]..[322,11059+73])
                          Pexp_coerce
                          expression (ctyp.ml[322,11059+26]..[322,11059+58])
                            Pexp_apply
                            expression (ctyp.ml[322,11059+26]..[322,11059+27])
                              Pexp_ident "f" (ctyp.ml[322,11059+26]..[322,11059+27])
                            [
                              <label> ""
                                expression (ctyp.ml[322,11059+29]..[322,11059+57])
                                  Pexp_apply
                                  expression (ctyp.ml[322,11059+29]..[322,11059+52])
                                    Pexp_ident "Ast_basic.N.list_of_dot" (ctyp.ml[322,11059+29]..[322,11059+52])
                                  [
                                    <label> ""
                                      expression (ctyp.ml[322,11059+53]..[322,11059+54])
                                        Pexp_ident "x" (ctyp.ml[322,11059+53]..[322,11059+54])
                                    <label> ""
                                      expression (ctyp.ml[322,11059+55]..[322,11059+57])
                                        Pexp_construct "[]" (ctyp.ml[322,11059+55]..[322,11059+57])
                                        None
                                  ]
                            ]
                          Some
                            core_type (ctyp.ml[322,11059+61]..[322,11059+64])
                              Ptyp_constr "vid" (ctyp.ml[322,11059+61]..[322,11059+64])
                              []
                          core_type (ctyp.ml[322,11059+69]..[322,11059+72])
                            Ptyp_constr "exp" (ctyp.ml[322,11059+69]..[322,11059+72])
                            []
                    ]
                <case>
                  pattern (ctyp.ml[323,11134+6]..[323,11134+12])
                    Ppat_variant "Obj"
                    Some
                      pattern (ctyp.ml[323,11134+11]..[323,11134+12])
                        Ppat_var "f" (ctyp.ml[323,11134+11]..[323,11134+12])
                  expression (ctyp.ml[324,11150+9]..[335,11604+66])
                    Pexp_function
                    [
                      <case>
                        pattern (ctyp.ml[325,11168+11]..[325,11168+17])
                          Ppat_variant "Lid"
                          Some
                            pattern (ctyp.ml[325,11168+16]..[325,11168+17])
                              Ppat_var "x" (ctyp.ml[325,11168+16]..[325,11168+17])
                        expression (ctyp.ml[325,11168+21]..[325,11168+71])
                          Pexp_coerce
                          expression (ctyp.ml[325,11168+22]..[325,11168+57])
                            Pexp_variant "Send"
                            Some
                              expression (ctyp.ml[325,11168+28]..[325,11168+57])
                                Pexp_tuple
                                [
                                  expression (ctyp.ml[325,11168+30]..[325,11168+41])
                                    Pexp_variant "Lid"
                                    Some
                                      expression (ctyp.ml[325,11168+35]..[325,11168+41])
                                        Pexp_constant Const_string("self",None)
                                  expression (ctyp.ml[325,11168+45]..[325,11168+55])
                                    Pexp_variant "Lid"
                                    Some
                                      expression (ctyp.ml[325,11168+51]..[325,11168+54])
                                        Pexp_apply
                                        expression (ctyp.ml[325,11168+51]..[325,11168+52])
                                          Pexp_ident "f" (ctyp.ml[325,11168+51]..[325,11168+52])
                                        [
                                          <label> ""
                                            expression (ctyp.ml[325,11168+53]..[325,11168+54])
                                              Pexp_ident "x" (ctyp.ml[325,11168+53]..[325,11168+54])
                                        ]
                                ]
                          None
                          core_type (ctyp.ml[325,11168+61]..[325,11168+70])
                            Ptyp_constr "Astfn.exp" (ctyp.ml[325,11168+61]..[325,11168+70])
                            []
                      <case>
                        pattern (ctyp.ml[326,11240+11]..[326,11240+12])
                          Ppat_var "t" (ctyp.ml[326,11240+11]..[326,11240+12])
                        expression (ctyp.ml[327,11256+13]..[335,11604+66])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (ctyp.ml[327,11256+17]..[327,11256+21])
                                Ppat_var "dest" (ctyp.ml[327,11256+17]..[327,11256+21])
                              expression (ctyp.ml[327,11256+24]..[327,11256+39])
                                Pexp_apply
                                expression (ctyp.ml[327,11256+24]..[327,11256+37])
                                  Pexp_ident "map_to_string" (ctyp.ml[327,11256+24]..[327,11256+37])
                                [
                                  <label> ""
                                    expression (ctyp.ml[327,11256+38]..[327,11256+39])
                                      Pexp_ident "t" (ctyp.ml[327,11256+38]..[327,11256+39])
                                ]
                          ]
                          expression (ctyp.ml[328,11299+13]..[335,11604+66])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (ctyp.ml[328,11299+17]..[328,11299+20])
                                  Ppat_var "src" (ctyp.ml[328,11299+17]..[328,11299+20])
                                expression (ctyp.ml[328,11299+23]..[328,11299+39])
                                  Pexp_apply
                                  expression (ctyp.ml[328,11299+23]..[328,11299+37])
                                    Pexp_ident "ObjsN.dump_vid" (ctyp.ml[328,11299+23]..[328,11299+37])
                                  [
                                    <label> ""
                                      expression (ctyp.ml[328,11299+38]..[328,11299+39])
                                        Pexp_ident "t" (ctyp.ml[328,11299+38]..[328,11299+39])
                                  ]
                            ]
                            expression (ctyp.ml[329,11342+13]..[335,11604+66])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (ctyp.ml[329,11342+17]..[329,11342+19])
                                    Ppat_construct "()" (ctyp.ml[329,11342+17]..[329,11342+19])
                                    None
                                  expression (ctyp.ml[330,11364+15]..[334,11575+25])
                                    Pexp_ifthenelse
                                    expression (ctyp.ml[330,11364+18]..[330,11364+59])
                                      Pexp_apply
                                      expression (ctyp.ml[330,11364+22]..[330,11364+24])
                                        Pexp_ident "@@" (ctyp.ml[330,11364+22]..[330,11364+24])
                                      [
                                        <label> ""
                                          expression (ctyp.ml[330,11364+18]..[330,11364+21])
                                            Pexp_ident "not" (ctyp.ml[330,11364+18]..[330,11364+21])
                                        <label> ""
                                          expression (ctyp.ml[330,11364+26]..[330,11364+58])
                                            Pexp_apply
                                            expression (ctyp.ml[330,11364+26]..[330,11364+37])
                                              Pexp_ident "Hashtbl.mem" (ctyp.ml[330,11364+26]..[330,11364+37])
                                            [
                                              <label> ""
                                                expression (ctyp.ml[330,11364+38]..[330,11364+54])
                                                  Pexp_ident "conversion_table" (ctyp.ml[330,11364+38]..[330,11364+54])
                                              <label> ""
                                                expression (ctyp.ml[330,11364+55]..[330,11364+58])
                                                  Pexp_ident "src" (ctyp.ml[330,11364+55]..[330,11364+58])
                                            ]
                                      ]
                                    expression (ctyp.ml[332,11444+17]..[334,11575+25])
                                      Pexp_sequence
                                      expression (ctyp.ml[332,11444+18]..[332,11444+55])
                                        Pexp_apply
                                        expression (ctyp.ml[332,11444+18]..[332,11444+29])
                                          Pexp_ident "Hashtbl.add" (ctyp.ml[332,11444+18]..[332,11444+29])
                                        [
                                          <label> ""
                                            expression (ctyp.ml[332,11444+30]..[332,11444+46])
                                              Pexp_ident "conversion_table" (ctyp.ml[332,11444+30]..[332,11444+46])
                                          <label> ""
                                            expression (ctyp.ml[332,11444+47]..[332,11444+50])
                                              Pexp_ident "src" (ctyp.ml[332,11444+47]..[332,11444+50])
                                          <label> ""
                                            expression (ctyp.ml[332,11444+51]..[332,11444+55])
                                              Pexp_ident "dest" (ctyp.ml[332,11444+51]..[332,11444+55])
                                        ]
                                      expression (ctyp.ml[332,11444+17]..[334,11575+25])
                                        Pexp_apply
                                        expression (ctyp.ml[333,11501+18]..[333,11501+32])
                                          Pexp_ident "Format.eprintf" (ctyp.ml[333,11501+18]..[333,11501+32])
                                        [
                                          <label> ""
                                            expression (ctyp.ml[333,11501+33]..[333,11501+69])
                                              Pexp_constant Const_string("Warning:  %s ==>  %s ==> unknown\n",None)
                                          <label> ""
                                            expression (ctyp.ml[333,11501+70]..[333,11501+73])
                                              Pexp_ident "src" (ctyp.ml[333,11501+70]..[333,11501+73])
                                          <label> ""
                                            expression (ctyp.ml[334,11575+20]..[334,11575+24])
                                              Pexp_ident "dest" (ctyp.ml[334,11575+20]..[334,11575+24])
                                        ]
                                    None
                              ]
                              expression (ctyp.ml[335,11604+13]..[335,11604+66])
                                Pexp_coerce
                                expression (ctyp.ml[335,11604+14]..[335,11604+52])
                                  Pexp_variant "Send"
                                  Some
                                    expression (ctyp.ml[335,11604+20]..[335,11604+52])
                                      Pexp_tuple
                                      [
                                        expression (ctyp.ml[335,11604+22]..[335,11604+33])
                                          Pexp_variant "Lid"
                                          Some
                                            expression (ctyp.ml[335,11604+27]..[335,11604+33])
                                              Pexp_constant Const_string("self",None)
                                        expression (ctyp.ml[335,11604+37]..[335,11604+50])
                                          Pexp_variant "Lid"
                                          Some
                                            expression (ctyp.ml[335,11604+43]..[335,11604+49])
                                              Pexp_apply
                                              expression (ctyp.ml[335,11604+43]..[335,11604+44])
                                                Pexp_ident "f" (ctyp.ml[335,11604+43]..[335,11604+44])
                                              [
                                                <label> ""
                                                  expression (ctyp.ml[335,11604+45]..[335,11604+49])
                                                    Pexp_ident "dest" (ctyp.ml[335,11604+45]..[335,11604+49])
                                              ]
                                      ]
                                None
                                core_type (ctyp.ml[335,11604+56]..[335,11604+65])
                                  Ptyp_constr "Astfn.exp" (ctyp.ml[335,11604+56]..[335,11604+65])
                                  []
                    ]
              ]
          core_type (ctyp.ml[311,10602+15]..[311,10602+46])
            Ptyp_arrow
            ""
            core_type (ctyp.ml[311,10602+15]..[311,10602+32])
              Ptyp_constr "full_id_transform" (ctyp.ml[311,10602+15]..[311,10602+32])
              []
            core_type (ctyp.ml[311,10602+36]..[311,10602+46])
              Ptyp_arrow
              ""
              core_type (ctyp.ml[311,10602+36]..[311,10602+39])
                Ptyp_constr "vid" (ctyp.ml[311,10602+36]..[311,10602+39])
                []
              core_type (ctyp.ml[311,10602+43]..[311,10602+46])
                Ptyp_constr "exp" (ctyp.ml[311,10602+43]..[311,10602+46])
                []
    ]
  structure_item (ctyp.ml[336,11672+0]..[340,11792+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[336,11672+4]..[336,11672+19])
          Ppat_var "basic_transform" (ctyp.ml[336,11672+4]..[336,11672+19])
        expression (ctyp.ml[337,11694+2]..[340,11792+15])
          Pexp_function
          [
            <case>
              pattern (ctyp.ml[338,11705+4]..[338,11705+12])
                Ppat_variant "Pre"
                Some
                  pattern (ctyp.ml[338,11705+9]..[338,11705+12])
                    Ppat_var "pre" (ctyp.ml[338,11705+9]..[338,11705+12])
              expression (ctyp.ml[338,11705+17]..[338,11705+40])
                Pexp_function
                [
                  <case>
                    pattern (ctyp.ml[338,11705+28]..[338,11705+29])
                      Ppat_var "x" (ctyp.ml[338,11705+28]..[338,11705+29])
                    expression (ctyp.ml[338,11705+33]..[338,11705+40])
                      Pexp_apply
                      expression (ctyp.ml[338,11705+37]..[338,11705+38])
                        Pexp_ident "^" (ctyp.ml[338,11705+37]..[338,11705+38])
                      [
                        <label> ""
                          expression (ctyp.ml[338,11705+33]..[338,11705+36])
                            Pexp_ident "pre" (ctyp.ml[338,11705+33]..[338,11705+36])
                        <label> ""
                          expression (ctyp.ml[338,11705+39]..[338,11705+40])
                            Pexp_ident "x" (ctyp.ml[338,11705+39]..[338,11705+40])
                      ]
                ]
            <case>
              pattern (ctyp.ml[339,11747+4]..[339,11747+14])
                Ppat_variant "Post"
                Some
                  pattern (ctyp.ml[339,11747+10]..[339,11747+14])
                    Ppat_var "post" (ctyp.ml[339,11747+10]..[339,11747+14])
              expression (ctyp.ml[339,11747+19]..[339,11747+43])
                Pexp_function
                [
                  <case>
                    pattern (ctyp.ml[339,11747+30]..[339,11747+31])
                      Ppat_var "x" (ctyp.ml[339,11747+30]..[339,11747+31])
                    expression (ctyp.ml[339,11747+35]..[339,11747+43])
                      Pexp_apply
                      expression (ctyp.ml[339,11747+37]..[339,11747+38])
                        Pexp_ident "^" (ctyp.ml[339,11747+37]..[339,11747+38])
                      [
                        <label> ""
                          expression (ctyp.ml[339,11747+35]..[339,11747+36])
                            Pexp_ident "x" (ctyp.ml[339,11747+35]..[339,11747+36])
                        <label> ""
                          expression (ctyp.ml[339,11747+39]..[339,11747+43])
                            Pexp_ident "post" (ctyp.ml[339,11747+39]..[339,11747+43])
                      ]
                ]
            <case>
              pattern (ctyp.ml[340,11792+4]..[340,11792+10])
                Ppat_variant "Fun"
                Some
                  pattern (ctyp.ml[340,11792+9]..[340,11792+10])
                    Ppat_var "f" (ctyp.ml[340,11792+9]..[340,11792+10])
              expression (ctyp.ml[340,11792+14]..[340,11792+15])
                Pexp_ident "f" (ctyp.ml[340,11792+14]..[340,11792+15])
          ]
    ]
  structure_item (ctyp.ml[341,11808+0]..[346,11958+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[341,11808+4]..[341,11808+19])
          Ppat_var "right_transform" (ctyp.ml[341,11808+4]..[341,11808+19])
        expression (ctyp.ml[342,11830+2]..[346,11958+15])
          Pexp_function
          [
            <case>
              pattern (ctyp.ml[343,11841+4]..[343,11841+28])
                Ppat_alias "x" (ctyp.ml[343,11841+27]..[343,11841+28])
                pattern (ctyp.ml[343,11841+4]..[343,11841+23])
                  Ppat_type
                  "basic_id_transform" (ctyp.ml[343,11841+5]..[343,11841+23])
              expression (ctyp.ml[344,11873+6]..[345,11908+49])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (ctyp.ml[344,11873+10]..[344,11873+11])
                      Ppat_var "f" (ctyp.ml[344,11873+10]..[344,11873+11])
                    expression (ctyp.ml[344,11873+14]..[344,11873+31])
                      Pexp_apply
                      expression (ctyp.ml[344,11873+14]..[344,11873+29])
                        Pexp_ident "basic_transform" (ctyp.ml[344,11873+14]..[344,11873+29])
                      [
                        <label> ""
                          expression (ctyp.ml[344,11873+30]..[344,11873+31])
                            Pexp_ident "x" (ctyp.ml[344,11873+30]..[344,11873+31])
                      ]
                ]
                expression (ctyp.ml[345,11908+7]..[345,11908+48])
                  Pexp_function
                  [
                    <case>
                      pattern (ctyp.ml[345,11908+18]..[345,11908+19])
                        Ppat_var "x" (ctyp.ml[345,11908+18]..[345,11908+19])
                      expression (ctyp.ml[345,11908+23]..[345,11908+48])
                        Pexp_coerce
                        expression (ctyp.ml[345,11908+24]..[345,11908+34])
                          Pexp_variant "Lid"
                          Some
                            expression (ctyp.ml[345,11908+30]..[345,11908+33])
                              Pexp_apply
                              expression (ctyp.ml[345,11908+30]..[345,11908+31])
                                Pexp_ident "f" (ctyp.ml[345,11908+30]..[345,11908+31])
                              [
                                <label> ""
                                  expression (ctyp.ml[345,11908+32]..[345,11908+33])
                                    Pexp_ident "x" (ctyp.ml[345,11908+32]..[345,11908+33])
                              ]
                        None
                        core_type (ctyp.ml[345,11908+38]..[345,11908+47])
                          Ptyp_constr "Astfn.exp" (ctyp.ml[345,11908+38]..[345,11908+47])
                          []
                  ]
            <case>
              pattern (ctyp.ml[346,11958+4]..[346,11958+10])
                Ppat_variant "Exp"
                Some
                  pattern (ctyp.ml[346,11958+9]..[346,11958+10])
                    Ppat_var "f" (ctyp.ml[346,11958+9]..[346,11958+10])
              expression (ctyp.ml[346,11958+14]..[346,11958+15])
                Pexp_ident "f" (ctyp.ml[346,11958+14]..[346,11958+15])
          ]
    ]
  structure_item (ctyp.ml[347,11974+0]..[375,13032+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (ctyp.ml[347,11974+4]..[347,11974+20])
          Ppat_var "gen_tuple_abbrev" (ctyp.ml[347,11974+4]..[347,11974+20])
        expression (ctyp.ml[347,11974+21]..[375,13032+29])
          Pexp_fun "arity"
          None
          pattern (ctyp.ml[347,11974+22]..[347,11974+27])
            Ppat_var "arity" (ctyp.ml[347,11974+22]..[347,11974+27])
          expression (ctyp.ml[347,11974+29]..[375,13032+29])
            Pexp_fun "annot"
            None
            pattern (ctyp.ml[347,11974+30]..[347,11974+35])
              Ppat_var "annot" (ctyp.ml[347,11974+30]..[347,11974+35])
            expression (ctyp.ml[347,11974+37]..[375,13032+29])
              Pexp_fun "destination"
              None
              pattern (ctyp.ml[347,11974+38]..[347,11974+49])
                Ppat_var "destination" (ctyp.ml[347,11974+38]..[347,11974+49])
              expression (ctyp.ml[348,12027+2]..[375,13032+29])
                Pexp_function
                [
                  <case>
                    pattern (ctyp.ml[349,12038+4]..[349,12038+8])
                      Ppat_var "name" (ctyp.ml[349,12038+4]..[349,12038+8])
                    expression (ctyp.ml[350,12050+7]..[375,13032+28])
                      Pexp_function
                      [
                        <case>
                          pattern (ctyp.ml[351,12066+9]..[351,12066+10])
                            Ppat_var "e" (ctyp.ml[351,12066+9]..[351,12066+10])
                          expression (ctyp.ml[352,12080+11]..[375,13032+28])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (ctyp.ml[352,12080+15]..[352,12080+19])
                                  Ppat_var "args" (ctyp.ml[352,12080+15]..[352,12080+19])
                                expression (ctyp.ml[352,12080+19]..[358,12283+60])
                                  Pexp_constraint
                                  expression (ctyp.ml[353,12112+13]..[358,12283+60])
                                    Pexp_apply
                                    expression (ctyp.ml[353,12112+32]..[353,12112+34])
                                      Pexp_ident "@@" (ctyp.ml[353,12112+32]..[353,12112+34])
                                    [
                                      <label> ""
                                        expression (ctyp.ml[353,12112+14]..[353,12112+30])
                                          Pexp_apply
                                          expression (ctyp.ml[353,12112+14]..[353,12112+24])
                                            Pexp_ident "Listf.init" (ctyp.ml[353,12112+14]..[353,12112+24])
                                          [
                                            <label> ""
                                              expression (ctyp.ml[353,12112+25]..[353,12112+30])
                                                Pexp_ident "arity" (ctyp.ml[353,12112+25]..[353,12112+30])
                                          ]
                                      <label> ""
                                        expression (ctyp.ml[354,12147+16]..[358,12283+59])
                                          Pexp_function
                                          [
                                            <case>
                                              pattern (ctyp.ml[355,12172+18]..[355,12172+19])
                                                Ppat_var "i" (ctyp.ml[355,12172+18]..[355,12172+19])
                                              expression (ctyp.ml[356,12195+20]..[358,12283+59])
                                                Pexp_coerce
                                                expression (ctyp.ml[356,12195+21]..[358,12283+45])
                                                  Pexp_variant "Alias"
                                                  Some
                                                    expression (ctyp.ml[357,12223+23]..[358,12283+45])
                                                      Pexp_tuple
                                                      [
                                                        expression (ctyp.ml[357,12223+25]..[357,12223+57])
                                                          Pexp_variant "ClassPath"
                                                          Some
                                                            expression (ctyp.ml[357,12223+36]..[357,12223+57])
                                                              Pexp_coerce
                                                              expression (ctyp.ml[357,12223+37]..[357,12223+41])
                                                                Pexp_ident "name" (ctyp.ml[357,12223+37]..[357,12223+41])
                                                              None
                                                              core_type (ctyp.ml[357,12223+45]..[357,12223+56])
                                                                Ptyp_constr "Astfn.ident" (ctyp.ml[357,12223+45]..[357,12223+56])
                                                                []
                                                        expression (ctyp.ml[358,12283+26]..[358,12283+43])
                                                          Pexp_variant "Lid"
                                                          Some
                                                            expression (ctyp.ml[358,12283+32]..[358,12283+42])
                                                              Pexp_apply
                                                              expression (ctyp.ml[358,12283+32]..[358,12283+33])
                                                                Pexp_ident "x" (ctyp.ml[358,12283+32]..[358,12283+33])
                                                              [
                                                                <label> "off"
                                                                  expression (ctyp.ml[358,12283+39]..[358,12283+40])
                                                                    Pexp_ident "i" (ctyp.ml[358,12283+39]..[358,12283+40])
                                                                <label> ""
                                                                  expression (ctyp.ml[358,12283+41]..[358,12283+42])
                                                                    Pexp_constant Const_int 0
                                                              ]
                                                      ]
                                                None
                                                core_type (ctyp.ml[358,12283+49]..[358,12283+58])
                                                  Ptyp_constr "Astfn.pat" (ctyp.ml[358,12283+49]..[358,12283+58])
                                                  []
                                          ]
                                    ]
                                  core_type (ctyp.ml[352,12080+21]..[352,12080+29])
                                    Ptyp_constr "list" (ctyp.ml[352,12080+25]..[352,12080+29])
                                    [
                                      core_type (ctyp.ml[352,12080+21]..[352,12080+24])
                                        Ptyp_constr "pat" (ctyp.ml[352,12080+21]..[352,12080+24])
                                        []
                                    ]
                            ]
                            expression (ctyp.ml[359,12347+11]..[375,13032+28])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (ctyp.ml[359,12347+15]..[359,12347+19])
                                    Ppat_var "exps" (ctyp.ml[359,12347+15]..[359,12347+19])
                                  expression (ctyp.ml[360,12369+13]..[361,12404+75])
                                    Pexp_apply
                                    expression (ctyp.ml[360,12369+32]..[360,12369+34])
                                      Pexp_ident "@@" (ctyp.ml[360,12369+32]..[360,12369+34])
                                    [
                                      <label> ""
                                        expression (ctyp.ml[360,12369+14]..[360,12369+30])
                                          Pexp_apply
                                          expression (ctyp.ml[360,12369+14]..[360,12369+24])
                                            Pexp_ident "Listf.init" (ctyp.ml[360,12369+14]..[360,12369+24])
                                          [
                                            <label> ""
                                              expression (ctyp.ml[360,12369+25]..[360,12369+30])
                                                Pexp_ident "arity" (ctyp.ml[360,12369+25]..[360,12369+30])
                                          ]
                                      <label> ""
                                        expression (ctyp.ml[361,12404+16]..[361,12404+74])
                                          Pexp_function
                                          [
                                            <case>
                                              pattern (ctyp.ml[361,12404+27]..[361,12404+28])
                                                Ppat_var "i" (ctyp.ml[361,12404+27]..[361,12404+28])
                                              expression (ctyp.ml[361,12404+32]..[361,12404+74])
                                                Pexp_coerce
                                                expression (ctyp.ml[361,12404+33]..[361,12404+60])
                                                  Pexp_coerce
                                                  expression (ctyp.ml[361,12404+34]..[361,12404+46])
                                                    Pexp_apply
                                                    expression (ctyp.ml[361,12404+34]..[361,12404+37])
                                                      Pexp_ident "xid" (ctyp.ml[361,12404+34]..[361,12404+37])
                                                    [
                                                      <label> "off"
                                                        expression (ctyp.ml[361,12404+43]..[361,12404+44])
                                                          Pexp_ident "i" (ctyp.ml[361,12404+43]..[361,12404+44])
                                                      <label> ""
                                                        expression (ctyp.ml[361,12404+45]..[361,12404+46])
                                                          Pexp_constant Const_int 0
                                                    ]
                                                  None
                                                  core_type (ctyp.ml[361,12404+50]..[361,12404+59])
                                                    Ptyp_constr "Astfn.vid" (ctyp.ml[361,12404+50]..[361,12404+59])
                                                    []
                                                None
                                                core_type (ctyp.ml[361,12404+64]..[361,12404+73])
                                                  Ptyp_constr "Astfn.exp" (ctyp.ml[361,12404+64]..[361,12404+73])
                                                  []
                                          ]
                                    ]
                              ]
                              expression (ctyp.ml[362,12483+11]..[375,13032+28])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (ctyp.ml[362,12483+15]..[362,12483+16])
                                      Ppat_var "e" (ctyp.ml[362,12483+15]..[362,12483+16])
                                    expression (ctyp.ml[362,12483+19]..[362,12483+43])
                                      Pexp_apply
                                      expression (ctyp.ml[362,12483+19]..[362,12483+31])
                                        Pexp_ident "appl_of_list" (ctyp.ml[362,12483+19]..[362,12483+31])
                                      [
                                        <label> ""
                                          expression (ctyp.ml[362,12483+33]..[362,12483+42])
                                            Pexp_construct "::" (ctyp.ml[362,12483+35]..[362,12483+37])
                                            Some
                                              expression (ctyp.ml[362,12483+33]..[362,12483+42])
                                                Pexp_tuple
                                                [
                                                  expression (ctyp.ml[362,12483+33]..[362,12483+34])
                                                    Pexp_ident "e" (ctyp.ml[362,12483+33]..[362,12483+34])
                                                  expression (ctyp.ml[362,12483+38]..[362,12483+42])
                                                    Pexp_ident "exps" (ctyp.ml[362,12483+38]..[362,12483+42])
                                                ]
                                      ]
                                ]
                                expression (ctyp.ml[363,12530+11]..[375,13032+28])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (ctyp.ml[363,12530+15]..[363,12530+18])
                                        Ppat_var "pat" (ctyp.ml[363,12530+15]..[363,12530+18])
                                      expression (ctyp.ml[363,12530+21]..[363,12530+38])
                                        Pexp_apply
                                        expression (ctyp.ml[363,12530+26]..[363,12530+28])
                                          Pexp_ident "|>" (ctyp.ml[363,12530+26]..[363,12530+28])
                                        [
                                          <label> ""
                                            expression (ctyp.ml[363,12530+21]..[363,12530+25])
                                              Pexp_ident "args" (ctyp.ml[363,12530+21]..[363,12530+25])
                                          <label> ""
                                            expression (ctyp.ml[363,12530+29]..[363,12530+38])
                                              Pexp_ident "tuple_com" (ctyp.ml[363,12530+29]..[363,12530+38])
                                        ]
                                  ]
                                  expression (ctyp.ml[364,12572+12]..[375,13032+27])
                                    Pexp_match
                                    expression (ctyp.ml[364,12572+18]..[364,12572+29])
                                      Pexp_ident "destination" (ctyp.ml[364,12572+18]..[364,12572+29])
                                    [
                                      <case>
                                        pattern (ctyp.ml[365,12607+14]..[365,12607+24])
                                          Ppat_construct "Obj" (ctyp.ml[365,12607+14]..[365,12607+17])
                                          Some
                                            pattern (ctyp.ml[365,12607+19]..[365,12607+22])
                                              Ppat_construct "Map" (ctyp.ml[365,12607+19]..[365,12607+22])
                                              None
                                        expression (ctyp.ml[366,12635+16]..[370,12805+65])
                                          Pexp_coerce
                                          expression (ctyp.ml[366,12635+17]..[370,12805+50])
                                            Pexp_variant "Case"
                                            Some
                                              expression (ctyp.ml[367,12658+19]..[370,12805+50])
                                                Pexp_tuple
                                                [
                                                  expression (ctyp.ml[367,12658+20]..[367,12658+38])
                                                    Pexp_coerce
                                                    expression (ctyp.ml[367,12658+21]..[367,12658+24])
                                                      Pexp_ident "pat" (ctyp.ml[367,12658+21]..[367,12658+24])
                                                    None
                                                    core_type (ctyp.ml[367,12658+28]..[367,12658+37])
                                                      Ptyp_constr "Astfn.pat" (ctyp.ml[367,12658+28]..[367,12658+37])
                                                      []
                                                  expression (ctyp.ml[368,12698+22]..[370,12805+48])
                                                    Pexp_variant "Coercion"
                                                    Some
                                                      expression (ctyp.ml[369,12730+24]..[370,12805+48])
                                                        Pexp_tuple
                                                        [
                                                          expression (ctyp.ml[369,12730+25]..[369,12730+41])
                                                            Pexp_coerce
                                                            expression (ctyp.ml[369,12730+26]..[369,12730+27])
                                                              Pexp_ident "e" (ctyp.ml[369,12730+26]..[369,12730+27])
                                                            None
                                                            core_type (ctyp.ml[369,12730+31]..[369,12730+40])
                                                              Ptyp_constr "Astfn.exp" (ctyp.ml[369,12730+31]..[369,12730+40])
                                                              []
                                                          expression (ctyp.ml[369,12730+43]..[369,12730+73])
                                                            Pexp_coerce
                                                            expression (ctyp.ml[369,12730+44]..[369,12730+58])
                                                              Pexp_coerce
                                                              expression (ctyp.ml[369,12730+45]..[369,12730+49])
                                                                Pexp_ident "name" (ctyp.ml[369,12730+45]..[369,12730+49])
                                                              None
                                                              core_type (ctyp.ml[369,12730+53]..[369,12730+57])
                                                                Ptyp_constr "ctyp" (ctyp.ml[369,12730+53]..[369,12730+57])
                                                                []
                                                            None
                                                            core_type (ctyp.ml[369,12730+62]..[369,12730+72])
                                                              Ptyp_constr "Astfn.ctyp" (ctyp.ml[369,12730+62]..[369,12730+72])
                                                              []
                                                          expression (ctyp.ml[370,12805+26]..[370,12805+47])
                                                            Pexp_coerce
                                                            expression (ctyp.ml[370,12805+27]..[370,12805+32])
                                                              Pexp_ident "annot" (ctyp.ml[370,12805+27]..[370,12805+32])
                                                            None
                                                            core_type (ctyp.ml[370,12805+36]..[370,12805+46])
                                                              Ptyp_constr "Astfn.ctyp" (ctyp.ml[370,12805+36]..[370,12805+46])
                                                              []
                                                        ]
                                                ]
                                          None
                                          core_type (ctyp.ml[370,12805+54]..[370,12805+64])
                                            Ptyp_constr "Astfn.case" (ctyp.ml[370,12805+54]..[370,12805+64])
                                            []
                                      <case>
                                        pattern (ctyp.ml[371,12871+14]..[371,12871+15])
                                          Ppat_any
                                        expression (ctyp.ml[372,12890+16]..[375,13032+27])
                                          Pexp_coerce
                                          expression (ctyp.ml[372,12890+17]..[374,12953+74])
                                            Pexp_variant "Case"
                                            Some
                                              expression (ctyp.ml[373,12913+19]..[374,12953+74])
                                                Pexp_tuple
                                                [
                                                  expression (ctyp.ml[373,12913+20]..[373,12913+38])
                                                    Pexp_coerce
                                                    expression (ctyp.ml[373,12913+21]..[373,12913+24])
                                                      Pexp_ident "pat" (ctyp.ml[373,12913+21]..[373,12913+24])
                                                    None
                                                    core_type (ctyp.ml[373,12913+28]..[373,12913+37])
                                                      Ptyp_constr "Astfn.pat" (ctyp.ml[373,12913+28]..[373,12913+37])
                                                      []
                                                  expression (ctyp.ml[374,12953+22]..[374,12953+72])
                                                    Pexp_variant "Subtype"
                                                    Some
                                                      expression (ctyp.ml[374,12953+31]..[374,12953+72])
                                                        Pexp_tuple
                                                        [
                                                          expression (ctyp.ml[374,12953+32]..[374,12953+48])
                                                            Pexp_coerce
                                                            expression (ctyp.ml[374,12953+33]..[374,12953+34])
                                                              Pexp_ident "e" (ctyp.ml[374,12953+33]..[374,12953+34])
                                                            None
                                                            core_type (ctyp.ml[374,12953+38]..[374,12953+47])
                                                              Ptyp_constr "Astfn.exp" (ctyp.ml[374,12953+38]..[374,12953+47])
                                                              []
                                                          expression (ctyp.ml[374,12953+50]..[374,12953+71])
                                                            Pexp_coerce
                                                            expression (ctyp.ml[374,12953+51]..[374,12953+56])
                                                              Pexp_ident "annot" (ctyp.ml[374,12953+51]..[374,12953+56])
                                                            None
                                                            core_type (ctyp.ml[374,12953+60]..[374,12953+70])
                                                              Ptyp_constr "Astfn.ctyp" (ctyp.ml[374,12953+60]..[374,12953+70])
                                                              []
                                                        ]
                                                ]
                                          None
                                          core_type (ctyp.ml[375,13032+16]..[375,13032+26])
                                            Ptyp_constr "Astfn.case" (ctyp.ml[375,13032+16]..[375,13032+26])
                                            []
                                    ]
                      ]
                ]
    ]
]
