#+OPTIONS: toc:nil html-postamble:nil html-preamble:nil
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="stylesheets/styles.css" />
#+TITLE: Parser DDSL
#+OPTIONS: ^:{}
#+OPTIONS: toc:nil
#+TOC:headines 2

Fan's parser DDSL is fully self-explainable, its runtime has enough
meta-data to reconstruct itself.

* Learn the syntax by yourself

  suppose you have toplevel installed successfully ( see
  file:./toplevel_support.org).

  #+BEGIN_SRC ocaml
    $ #directory "+fan";;
    $ #load "fanTop.cma";;  
  #+END_SRC

  Now if you want to understand what's the definition for the
  syntactic category case

  #+BEGIN_SRC ocaml
    Fgram.print Format.std_formatter Fsyntax.case ;;  
  #+END_SRC

  The output is something like this:
  #+BEGIN_EXAMPLE
    case:
      [   LA
       [ "|"; L1 case0 SEP "|" -> bar_of_list l
    
       | pat; "->"; exp -> `Case (_loc, p, e)
     ]]
  #+END_EXAMPLE

  Unlike Camlp4, such grammar printer is the original grammar which is
  100% honest to the user's input, no computation involved.

  So you can install the printer in the toplevel and explore
  different non-terminals by your self.

  #+BEGIN_SRC ocaml
  #install_printer Fgram.print;;
  #+END_SRC
  
* How the parser works
  
* Where is the lexer?
* TODO Functional generation 
